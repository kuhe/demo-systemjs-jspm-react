"bundle";
System.registerDynamic("npm:react@0.14.7/lib/ReactServerBatchingStrategy.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ReactServerBatchingStrategy = {
    isBatchingUpdates: false,
    batchedUpdates: function(callback) {}
  };
  module.exports = ReactServerBatchingStrategy;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactServerRenderingTransaction.js", ["./PooledClass", "./CallbackQueue", "./Transaction", "./Object.assign", "fbjs/lib/emptyFunction", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var PooledClass = $__require('./PooledClass');
  var CallbackQueue = $__require('./CallbackQueue');
  var Transaction = $__require('./Transaction');
  var assign = $__require('./Object.assign');
  var emptyFunction = $__require('fbjs/lib/emptyFunction');
  var ON_DOM_READY_QUEUEING = {
    initialize: function() {
      this.reactMountReady.reset();
    },
    close: emptyFunction
  };
  var TRANSACTION_WRAPPERS = [ON_DOM_READY_QUEUEING];
  function ReactServerRenderingTransaction(renderToStaticMarkup) {
    this.reinitializeTransaction();
    this.renderToStaticMarkup = renderToStaticMarkup;
    this.reactMountReady = CallbackQueue.getPooled(null);
    this.useCreateElement = false;
  }
  var Mixin = {
    getTransactionWrappers: function() {
      return TRANSACTION_WRAPPERS;
    },
    getReactMountReady: function() {
      return this.reactMountReady;
    },
    destructor: function() {
      CallbackQueue.release(this.reactMountReady);
      this.reactMountReady = null;
    }
  };
  assign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);
  PooledClass.addPoolingTo(ReactServerRenderingTransaction);
  module.exports = ReactServerRenderingTransaction;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactServerRendering.js", ["./ReactDefaultBatchingStrategy", "./ReactElement", "./ReactInstanceHandles", "./ReactMarkupChecksum", "./ReactServerBatchingStrategy", "./ReactServerRenderingTransaction", "./ReactUpdates", "fbjs/lib/emptyObject", "./instantiateReactComponent", "fbjs/lib/invariant", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ReactDefaultBatchingStrategy = $__require('./ReactDefaultBatchingStrategy');
  var ReactElement = $__require('./ReactElement');
  var ReactInstanceHandles = $__require('./ReactInstanceHandles');
  var ReactMarkupChecksum = $__require('./ReactMarkupChecksum');
  var ReactServerBatchingStrategy = $__require('./ReactServerBatchingStrategy');
  var ReactServerRenderingTransaction = $__require('./ReactServerRenderingTransaction');
  var ReactUpdates = $__require('./ReactUpdates');
  var emptyObject = $__require('fbjs/lib/emptyObject');
  var instantiateReactComponent = $__require('./instantiateReactComponent');
  var invariant = $__require('fbjs/lib/invariant');
  function renderToString(element) {
    !ReactElement.isValidElement(element) ? "production" !== 'production' ? invariant(false, 'renderToString(): You must pass a valid ReactElement.') : invariant(false) : undefined;
    var transaction;
    try {
      ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);
      var id = ReactInstanceHandles.createReactRootID();
      transaction = ReactServerRenderingTransaction.getPooled(false);
      return transaction.perform(function() {
        var componentInstance = instantiateReactComponent(element, null);
        var markup = componentInstance.mountComponent(id, transaction, emptyObject);
        return ReactMarkupChecksum.addChecksumToMarkup(markup);
      }, null);
    } finally {
      ReactServerRenderingTransaction.release(transaction);
      ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);
    }
  }
  function renderToStaticMarkup(element) {
    !ReactElement.isValidElement(element) ? "production" !== 'production' ? invariant(false, 'renderToStaticMarkup(): You must pass a valid ReactElement.') : invariant(false) : undefined;
    var transaction;
    try {
      ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);
      var id = ReactInstanceHandles.createReactRootID();
      transaction = ReactServerRenderingTransaction.getPooled(true);
      return transaction.perform(function() {
        var componentInstance = instantiateReactComponent(element, null);
        return componentInstance.mountComponent(id, transaction, emptyObject);
      }, null);
    } finally {
      ReactServerRenderingTransaction.release(transaction);
      ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);
    }
  }
  module.exports = {
    renderToString: renderToString,
    renderToStaticMarkup: renderToStaticMarkup
  };
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactDOMServer.js", ["./ReactDefaultInjection", "./ReactServerRendering", "./ReactVersion", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ReactDefaultInjection = $__require('./ReactDefaultInjection');
  var ReactServerRendering = $__require('./ReactServerRendering');
  var ReactVersion = $__require('./ReactVersion');
  ReactDefaultInjection.inject();
  var ReactDOMServer = {
    renderToString: ReactServerRendering.renderToString,
    renderToStaticMarkup: ReactServerRendering.renderToStaticMarkup,
    version: ReactVersion
  };
  module.exports = ReactDOMServer;
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.6.1/lib/mapObject.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  function mapObject(object, callback, context) {
    if (!object) {
      return null;
    }
    var result = {};
    for (var name in object) {
      if (hasOwnProperty.call(object, name)) {
        result[name] = callback.call(context, object[name], name, object);
      }
    }
    return result;
  }
  module.exports = mapObject;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactDOMFactories.js", ["./ReactElement", "./ReactElementValidator", "fbjs/lib/mapObject", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ReactElement = $__require('./ReactElement');
  var ReactElementValidator = $__require('./ReactElementValidator');
  var mapObject = $__require('fbjs/lib/mapObject');
  function createDOMFactory(tag) {
    if ("production" !== 'production') {
      return ReactElementValidator.createFactory(tag);
    }
    return ReactElement.createFactory(tag);
  }
  var ReactDOMFactories = mapObject({
    a: 'a',
    abbr: 'abbr',
    address: 'address',
    area: 'area',
    article: 'article',
    aside: 'aside',
    audio: 'audio',
    b: 'b',
    base: 'base',
    bdi: 'bdi',
    bdo: 'bdo',
    big: 'big',
    blockquote: 'blockquote',
    body: 'body',
    br: 'br',
    button: 'button',
    canvas: 'canvas',
    caption: 'caption',
    cite: 'cite',
    code: 'code',
    col: 'col',
    colgroup: 'colgroup',
    data: 'data',
    datalist: 'datalist',
    dd: 'dd',
    del: 'del',
    details: 'details',
    dfn: 'dfn',
    dialog: 'dialog',
    div: 'div',
    dl: 'dl',
    dt: 'dt',
    em: 'em',
    embed: 'embed',
    fieldset: 'fieldset',
    figcaption: 'figcaption',
    figure: 'figure',
    footer: 'footer',
    form: 'form',
    h1: 'h1',
    h2: 'h2',
    h3: 'h3',
    h4: 'h4',
    h5: 'h5',
    h6: 'h6',
    head: 'head',
    header: 'header',
    hgroup: 'hgroup',
    hr: 'hr',
    html: 'html',
    i: 'i',
    iframe: 'iframe',
    img: 'img',
    input: 'input',
    ins: 'ins',
    kbd: 'kbd',
    keygen: 'keygen',
    label: 'label',
    legend: 'legend',
    li: 'li',
    link: 'link',
    main: 'main',
    map: 'map',
    mark: 'mark',
    menu: 'menu',
    menuitem: 'menuitem',
    meta: 'meta',
    meter: 'meter',
    nav: 'nav',
    noscript: 'noscript',
    object: 'object',
    ol: 'ol',
    optgroup: 'optgroup',
    option: 'option',
    output: 'output',
    p: 'p',
    param: 'param',
    picture: 'picture',
    pre: 'pre',
    progress: 'progress',
    q: 'q',
    rp: 'rp',
    rt: 'rt',
    ruby: 'ruby',
    s: 's',
    samp: 'samp',
    script: 'script',
    section: 'section',
    select: 'select',
    small: 'small',
    source: 'source',
    span: 'span',
    strong: 'strong',
    style: 'style',
    sub: 'sub',
    summary: 'summary',
    sup: 'sup',
    table: 'table',
    tbody: 'tbody',
    td: 'td',
    textarea: 'textarea',
    tfoot: 'tfoot',
    th: 'th',
    thead: 'thead',
    time: 'time',
    title: 'title',
    tr: 'tr',
    track: 'track',
    u: 'u',
    ul: 'ul',
    'var': 'var',
    video: 'video',
    wbr: 'wbr',
    circle: 'circle',
    clipPath: 'clipPath',
    defs: 'defs',
    ellipse: 'ellipse',
    g: 'g',
    image: 'image',
    line: 'line',
    linearGradient: 'linearGradient',
    mask: 'mask',
    path: 'path',
    pattern: 'pattern',
    polygon: 'polygon',
    polyline: 'polyline',
    radialGradient: 'radialGradient',
    rect: 'rect',
    stop: 'stop',
    svg: 'svg',
    text: 'text',
    tspan: 'tspan'
  }, createDOMFactory);
  module.exports = ReactDOMFactories;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactElementValidator.js", ["./ReactElement", "./ReactPropTypeLocations", "./ReactPropTypeLocationNames", "./ReactCurrentOwner", "./canDefineProperty", "./getIteratorFn", "fbjs/lib/invariant", "fbjs/lib/warning", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ReactElement = $__require('./ReactElement');
  var ReactPropTypeLocations = $__require('./ReactPropTypeLocations');
  var ReactPropTypeLocationNames = $__require('./ReactPropTypeLocationNames');
  var ReactCurrentOwner = $__require('./ReactCurrentOwner');
  var canDefineProperty = $__require('./canDefineProperty');
  var getIteratorFn = $__require('./getIteratorFn');
  var invariant = $__require('fbjs/lib/invariant');
  var warning = $__require('fbjs/lib/warning');
  function getDeclarationErrorAddendum() {
    if (ReactCurrentOwner.current) {
      var name = ReactCurrentOwner.current.getName();
      if (name) {
        return ' Check the render method of `' + name + '`.';
      }
    }
    return '';
  }
  var ownerHasKeyUseWarning = {};
  var loggedTypeFailures = {};
  function validateExplicitKey(element, parentType) {
    if (!element._store || element._store.validated || element.key != null) {
      return;
    }
    element._store.validated = true;
    var addenda = getAddendaForKeyUse('uniqueKey', element, parentType);
    if (addenda === null) {
      return;
    }
    "production" !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s%s', addenda.parentOrOwner || '', addenda.childOwner || '', addenda.url || '') : undefined;
  }
  function getAddendaForKeyUse(messageType, element, parentType) {
    var addendum = getDeclarationErrorAddendum();
    if (!addendum) {
      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
      if (parentName) {
        addendum = ' Check the top-level render call using <' + parentName + '>.';
      }
    }
    var memoizer = ownerHasKeyUseWarning[messageType] || (ownerHasKeyUseWarning[messageType] = {});
    if (memoizer[addendum]) {
      return null;
    }
    memoizer[addendum] = true;
    var addenda = {
      parentOrOwner: addendum,
      url: ' See https://fb.me/react-warning-keys for more information.',
      childOwner: null
    };
    if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
      addenda.childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
    }
    return addenda;
  }
  function validateChildKeys(node, parentType) {
    if (typeof node !== 'object') {
      return;
    }
    if (Array.isArray(node)) {
      for (var i = 0; i < node.length; i++) {
        var child = node[i];
        if (ReactElement.isValidElement(child)) {
          validateExplicitKey(child, parentType);
        }
      }
    } else if (ReactElement.isValidElement(node)) {
      if (node._store) {
        node._store.validated = true;
      }
    } else if (node) {
      var iteratorFn = getIteratorFn(node);
      if (iteratorFn) {
        if (iteratorFn !== node.entries) {
          var iterator = iteratorFn.call(node);
          var step;
          while (!(step = iterator.next()).done) {
            if (ReactElement.isValidElement(step.value)) {
              validateExplicitKey(step.value, parentType);
            }
          }
        }
      }
    }
  }
  function checkPropTypes(componentName, propTypes, props, location) {
    for (var propName in propTypes) {
      if (propTypes.hasOwnProperty(propName)) {
        var error;
        try {
          !(typeof propTypes[propName] === 'function') ? "production" !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : undefined;
          error = propTypes[propName](props, propName, componentName, location);
        } catch (ex) {
          error = ex;
        }
        "production" !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], propName, typeof error) : undefined;
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          loggedTypeFailures[error.message] = true;
          var addendum = getDeclarationErrorAddendum();
          "production" !== 'production' ? warning(false, 'Failed propType: %s%s', error.message, addendum) : undefined;
        }
      }
    }
  }
  function validatePropTypes(element) {
    var componentClass = element.type;
    if (typeof componentClass !== 'function') {
      return;
    }
    var name = componentClass.displayName || componentClass.name;
    if (componentClass.propTypes) {
      checkPropTypes(name, componentClass.propTypes, element.props, ReactPropTypeLocations.prop);
    }
    if (typeof componentClass.getDefaultProps === 'function') {
      "production" !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : undefined;
    }
  }
  var ReactElementValidator = {
    createElement: function(type, props, children) {
      var validType = typeof type === 'string' || typeof type === 'function';
      "production" !== 'production' ? warning(validType, 'React.createElement: type should not be null, undefined, boolean, or ' + 'number. It should be a string (for DOM elements) or a ReactClass ' + '(for composite components).%s', getDeclarationErrorAddendum()) : undefined;
      var element = ReactElement.createElement.apply(this, arguments);
      if (element == null) {
        return element;
      }
      if (validType) {
        for (var i = 2; i < arguments.length; i++) {
          validateChildKeys(arguments[i], type);
        }
      }
      validatePropTypes(element);
      return element;
    },
    createFactory: function(type) {
      var validatedFactory = ReactElementValidator.createElement.bind(null, type);
      validatedFactory.type = type;
      if ("production" !== 'production') {
        if (canDefineProperty) {
          Object.defineProperty(validatedFactory, 'type', {
            enumerable: false,
            get: function() {
              "production" !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : undefined;
              Object.defineProperty(this, 'type', {value: type});
              return type;
            }
          });
        }
      }
      return validatedFactory;
    },
    cloneElement: function(element, props, children) {
      var newElement = ReactElement.cloneElement.apply(this, arguments);
      for (var i = 2; i < arguments.length; i++) {
        validateChildKeys(arguments[i], newElement.type);
      }
      validatePropTypes(newElement);
      return newElement;
    }
  };
  module.exports = ReactElementValidator;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/onlyChild.js", ["./ReactElement", "fbjs/lib/invariant", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ReactElement = $__require('./ReactElement');
  var invariant = $__require('fbjs/lib/invariant');
  function onlyChild(children) {
    !ReactElement.isValidElement(children) ? "production" !== 'production' ? invariant(false, 'onlyChild must be passed a children with exactly one child.') : invariant(false) : undefined;
    return children;
  }
  module.exports = onlyChild;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactIsomorphic.js", ["./ReactChildren", "./ReactComponent", "./ReactClass", "./ReactDOMFactories", "./ReactElement", "./ReactElementValidator", "./ReactPropTypes", "./ReactVersion", "./Object.assign", "./onlyChild", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ReactChildren = $__require('./ReactChildren');
  var ReactComponent = $__require('./ReactComponent');
  var ReactClass = $__require('./ReactClass');
  var ReactDOMFactories = $__require('./ReactDOMFactories');
  var ReactElement = $__require('./ReactElement');
  var ReactElementValidator = $__require('./ReactElementValidator');
  var ReactPropTypes = $__require('./ReactPropTypes');
  var ReactVersion = $__require('./ReactVersion');
  var assign = $__require('./Object.assign');
  var onlyChild = $__require('./onlyChild');
  var createElement = ReactElement.createElement;
  var createFactory = ReactElement.createFactory;
  var cloneElement = ReactElement.cloneElement;
  if ("production" !== 'production') {
    createElement = ReactElementValidator.createElement;
    createFactory = ReactElementValidator.createFactory;
    cloneElement = ReactElementValidator.cloneElement;
  }
  var React = {
    Children: {
      map: ReactChildren.map,
      forEach: ReactChildren.forEach,
      count: ReactChildren.count,
      toArray: ReactChildren.toArray,
      only: onlyChild
    },
    Component: ReactComponent,
    createElement: createElement,
    cloneElement: cloneElement,
    isValidElement: ReactElement.isValidElement,
    PropTypes: ReactPropTypes,
    createClass: ReactClass.createClass,
    createFactory: createFactory,
    createMixin: function(mixin) {
      return mixin;
    },
    DOM: ReactDOMFactories,
    version: ReactVersion,
    __spread: assign
  };
  module.exports = React;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/deprecated.js", ["./Object.assign", "fbjs/lib/warning", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var assign = $__require('./Object.assign');
  var warning = $__require('fbjs/lib/warning');
  function deprecated(fnName, newModule, newPackage, ctx, fn) {
    var warned = false;
    if ("production" !== 'production') {
      var newFn = function() {
        "production" !== 'production' ? warning(warned, 'React.%s is deprecated. Please use %s.%s from require' + '(\'%s\') ' + 'instead.', fnName, newModule, fnName, newPackage) : undefined;
        warned = true;
        return fn.apply(ctx, arguments);
      };
      return assign(newFn, fn);
    }
    return fn;
  }
  module.exports = deprecated;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/React.js", ["./ReactDOM", "./ReactDOMServer", "./ReactIsomorphic", "./Object.assign", "./deprecated", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ReactDOM = $__require('./ReactDOM');
  var ReactDOMServer = $__require('./ReactDOMServer');
  var ReactIsomorphic = $__require('./ReactIsomorphic');
  var assign = $__require('./Object.assign');
  var deprecated = $__require('./deprecated');
  var React = {};
  assign(React, ReactIsomorphic);
  assign(React, {
    findDOMNode: deprecated('findDOMNode', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.findDOMNode),
    render: deprecated('render', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.render),
    unmountComponentAtNode: deprecated('unmountComponentAtNode', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.unmountComponentAtNode),
    renderToString: deprecated('renderToString', 'ReactDOMServer', 'react-dom/server', ReactDOMServer, ReactDOMServer.renderToString),
    renderToStaticMarkup: deprecated('renderToStaticMarkup', 'ReactDOMServer', 'react-dom/server', ReactDOMServer, ReactDOMServer.renderToStaticMarkup)
  });
  React.__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactDOM;
  React.__SECRET_DOM_SERVER_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactDOMServer;
  module.exports = React;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/react.js", ["./lib/React", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  module.exports = $__require('./lib/React');
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/FallbackCompositionState.js", ["./PooledClass", "./Object.assign", "./getTextContentAccessor", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var PooledClass = $__require('./PooledClass');
  var assign = $__require('./Object.assign');
  var getTextContentAccessor = $__require('./getTextContentAccessor');
  function FallbackCompositionState(root) {
    this._root = root;
    this._startText = this.getText();
    this._fallbackText = null;
  }
  assign(FallbackCompositionState.prototype, {
    destructor: function() {
      this._root = null;
      this._startText = null;
      this._fallbackText = null;
    },
    getText: function() {
      if ('value' in this._root) {
        return this._root.value;
      }
      return this._root[getTextContentAccessor()];
    },
    getData: function() {
      if (this._fallbackText) {
        return this._fallbackText;
      }
      var start;
      var startValue = this._startText;
      var startLength = startValue.length;
      var end;
      var endValue = this.getText();
      var endLength = endValue.length;
      for (start = 0; start < startLength; start++) {
        if (startValue[start] !== endValue[start]) {
          break;
        }
      }
      var minEnd = startLength - start;
      for (end = 1; end <= minEnd; end++) {
        if (startValue[startLength - end] !== endValue[endLength - end]) {
          break;
        }
      }
      var sliceTail = end > 1 ? 1 - end : undefined;
      this._fallbackText = endValue.slice(start, sliceTail);
      return this._fallbackText;
    }
  });
  PooledClass.addPoolingTo(FallbackCompositionState);
  module.exports = FallbackCompositionState;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/SyntheticCompositionEvent.js", ["./SyntheticEvent", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var SyntheticEvent = $__require('./SyntheticEvent');
  var CompositionEventInterface = {data: null};
  function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);
  module.exports = SyntheticCompositionEvent;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/SyntheticInputEvent.js", ["./SyntheticEvent", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var SyntheticEvent = $__require('./SyntheticEvent');
  var InputEventInterface = {data: null};
  function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);
  module.exports = SyntheticInputEvent;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/BeforeInputEventPlugin.js", ["./EventConstants", "./EventPropagators", "fbjs/lib/ExecutionEnvironment", "./FallbackCompositionState", "./SyntheticCompositionEvent", "./SyntheticInputEvent", "fbjs/lib/keyOf", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var EventConstants = $__require('./EventConstants');
  var EventPropagators = $__require('./EventPropagators');
  var ExecutionEnvironment = $__require('fbjs/lib/ExecutionEnvironment');
  var FallbackCompositionState = $__require('./FallbackCompositionState');
  var SyntheticCompositionEvent = $__require('./SyntheticCompositionEvent');
  var SyntheticInputEvent = $__require('./SyntheticInputEvent');
  var keyOf = $__require('fbjs/lib/keyOf');
  var END_KEYCODES = [9, 13, 27, 32];
  var START_KEYCODE = 229;
  var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;
  var documentMode = null;
  if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
    documentMode = document.documentMode;
  }
  var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();
  var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
  function isPresto() {
    var opera = window.opera;
    return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
  }
  var SPACEBAR_CODE = 32;
  var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
  var topLevelTypes = EventConstants.topLevelTypes;
  var eventTypes = {
    beforeInput: {
      phasedRegistrationNames: {
        bubbled: keyOf({onBeforeInput: null}),
        captured: keyOf({onBeforeInputCapture: null})
      },
      dependencies: [topLevelTypes.topCompositionEnd, topLevelTypes.topKeyPress, topLevelTypes.topTextInput, topLevelTypes.topPaste]
    },
    compositionEnd: {
      phasedRegistrationNames: {
        bubbled: keyOf({onCompositionEnd: null}),
        captured: keyOf({onCompositionEndCapture: null})
      },
      dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionEnd, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
    },
    compositionStart: {
      phasedRegistrationNames: {
        bubbled: keyOf({onCompositionStart: null}),
        captured: keyOf({onCompositionStartCapture: null})
      },
      dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionStart, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
    },
    compositionUpdate: {
      phasedRegistrationNames: {
        bubbled: keyOf({onCompositionUpdate: null}),
        captured: keyOf({onCompositionUpdateCapture: null})
      },
      dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionUpdate, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
    }
  };
  var hasSpaceKeypress = false;
  function isKeypressCommand(nativeEvent) {
    return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) && !(nativeEvent.ctrlKey && nativeEvent.altKey);
  }
  function getCompositionEventType(topLevelType) {
    switch (topLevelType) {
      case topLevelTypes.topCompositionStart:
        return eventTypes.compositionStart;
      case topLevelTypes.topCompositionEnd:
        return eventTypes.compositionEnd;
      case topLevelTypes.topCompositionUpdate:
        return eventTypes.compositionUpdate;
    }
  }
  function isFallbackCompositionStart(topLevelType, nativeEvent) {
    return topLevelType === topLevelTypes.topKeyDown && nativeEvent.keyCode === START_KEYCODE;
  }
  function isFallbackCompositionEnd(topLevelType, nativeEvent) {
    switch (topLevelType) {
      case topLevelTypes.topKeyUp:
        return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
      case topLevelTypes.topKeyDown:
        return nativeEvent.keyCode !== START_KEYCODE;
      case topLevelTypes.topKeyPress:
      case topLevelTypes.topMouseDown:
      case topLevelTypes.topBlur:
        return true;
      default:
        return false;
    }
  }
  function getDataFromCustomEvent(nativeEvent) {
    var detail = nativeEvent.detail;
    if (typeof detail === 'object' && 'data' in detail) {
      return detail.data;
    }
    return null;
  }
  var currentComposition = null;
  function extractCompositionEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
    var eventType;
    var fallbackData;
    if (canUseCompositionEvent) {
      eventType = getCompositionEventType(topLevelType);
    } else if (!currentComposition) {
      if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
        eventType = eventTypes.compositionStart;
      }
    } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
      eventType = eventTypes.compositionEnd;
    }
    if (!eventType) {
      return null;
    }
    if (useFallbackCompositionData) {
      if (!currentComposition && eventType === eventTypes.compositionStart) {
        currentComposition = FallbackCompositionState.getPooled(topLevelTarget);
      } else if (eventType === eventTypes.compositionEnd) {
        if (currentComposition) {
          fallbackData = currentComposition.getData();
        }
      }
    }
    var event = SyntheticCompositionEvent.getPooled(eventType, topLevelTargetID, nativeEvent, nativeEventTarget);
    if (fallbackData) {
      event.data = fallbackData;
    } else {
      var customData = getDataFromCustomEvent(nativeEvent);
      if (customData !== null) {
        event.data = customData;
      }
    }
    EventPropagators.accumulateTwoPhaseDispatches(event);
    return event;
  }
  function getNativeBeforeInputChars(topLevelType, nativeEvent) {
    switch (topLevelType) {
      case topLevelTypes.topCompositionEnd:
        return getDataFromCustomEvent(nativeEvent);
      case topLevelTypes.topKeyPress:
        var which = nativeEvent.which;
        if (which !== SPACEBAR_CODE) {
          return null;
        }
        hasSpaceKeypress = true;
        return SPACEBAR_CHAR;
      case topLevelTypes.topTextInput:
        var chars = nativeEvent.data;
        if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
          return null;
        }
        return chars;
      default:
        return null;
    }
  }
  function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
    if (currentComposition) {
      if (topLevelType === topLevelTypes.topCompositionEnd || isFallbackCompositionEnd(topLevelType, nativeEvent)) {
        var chars = currentComposition.getData();
        FallbackCompositionState.release(currentComposition);
        currentComposition = null;
        return chars;
      }
      return null;
    }
    switch (topLevelType) {
      case topLevelTypes.topPaste:
        return null;
      case topLevelTypes.topKeyPress:
        if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
          return String.fromCharCode(nativeEvent.which);
        }
        return null;
      case topLevelTypes.topCompositionEnd:
        return useFallbackCompositionData ? null : nativeEvent.data;
      default:
        return null;
    }
  }
  function extractBeforeInputEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
    var chars;
    if (canUseTextInputEvent) {
      chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
    } else {
      chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
    }
    if (!chars) {
      return null;
    }
    var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, topLevelTargetID, nativeEvent, nativeEventTarget);
    event.data = chars;
    EventPropagators.accumulateTwoPhaseDispatches(event);
    return event;
  }
  var BeforeInputEventPlugin = {
    eventTypes: eventTypes,
    extractEvents: function(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
      return [extractCompositionEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget)];
    }
  };
  module.exports = BeforeInputEventPlugin;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ChangeEventPlugin.js", ["./EventConstants", "./EventPluginHub", "./EventPropagators", "fbjs/lib/ExecutionEnvironment", "./ReactUpdates", "./SyntheticEvent", "./getEventTarget", "./isEventSupported", "./isTextInputElement", "fbjs/lib/keyOf", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var EventConstants = $__require('./EventConstants');
  var EventPluginHub = $__require('./EventPluginHub');
  var EventPropagators = $__require('./EventPropagators');
  var ExecutionEnvironment = $__require('fbjs/lib/ExecutionEnvironment');
  var ReactUpdates = $__require('./ReactUpdates');
  var SyntheticEvent = $__require('./SyntheticEvent');
  var getEventTarget = $__require('./getEventTarget');
  var isEventSupported = $__require('./isEventSupported');
  var isTextInputElement = $__require('./isTextInputElement');
  var keyOf = $__require('fbjs/lib/keyOf');
  var topLevelTypes = EventConstants.topLevelTypes;
  var eventTypes = {change: {
      phasedRegistrationNames: {
        bubbled: keyOf({onChange: null}),
        captured: keyOf({onChangeCapture: null})
      },
      dependencies: [topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]
    }};
  var activeElement = null;
  var activeElementID = null;
  var activeElementValue = null;
  var activeElementValueProp = null;
  function shouldUseChangeEvent(elem) {
    var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
    return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
  }
  var doesChangeEventBubble = false;
  if (ExecutionEnvironment.canUseDOM) {
    doesChangeEventBubble = isEventSupported('change') && (!('documentMode' in document) || document.documentMode > 8);
  }
  function manualDispatchChangeEvent(nativeEvent) {
    var event = SyntheticEvent.getPooled(eventTypes.change, activeElementID, nativeEvent, getEventTarget(nativeEvent));
    EventPropagators.accumulateTwoPhaseDispatches(event);
    ReactUpdates.batchedUpdates(runEventInBatch, event);
  }
  function runEventInBatch(event) {
    EventPluginHub.enqueueEvents(event);
    EventPluginHub.processEventQueue(false);
  }
  function startWatchingForChangeEventIE8(target, targetID) {
    activeElement = target;
    activeElementID = targetID;
    activeElement.attachEvent('onchange', manualDispatchChangeEvent);
  }
  function stopWatchingForChangeEventIE8() {
    if (!activeElement) {
      return;
    }
    activeElement.detachEvent('onchange', manualDispatchChangeEvent);
    activeElement = null;
    activeElementID = null;
  }
  function getTargetIDForChangeEvent(topLevelType, topLevelTarget, topLevelTargetID) {
    if (topLevelType === topLevelTypes.topChange) {
      return topLevelTargetID;
    }
  }
  function handleEventsForChangeEventIE8(topLevelType, topLevelTarget, topLevelTargetID) {
    if (topLevelType === topLevelTypes.topFocus) {
      stopWatchingForChangeEventIE8();
      startWatchingForChangeEventIE8(topLevelTarget, topLevelTargetID);
    } else if (topLevelType === topLevelTypes.topBlur) {
      stopWatchingForChangeEventIE8();
    }
  }
  var isInputEventSupported = false;
  if (ExecutionEnvironment.canUseDOM) {
    isInputEventSupported = isEventSupported('input') && (!('documentMode' in document) || document.documentMode > 9);
  }
  var newValueProp = {
    get: function() {
      return activeElementValueProp.get.call(this);
    },
    set: function(val) {
      activeElementValue = '' + val;
      activeElementValueProp.set.call(this, val);
    }
  };
  function startWatchingForValueChange(target, targetID) {
    activeElement = target;
    activeElementID = targetID;
    activeElementValue = target.value;
    activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');
    Object.defineProperty(activeElement, 'value', newValueProp);
    activeElement.attachEvent('onpropertychange', handlePropertyChange);
  }
  function stopWatchingForValueChange() {
    if (!activeElement) {
      return;
    }
    delete activeElement.value;
    activeElement.detachEvent('onpropertychange', handlePropertyChange);
    activeElement = null;
    activeElementID = null;
    activeElementValue = null;
    activeElementValueProp = null;
  }
  function handlePropertyChange(nativeEvent) {
    if (nativeEvent.propertyName !== 'value') {
      return;
    }
    var value = nativeEvent.srcElement.value;
    if (value === activeElementValue) {
      return;
    }
    activeElementValue = value;
    manualDispatchChangeEvent(nativeEvent);
  }
  function getTargetIDForInputEvent(topLevelType, topLevelTarget, topLevelTargetID) {
    if (topLevelType === topLevelTypes.topInput) {
      return topLevelTargetID;
    }
  }
  function handleEventsForInputEventIE(topLevelType, topLevelTarget, topLevelTargetID) {
    if (topLevelType === topLevelTypes.topFocus) {
      stopWatchingForValueChange();
      startWatchingForValueChange(topLevelTarget, topLevelTargetID);
    } else if (topLevelType === topLevelTypes.topBlur) {
      stopWatchingForValueChange();
    }
  }
  function getTargetIDForInputEventIE(topLevelType, topLevelTarget, topLevelTargetID) {
    if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {
      if (activeElement && activeElement.value !== activeElementValue) {
        activeElementValue = activeElement.value;
        return activeElementID;
      }
    }
  }
  function shouldUseClickEvent(elem) {
    return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
  }
  function getTargetIDForClickEvent(topLevelType, topLevelTarget, topLevelTargetID) {
    if (topLevelType === topLevelTypes.topClick) {
      return topLevelTargetID;
    }
  }
  var ChangeEventPlugin = {
    eventTypes: eventTypes,
    extractEvents: function(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
      var getTargetIDFunc,
          handleEventFunc;
      if (shouldUseChangeEvent(topLevelTarget)) {
        if (doesChangeEventBubble) {
          getTargetIDFunc = getTargetIDForChangeEvent;
        } else {
          handleEventFunc = handleEventsForChangeEventIE8;
        }
      } else if (isTextInputElement(topLevelTarget)) {
        if (isInputEventSupported) {
          getTargetIDFunc = getTargetIDForInputEvent;
        } else {
          getTargetIDFunc = getTargetIDForInputEventIE;
          handleEventFunc = handleEventsForInputEventIE;
        }
      } else if (shouldUseClickEvent(topLevelTarget)) {
        getTargetIDFunc = getTargetIDForClickEvent;
      }
      if (getTargetIDFunc) {
        var targetID = getTargetIDFunc(topLevelType, topLevelTarget, topLevelTargetID);
        if (targetID) {
          var event = SyntheticEvent.getPooled(eventTypes.change, targetID, nativeEvent, nativeEventTarget);
          event.type = 'change';
          EventPropagators.accumulateTwoPhaseDispatches(event);
          return event;
        }
      }
      if (handleEventFunc) {
        handleEventFunc(topLevelType, topLevelTarget, topLevelTargetID);
      }
    }
  };
  module.exports = ChangeEventPlugin;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ClientReactRootIndex.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var nextReactRootIndex = 0;
  var ClientReactRootIndex = {createReactRootIndex: function() {
      return nextReactRootIndex++;
    }};
  module.exports = ClientReactRootIndex;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/DefaultEventPluginOrder.js", ["fbjs/lib/keyOf", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var keyOf = $__require('fbjs/lib/keyOf');
  var DefaultEventPluginOrder = [keyOf({ResponderEventPlugin: null}), keyOf({SimpleEventPlugin: null}), keyOf({TapEventPlugin: null}), keyOf({EnterLeaveEventPlugin: null}), keyOf({ChangeEventPlugin: null}), keyOf({SelectEventPlugin: null}), keyOf({BeforeInputEventPlugin: null})];
  module.exports = DefaultEventPluginOrder;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/EnterLeaveEventPlugin.js", ["./EventConstants", "./EventPropagators", "./SyntheticMouseEvent", "./ReactMount", "fbjs/lib/keyOf", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var EventConstants = $__require('./EventConstants');
  var EventPropagators = $__require('./EventPropagators');
  var SyntheticMouseEvent = $__require('./SyntheticMouseEvent');
  var ReactMount = $__require('./ReactMount');
  var keyOf = $__require('fbjs/lib/keyOf');
  var topLevelTypes = EventConstants.topLevelTypes;
  var getFirstReactDOM = ReactMount.getFirstReactDOM;
  var eventTypes = {
    mouseEnter: {
      registrationName: keyOf({onMouseEnter: null}),
      dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
    },
    mouseLeave: {
      registrationName: keyOf({onMouseLeave: null}),
      dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
    }
  };
  var extractedEvents = [null, null];
  var EnterLeaveEventPlugin = {
    eventTypes: eventTypes,
    extractEvents: function(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
      if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
        return null;
      }
      if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {
        return null;
      }
      var win;
      if (topLevelTarget.window === topLevelTarget) {
        win = topLevelTarget;
      } else {
        var doc = topLevelTarget.ownerDocument;
        if (doc) {
          win = doc.defaultView || doc.parentWindow;
        } else {
          win = window;
        }
      }
      var from;
      var to;
      var fromID = '';
      var toID = '';
      if (topLevelType === topLevelTypes.topMouseOut) {
        from = topLevelTarget;
        fromID = topLevelTargetID;
        to = getFirstReactDOM(nativeEvent.relatedTarget || nativeEvent.toElement);
        if (to) {
          toID = ReactMount.getID(to);
        } else {
          to = win;
        }
        to = to || win;
      } else {
        from = win;
        to = topLevelTarget;
        toID = topLevelTargetID;
      }
      if (from === to) {
        return null;
      }
      var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, fromID, nativeEvent, nativeEventTarget);
      leave.type = 'mouseleave';
      leave.target = from;
      leave.relatedTarget = to;
      var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, toID, nativeEvent, nativeEventTarget);
      enter.type = 'mouseenter';
      enter.target = to;
      enter.relatedTarget = from;
      EventPropagators.accumulateEnterLeaveDispatches(leave, enter, fromID, toID);
      extractedEvents[0] = leave;
      extractedEvents[1] = enter;
      return extractedEvents;
    }
  };
  module.exports = EnterLeaveEventPlugin;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/HTMLDOMPropertyConfig.js", ["./DOMProperty", "fbjs/lib/ExecutionEnvironment", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var DOMProperty = $__require('./DOMProperty');
  var ExecutionEnvironment = $__require('fbjs/lib/ExecutionEnvironment');
  var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;
  var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
  var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
  var HAS_SIDE_EFFECTS = DOMProperty.injection.HAS_SIDE_EFFECTS;
  var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
  var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
  var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;
  var hasSVG;
  if (ExecutionEnvironment.canUseDOM) {
    var implementation = document.implementation;
    hasSVG = implementation && implementation.hasFeature && implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1');
  }
  var HTMLDOMPropertyConfig = {
    isCustomAttribute: RegExp.prototype.test.bind(/^(data|aria)-[a-z_][a-z\d_.\-]*$/),
    Properties: {
      accept: null,
      acceptCharset: null,
      accessKey: null,
      action: null,
      allowFullScreen: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
      allowTransparency: MUST_USE_ATTRIBUTE,
      alt: null,
      async: HAS_BOOLEAN_VALUE,
      autoComplete: null,
      autoPlay: HAS_BOOLEAN_VALUE,
      capture: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
      cellPadding: null,
      cellSpacing: null,
      charSet: MUST_USE_ATTRIBUTE,
      challenge: MUST_USE_ATTRIBUTE,
      checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
      classID: MUST_USE_ATTRIBUTE,
      className: hasSVG ? MUST_USE_ATTRIBUTE : MUST_USE_PROPERTY,
      cols: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
      colSpan: null,
      content: null,
      contentEditable: null,
      contextMenu: MUST_USE_ATTRIBUTE,
      controls: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
      coords: null,
      crossOrigin: null,
      data: null,
      dateTime: MUST_USE_ATTRIBUTE,
      'default': HAS_BOOLEAN_VALUE,
      defer: HAS_BOOLEAN_VALUE,
      dir: null,
      disabled: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
      download: HAS_OVERLOADED_BOOLEAN_VALUE,
      draggable: null,
      encType: null,
      form: MUST_USE_ATTRIBUTE,
      formAction: MUST_USE_ATTRIBUTE,
      formEncType: MUST_USE_ATTRIBUTE,
      formMethod: MUST_USE_ATTRIBUTE,
      formNoValidate: HAS_BOOLEAN_VALUE,
      formTarget: MUST_USE_ATTRIBUTE,
      frameBorder: MUST_USE_ATTRIBUTE,
      headers: null,
      height: MUST_USE_ATTRIBUTE,
      hidden: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
      high: null,
      href: null,
      hrefLang: null,
      htmlFor: null,
      httpEquiv: null,
      icon: null,
      id: MUST_USE_PROPERTY,
      inputMode: MUST_USE_ATTRIBUTE,
      integrity: null,
      is: MUST_USE_ATTRIBUTE,
      keyParams: MUST_USE_ATTRIBUTE,
      keyType: MUST_USE_ATTRIBUTE,
      kind: null,
      label: null,
      lang: null,
      list: MUST_USE_ATTRIBUTE,
      loop: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
      low: null,
      manifest: MUST_USE_ATTRIBUTE,
      marginHeight: null,
      marginWidth: null,
      max: null,
      maxLength: MUST_USE_ATTRIBUTE,
      media: MUST_USE_ATTRIBUTE,
      mediaGroup: null,
      method: null,
      min: null,
      minLength: MUST_USE_ATTRIBUTE,
      multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
      muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
      name: null,
      nonce: MUST_USE_ATTRIBUTE,
      noValidate: HAS_BOOLEAN_VALUE,
      open: HAS_BOOLEAN_VALUE,
      optimum: null,
      pattern: null,
      placeholder: null,
      poster: null,
      preload: null,
      radioGroup: null,
      readOnly: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
      rel: null,
      required: HAS_BOOLEAN_VALUE,
      reversed: HAS_BOOLEAN_VALUE,
      role: MUST_USE_ATTRIBUTE,
      rows: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
      rowSpan: null,
      sandbox: null,
      scope: null,
      scoped: HAS_BOOLEAN_VALUE,
      scrolling: null,
      seamless: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
      selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
      shape: null,
      size: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
      sizes: MUST_USE_ATTRIBUTE,
      span: HAS_POSITIVE_NUMERIC_VALUE,
      spellCheck: null,
      src: null,
      srcDoc: MUST_USE_PROPERTY,
      srcLang: null,
      srcSet: MUST_USE_ATTRIBUTE,
      start: HAS_NUMERIC_VALUE,
      step: null,
      style: null,
      summary: null,
      tabIndex: null,
      target: null,
      title: null,
      type: null,
      useMap: null,
      value: MUST_USE_PROPERTY | HAS_SIDE_EFFECTS,
      width: MUST_USE_ATTRIBUTE,
      wmode: MUST_USE_ATTRIBUTE,
      wrap: null,
      about: MUST_USE_ATTRIBUTE,
      datatype: MUST_USE_ATTRIBUTE,
      inlist: MUST_USE_ATTRIBUTE,
      prefix: MUST_USE_ATTRIBUTE,
      property: MUST_USE_ATTRIBUTE,
      resource: MUST_USE_ATTRIBUTE,
      'typeof': MUST_USE_ATTRIBUTE,
      vocab: MUST_USE_ATTRIBUTE,
      autoCapitalize: MUST_USE_ATTRIBUTE,
      autoCorrect: MUST_USE_ATTRIBUTE,
      autoSave: null,
      color: null,
      itemProp: MUST_USE_ATTRIBUTE,
      itemScope: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
      itemType: MUST_USE_ATTRIBUTE,
      itemID: MUST_USE_ATTRIBUTE,
      itemRef: MUST_USE_ATTRIBUTE,
      results: null,
      security: MUST_USE_ATTRIBUTE,
      unselectable: MUST_USE_ATTRIBUTE
    },
    DOMAttributeNames: {
      acceptCharset: 'accept-charset',
      className: 'class',
      htmlFor: 'for',
      httpEquiv: 'http-equiv'
    },
    DOMPropertyNames: {
      autoComplete: 'autocomplete',
      autoFocus: 'autofocus',
      autoPlay: 'autoplay',
      autoSave: 'autosave',
      encType: 'encoding',
      hrefLang: 'hreflang',
      radioGroup: 'radiogroup',
      spellCheck: 'spellcheck',
      srcDoc: 'srcdoc',
      srcSet: 'srcset'
    }
  };
  module.exports = HTMLDOMPropertyConfig;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactBrowserComponentMixin.js", ["./ReactInstanceMap", "./findDOMNode", "fbjs/lib/warning", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ReactInstanceMap = $__require('./ReactInstanceMap');
  var findDOMNode = $__require('./findDOMNode');
  var warning = $__require('fbjs/lib/warning');
  var didWarnKey = '_getDOMNodeDidWarn';
  var ReactBrowserComponentMixin = {getDOMNode: function() {
      "production" !== 'production' ? warning(this.constructor[didWarnKey], '%s.getDOMNode(...) is deprecated. Please use ' + 'ReactDOM.findDOMNode(instance) instead.', ReactInstanceMap.get(this).getName() || this.tagName || 'Unknown') : undefined;
      this.constructor[didWarnKey] = true;
      return findDOMNode(this);
    }};
  module.exports = ReactBrowserComponentMixin;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactDefaultBatchingStrategy.js", ["./ReactUpdates", "./Transaction", "./Object.assign", "fbjs/lib/emptyFunction", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ReactUpdates = $__require('./ReactUpdates');
  var Transaction = $__require('./Transaction');
  var assign = $__require('./Object.assign');
  var emptyFunction = $__require('fbjs/lib/emptyFunction');
  var RESET_BATCHED_UPDATES = {
    initialize: emptyFunction,
    close: function() {
      ReactDefaultBatchingStrategy.isBatchingUpdates = false;
    }
  };
  var FLUSH_BATCHED_UPDATES = {
    initialize: emptyFunction,
    close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
  };
  var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];
  function ReactDefaultBatchingStrategyTransaction() {
    this.reinitializeTransaction();
  }
  assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction.Mixin, {getTransactionWrappers: function() {
      return TRANSACTION_WRAPPERS;
    }});
  var transaction = new ReactDefaultBatchingStrategyTransaction();
  var ReactDefaultBatchingStrategy = {
    isBatchingUpdates: false,
    batchedUpdates: function(callback, a, b, c, d, e) {
      var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;
      ReactDefaultBatchingStrategy.isBatchingUpdates = true;
      if (alreadyBatchingUpdates) {
        callback(a, b, c, d, e);
      } else {
        transaction.perform(callback, null, a, b, c, d, e);
      }
    }
  };
  module.exports = ReactDefaultBatchingStrategy;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/AutoFocusUtils.js", ["./ReactMount", "./findDOMNode", "fbjs/lib/focusNode", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ReactMount = $__require('./ReactMount');
  var findDOMNode = $__require('./findDOMNode');
  var focusNode = $__require('fbjs/lib/focusNode');
  var Mixin = {componentDidMount: function() {
      if (this.props.autoFocus) {
        focusNode(findDOMNode(this));
      }
    }};
  var AutoFocusUtils = {
    Mixin: Mixin,
    focusDOMComponent: function() {
      focusNode(ReactMount.getNode(this._rootNodeID));
    }
  };
  module.exports = AutoFocusUtils;
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.6.1/lib/camelize.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var _hyphenPattern = /-(.)/g;
  function camelize(string) {
    return string.replace(_hyphenPattern, function(_, character) {
      return character.toUpperCase();
    });
  }
  module.exports = camelize;
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.6.1/lib/camelizeStyleName.js", ["./camelize", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var camelize = $__require('./camelize');
  var msPattern = /^-ms-/;
  function camelizeStyleName(string) {
    return camelize(string.replace(msPattern, 'ms-'));
  }
  module.exports = camelizeStyleName;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/CSSProperty.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var isUnitlessNumber = {
    animationIterationCount: true,
    boxFlex: true,
    boxFlexGroup: true,
    boxOrdinalGroup: true,
    columnCount: true,
    flex: true,
    flexGrow: true,
    flexPositive: true,
    flexShrink: true,
    flexNegative: true,
    flexOrder: true,
    fontWeight: true,
    lineClamp: true,
    lineHeight: true,
    opacity: true,
    order: true,
    orphans: true,
    tabSize: true,
    widows: true,
    zIndex: true,
    zoom: true,
    fillOpacity: true,
    stopOpacity: true,
    strokeDashoffset: true,
    strokeOpacity: true,
    strokeWidth: true
  };
  function prefixKey(prefix, key) {
    return prefix + key.charAt(0).toUpperCase() + key.substring(1);
  }
  var prefixes = ['Webkit', 'ms', 'Moz', 'O'];
  Object.keys(isUnitlessNumber).forEach(function(prop) {
    prefixes.forEach(function(prefix) {
      isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
    });
  });
  var shorthandPropertyExpansions = {
    background: {
      backgroundAttachment: true,
      backgroundColor: true,
      backgroundImage: true,
      backgroundPositionX: true,
      backgroundPositionY: true,
      backgroundRepeat: true
    },
    backgroundPosition: {
      backgroundPositionX: true,
      backgroundPositionY: true
    },
    border: {
      borderWidth: true,
      borderStyle: true,
      borderColor: true
    },
    borderBottom: {
      borderBottomWidth: true,
      borderBottomStyle: true,
      borderBottomColor: true
    },
    borderLeft: {
      borderLeftWidth: true,
      borderLeftStyle: true,
      borderLeftColor: true
    },
    borderRight: {
      borderRightWidth: true,
      borderRightStyle: true,
      borderRightColor: true
    },
    borderTop: {
      borderTopWidth: true,
      borderTopStyle: true,
      borderTopColor: true
    },
    font: {
      fontStyle: true,
      fontVariant: true,
      fontWeight: true,
      fontSize: true,
      lineHeight: true,
      fontFamily: true
    },
    outline: {
      outlineWidth: true,
      outlineStyle: true,
      outlineColor: true
    }
  };
  var CSSProperty = {
    isUnitlessNumber: isUnitlessNumber,
    shorthandPropertyExpansions: shorthandPropertyExpansions
  };
  module.exports = CSSProperty;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/dangerousStyleValue.js", ["./CSSProperty", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var CSSProperty = $__require('./CSSProperty');
  var isUnitlessNumber = CSSProperty.isUnitlessNumber;
  function dangerousStyleValue(name, value) {
    var isEmpty = value == null || typeof value === 'boolean' || value === '';
    if (isEmpty) {
      return '';
    }
    var isNonNumeric = isNaN(value);
    if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
      return '' + value;
    }
    if (typeof value === 'string') {
      value = value.trim();
    }
    return value + 'px';
  }
  module.exports = dangerousStyleValue;
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.6.1/lib/hyphenate.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var _uppercasePattern = /([A-Z])/g;
  function hyphenate(string) {
    return string.replace(_uppercasePattern, '-$1').toLowerCase();
  }
  module.exports = hyphenate;
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.6.1/lib/hyphenateStyleName.js", ["./hyphenate", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var hyphenate = $__require('./hyphenate');
  var msPattern = /^ms-/;
  function hyphenateStyleName(string) {
    return hyphenate(string).replace(msPattern, '-ms-');
  }
  module.exports = hyphenateStyleName;
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.6.1/lib/memoizeStringOnly.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  function memoizeStringOnly(callback) {
    var cache = {};
    return function(string) {
      if (!cache.hasOwnProperty(string)) {
        cache[string] = callback.call(this, string);
      }
      return cache[string];
    };
  }
  module.exports = memoizeStringOnly;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/CSSPropertyOperations.js", ["./CSSProperty", "fbjs/lib/ExecutionEnvironment", "./ReactPerf", "fbjs/lib/camelizeStyleName", "./dangerousStyleValue", "fbjs/lib/hyphenateStyleName", "fbjs/lib/memoizeStringOnly", "fbjs/lib/warning", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var CSSProperty = $__require('./CSSProperty');
  var ExecutionEnvironment = $__require('fbjs/lib/ExecutionEnvironment');
  var ReactPerf = $__require('./ReactPerf');
  var camelizeStyleName = $__require('fbjs/lib/camelizeStyleName');
  var dangerousStyleValue = $__require('./dangerousStyleValue');
  var hyphenateStyleName = $__require('fbjs/lib/hyphenateStyleName');
  var memoizeStringOnly = $__require('fbjs/lib/memoizeStringOnly');
  var warning = $__require('fbjs/lib/warning');
  var processStyleName = memoizeStringOnly(function(styleName) {
    return hyphenateStyleName(styleName);
  });
  var hasShorthandPropertyBug = false;
  var styleFloatAccessor = 'cssFloat';
  if (ExecutionEnvironment.canUseDOM) {
    var tempStyle = document.createElement('div').style;
    try {
      tempStyle.font = '';
    } catch (e) {
      hasShorthandPropertyBug = true;
    }
    if (document.documentElement.style.cssFloat === undefined) {
      styleFloatAccessor = 'styleFloat';
    }
  }
  if ("production" !== 'production') {
    var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
    var badStyleValueWithSemicolonPattern = /;\s*$/;
    var warnedStyleNames = {};
    var warnedStyleValues = {};
    var warnHyphenatedStyleName = function(name) {
      if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
        return;
      }
      warnedStyleNames[name] = true;
      "production" !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?', name, camelizeStyleName(name)) : undefined;
    };
    var warnBadVendoredStyleName = function(name) {
      if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
        return;
      }
      warnedStyleNames[name] = true;
      "production" !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1)) : undefined;
    };
    var warnStyleValueWithSemicolon = function(name, value) {
      if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
        return;
      }
      warnedStyleValues[value] = true;
      "production" !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon. ' + 'Try "%s: %s" instead.', name, value.replace(badStyleValueWithSemicolonPattern, '')) : undefined;
    };
    var warnValidStyle = function(name, value) {
      if (name.indexOf('-') > -1) {
        warnHyphenatedStyleName(name);
      } else if (badVendoredStyleNamePattern.test(name)) {
        warnBadVendoredStyleName(name);
      } else if (badStyleValueWithSemicolonPattern.test(value)) {
        warnStyleValueWithSemicolon(name, value);
      }
    };
  }
  var CSSPropertyOperations = {
    createMarkupForStyles: function(styles) {
      var serialized = '';
      for (var styleName in styles) {
        if (!styles.hasOwnProperty(styleName)) {
          continue;
        }
        var styleValue = styles[styleName];
        if ("production" !== 'production') {
          warnValidStyle(styleName, styleValue);
        }
        if (styleValue != null) {
          serialized += processStyleName(styleName) + ':';
          serialized += dangerousStyleValue(styleName, styleValue) + ';';
        }
      }
      return serialized || null;
    },
    setValueForStyles: function(node, styles) {
      var style = node.style;
      for (var styleName in styles) {
        if (!styles.hasOwnProperty(styleName)) {
          continue;
        }
        if ("production" !== 'production') {
          warnValidStyle(styleName, styles[styleName]);
        }
        var styleValue = dangerousStyleValue(styleName, styles[styleName]);
        if (styleName === 'float') {
          styleName = styleFloatAccessor;
        }
        if (styleValue) {
          style[styleName] = styleValue;
        } else {
          var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
          if (expansion) {
            for (var individualStyleName in expansion) {
              style[individualStyleName] = '';
            }
          } else {
            style[styleName] = '';
          }
        }
      }
    }
  };
  ReactPerf.measureMethods(CSSPropertyOperations, 'CSSPropertyOperations', {setValueForStyles: 'setValueForStyles'});
  module.exports = CSSPropertyOperations;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactDOMButton.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var mouseListenerNames = {
    onClick: true,
    onDoubleClick: true,
    onMouseDown: true,
    onMouseMove: true,
    onMouseUp: true,
    onClickCapture: true,
    onDoubleClickCapture: true,
    onMouseDownCapture: true,
    onMouseMoveCapture: true,
    onMouseUpCapture: true
  };
  var ReactDOMButton = {getNativeProps: function(inst, props, context) {
      if (!props.disabled) {
        return props;
      }
      var nativeProps = {};
      for (var key in props) {
        if (props.hasOwnProperty(key) && !mouseListenerNames[key]) {
          nativeProps[key] = props[key];
        }
      }
      return nativeProps;
    }};
  module.exports = ReactDOMButton;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactDOMInput.js", ["./ReactDOMIDOperations", "./LinkedValueUtils", "./ReactMount", "./ReactUpdates", "./Object.assign", "fbjs/lib/invariant", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ReactDOMIDOperations = $__require('./ReactDOMIDOperations');
  var LinkedValueUtils = $__require('./LinkedValueUtils');
  var ReactMount = $__require('./ReactMount');
  var ReactUpdates = $__require('./ReactUpdates');
  var assign = $__require('./Object.assign');
  var invariant = $__require('fbjs/lib/invariant');
  var instancesByReactID = {};
  function forceUpdateIfMounted() {
    if (this._rootNodeID) {
      ReactDOMInput.updateWrapper(this);
    }
  }
  var ReactDOMInput = {
    getNativeProps: function(inst, props, context) {
      var value = LinkedValueUtils.getValue(props);
      var checked = LinkedValueUtils.getChecked(props);
      var nativeProps = assign({}, props, {
        defaultChecked: undefined,
        defaultValue: undefined,
        value: value != null ? value : inst._wrapperState.initialValue,
        checked: checked != null ? checked : inst._wrapperState.initialChecked,
        onChange: inst._wrapperState.onChange
      });
      return nativeProps;
    },
    mountWrapper: function(inst, props) {
      if ("production" !== 'production') {
        LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);
      }
      var defaultValue = props.defaultValue;
      inst._wrapperState = {
        initialChecked: props.defaultChecked || false,
        initialValue: defaultValue != null ? defaultValue : null,
        onChange: _handleChange.bind(inst)
      };
    },
    mountReadyWrapper: function(inst) {
      instancesByReactID[inst._rootNodeID] = inst;
    },
    unmountWrapper: function(inst) {
      delete instancesByReactID[inst._rootNodeID];
    },
    updateWrapper: function(inst) {
      var props = inst._currentElement.props;
      var checked = props.checked;
      if (checked != null) {
        ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'checked', checked || false);
      }
      var value = LinkedValueUtils.getValue(props);
      if (value != null) {
        ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'value', '' + value);
      }
    }
  };
  function _handleChange(event) {
    var props = this._currentElement.props;
    var returnValue = LinkedValueUtils.executeOnChange(props, event);
    ReactUpdates.asap(forceUpdateIfMounted, this);
    var name = props.name;
    if (props.type === 'radio' && name != null) {
      var rootNode = ReactMount.getNode(this._rootNodeID);
      var queryRoot = rootNode;
      while (queryRoot.parentNode) {
        queryRoot = queryRoot.parentNode;
      }
      var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');
      for (var i = 0; i < group.length; i++) {
        var otherNode = group[i];
        if (otherNode === rootNode || otherNode.form !== rootNode.form) {
          continue;
        }
        var otherID = ReactMount.getID(otherNode);
        !otherID ? "production" !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the ' + 'same `name` is not supported.') : invariant(false) : undefined;
        var otherInstance = instancesByReactID[otherID];
        !otherInstance ? "production" !== 'production' ? invariant(false, 'ReactDOMInput: Unknown radio button ID %s.', otherID) : invariant(false) : undefined;
        ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
      }
    }
    return returnValue;
  }
  module.exports = ReactDOMInput;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactChildren.js", ["./PooledClass", "./ReactElement", "fbjs/lib/emptyFunction", "./traverseAllChildren", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var PooledClass = $__require('./PooledClass');
  var ReactElement = $__require('./ReactElement');
  var emptyFunction = $__require('fbjs/lib/emptyFunction');
  var traverseAllChildren = $__require('./traverseAllChildren');
  var twoArgumentPooler = PooledClass.twoArgumentPooler;
  var fourArgumentPooler = PooledClass.fourArgumentPooler;
  var userProvidedKeyEscapeRegex = /\/(?!\/)/g;
  function escapeUserProvidedKey(text) {
    return ('' + text).replace(userProvidedKeyEscapeRegex, '//');
  }
  function ForEachBookKeeping(forEachFunction, forEachContext) {
    this.func = forEachFunction;
    this.context = forEachContext;
    this.count = 0;
  }
  ForEachBookKeeping.prototype.destructor = function() {
    this.func = null;
    this.context = null;
    this.count = 0;
  };
  PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);
  function forEachSingleChild(bookKeeping, child, name) {
    var func = bookKeeping.func;
    var context = bookKeeping.context;
    func.call(context, child, bookKeeping.count++);
  }
  function forEachChildren(children, forEachFunc, forEachContext) {
    if (children == null) {
      return children;
    }
    var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
    traverseAllChildren(children, forEachSingleChild, traverseContext);
    ForEachBookKeeping.release(traverseContext);
  }
  function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
    this.result = mapResult;
    this.keyPrefix = keyPrefix;
    this.func = mapFunction;
    this.context = mapContext;
    this.count = 0;
  }
  MapBookKeeping.prototype.destructor = function() {
    this.result = null;
    this.keyPrefix = null;
    this.func = null;
    this.context = null;
    this.count = 0;
  };
  PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);
  function mapSingleChildIntoContext(bookKeeping, child, childKey) {
    var result = bookKeeping.result;
    var keyPrefix = bookKeeping.keyPrefix;
    var func = bookKeeping.func;
    var context = bookKeeping.context;
    var mappedChild = func.call(context, child, bookKeeping.count++);
    if (Array.isArray(mappedChild)) {
      mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
    } else if (mappedChild != null) {
      if (ReactElement.isValidElement(mappedChild)) {
        mappedChild = ReactElement.cloneAndReplaceKey(mappedChild, keyPrefix + (mappedChild !== child ? escapeUserProvidedKey(mappedChild.key || '') + '/' : '') + childKey);
      }
      result.push(mappedChild);
    }
  }
  function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
    var escapedPrefix = '';
    if (prefix != null) {
      escapedPrefix = escapeUserProvidedKey(prefix) + '/';
    }
    var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
    traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
    MapBookKeeping.release(traverseContext);
  }
  function mapChildren(children, func, context) {
    if (children == null) {
      return children;
    }
    var result = [];
    mapIntoWithKeyPrefixInternal(children, result, null, func, context);
    return result;
  }
  function forEachSingleChildDummy(traverseContext, child, name) {
    return null;
  }
  function countChildren(children, context) {
    return traverseAllChildren(children, forEachSingleChildDummy, null);
  }
  function toArray(children) {
    var result = [];
    mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
    return result;
  }
  var ReactChildren = {
    forEach: forEachChildren,
    map: mapChildren,
    mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
    count: countChildren,
    toArray: toArray
  };
  module.exports = ReactChildren;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactDOMOption.js", ["./ReactChildren", "./ReactDOMSelect", "./Object.assign", "fbjs/lib/warning", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ReactChildren = $__require('./ReactChildren');
  var ReactDOMSelect = $__require('./ReactDOMSelect');
  var assign = $__require('./Object.assign');
  var warning = $__require('fbjs/lib/warning');
  var valueContextKey = ReactDOMSelect.valueContextKey;
  var ReactDOMOption = {
    mountWrapper: function(inst, props, context) {
      if ("production" !== 'production') {
        "production" !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : undefined;
      }
      var selectValue = context[valueContextKey];
      var selected = null;
      if (selectValue != null) {
        selected = false;
        if (Array.isArray(selectValue)) {
          for (var i = 0; i < selectValue.length; i++) {
            if ('' + selectValue[i] === '' + props.value) {
              selected = true;
              break;
            }
          }
        } else {
          selected = '' + selectValue === '' + props.value;
        }
      }
      inst._wrapperState = {selected: selected};
    },
    getNativeProps: function(inst, props, context) {
      var nativeProps = assign({
        selected: undefined,
        children: undefined
      }, props);
      if (inst._wrapperState.selected != null) {
        nativeProps.selected = inst._wrapperState.selected;
      }
      var content = '';
      ReactChildren.forEach(props.children, function(child) {
        if (child == null) {
          return;
        }
        if (typeof child === 'string' || typeof child === 'number') {
          content += child;
        } else {
          "production" !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : undefined;
        }
      });
      if (content) {
        nativeProps.children = content;
      }
      return nativeProps;
    }
  };
  module.exports = ReactDOMOption;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactDOMSelect.js", ["./LinkedValueUtils", "./ReactMount", "./ReactUpdates", "./Object.assign", "fbjs/lib/warning", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var LinkedValueUtils = $__require('./LinkedValueUtils');
  var ReactMount = $__require('./ReactMount');
  var ReactUpdates = $__require('./ReactUpdates');
  var assign = $__require('./Object.assign');
  var warning = $__require('fbjs/lib/warning');
  var valueContextKey = '__ReactDOMSelect_value$' + Math.random().toString(36).slice(2);
  function updateOptionsIfPendingUpdateAndMounted() {
    if (this._rootNodeID && this._wrapperState.pendingUpdate) {
      this._wrapperState.pendingUpdate = false;
      var props = this._currentElement.props;
      var value = LinkedValueUtils.getValue(props);
      if (value != null) {
        updateOptions(this, Boolean(props.multiple), value);
      }
    }
  }
  function getDeclarationErrorAddendum(owner) {
    if (owner) {
      var name = owner.getName();
      if (name) {
        return ' Check the render method of `' + name + '`.';
      }
    }
    return '';
  }
  var valuePropNames = ['value', 'defaultValue'];
  function checkSelectPropTypes(inst, props) {
    var owner = inst._currentElement._owner;
    LinkedValueUtils.checkPropTypes('select', props, owner);
    for (var i = 0; i < valuePropNames.length; i++) {
      var propName = valuePropNames[i];
      if (props[propName] == null) {
        continue;
      }
      if (props.multiple) {
        "production" !== 'production' ? warning(Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : undefined;
      } else {
        "production" !== 'production' ? warning(!Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : undefined;
      }
    }
  }
  function updateOptions(inst, multiple, propValue) {
    var selectedValue,
        i;
    var options = ReactMount.getNode(inst._rootNodeID).options;
    if (multiple) {
      selectedValue = {};
      for (i = 0; i < propValue.length; i++) {
        selectedValue['' + propValue[i]] = true;
      }
      for (i = 0; i < options.length; i++) {
        var selected = selectedValue.hasOwnProperty(options[i].value);
        if (options[i].selected !== selected) {
          options[i].selected = selected;
        }
      }
    } else {
      selectedValue = '' + propValue;
      for (i = 0; i < options.length; i++) {
        if (options[i].value === selectedValue) {
          options[i].selected = true;
          return;
        }
      }
      if (options.length) {
        options[0].selected = true;
      }
    }
  }
  var ReactDOMSelect = {
    valueContextKey: valueContextKey,
    getNativeProps: function(inst, props, context) {
      return assign({}, props, {
        onChange: inst._wrapperState.onChange,
        value: undefined
      });
    },
    mountWrapper: function(inst, props) {
      if ("production" !== 'production') {
        checkSelectPropTypes(inst, props);
      }
      var value = LinkedValueUtils.getValue(props);
      inst._wrapperState = {
        pendingUpdate: false,
        initialValue: value != null ? value : props.defaultValue,
        onChange: _handleChange.bind(inst),
        wasMultiple: Boolean(props.multiple)
      };
    },
    processChildContext: function(inst, props, context) {
      var childContext = assign({}, context);
      childContext[valueContextKey] = inst._wrapperState.initialValue;
      return childContext;
    },
    postUpdateWrapper: function(inst) {
      var props = inst._currentElement.props;
      inst._wrapperState.initialValue = undefined;
      var wasMultiple = inst._wrapperState.wasMultiple;
      inst._wrapperState.wasMultiple = Boolean(props.multiple);
      var value = LinkedValueUtils.getValue(props);
      if (value != null) {
        inst._wrapperState.pendingUpdate = false;
        updateOptions(inst, Boolean(props.multiple), value);
      } else if (wasMultiple !== Boolean(props.multiple)) {
        if (props.defaultValue != null) {
          updateOptions(inst, Boolean(props.multiple), props.defaultValue);
        } else {
          updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
        }
      }
    }
  };
  function _handleChange(event) {
    var props = this._currentElement.props;
    var returnValue = LinkedValueUtils.executeOnChange(props, event);
    this._wrapperState.pendingUpdate = true;
    ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
    return returnValue;
  }
  module.exports = ReactDOMSelect;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactPropTypes.js", ["./ReactElement", "./ReactPropTypeLocationNames", "fbjs/lib/emptyFunction", "./getIteratorFn", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ReactElement = $__require('./ReactElement');
  var ReactPropTypeLocationNames = $__require('./ReactPropTypeLocationNames');
  var emptyFunction = $__require('fbjs/lib/emptyFunction');
  var getIteratorFn = $__require('./getIteratorFn');
  var ANONYMOUS = '<<anonymous>>';
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker
  };
  function createChainableTypeChecker(validate) {
    function checkType(isRequired, props, propName, componentName, location, propFullName) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;
      if (props[propName] == null) {
        var locationName = ReactPropTypeLocationNames[location];
        if (isRequired) {
          return new Error('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }
    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);
    return chainedCheckType;
  }
  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        var locationName = ReactPropTypeLocationNames[location];
        var preciseType = getPreciseType(propValue);
        return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }
  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunction.thatReturns(null));
  }
  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var locationName = ReactPropTypeLocationNames[location];
        var propType = getPropType(propValue);
        return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']');
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }
  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!ReactElement.isValidElement(props[propName])) {
        var locationName = ReactPropTypeLocationNames[location];
        return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }
  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var locationName = ReactPropTypeLocationNames[location];
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }
  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      return createChainableTypeChecker(function() {
        return new Error('Invalid argument supplied to oneOf, expected an instance of array.');
      });
    }
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (propValue === expectedValues[i]) {
          return null;
        }
      }
      var locationName = ReactPropTypeLocationNames[location];
      var valuesString = JSON.stringify(expectedValues);
      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }
  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        var locationName = ReactPropTypeLocationNames[location];
        return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (propValue.hasOwnProperty(key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }
  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      return createChainableTypeChecker(function() {
        return new Error('Invalid argument supplied to oneOfType, expected an instance of array.');
      });
    }
    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName) == null) {
          return null;
        }
      }
      var locationName = ReactPropTypeLocationNames[location];
      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }
  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        var locationName = ReactPropTypeLocationNames[location];
        return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }
  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        var locationName = ReactPropTypeLocationNames[location];
        return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }
  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || ReactElement.isValidElement(propValue)) {
          return true;
        }
        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }
        return true;
      default:
        return false;
    }
  }
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      return 'object';
    }
    return propType;
  }
  function getPreciseType(propValue) {
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return '<<anonymous>>';
    }
    return propValue.constructor.name;
  }
  module.exports = ReactPropTypes;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/LinkedValueUtils.js", ["./ReactPropTypes", "./ReactPropTypeLocations", "fbjs/lib/invariant", "fbjs/lib/warning", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ReactPropTypes = $__require('./ReactPropTypes');
  var ReactPropTypeLocations = $__require('./ReactPropTypeLocations');
  var invariant = $__require('fbjs/lib/invariant');
  var warning = $__require('fbjs/lib/warning');
  var hasReadOnlyValue = {
    'button': true,
    'checkbox': true,
    'image': true,
    'hidden': true,
    'radio': true,
    'reset': true,
    'submit': true
  };
  function _assertSingleLink(inputProps) {
    !(inputProps.checkedLink == null || inputProps.valueLink == null) ? "production" !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use ' + 'checkedLink, you probably don\'t want to use valueLink and vice versa.') : invariant(false) : undefined;
  }
  function _assertValueLink(inputProps) {
    _assertSingleLink(inputProps);
    !(inputProps.value == null && inputProps.onChange == null) ? "production" !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want ' + 'to use value or onChange, you probably don\'t want to use valueLink.') : invariant(false) : undefined;
  }
  function _assertCheckedLink(inputProps) {
    _assertSingleLink(inputProps);
    !(inputProps.checked == null && inputProps.onChange == null) ? "production" !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. ' + 'If you want to use checked or onChange, you probably don\'t want to ' + 'use checkedLink') : invariant(false) : undefined;
  }
  var propTypes = {
    value: function(props, propName, componentName) {
      if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
        return null;
      }
      return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
    },
    checked: function(props, propName, componentName) {
      if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
        return null;
      }
      return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
    },
    onChange: ReactPropTypes.func
  };
  var loggedTypeFailures = {};
  function getDeclarationErrorAddendum(owner) {
    if (owner) {
      var name = owner.getName();
      if (name) {
        return ' Check the render method of `' + name + '`.';
      }
    }
    return '';
  }
  var LinkedValueUtils = {
    checkPropTypes: function(tagName, props, owner) {
      for (var propName in propTypes) {
        if (propTypes.hasOwnProperty(propName)) {
          var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop);
        }
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          loggedTypeFailures[error.message] = true;
          var addendum = getDeclarationErrorAddendum(owner);
          "production" !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : undefined;
        }
      }
    },
    getValue: function(inputProps) {
      if (inputProps.valueLink) {
        _assertValueLink(inputProps);
        return inputProps.valueLink.value;
      }
      return inputProps.value;
    },
    getChecked: function(inputProps) {
      if (inputProps.checkedLink) {
        _assertCheckedLink(inputProps);
        return inputProps.checkedLink.value;
      }
      return inputProps.checked;
    },
    executeOnChange: function(inputProps, event) {
      if (inputProps.valueLink) {
        _assertValueLink(inputProps);
        return inputProps.valueLink.requestChange(event.target.value);
      } else if (inputProps.checkedLink) {
        _assertCheckedLink(inputProps);
        return inputProps.checkedLink.requestChange(event.target.checked);
      } else if (inputProps.onChange) {
        return inputProps.onChange.call(undefined, event);
      }
    }
  };
  module.exports = LinkedValueUtils;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactDOMTextarea.js", ["./LinkedValueUtils", "./ReactDOMIDOperations", "./ReactUpdates", "./Object.assign", "fbjs/lib/invariant", "fbjs/lib/warning", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var LinkedValueUtils = $__require('./LinkedValueUtils');
  var ReactDOMIDOperations = $__require('./ReactDOMIDOperations');
  var ReactUpdates = $__require('./ReactUpdates');
  var assign = $__require('./Object.assign');
  var invariant = $__require('fbjs/lib/invariant');
  var warning = $__require('fbjs/lib/warning');
  function forceUpdateIfMounted() {
    if (this._rootNodeID) {
      ReactDOMTextarea.updateWrapper(this);
    }
  }
  var ReactDOMTextarea = {
    getNativeProps: function(inst, props, context) {
      !(props.dangerouslySetInnerHTML == null) ? "production" !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : invariant(false) : undefined;
      var nativeProps = assign({}, props, {
        defaultValue: undefined,
        value: undefined,
        children: inst._wrapperState.initialValue,
        onChange: inst._wrapperState.onChange
      });
      return nativeProps;
    },
    mountWrapper: function(inst, props) {
      if ("production" !== 'production') {
        LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
      }
      var defaultValue = props.defaultValue;
      var children = props.children;
      if (children != null) {
        if ("production" !== 'production') {
          "production" !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : undefined;
        }
        !(defaultValue == null) ? "production" !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : invariant(false) : undefined;
        if (Array.isArray(children)) {
          !(children.length <= 1) ? "production" !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : invariant(false) : undefined;
          children = children[0];
        }
        defaultValue = '' + children;
      }
      if (defaultValue == null) {
        defaultValue = '';
      }
      var value = LinkedValueUtils.getValue(props);
      inst._wrapperState = {
        initialValue: '' + (value != null ? value : defaultValue),
        onChange: _handleChange.bind(inst)
      };
    },
    updateWrapper: function(inst) {
      var props = inst._currentElement.props;
      var value = LinkedValueUtils.getValue(props);
      if (value != null) {
        ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'value', '' + value);
      }
    }
  };
  function _handleChange(event) {
    var props = this._currentElement.props;
    var returnValue = LinkedValueUtils.executeOnChange(props, event);
    ReactUpdates.asap(forceUpdateIfMounted, this);
    return returnValue;
  }
  module.exports = ReactDOMTextarea;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactChildReconciler.js", ["./ReactReconciler", "./instantiateReactComponent", "./shouldUpdateReactComponent", "./traverseAllChildren", "fbjs/lib/warning", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ReactReconciler = $__require('./ReactReconciler');
  var instantiateReactComponent = $__require('./instantiateReactComponent');
  var shouldUpdateReactComponent = $__require('./shouldUpdateReactComponent');
  var traverseAllChildren = $__require('./traverseAllChildren');
  var warning = $__require('fbjs/lib/warning');
  function instantiateChild(childInstances, child, name) {
    var keyUnique = childInstances[name] === undefined;
    if ("production" !== 'production') {
      "production" !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : undefined;
    }
    if (child != null && keyUnique) {
      childInstances[name] = instantiateReactComponent(child, null);
    }
  }
  var ReactChildReconciler = {
    instantiateChildren: function(nestedChildNodes, transaction, context) {
      if (nestedChildNodes == null) {
        return null;
      }
      var childInstances = {};
      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
      return childInstances;
    },
    updateChildren: function(prevChildren, nextChildren, transaction, context) {
      if (!nextChildren && !prevChildren) {
        return null;
      }
      var name;
      for (name in nextChildren) {
        if (!nextChildren.hasOwnProperty(name)) {
          continue;
        }
        var prevChild = prevChildren && prevChildren[name];
        var prevElement = prevChild && prevChild._currentElement;
        var nextElement = nextChildren[name];
        if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
          ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
          nextChildren[name] = prevChild;
        } else {
          if (prevChild) {
            ReactReconciler.unmountComponent(prevChild, name);
          }
          var nextChildInstance = instantiateReactComponent(nextElement, null);
          nextChildren[name] = nextChildInstance;
        }
      }
      for (name in prevChildren) {
        if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
          ReactReconciler.unmountComponent(prevChildren[name]);
        }
      }
      return nextChildren;
    },
    unmountChildren: function(renderedChildren) {
      for (var name in renderedChildren) {
        if (renderedChildren.hasOwnProperty(name)) {
          var renderedChild = renderedChildren[name];
          ReactReconciler.unmountComponent(renderedChild);
        }
      }
    }
  };
  module.exports = ReactChildReconciler;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/getIteratorFn.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator';
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }
  module.exports = getIteratorFn;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/traverseAllChildren.js", ["./ReactCurrentOwner", "./ReactElement", "./ReactInstanceHandles", "./getIteratorFn", "fbjs/lib/invariant", "fbjs/lib/warning", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ReactCurrentOwner = $__require('./ReactCurrentOwner');
  var ReactElement = $__require('./ReactElement');
  var ReactInstanceHandles = $__require('./ReactInstanceHandles');
  var getIteratorFn = $__require('./getIteratorFn');
  var invariant = $__require('fbjs/lib/invariant');
  var warning = $__require('fbjs/lib/warning');
  var SEPARATOR = ReactInstanceHandles.SEPARATOR;
  var SUBSEPARATOR = ':';
  var userProvidedKeyEscaperLookup = {
    '=': '=0',
    '.': '=1',
    ':': '=2'
  };
  var userProvidedKeyEscapeRegex = /[=.:]/g;
  var didWarnAboutMaps = false;
  function userProvidedKeyEscaper(match) {
    return userProvidedKeyEscaperLookup[match];
  }
  function getComponentKey(component, index) {
    if (component && component.key != null) {
      return wrapUserProvidedKey(component.key);
    }
    return index.toString(36);
  }
  function escapeUserProvidedKey(text) {
    return ('' + text).replace(userProvidedKeyEscapeRegex, userProvidedKeyEscaper);
  }
  function wrapUserProvidedKey(key) {
    return '$' + escapeUserProvidedKey(key);
  }
  function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
    var type = typeof children;
    if (type === 'undefined' || type === 'boolean') {
      children = null;
    }
    if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {
      callback(traverseContext, children, nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
      return 1;
    }
    var child;
    var nextName;
    var subtreeCount = 0;
    var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
    if (Array.isArray(children)) {
      for (var i = 0; i < children.length; i++) {
        child = children[i];
        nextName = nextNamePrefix + getComponentKey(child, i);
        subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
      }
    } else {
      var iteratorFn = getIteratorFn(children);
      if (iteratorFn) {
        var iterator = iteratorFn.call(children);
        var step;
        if (iteratorFn !== children.entries) {
          var ii = 0;
          while (!(step = iterator.next()).done) {
            child = step.value;
            nextName = nextNamePrefix + getComponentKey(child, ii++);
            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
          }
        } else {
          if ("production" !== 'production') {
            "production" !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.') : undefined;
            didWarnAboutMaps = true;
          }
          while (!(step = iterator.next()).done) {
            var entry = step.value;
            if (entry) {
              child = entry[1];
              nextName = nextNamePrefix + wrapUserProvidedKey(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
              subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
            }
          }
        }
      } else if (type === 'object') {
        var addendum = '';
        if ("production" !== 'production') {
          addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
          if (children._isReactElement) {
            addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
          }
          if (ReactCurrentOwner.current) {
            var name = ReactCurrentOwner.current.getName();
            if (name) {
              addendum += ' Check the render method of `' + name + '`.';
            }
          }
        }
        var childrenString = String(children);
        !false ? "production" !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : invariant(false) : undefined;
      }
    }
    return subtreeCount;
  }
  function traverseAllChildren(children, callback, traverseContext) {
    if (children == null) {
      return 0;
    }
    return traverseAllChildrenImpl(children, '', callback, traverseContext);
  }
  module.exports = traverseAllChildren;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/flattenChildren.js", ["./traverseAllChildren", "fbjs/lib/warning", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var traverseAllChildren = $__require('./traverseAllChildren');
  var warning = $__require('fbjs/lib/warning');
  function flattenSingleChildIntoContext(traverseContext, child, name) {
    var result = traverseContext;
    var keyUnique = result[name] === undefined;
    if ("production" !== 'production') {
      "production" !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : undefined;
    }
    if (keyUnique && child != null) {
      result[name] = child;
    }
  }
  function flattenChildren(children) {
    if (children == null) {
      return children;
    }
    var result = {};
    traverseAllChildren(children, flattenSingleChildIntoContext, result);
    return result;
  }
  module.exports = flattenChildren;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactMultiChild.js", ["./ReactComponentEnvironment", "./ReactMultiChildUpdateTypes", "./ReactCurrentOwner", "./ReactReconciler", "./ReactChildReconciler", "./flattenChildren", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ReactComponentEnvironment = $__require('./ReactComponentEnvironment');
  var ReactMultiChildUpdateTypes = $__require('./ReactMultiChildUpdateTypes');
  var ReactCurrentOwner = $__require('./ReactCurrentOwner');
  var ReactReconciler = $__require('./ReactReconciler');
  var ReactChildReconciler = $__require('./ReactChildReconciler');
  var flattenChildren = $__require('./flattenChildren');
  var updateDepth = 0;
  var updateQueue = [];
  var markupQueue = [];
  function enqueueInsertMarkup(parentID, markup, toIndex) {
    updateQueue.push({
      parentID: parentID,
      parentNode: null,
      type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
      markupIndex: markupQueue.push(markup) - 1,
      content: null,
      fromIndex: null,
      toIndex: toIndex
    });
  }
  function enqueueMove(parentID, fromIndex, toIndex) {
    updateQueue.push({
      parentID: parentID,
      parentNode: null,
      type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
      markupIndex: null,
      content: null,
      fromIndex: fromIndex,
      toIndex: toIndex
    });
  }
  function enqueueRemove(parentID, fromIndex) {
    updateQueue.push({
      parentID: parentID,
      parentNode: null,
      type: ReactMultiChildUpdateTypes.REMOVE_NODE,
      markupIndex: null,
      content: null,
      fromIndex: fromIndex,
      toIndex: null
    });
  }
  function enqueueSetMarkup(parentID, markup) {
    updateQueue.push({
      parentID: parentID,
      parentNode: null,
      type: ReactMultiChildUpdateTypes.SET_MARKUP,
      markupIndex: null,
      content: markup,
      fromIndex: null,
      toIndex: null
    });
  }
  function enqueueTextContent(parentID, textContent) {
    updateQueue.push({
      parentID: parentID,
      parentNode: null,
      type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
      markupIndex: null,
      content: textContent,
      fromIndex: null,
      toIndex: null
    });
  }
  function processQueue() {
    if (updateQueue.length) {
      ReactComponentEnvironment.processChildrenUpdates(updateQueue, markupQueue);
      clearQueue();
    }
  }
  function clearQueue() {
    updateQueue.length = 0;
    markupQueue.length = 0;
  }
  var ReactMultiChild = {Mixin: {
      _reconcilerInstantiateChildren: function(nestedChildren, transaction, context) {
        if ("production" !== 'production') {
          if (this._currentElement) {
            try {
              ReactCurrentOwner.current = this._currentElement._owner;
              return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
            } finally {
              ReactCurrentOwner.current = null;
            }
          }
        }
        return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
      },
      _reconcilerUpdateChildren: function(prevChildren, nextNestedChildrenElements, transaction, context) {
        var nextChildren;
        if ("production" !== 'production') {
          if (this._currentElement) {
            try {
              ReactCurrentOwner.current = this._currentElement._owner;
              nextChildren = flattenChildren(nextNestedChildrenElements);
            } finally {
              ReactCurrentOwner.current = null;
            }
            return ReactChildReconciler.updateChildren(prevChildren, nextChildren, transaction, context);
          }
        }
        nextChildren = flattenChildren(nextNestedChildrenElements);
        return ReactChildReconciler.updateChildren(prevChildren, nextChildren, transaction, context);
      },
      mountChildren: function(nestedChildren, transaction, context) {
        var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
        this._renderedChildren = children;
        var mountImages = [];
        var index = 0;
        for (var name in children) {
          if (children.hasOwnProperty(name)) {
            var child = children[name];
            var rootID = this._rootNodeID + name;
            var mountImage = ReactReconciler.mountComponent(child, rootID, transaction, context);
            child._mountIndex = index++;
            mountImages.push(mountImage);
          }
        }
        return mountImages;
      },
      updateTextContent: function(nextContent) {
        updateDepth++;
        var errorThrown = true;
        try {
          var prevChildren = this._renderedChildren;
          ReactChildReconciler.unmountChildren(prevChildren);
          for (var name in prevChildren) {
            if (prevChildren.hasOwnProperty(name)) {
              this._unmountChild(prevChildren[name]);
            }
          }
          this.setTextContent(nextContent);
          errorThrown = false;
        } finally {
          updateDepth--;
          if (!updateDepth) {
            if (errorThrown) {
              clearQueue();
            } else {
              processQueue();
            }
          }
        }
      },
      updateMarkup: function(nextMarkup) {
        updateDepth++;
        var errorThrown = true;
        try {
          var prevChildren = this._renderedChildren;
          ReactChildReconciler.unmountChildren(prevChildren);
          for (var name in prevChildren) {
            if (prevChildren.hasOwnProperty(name)) {
              this._unmountChildByName(prevChildren[name], name);
            }
          }
          this.setMarkup(nextMarkup);
          errorThrown = false;
        } finally {
          updateDepth--;
          if (!updateDepth) {
            if (errorThrown) {
              clearQueue();
            } else {
              processQueue();
            }
          }
        }
      },
      updateChildren: function(nextNestedChildrenElements, transaction, context) {
        updateDepth++;
        var errorThrown = true;
        try {
          this._updateChildren(nextNestedChildrenElements, transaction, context);
          errorThrown = false;
        } finally {
          updateDepth--;
          if (!updateDepth) {
            if (errorThrown) {
              clearQueue();
            } else {
              processQueue();
            }
          }
        }
      },
      _updateChildren: function(nextNestedChildrenElements, transaction, context) {
        var prevChildren = this._renderedChildren;
        var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, transaction, context);
        this._renderedChildren = nextChildren;
        if (!nextChildren && !prevChildren) {
          return;
        }
        var name;
        var lastIndex = 0;
        var nextIndex = 0;
        for (name in nextChildren) {
          if (!nextChildren.hasOwnProperty(name)) {
            continue;
          }
          var prevChild = prevChildren && prevChildren[name];
          var nextChild = nextChildren[name];
          if (prevChild === nextChild) {
            this.moveChild(prevChild, nextIndex, lastIndex);
            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
            prevChild._mountIndex = nextIndex;
          } else {
            if (prevChild) {
              lastIndex = Math.max(prevChild._mountIndex, lastIndex);
              this._unmountChild(prevChild);
            }
            this._mountChildByNameAtIndex(nextChild, name, nextIndex, transaction, context);
          }
          nextIndex++;
        }
        for (name in prevChildren) {
          if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
            this._unmountChild(prevChildren[name]);
          }
        }
      },
      unmountChildren: function() {
        var renderedChildren = this._renderedChildren;
        ReactChildReconciler.unmountChildren(renderedChildren);
        this._renderedChildren = null;
      },
      moveChild: function(child, toIndex, lastIndex) {
        if (child._mountIndex < lastIndex) {
          enqueueMove(this._rootNodeID, child._mountIndex, toIndex);
        }
      },
      createChild: function(child, mountImage) {
        enqueueInsertMarkup(this._rootNodeID, mountImage, child._mountIndex);
      },
      removeChild: function(child) {
        enqueueRemove(this._rootNodeID, child._mountIndex);
      },
      setTextContent: function(textContent) {
        enqueueTextContent(this._rootNodeID, textContent);
      },
      setMarkup: function(markup) {
        enqueueSetMarkup(this._rootNodeID, markup);
      },
      _mountChildByNameAtIndex: function(child, name, index, transaction, context) {
        var rootID = this._rootNodeID + name;
        var mountImage = ReactReconciler.mountComponent(child, rootID, transaction, context);
        child._mountIndex = index;
        this.createChild(child, mountImage);
      },
      _unmountChild: function(child) {
        this.removeChild(child);
        child._mountIndex = null;
      }
    }};
  module.exports = ReactMultiChild;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactDOMComponent.js", ["./AutoFocusUtils", "./CSSPropertyOperations", "./DOMProperty", "./DOMPropertyOperations", "./EventConstants", "./ReactBrowserEventEmitter", "./ReactComponentBrowserEnvironment", "./ReactDOMButton", "./ReactDOMInput", "./ReactDOMOption", "./ReactDOMSelect", "./ReactDOMTextarea", "./ReactMount", "./ReactMultiChild", "./ReactPerf", "./ReactUpdateQueue", "./Object.assign", "./canDefineProperty", "./escapeTextContentForBrowser", "fbjs/lib/invariant", "./isEventSupported", "fbjs/lib/keyOf", "./setInnerHTML", "./setTextContent", "fbjs/lib/shallowEqual", "./validateDOMNesting", "fbjs/lib/warning", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var AutoFocusUtils = $__require('./AutoFocusUtils');
  var CSSPropertyOperations = $__require('./CSSPropertyOperations');
  var DOMProperty = $__require('./DOMProperty');
  var DOMPropertyOperations = $__require('./DOMPropertyOperations');
  var EventConstants = $__require('./EventConstants');
  var ReactBrowserEventEmitter = $__require('./ReactBrowserEventEmitter');
  var ReactComponentBrowserEnvironment = $__require('./ReactComponentBrowserEnvironment');
  var ReactDOMButton = $__require('./ReactDOMButton');
  var ReactDOMInput = $__require('./ReactDOMInput');
  var ReactDOMOption = $__require('./ReactDOMOption');
  var ReactDOMSelect = $__require('./ReactDOMSelect');
  var ReactDOMTextarea = $__require('./ReactDOMTextarea');
  var ReactMount = $__require('./ReactMount');
  var ReactMultiChild = $__require('./ReactMultiChild');
  var ReactPerf = $__require('./ReactPerf');
  var ReactUpdateQueue = $__require('./ReactUpdateQueue');
  var assign = $__require('./Object.assign');
  var canDefineProperty = $__require('./canDefineProperty');
  var escapeTextContentForBrowser = $__require('./escapeTextContentForBrowser');
  var invariant = $__require('fbjs/lib/invariant');
  var isEventSupported = $__require('./isEventSupported');
  var keyOf = $__require('fbjs/lib/keyOf');
  var setInnerHTML = $__require('./setInnerHTML');
  var setTextContent = $__require('./setTextContent');
  var shallowEqual = $__require('fbjs/lib/shallowEqual');
  var validateDOMNesting = $__require('./validateDOMNesting');
  var warning = $__require('fbjs/lib/warning');
  var deleteListener = ReactBrowserEventEmitter.deleteListener;
  var listenTo = ReactBrowserEventEmitter.listenTo;
  var registrationNameModules = ReactBrowserEventEmitter.registrationNameModules;
  var CONTENT_TYPES = {
    'string': true,
    'number': true
  };
  var CHILDREN = keyOf({children: null});
  var STYLE = keyOf({style: null});
  var HTML = keyOf({__html: null});
  var ELEMENT_NODE_TYPE = 1;
  function getDeclarationErrorAddendum(internalInstance) {
    if (internalInstance) {
      var owner = internalInstance._currentElement._owner || null;
      if (owner) {
        var name = owner.getName();
        if (name) {
          return ' This DOM node was rendered by `' + name + '`.';
        }
      }
    }
    return '';
  }
  var legacyPropsDescriptor;
  if ("production" !== 'production') {
    legacyPropsDescriptor = {props: {
        enumerable: false,
        get: function() {
          var component = this._reactInternalComponent;
          "production" !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .props of a DOM node; instead, ' + 'recreate the props as `render` did originally or read the DOM ' + 'properties/attributes directly from this node (e.g., ' + 'this.refs.box.className).%s', getDeclarationErrorAddendum(component)) : undefined;
          return component._currentElement.props;
        }
      }};
  }
  function legacyGetDOMNode() {
    if ("production" !== 'production') {
      var component = this._reactInternalComponent;
      "production" !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .getDOMNode() of a DOM node; ' + 'instead, use the node directly.%s', getDeclarationErrorAddendum(component)) : undefined;
    }
    return this;
  }
  function legacyIsMounted() {
    var component = this._reactInternalComponent;
    if ("production" !== 'production') {
      "production" !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .isMounted() of a DOM node.%s', getDeclarationErrorAddendum(component)) : undefined;
    }
    return !!component;
  }
  function legacySetStateEtc() {
    if ("production" !== 'production') {
      var component = this._reactInternalComponent;
      "production" !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .setState(), .replaceState(), or ' + '.forceUpdate() of a DOM node. This is a no-op.%s', getDeclarationErrorAddendum(component)) : undefined;
    }
  }
  function legacySetProps(partialProps, callback) {
    var component = this._reactInternalComponent;
    if ("production" !== 'production') {
      "production" !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .setProps() of a DOM node. ' + 'Instead, call ReactDOM.render again at the top level.%s', getDeclarationErrorAddendum(component)) : undefined;
    }
    if (!component) {
      return;
    }
    ReactUpdateQueue.enqueueSetPropsInternal(component, partialProps);
    if (callback) {
      ReactUpdateQueue.enqueueCallbackInternal(component, callback);
    }
  }
  function legacyReplaceProps(partialProps, callback) {
    var component = this._reactInternalComponent;
    if ("production" !== 'production') {
      "production" !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .replaceProps() of a DOM node. ' + 'Instead, call ReactDOM.render again at the top level.%s', getDeclarationErrorAddendum(component)) : undefined;
    }
    if (!component) {
      return;
    }
    ReactUpdateQueue.enqueueReplacePropsInternal(component, partialProps);
    if (callback) {
      ReactUpdateQueue.enqueueCallbackInternal(component, callback);
    }
  }
  function friendlyStringify(obj) {
    if (typeof obj === 'object') {
      if (Array.isArray(obj)) {
        return '[' + obj.map(friendlyStringify).join(', ') + ']';
      } else {
        var pairs = [];
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) {
            var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
            pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
          }
        }
        return '{' + pairs.join(', ') + '}';
      }
    } else if (typeof obj === 'string') {
      return JSON.stringify(obj);
    } else if (typeof obj === 'function') {
      return '[function object]';
    }
    return String(obj);
  }
  var styleMutationWarning = {};
  function checkAndWarnForMutatedStyle(style1, style2, component) {
    if (style1 == null || style2 == null) {
      return;
    }
    if (shallowEqual(style1, style2)) {
      return;
    }
    var componentName = component._tag;
    var owner = component._currentElement._owner;
    var ownerName;
    if (owner) {
      ownerName = owner.getName();
    }
    var hash = ownerName + '|' + componentName;
    if (styleMutationWarning.hasOwnProperty(hash)) {
      return;
    }
    styleMutationWarning[hash] = true;
    "production" !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : undefined;
  }
  function assertValidProps(component, props) {
    if (!props) {
      return;
    }
    if ("production" !== 'production') {
      if (voidElementTags[component._tag]) {
        "production" !== 'production' ? warning(props.children == null && props.dangerouslySetInnerHTML == null, '%s is a void element tag and must not have `children` or ' + 'use `props.dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : undefined;
      }
    }
    if (props.dangerouslySetInnerHTML != null) {
      !(props.children == null) ? "production" !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : invariant(false) : undefined;
      !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? "production" !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' + 'Please visit https://fb.me/react-invariant-dangerously-set-inner-html ' + 'for more information.') : invariant(false) : undefined;
    }
    if ("production" !== 'production') {
      "production" !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : undefined;
      "production" !== 'production' ? warning(!props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : undefined;
    }
    !(props.style == null || typeof props.style === 'object') ? "production" !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, ' + 'not a string. For example, style={{marginRight: spacing + \'em\'}} when ' + 'using JSX.%s', getDeclarationErrorAddendum(component)) : invariant(false) : undefined;
  }
  function enqueuePutListener(id, registrationName, listener, transaction) {
    if ("production" !== 'production') {
      "production" !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : undefined;
    }
    var container = ReactMount.findReactContainerForID(id);
    if (container) {
      var doc = container.nodeType === ELEMENT_NODE_TYPE ? container.ownerDocument : container;
      listenTo(registrationName, doc);
    }
    transaction.getReactMountReady().enqueue(putListener, {
      id: id,
      registrationName: registrationName,
      listener: listener
    });
  }
  function putListener() {
    var listenerToPut = this;
    ReactBrowserEventEmitter.putListener(listenerToPut.id, listenerToPut.registrationName, listenerToPut.listener);
  }
  var mediaEvents = {
    topAbort: 'abort',
    topCanPlay: 'canplay',
    topCanPlayThrough: 'canplaythrough',
    topDurationChange: 'durationchange',
    topEmptied: 'emptied',
    topEncrypted: 'encrypted',
    topEnded: 'ended',
    topError: 'error',
    topLoadedData: 'loadeddata',
    topLoadedMetadata: 'loadedmetadata',
    topLoadStart: 'loadstart',
    topPause: 'pause',
    topPlay: 'play',
    topPlaying: 'playing',
    topProgress: 'progress',
    topRateChange: 'ratechange',
    topSeeked: 'seeked',
    topSeeking: 'seeking',
    topStalled: 'stalled',
    topSuspend: 'suspend',
    topTimeUpdate: 'timeupdate',
    topVolumeChange: 'volumechange',
    topWaiting: 'waiting'
  };
  function trapBubbledEventsLocal() {
    var inst = this;
    !inst._rootNodeID ? "production" !== 'production' ? invariant(false, 'Must be mounted to trap events') : invariant(false) : undefined;
    var node = ReactMount.getNode(inst._rootNodeID);
    !node ? "production" !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : invariant(false) : undefined;
    switch (inst._tag) {
      case 'iframe':
        inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
        break;
      case 'video':
      case 'audio':
        inst._wrapperState.listeners = [];
        for (var event in mediaEvents) {
          if (mediaEvents.hasOwnProperty(event)) {
            inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes[event], mediaEvents[event], node));
          }
        }
        break;
      case 'img':
        inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
        break;
      case 'form':
        inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit', node)];
        break;
    }
  }
  function mountReadyInputWrapper() {
    ReactDOMInput.mountReadyWrapper(this);
  }
  function postUpdateSelectWrapper() {
    ReactDOMSelect.postUpdateWrapper(this);
  }
  var omittedCloseTags = {
    'area': true,
    'base': true,
    'br': true,
    'col': true,
    'embed': true,
    'hr': true,
    'img': true,
    'input': true,
    'keygen': true,
    'link': true,
    'meta': true,
    'param': true,
    'source': true,
    'track': true,
    'wbr': true
  };
  var newlineEatingTags = {
    'listing': true,
    'pre': true,
    'textarea': true
  };
  var voidElementTags = assign({'menuitem': true}, omittedCloseTags);
  var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/;
  var validatedTagCache = {};
  var hasOwnProperty = ({}).hasOwnProperty;
  function validateDangerousTag(tag) {
    if (!hasOwnProperty.call(validatedTagCache, tag)) {
      !VALID_TAG_REGEX.test(tag) ? "production" !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : invariant(false) : undefined;
      validatedTagCache[tag] = true;
    }
  }
  function processChildContextDev(context, inst) {
    context = assign({}, context);
    var info = context[validateDOMNesting.ancestorInfoContextKey];
    context[validateDOMNesting.ancestorInfoContextKey] = validateDOMNesting.updatedAncestorInfo(info, inst._tag, inst);
    return context;
  }
  function isCustomComponent(tagName, props) {
    return tagName.indexOf('-') >= 0 || props.is != null;
  }
  function ReactDOMComponent(tag) {
    validateDangerousTag(tag);
    this._tag = tag.toLowerCase();
    this._renderedChildren = null;
    this._previousStyle = null;
    this._previousStyleCopy = null;
    this._rootNodeID = null;
    this._wrapperState = null;
    this._topLevelWrapper = null;
    this._nodeWithLegacyProperties = null;
    if ("production" !== 'production') {
      this._unprocessedContextDev = null;
      this._processedContextDev = null;
    }
  }
  ReactDOMComponent.displayName = 'ReactDOMComponent';
  ReactDOMComponent.Mixin = {
    construct: function(element) {
      this._currentElement = element;
    },
    mountComponent: function(rootID, transaction, context) {
      this._rootNodeID = rootID;
      var props = this._currentElement.props;
      switch (this._tag) {
        case 'iframe':
        case 'img':
        case 'form':
        case 'video':
        case 'audio':
          this._wrapperState = {listeners: null};
          transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
          break;
        case 'button':
          props = ReactDOMButton.getNativeProps(this, props, context);
          break;
        case 'input':
          ReactDOMInput.mountWrapper(this, props, context);
          props = ReactDOMInput.getNativeProps(this, props, context);
          break;
        case 'option':
          ReactDOMOption.mountWrapper(this, props, context);
          props = ReactDOMOption.getNativeProps(this, props, context);
          break;
        case 'select':
          ReactDOMSelect.mountWrapper(this, props, context);
          props = ReactDOMSelect.getNativeProps(this, props, context);
          context = ReactDOMSelect.processChildContext(this, props, context);
          break;
        case 'textarea':
          ReactDOMTextarea.mountWrapper(this, props, context);
          props = ReactDOMTextarea.getNativeProps(this, props, context);
          break;
      }
      assertValidProps(this, props);
      if ("production" !== 'production') {
        if (context[validateDOMNesting.ancestorInfoContextKey]) {
          validateDOMNesting(this._tag, this, context[validateDOMNesting.ancestorInfoContextKey]);
        }
      }
      if ("production" !== 'production') {
        this._unprocessedContextDev = context;
        this._processedContextDev = processChildContextDev(context, this);
        context = this._processedContextDev;
      }
      var mountImage;
      if (transaction.useCreateElement) {
        var ownerDocument = context[ReactMount.ownerDocumentContextKey];
        var el = ownerDocument.createElement(this._currentElement.type);
        DOMPropertyOperations.setAttributeForID(el, this._rootNodeID);
        ReactMount.getID(el);
        this._updateDOMProperties({}, props, transaction, el);
        this._createInitialChildren(transaction, props, context, el);
        mountImage = el;
      } else {
        var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
        var tagContent = this._createContentMarkup(transaction, props, context);
        if (!tagContent && omittedCloseTags[this._tag]) {
          mountImage = tagOpen + '/>';
        } else {
          mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
        }
      }
      switch (this._tag) {
        case 'input':
          transaction.getReactMountReady().enqueue(mountReadyInputWrapper, this);
        case 'button':
        case 'select':
        case 'textarea':
          if (props.autoFocus) {
            transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
          }
          break;
      }
      return mountImage;
    },
    _createOpenTagMarkupAndPutListeners: function(transaction, props) {
      var ret = '<' + this._currentElement.type;
      for (var propKey in props) {
        if (!props.hasOwnProperty(propKey)) {
          continue;
        }
        var propValue = props[propKey];
        if (propValue == null) {
          continue;
        }
        if (registrationNameModules.hasOwnProperty(propKey)) {
          if (propValue) {
            enqueuePutListener(this._rootNodeID, propKey, propValue, transaction);
          }
        } else {
          if (propKey === STYLE) {
            if (propValue) {
              if ("production" !== 'production') {
                this._previousStyle = propValue;
              }
              propValue = this._previousStyleCopy = assign({}, props.style);
            }
            propValue = CSSPropertyOperations.createMarkupForStyles(propValue);
          }
          var markup = null;
          if (this._tag != null && isCustomComponent(this._tag, props)) {
            if (propKey !== CHILDREN) {
              markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
            }
          } else {
            markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
          }
          if (markup) {
            ret += ' ' + markup;
          }
        }
      }
      if (transaction.renderToStaticMarkup) {
        return ret;
      }
      var markupForID = DOMPropertyOperations.createMarkupForID(this._rootNodeID);
      return ret + ' ' + markupForID;
    },
    _createContentMarkup: function(transaction, props, context) {
      var ret = '';
      var innerHTML = props.dangerouslySetInnerHTML;
      if (innerHTML != null) {
        if (innerHTML.__html != null) {
          ret = innerHTML.__html;
        }
      } else {
        var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
        var childrenToUse = contentToUse != null ? null : props.children;
        if (contentToUse != null) {
          ret = escapeTextContentForBrowser(contentToUse);
        } else if (childrenToUse != null) {
          var mountImages = this.mountChildren(childrenToUse, transaction, context);
          ret = mountImages.join('');
        }
      }
      if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
        return '\n' + ret;
      } else {
        return ret;
      }
    },
    _createInitialChildren: function(transaction, props, context, el) {
      var innerHTML = props.dangerouslySetInnerHTML;
      if (innerHTML != null) {
        if (innerHTML.__html != null) {
          setInnerHTML(el, innerHTML.__html);
        }
      } else {
        var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
        var childrenToUse = contentToUse != null ? null : props.children;
        if (contentToUse != null) {
          setTextContent(el, contentToUse);
        } else if (childrenToUse != null) {
          var mountImages = this.mountChildren(childrenToUse, transaction, context);
          for (var i = 0; i < mountImages.length; i++) {
            el.appendChild(mountImages[i]);
          }
        }
      }
    },
    receiveComponent: function(nextElement, transaction, context) {
      var prevElement = this._currentElement;
      this._currentElement = nextElement;
      this.updateComponent(transaction, prevElement, nextElement, context);
    },
    updateComponent: function(transaction, prevElement, nextElement, context) {
      var lastProps = prevElement.props;
      var nextProps = this._currentElement.props;
      switch (this._tag) {
        case 'button':
          lastProps = ReactDOMButton.getNativeProps(this, lastProps);
          nextProps = ReactDOMButton.getNativeProps(this, nextProps);
          break;
        case 'input':
          ReactDOMInput.updateWrapper(this);
          lastProps = ReactDOMInput.getNativeProps(this, lastProps);
          nextProps = ReactDOMInput.getNativeProps(this, nextProps);
          break;
        case 'option':
          lastProps = ReactDOMOption.getNativeProps(this, lastProps);
          nextProps = ReactDOMOption.getNativeProps(this, nextProps);
          break;
        case 'select':
          lastProps = ReactDOMSelect.getNativeProps(this, lastProps);
          nextProps = ReactDOMSelect.getNativeProps(this, nextProps);
          break;
        case 'textarea':
          ReactDOMTextarea.updateWrapper(this);
          lastProps = ReactDOMTextarea.getNativeProps(this, lastProps);
          nextProps = ReactDOMTextarea.getNativeProps(this, nextProps);
          break;
      }
      if ("production" !== 'production') {
        if (this._unprocessedContextDev !== context) {
          this._unprocessedContextDev = context;
          this._processedContextDev = processChildContextDev(context, this);
        }
        context = this._processedContextDev;
      }
      assertValidProps(this, nextProps);
      this._updateDOMProperties(lastProps, nextProps, transaction, null);
      this._updateDOMChildren(lastProps, nextProps, transaction, context);
      if (!canDefineProperty && this._nodeWithLegacyProperties) {
        this._nodeWithLegacyProperties.props = nextProps;
      }
      if (this._tag === 'select') {
        transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
      }
    },
    _updateDOMProperties: function(lastProps, nextProps, transaction, node) {
      var propKey;
      var styleName;
      var styleUpdates;
      for (propKey in lastProps) {
        if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey)) {
          continue;
        }
        if (propKey === STYLE) {
          var lastStyle = this._previousStyleCopy;
          for (styleName in lastStyle) {
            if (lastStyle.hasOwnProperty(styleName)) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = '';
            }
          }
          this._previousStyleCopy = null;
        } else if (registrationNameModules.hasOwnProperty(propKey)) {
          if (lastProps[propKey]) {
            deleteListener(this._rootNodeID, propKey);
          }
        } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
          if (!node) {
            node = ReactMount.getNode(this._rootNodeID);
          }
          DOMPropertyOperations.deleteValueForProperty(node, propKey);
        }
      }
      for (propKey in nextProps) {
        var nextProp = nextProps[propKey];
        var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps[propKey];
        if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp) {
          continue;
        }
        if (propKey === STYLE) {
          if (nextProp) {
            if ("production" !== 'production') {
              checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
              this._previousStyle = nextProp;
            }
            nextProp = this._previousStyleCopy = assign({}, nextProp);
          } else {
            this._previousStyleCopy = null;
          }
          if (lastProp) {
            for (styleName in lastProp) {
              if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
                styleUpdates = styleUpdates || {};
                styleUpdates[styleName] = '';
              }
            }
            for (styleName in nextProp) {
              if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
                styleUpdates = styleUpdates || {};
                styleUpdates[styleName] = nextProp[styleName];
              }
            }
          } else {
            styleUpdates = nextProp;
          }
        } else if (registrationNameModules.hasOwnProperty(propKey)) {
          if (nextProp) {
            enqueuePutListener(this._rootNodeID, propKey, nextProp, transaction);
          } else if (lastProp) {
            deleteListener(this._rootNodeID, propKey);
          }
        } else if (isCustomComponent(this._tag, nextProps)) {
          if (!node) {
            node = ReactMount.getNode(this._rootNodeID);
          }
          if (propKey === CHILDREN) {
            nextProp = null;
          }
          DOMPropertyOperations.setValueForAttribute(node, propKey, nextProp);
        } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
          if (!node) {
            node = ReactMount.getNode(this._rootNodeID);
          }
          if (nextProp != null) {
            DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
          } else {
            DOMPropertyOperations.deleteValueForProperty(node, propKey);
          }
        }
      }
      if (styleUpdates) {
        if (!node) {
          node = ReactMount.getNode(this._rootNodeID);
        }
        CSSPropertyOperations.setValueForStyles(node, styleUpdates);
      }
    },
    _updateDOMChildren: function(lastProps, nextProps, transaction, context) {
      var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
      var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;
      var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
      var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;
      var lastChildren = lastContent != null ? null : lastProps.children;
      var nextChildren = nextContent != null ? null : nextProps.children;
      var lastHasContentOrHtml = lastContent != null || lastHtml != null;
      var nextHasContentOrHtml = nextContent != null || nextHtml != null;
      if (lastChildren != null && nextChildren == null) {
        this.updateChildren(null, transaction, context);
      } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
        this.updateTextContent('');
      }
      if (nextContent != null) {
        if (lastContent !== nextContent) {
          this.updateTextContent('' + nextContent);
        }
      } else if (nextHtml != null) {
        if (lastHtml !== nextHtml) {
          this.updateMarkup('' + nextHtml);
        }
      } else if (nextChildren != null) {
        this.updateChildren(nextChildren, transaction, context);
      }
    },
    unmountComponent: function() {
      switch (this._tag) {
        case 'iframe':
        case 'img':
        case 'form':
        case 'video':
        case 'audio':
          var listeners = this._wrapperState.listeners;
          if (listeners) {
            for (var i = 0; i < listeners.length; i++) {
              listeners[i].remove();
            }
          }
          break;
        case 'input':
          ReactDOMInput.unmountWrapper(this);
          break;
        case 'html':
        case 'head':
        case 'body':
          !false ? "production" !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is ' + 'impossible to unmount some top-level components (eg <html>, ' + '<head>, and <body>) reliably and efficiently. To fix this, have a ' + 'single top-level component that never unmounts render these ' + 'elements.', this._tag) : invariant(false) : undefined;
          break;
      }
      this.unmountChildren();
      ReactBrowserEventEmitter.deleteAllListeners(this._rootNodeID);
      ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
      this._rootNodeID = null;
      this._wrapperState = null;
      if (this._nodeWithLegacyProperties) {
        var node = this._nodeWithLegacyProperties;
        node._reactInternalComponent = null;
        this._nodeWithLegacyProperties = null;
      }
    },
    getPublicInstance: function() {
      if (!this._nodeWithLegacyProperties) {
        var node = ReactMount.getNode(this._rootNodeID);
        node._reactInternalComponent = this;
        node.getDOMNode = legacyGetDOMNode;
        node.isMounted = legacyIsMounted;
        node.setState = legacySetStateEtc;
        node.replaceState = legacySetStateEtc;
        node.forceUpdate = legacySetStateEtc;
        node.setProps = legacySetProps;
        node.replaceProps = legacyReplaceProps;
        if ("production" !== 'production') {
          if (canDefineProperty) {
            Object.defineProperties(node, legacyPropsDescriptor);
          } else {
            node.props = this._currentElement.props;
          }
        } else {
          node.props = this._currentElement.props;
        }
        this._nodeWithLegacyProperties = node;
      }
      return this._nodeWithLegacyProperties;
    }
  };
  ReactPerf.measureMethods(ReactDOMComponent, 'ReactDOMComponent', {
    mountComponent: 'mountComponent',
    updateComponent: 'updateComponent'
  });
  assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);
  module.exports = ReactDOMComponent;
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.6.1/lib/toArray.js", ["./invariant", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var invariant = $__require('./invariant');
  function toArray(obj) {
    var length = obj.length;
    !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? "production" !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : undefined;
    !(typeof length === 'number') ? "production" !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : undefined;
    !(length === 0 || length - 1 in obj) ? "production" !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : undefined;
    if (obj.hasOwnProperty) {
      try {
        return Array.prototype.slice.call(obj);
      } catch (e) {}
    }
    var ret = Array(length);
    for (var ii = 0; ii < length; ii++) {
      ret[ii] = obj[ii];
    }
    return ret;
  }
  module.exports = toArray;
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.6.1/lib/createArrayFromMixed.js", ["./toArray", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var toArray = $__require('./toArray');
  function hasArrayNature(obj) {
    return (!!obj && (typeof obj == 'object' || typeof obj == 'function') && 'length' in obj && !('setInterval' in obj) && typeof obj.nodeType != 'number' && (Array.isArray(obj) || 'callee' in obj || 'item' in obj));
  }
  function createArrayFromMixed(obj) {
    if (!hasArrayNature(obj)) {
      return [obj];
    } else if (Array.isArray(obj)) {
      return obj.slice();
    } else {
      return toArray(obj);
    }
  }
  module.exports = createArrayFromMixed;
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.6.1/lib/createNodesFromMarkup.js", ["./ExecutionEnvironment", "./createArrayFromMixed", "./getMarkupWrap", "./invariant", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ExecutionEnvironment = $__require('./ExecutionEnvironment');
  var createArrayFromMixed = $__require('./createArrayFromMixed');
  var getMarkupWrap = $__require('./getMarkupWrap');
  var invariant = $__require('./invariant');
  var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
  var nodeNamePattern = /^\s*<(\w+)/;
  function getNodeName(markup) {
    var nodeNameMatch = markup.match(nodeNamePattern);
    return nodeNameMatch && nodeNameMatch[1].toLowerCase();
  }
  function createNodesFromMarkup(markup, handleScript) {
    var node = dummyNode;
    !!!dummyNode ? "production" !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : undefined;
    var nodeName = getNodeName(markup);
    var wrap = nodeName && getMarkupWrap(nodeName);
    if (wrap) {
      node.innerHTML = wrap[1] + markup + wrap[2];
      var wrapDepth = wrap[0];
      while (wrapDepth--) {
        node = node.lastChild;
      }
    } else {
      node.innerHTML = markup;
    }
    var scripts = node.getElementsByTagName('script');
    if (scripts.length) {
      !handleScript ? "production" !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : undefined;
      createArrayFromMixed(scripts).forEach(handleScript);
    }
    var nodes = createArrayFromMixed(node.childNodes);
    while (node.lastChild) {
      node.removeChild(node.lastChild);
    }
    return nodes;
  }
  module.exports = createNodesFromMarkup;
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.6.1/lib/getMarkupWrap.js", ["./ExecutionEnvironment", "./invariant", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ExecutionEnvironment = $__require('./ExecutionEnvironment');
  var invariant = $__require('./invariant');
  var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
  var shouldWrap = {};
  var selectWrap = [1, '<select multiple="true">', '</select>'];
  var tableWrap = [1, '<table>', '</table>'];
  var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];
  var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];
  var markupWrap = {
    '*': [1, '?<div>', '</div>'],
    'area': [1, '<map>', '</map>'],
    'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
    'legend': [1, '<fieldset>', '</fieldset>'],
    'param': [1, '<object>', '</object>'],
    'tr': [2, '<table><tbody>', '</tbody></table>'],
    'optgroup': selectWrap,
    'option': selectWrap,
    'caption': tableWrap,
    'colgroup': tableWrap,
    'tbody': tableWrap,
    'tfoot': tableWrap,
    'thead': tableWrap,
    'td': trWrap,
    'th': trWrap
  };
  var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
  svgElements.forEach(function(nodeName) {
    markupWrap[nodeName] = svgWrap;
    shouldWrap[nodeName] = true;
  });
  function getMarkupWrap(nodeName) {
    !!!dummyNode ? "production" !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : undefined;
    if (!markupWrap.hasOwnProperty(nodeName)) {
      nodeName = '*';
    }
    if (!shouldWrap.hasOwnProperty(nodeName)) {
      if (nodeName === '*') {
        dummyNode.innerHTML = '<link />';
      } else {
        dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
      }
      shouldWrap[nodeName] = !dummyNode.firstChild;
    }
    return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
  }
  module.exports = getMarkupWrap;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/Danger.js", ["fbjs/lib/ExecutionEnvironment", "fbjs/lib/createNodesFromMarkup", "fbjs/lib/emptyFunction", "fbjs/lib/getMarkupWrap", "fbjs/lib/invariant", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ExecutionEnvironment = $__require('fbjs/lib/ExecutionEnvironment');
  var createNodesFromMarkup = $__require('fbjs/lib/createNodesFromMarkup');
  var emptyFunction = $__require('fbjs/lib/emptyFunction');
  var getMarkupWrap = $__require('fbjs/lib/getMarkupWrap');
  var invariant = $__require('fbjs/lib/invariant');
  var OPEN_TAG_NAME_EXP = /^(<[^ \/>]+)/;
  var RESULT_INDEX_ATTR = 'data-danger-index';
  function getNodeName(markup) {
    return markup.substring(1, markup.indexOf(' '));
  }
  var Danger = {
    dangerouslyRenderMarkup: function(markupList) {
      !ExecutionEnvironment.canUseDOM ? "production" !== 'production' ? invariant(false, 'dangerouslyRenderMarkup(...): Cannot render markup in a worker ' + 'thread. Make sure `window` and `document` are available globally ' + 'before requiring React when unit testing or use ' + 'ReactDOMServer.renderToString for server rendering.') : invariant(false) : undefined;
      var nodeName;
      var markupByNodeName = {};
      for (var i = 0; i < markupList.length; i++) {
        !markupList[i] ? "production" !== 'production' ? invariant(false, 'dangerouslyRenderMarkup(...): Missing markup.') : invariant(false) : undefined;
        nodeName = getNodeName(markupList[i]);
        nodeName = getMarkupWrap(nodeName) ? nodeName : '*';
        markupByNodeName[nodeName] = markupByNodeName[nodeName] || [];
        markupByNodeName[nodeName][i] = markupList[i];
      }
      var resultList = [];
      var resultListAssignmentCount = 0;
      for (nodeName in markupByNodeName) {
        if (!markupByNodeName.hasOwnProperty(nodeName)) {
          continue;
        }
        var markupListByNodeName = markupByNodeName[nodeName];
        var resultIndex;
        for (resultIndex in markupListByNodeName) {
          if (markupListByNodeName.hasOwnProperty(resultIndex)) {
            var markup = markupListByNodeName[resultIndex];
            markupListByNodeName[resultIndex] = markup.replace(OPEN_TAG_NAME_EXP, '$1 ' + RESULT_INDEX_ATTR + '="' + resultIndex + '" ');
          }
        }
        var renderNodes = createNodesFromMarkup(markupListByNodeName.join(''), emptyFunction);
        for (var j = 0; j < renderNodes.length; ++j) {
          var renderNode = renderNodes[j];
          if (renderNode.hasAttribute && renderNode.hasAttribute(RESULT_INDEX_ATTR)) {
            resultIndex = +renderNode.getAttribute(RESULT_INDEX_ATTR);
            renderNode.removeAttribute(RESULT_INDEX_ATTR);
            !!resultList.hasOwnProperty(resultIndex) ? "production" !== 'production' ? invariant(false, 'Danger: Assigning to an already-occupied result index.') : invariant(false) : undefined;
            resultList[resultIndex] = renderNode;
            resultListAssignmentCount += 1;
          } else if ("production" !== 'production') {
            console.error('Danger: Discarding unexpected node:', renderNode);
          }
        }
      }
      !(resultListAssignmentCount === resultList.length) ? "production" !== 'production' ? invariant(false, 'Danger: Did not assign to every index of resultList.') : invariant(false) : undefined;
      !(resultList.length === markupList.length) ? "production" !== 'production' ? invariant(false, 'Danger: Expected markup to render %s nodes, but rendered %s.', markupList.length, resultList.length) : invariant(false) : undefined;
      return resultList;
    },
    dangerouslyReplaceNodeWithMarkup: function(oldChild, markup) {
      !ExecutionEnvironment.canUseDOM ? "production" !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a ' + 'worker thread. Make sure `window` and `document` are available ' + 'globally before requiring React when unit testing or use ' + 'ReactDOMServer.renderToString() for server rendering.') : invariant(false) : undefined;
      !markup ? "production" !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : invariant(false) : undefined;
      !(oldChild.tagName.toLowerCase() !== 'html') ? "production" !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the ' + '<html> node. This is because browser quirks make this unreliable ' + 'and/or slow. If you want to render to the root you must use ' + 'server rendering. See ReactDOMServer.renderToString().') : invariant(false) : undefined;
      var newChild;
      if (typeof markup === 'string') {
        newChild = createNodesFromMarkup(markup, emptyFunction)[0];
      } else {
        newChild = markup;
      }
      oldChild.parentNode.replaceChild(newChild, oldChild);
    }
  };
  module.exports = Danger;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactMultiChildUpdateTypes.js", ["fbjs/lib/keyMirror", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var keyMirror = $__require('fbjs/lib/keyMirror');
  var ReactMultiChildUpdateTypes = keyMirror({
    INSERT_MARKUP: null,
    MOVE_EXISTING: null,
    REMOVE_NODE: null,
    SET_MARKUP: null,
    TEXT_CONTENT: null
  });
  module.exports = ReactMultiChildUpdateTypes;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/DOMChildrenOperations.js", ["./Danger", "./ReactMultiChildUpdateTypes", "./ReactPerf", "./setInnerHTML", "./setTextContent", "fbjs/lib/invariant", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var Danger = $__require('./Danger');
  var ReactMultiChildUpdateTypes = $__require('./ReactMultiChildUpdateTypes');
  var ReactPerf = $__require('./ReactPerf');
  var setInnerHTML = $__require('./setInnerHTML');
  var setTextContent = $__require('./setTextContent');
  var invariant = $__require('fbjs/lib/invariant');
  function insertChildAt(parentNode, childNode, index) {
    var beforeChild = index >= parentNode.childNodes.length ? null : parentNode.childNodes.item(index);
    parentNode.insertBefore(childNode, beforeChild);
  }
  var DOMChildrenOperations = {
    dangerouslyReplaceNodeWithMarkup: Danger.dangerouslyReplaceNodeWithMarkup,
    updateTextContent: setTextContent,
    processUpdates: function(updates, markupList) {
      var update;
      var initialChildren = null;
      var updatedChildren = null;
      for (var i = 0; i < updates.length; i++) {
        update = updates[i];
        if (update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING || update.type === ReactMultiChildUpdateTypes.REMOVE_NODE) {
          var updatedIndex = update.fromIndex;
          var updatedChild = update.parentNode.childNodes[updatedIndex];
          var parentID = update.parentID;
          !updatedChild ? "production" !== 'production' ? invariant(false, 'processUpdates(): Unable to find child %s of element. This ' + 'probably means the DOM was unexpectedly mutated (e.g., by the ' + 'browser), usually due to forgetting a <tbody> when using tables, ' + 'nesting tags like <form>, <p>, or <a>, or using non-SVG elements ' + 'in an <svg> parent. Try inspecting the child nodes of the element ' + 'with React ID `%s`.', updatedIndex, parentID) : invariant(false) : undefined;
          initialChildren = initialChildren || {};
          initialChildren[parentID] = initialChildren[parentID] || [];
          initialChildren[parentID][updatedIndex] = updatedChild;
          updatedChildren = updatedChildren || [];
          updatedChildren.push(updatedChild);
        }
      }
      var renderedMarkup;
      if (markupList.length && typeof markupList[0] === 'string') {
        renderedMarkup = Danger.dangerouslyRenderMarkup(markupList);
      } else {
        renderedMarkup = markupList;
      }
      if (updatedChildren) {
        for (var j = 0; j < updatedChildren.length; j++) {
          updatedChildren[j].parentNode.removeChild(updatedChildren[j]);
        }
      }
      for (var k = 0; k < updates.length; k++) {
        update = updates[k];
        switch (update.type) {
          case ReactMultiChildUpdateTypes.INSERT_MARKUP:
            insertChildAt(update.parentNode, renderedMarkup[update.markupIndex], update.toIndex);
            break;
          case ReactMultiChildUpdateTypes.MOVE_EXISTING:
            insertChildAt(update.parentNode, initialChildren[update.parentID][update.fromIndex], update.toIndex);
            break;
          case ReactMultiChildUpdateTypes.SET_MARKUP:
            setInnerHTML(update.parentNode, update.content);
            break;
          case ReactMultiChildUpdateTypes.TEXT_CONTENT:
            setTextContent(update.parentNode, update.content);
            break;
          case ReactMultiChildUpdateTypes.REMOVE_NODE:
            break;
        }
      }
    }
  };
  ReactPerf.measureMethods(DOMChildrenOperations, 'DOMChildrenOperations', {updateTextContent: 'updateTextContent'});
  module.exports = DOMChildrenOperations;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/quoteAttributeValueForBrowser.js", ["./escapeTextContentForBrowser", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var escapeTextContentForBrowser = $__require('./escapeTextContentForBrowser');
  function quoteAttributeValueForBrowser(value) {
    return '"' + escapeTextContentForBrowser(value) + '"';
  }
  module.exports = quoteAttributeValueForBrowser;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/DOMPropertyOperations.js", ["./DOMProperty", "./ReactPerf", "./quoteAttributeValueForBrowser", "fbjs/lib/warning", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var DOMProperty = $__require('./DOMProperty');
  var ReactPerf = $__require('./ReactPerf');
  var quoteAttributeValueForBrowser = $__require('./quoteAttributeValueForBrowser');
  var warning = $__require('fbjs/lib/warning');
  var VALID_ATTRIBUTE_NAME_REGEX = /^[a-zA-Z_][\w\.\-]*$/;
  var illegalAttributeNameCache = {};
  var validatedAttributeNameCache = {};
  function isAttributeNameSafe(attributeName) {
    if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
      return true;
    }
    if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
      return false;
    }
    if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
      validatedAttributeNameCache[attributeName] = true;
      return true;
    }
    illegalAttributeNameCache[attributeName] = true;
    "production" !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : undefined;
    return false;
  }
  function shouldIgnoreValue(propertyInfo, value) {
    return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
  }
  if ("production" !== 'production') {
    var reactProps = {
      children: true,
      dangerouslySetInnerHTML: true,
      key: true,
      ref: true
    };
    var warnedProperties = {};
    var warnUnknownProperty = function(name) {
      if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
        return;
      }
      warnedProperties[name] = true;
      var lowerCasedName = name.toLowerCase();
      var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;
      "production" !== 'production' ? warning(standardName == null, 'Unknown DOM property %s. Did you mean %s?', name, standardName) : undefined;
    };
  }
  var DOMPropertyOperations = {
    createMarkupForID: function(id) {
      return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
    },
    setAttributeForID: function(node, id) {
      node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
    },
    createMarkupForProperty: function(name, value) {
      var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
      if (propertyInfo) {
        if (shouldIgnoreValue(propertyInfo, value)) {
          return '';
        }
        var attributeName = propertyInfo.attributeName;
        if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
          return attributeName + '=""';
        }
        return attributeName + '=' + quoteAttributeValueForBrowser(value);
      } else if (DOMProperty.isCustomAttribute(name)) {
        if (value == null) {
          return '';
        }
        return name + '=' + quoteAttributeValueForBrowser(value);
      } else if ("production" !== 'production') {
        warnUnknownProperty(name);
      }
      return null;
    },
    createMarkupForCustomAttribute: function(name, value) {
      if (!isAttributeNameSafe(name) || value == null) {
        return '';
      }
      return name + '=' + quoteAttributeValueForBrowser(value);
    },
    setValueForProperty: function(node, name, value) {
      var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
      if (propertyInfo) {
        var mutationMethod = propertyInfo.mutationMethod;
        if (mutationMethod) {
          mutationMethod(node, value);
        } else if (shouldIgnoreValue(propertyInfo, value)) {
          this.deleteValueForProperty(node, name);
        } else if (propertyInfo.mustUseAttribute) {
          var attributeName = propertyInfo.attributeName;
          var namespace = propertyInfo.attributeNamespace;
          if (namespace) {
            node.setAttributeNS(namespace, attributeName, '' + value);
          } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
            node.setAttribute(attributeName, '');
          } else {
            node.setAttribute(attributeName, '' + value);
          }
        } else {
          var propName = propertyInfo.propertyName;
          if (!propertyInfo.hasSideEffects || '' + node[propName] !== '' + value) {
            node[propName] = value;
          }
        }
      } else if (DOMProperty.isCustomAttribute(name)) {
        DOMPropertyOperations.setValueForAttribute(node, name, value);
      } else if ("production" !== 'production') {
        warnUnknownProperty(name);
      }
    },
    setValueForAttribute: function(node, name, value) {
      if (!isAttributeNameSafe(name)) {
        return;
      }
      if (value == null) {
        node.removeAttribute(name);
      } else {
        node.setAttribute(name, '' + value);
      }
    },
    deleteValueForProperty: function(node, name) {
      var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
      if (propertyInfo) {
        var mutationMethod = propertyInfo.mutationMethod;
        if (mutationMethod) {
          mutationMethod(node, undefined);
        } else if (propertyInfo.mustUseAttribute) {
          node.removeAttribute(propertyInfo.attributeName);
        } else {
          var propName = propertyInfo.propertyName;
          var defaultValue = DOMProperty.getDefaultValueForProperty(node.nodeName, propName);
          if (!propertyInfo.hasSideEffects || '' + node[propName] !== defaultValue) {
            node[propName] = defaultValue;
          }
        }
      } else if (DOMProperty.isCustomAttribute(name)) {
        node.removeAttribute(name);
      } else if ("production" !== 'production') {
        warnUnknownProperty(name);
      }
    }
  };
  ReactPerf.measureMethods(DOMPropertyOperations, 'DOMPropertyOperations', {
    setValueForProperty: 'setValueForProperty',
    setValueForAttribute: 'setValueForAttribute',
    deleteValueForProperty: 'deleteValueForProperty'
  });
  module.exports = DOMPropertyOperations;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactDOMIDOperations.js", ["./DOMChildrenOperations", "./DOMPropertyOperations", "./ReactMount", "./ReactPerf", "fbjs/lib/invariant", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var DOMChildrenOperations = $__require('./DOMChildrenOperations');
  var DOMPropertyOperations = $__require('./DOMPropertyOperations');
  var ReactMount = $__require('./ReactMount');
  var ReactPerf = $__require('./ReactPerf');
  var invariant = $__require('fbjs/lib/invariant');
  var INVALID_PROPERTY_ERRORS = {
    dangerouslySetInnerHTML: '`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.',
    style: '`style` must be set using `updateStylesByID()`.'
  };
  var ReactDOMIDOperations = {
    updatePropertyByID: function(id, name, value) {
      var node = ReactMount.getNode(id);
      !!INVALID_PROPERTY_ERRORS.hasOwnProperty(name) ? "production" !== 'production' ? invariant(false, 'updatePropertyByID(...): %s', INVALID_PROPERTY_ERRORS[name]) : invariant(false) : undefined;
      if (value != null) {
        DOMPropertyOperations.setValueForProperty(node, name, value);
      } else {
        DOMPropertyOperations.deleteValueForProperty(node, name);
      }
    },
    dangerouslyReplaceNodeWithMarkupByID: function(id, markup) {
      var node = ReactMount.getNode(id);
      DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup(node, markup);
    },
    dangerouslyProcessChildrenUpdates: function(updates, markup) {
      for (var i = 0; i < updates.length; i++) {
        updates[i].parentNode = ReactMount.getNode(updates[i].parentID);
      }
      DOMChildrenOperations.processUpdates(updates, markup);
    }
  };
  ReactPerf.measureMethods(ReactDOMIDOperations, 'ReactDOMIDOperations', {
    dangerouslyReplaceNodeWithMarkupByID: 'dangerouslyReplaceNodeWithMarkupByID',
    dangerouslyProcessChildrenUpdates: 'dangerouslyProcessChildrenUpdates'
  });
  module.exports = ReactDOMIDOperations;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactComponentBrowserEnvironment.js", ["./ReactDOMIDOperations", "./ReactMount", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ReactDOMIDOperations = $__require('./ReactDOMIDOperations');
  var ReactMount = $__require('./ReactMount');
  var ReactComponentBrowserEnvironment = {
    processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,
    replaceNodeWithMarkupByID: ReactDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,
    unmountIDFromEnvironment: function(rootNodeID) {
      ReactMount.purgeID(rootNodeID);
    }
  };
  module.exports = ReactComponentBrowserEnvironment;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/escapeTextContentForBrowser.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ESCAPE_LOOKUP = {
    '&': '&amp;',
    '>': '&gt;',
    '<': '&lt;',
    '"': '&quot;',
    '\'': '&#x27;'
  };
  var ESCAPE_REGEX = /[&><"']/g;
  function escaper(match) {
    return ESCAPE_LOOKUP[match];
  }
  function escapeTextContentForBrowser(text) {
    return ('' + text).replace(ESCAPE_REGEX, escaper);
  }
  module.exports = escapeTextContentForBrowser;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/setTextContent.js", ["fbjs/lib/ExecutionEnvironment", "./escapeTextContentForBrowser", "./setInnerHTML", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ExecutionEnvironment = $__require('fbjs/lib/ExecutionEnvironment');
  var escapeTextContentForBrowser = $__require('./escapeTextContentForBrowser');
  var setInnerHTML = $__require('./setInnerHTML');
  var setTextContent = function(node, text) {
    node.textContent = text;
  };
  if (ExecutionEnvironment.canUseDOM) {
    if (!('textContent' in document.documentElement)) {
      setTextContent = function(node, text) {
        setInnerHTML(node, escapeTextContentForBrowser(text));
      };
    }
  }
  module.exports = setTextContent;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactDOMTextComponent.js", ["./DOMChildrenOperations", "./DOMPropertyOperations", "./ReactComponentBrowserEnvironment", "./ReactMount", "./Object.assign", "./escapeTextContentForBrowser", "./setTextContent", "./validateDOMNesting", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var DOMChildrenOperations = $__require('./DOMChildrenOperations');
  var DOMPropertyOperations = $__require('./DOMPropertyOperations');
  var ReactComponentBrowserEnvironment = $__require('./ReactComponentBrowserEnvironment');
  var ReactMount = $__require('./ReactMount');
  var assign = $__require('./Object.assign');
  var escapeTextContentForBrowser = $__require('./escapeTextContentForBrowser');
  var setTextContent = $__require('./setTextContent');
  var validateDOMNesting = $__require('./validateDOMNesting');
  var ReactDOMTextComponent = function(props) {};
  assign(ReactDOMTextComponent.prototype, {
    construct: function(text) {
      this._currentElement = text;
      this._stringText = '' + text;
      this._rootNodeID = null;
      this._mountIndex = 0;
    },
    mountComponent: function(rootID, transaction, context) {
      if ("production" !== 'production') {
        if (context[validateDOMNesting.ancestorInfoContextKey]) {
          validateDOMNesting('span', null, context[validateDOMNesting.ancestorInfoContextKey]);
        }
      }
      this._rootNodeID = rootID;
      if (transaction.useCreateElement) {
        var ownerDocument = context[ReactMount.ownerDocumentContextKey];
        var el = ownerDocument.createElement('span');
        DOMPropertyOperations.setAttributeForID(el, rootID);
        ReactMount.getID(el);
        setTextContent(el, this._stringText);
        return el;
      } else {
        var escapedText = escapeTextContentForBrowser(this._stringText);
        if (transaction.renderToStaticMarkup) {
          return escapedText;
        }
        return '<span ' + DOMPropertyOperations.createMarkupForID(rootID) + '>' + escapedText + '</span>';
      }
    },
    receiveComponent: function(nextText, transaction) {
      if (nextText !== this._currentElement) {
        this._currentElement = nextText;
        var nextStringText = '' + nextText;
        if (nextStringText !== this._stringText) {
          this._stringText = nextStringText;
          var node = ReactMount.getNode(this._rootNodeID);
          DOMChildrenOperations.updateTextContent(node, nextStringText);
        }
      }
    },
    unmountComponent: function() {
      ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
    }
  });
  module.exports = ReactDOMTextComponent;
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.6.1/lib/getUnboundedScrollPosition.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  function getUnboundedScrollPosition(scrollable) {
    if (scrollable === window) {
      return {
        x: window.pageXOffset || document.documentElement.scrollLeft,
        y: window.pageYOffset || document.documentElement.scrollTop
      };
    }
    return {
      x: scrollable.scrollLeft,
      y: scrollable.scrollTop
    };
  }
  module.exports = getUnboundedScrollPosition;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactEventListener.js", ["fbjs/lib/EventListener", "fbjs/lib/ExecutionEnvironment", "./PooledClass", "./ReactInstanceHandles", "./ReactMount", "./ReactUpdates", "./Object.assign", "./getEventTarget", "fbjs/lib/getUnboundedScrollPosition", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var EventListener = $__require('fbjs/lib/EventListener');
  var ExecutionEnvironment = $__require('fbjs/lib/ExecutionEnvironment');
  var PooledClass = $__require('./PooledClass');
  var ReactInstanceHandles = $__require('./ReactInstanceHandles');
  var ReactMount = $__require('./ReactMount');
  var ReactUpdates = $__require('./ReactUpdates');
  var assign = $__require('./Object.assign');
  var getEventTarget = $__require('./getEventTarget');
  var getUnboundedScrollPosition = $__require('fbjs/lib/getUnboundedScrollPosition');
  var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
  function findParent(node) {
    var nodeID = ReactMount.getID(node);
    var rootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);
    var container = ReactMount.findReactContainerForID(rootID);
    var parent = ReactMount.getFirstReactDOM(container);
    return parent;
  }
  function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
    this.topLevelType = topLevelType;
    this.nativeEvent = nativeEvent;
    this.ancestors = [];
  }
  assign(TopLevelCallbackBookKeeping.prototype, {destructor: function() {
      this.topLevelType = null;
      this.nativeEvent = null;
      this.ancestors.length = 0;
    }});
  PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);
  function handleTopLevelImpl(bookKeeping) {
    void handleTopLevelWithPath;
    handleTopLevelWithoutPath(bookKeeping);
  }
  function handleTopLevelWithoutPath(bookKeeping) {
    var topLevelTarget = ReactMount.getFirstReactDOM(getEventTarget(bookKeeping.nativeEvent)) || window;
    var ancestor = topLevelTarget;
    while (ancestor) {
      bookKeeping.ancestors.push(ancestor);
      ancestor = findParent(ancestor);
    }
    for (var i = 0; i < bookKeeping.ancestors.length; i++) {
      topLevelTarget = bookKeeping.ancestors[i];
      var topLevelTargetID = ReactMount.getID(topLevelTarget) || '';
      ReactEventListener._handleTopLevel(bookKeeping.topLevelType, topLevelTarget, topLevelTargetID, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
    }
  }
  function handleTopLevelWithPath(bookKeeping) {
    var path = bookKeeping.nativeEvent.path;
    var currentNativeTarget = path[0];
    var eventsFired = 0;
    for (var i = 0; i < path.length; i++) {
      var currentPathElement = path[i];
      if (currentPathElement.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE) {
        currentNativeTarget = path[i + 1];
      }
      var reactParent = ReactMount.getFirstReactDOM(currentPathElement);
      if (reactParent === currentPathElement) {
        var currentPathElementID = ReactMount.getID(currentPathElement);
        var newRootID = ReactInstanceHandles.getReactRootIDFromNodeID(currentPathElementID);
        bookKeeping.ancestors.push(currentPathElement);
        var topLevelTargetID = ReactMount.getID(currentPathElement) || '';
        eventsFired++;
        ReactEventListener._handleTopLevel(bookKeeping.topLevelType, currentPathElement, topLevelTargetID, bookKeeping.nativeEvent, currentNativeTarget);
        while (currentPathElementID !== newRootID) {
          i++;
          currentPathElement = path[i];
          currentPathElementID = ReactMount.getID(currentPathElement);
        }
      }
    }
    if (eventsFired === 0) {
      ReactEventListener._handleTopLevel(bookKeeping.topLevelType, window, '', bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
    }
  }
  function scrollValueMonitor(cb) {
    var scrollPosition = getUnboundedScrollPosition(window);
    cb(scrollPosition);
  }
  var ReactEventListener = {
    _enabled: true,
    _handleTopLevel: null,
    WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,
    setHandleTopLevel: function(handleTopLevel) {
      ReactEventListener._handleTopLevel = handleTopLevel;
    },
    setEnabled: function(enabled) {
      ReactEventListener._enabled = !!enabled;
    },
    isEnabled: function() {
      return ReactEventListener._enabled;
    },
    trapBubbledEvent: function(topLevelType, handlerBaseName, handle) {
      var element = handle;
      if (!element) {
        return null;
      }
      return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
    },
    trapCapturedEvent: function(topLevelType, handlerBaseName, handle) {
      var element = handle;
      if (!element) {
        return null;
      }
      return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
    },
    monitorScrollValue: function(refresh) {
      var callback = scrollValueMonitor.bind(null, refresh);
      EventListener.listen(window, 'scroll', callback);
    },
    dispatchEvent: function(topLevelType, nativeEvent) {
      if (!ReactEventListener._enabled) {
        return;
      }
      var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
      try {
        ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
      } finally {
        TopLevelCallbackBookKeeping.release(bookKeeping);
      }
    }
  };
  module.exports = ReactEventListener;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactComponent.js", ["./ReactNoopUpdateQueue", "./canDefineProperty", "fbjs/lib/emptyObject", "fbjs/lib/invariant", "fbjs/lib/warning", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ReactNoopUpdateQueue = $__require('./ReactNoopUpdateQueue');
  var canDefineProperty = $__require('./canDefineProperty');
  var emptyObject = $__require('fbjs/lib/emptyObject');
  var invariant = $__require('fbjs/lib/invariant');
  var warning = $__require('fbjs/lib/warning');
  function ReactComponent(props, context, updater) {
    this.props = props;
    this.context = context;
    this.refs = emptyObject;
    this.updater = updater || ReactNoopUpdateQueue;
  }
  ReactComponent.prototype.isReactComponent = {};
  ReactComponent.prototype.setState = function(partialState, callback) {
    !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? "production" !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.') : invariant(false) : undefined;
    if ("production" !== 'production') {
      "production" !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : undefined;
    }
    this.updater.enqueueSetState(this, partialState);
    if (callback) {
      this.updater.enqueueCallback(this, callback);
    }
  };
  ReactComponent.prototype.forceUpdate = function(callback) {
    this.updater.enqueueForceUpdate(this);
    if (callback) {
      this.updater.enqueueCallback(this, callback);
    }
  };
  if ("production" !== 'production') {
    var deprecatedAPIs = {
      getDOMNode: ['getDOMNode', 'Use ReactDOM.findDOMNode(component) instead.'],
      isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
      replaceProps: ['replaceProps', 'Instead, call render again at the top level.'],
      replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).'],
      setProps: ['setProps', 'Instead, call render again at the top level.']
    };
    var defineDeprecationWarning = function(methodName, info) {
      if (canDefineProperty) {
        Object.defineProperty(ReactComponent.prototype, methodName, {get: function() {
            "production" !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : undefined;
            return undefined;
          }});
      }
    };
    for (var fnName in deprecatedAPIs) {
      if (deprecatedAPIs.hasOwnProperty(fnName)) {
        defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
      }
    }
  }
  module.exports = ReactComponent;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactNoopUpdateQueue.js", ["fbjs/lib/warning", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var warning = $__require('fbjs/lib/warning');
  function warnTDZ(publicInstance, callerName) {
    if ("production" !== 'production') {
      "production" !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor && publicInstance.constructor.displayName || '') : undefined;
    }
  }
  var ReactNoopUpdateQueue = {
    isMounted: function(publicInstance) {
      return false;
    },
    enqueueCallback: function(publicInstance, callback) {},
    enqueueForceUpdate: function(publicInstance) {
      warnTDZ(publicInstance, 'forceUpdate');
    },
    enqueueReplaceState: function(publicInstance, completeState) {
      warnTDZ(publicInstance, 'replaceState');
    },
    enqueueSetState: function(publicInstance, partialState) {
      warnTDZ(publicInstance, 'setState');
    },
    enqueueSetProps: function(publicInstance, partialProps) {
      warnTDZ(publicInstance, 'setProps');
    },
    enqueueReplaceProps: function(publicInstance, props) {
      warnTDZ(publicInstance, 'replaceProps');
    }
  };
  module.exports = ReactNoopUpdateQueue;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactClass.js", ["./ReactComponent", "./ReactElement", "./ReactPropTypeLocations", "./ReactPropTypeLocationNames", "./ReactNoopUpdateQueue", "./Object.assign", "fbjs/lib/emptyObject", "fbjs/lib/invariant", "fbjs/lib/keyMirror", "fbjs/lib/keyOf", "fbjs/lib/warning", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ReactComponent = $__require('./ReactComponent');
  var ReactElement = $__require('./ReactElement');
  var ReactPropTypeLocations = $__require('./ReactPropTypeLocations');
  var ReactPropTypeLocationNames = $__require('./ReactPropTypeLocationNames');
  var ReactNoopUpdateQueue = $__require('./ReactNoopUpdateQueue');
  var assign = $__require('./Object.assign');
  var emptyObject = $__require('fbjs/lib/emptyObject');
  var invariant = $__require('fbjs/lib/invariant');
  var keyMirror = $__require('fbjs/lib/keyMirror');
  var keyOf = $__require('fbjs/lib/keyOf');
  var warning = $__require('fbjs/lib/warning');
  var MIXINS_KEY = keyOf({mixins: null});
  var SpecPolicy = keyMirror({
    DEFINE_ONCE: null,
    DEFINE_MANY: null,
    OVERRIDE_BASE: null,
    DEFINE_MANY_MERGED: null
  });
  var injectedMixins = [];
  var warnedSetProps = false;
  function warnSetProps() {
    if (!warnedSetProps) {
      warnedSetProps = true;
      "production" !== 'production' ? warning(false, 'setProps(...) and replaceProps(...) are deprecated. ' + 'Instead, call render again at the top level.') : undefined;
    }
  }
  var ReactClassInterface = {
    mixins: SpecPolicy.DEFINE_MANY,
    statics: SpecPolicy.DEFINE_MANY,
    propTypes: SpecPolicy.DEFINE_MANY,
    contextTypes: SpecPolicy.DEFINE_MANY,
    childContextTypes: SpecPolicy.DEFINE_MANY,
    getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,
    getInitialState: SpecPolicy.DEFINE_MANY_MERGED,
    getChildContext: SpecPolicy.DEFINE_MANY_MERGED,
    render: SpecPolicy.DEFINE_ONCE,
    componentWillMount: SpecPolicy.DEFINE_MANY,
    componentDidMount: SpecPolicy.DEFINE_MANY,
    componentWillReceiveProps: SpecPolicy.DEFINE_MANY,
    shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,
    componentWillUpdate: SpecPolicy.DEFINE_MANY,
    componentDidUpdate: SpecPolicy.DEFINE_MANY,
    componentWillUnmount: SpecPolicy.DEFINE_MANY,
    updateComponent: SpecPolicy.OVERRIDE_BASE
  };
  var RESERVED_SPEC_KEYS = {
    displayName: function(Constructor, displayName) {
      Constructor.displayName = displayName;
    },
    mixins: function(Constructor, mixins) {
      if (mixins) {
        for (var i = 0; i < mixins.length; i++) {
          mixSpecIntoComponent(Constructor, mixins[i]);
        }
      }
    },
    childContextTypes: function(Constructor, childContextTypes) {
      if ("production" !== 'production') {
        validateTypeDef(Constructor, childContextTypes, ReactPropTypeLocations.childContext);
      }
      Constructor.childContextTypes = assign({}, Constructor.childContextTypes, childContextTypes);
    },
    contextTypes: function(Constructor, contextTypes) {
      if ("production" !== 'production') {
        validateTypeDef(Constructor, contextTypes, ReactPropTypeLocations.context);
      }
      Constructor.contextTypes = assign({}, Constructor.contextTypes, contextTypes);
    },
    getDefaultProps: function(Constructor, getDefaultProps) {
      if (Constructor.getDefaultProps) {
        Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
      } else {
        Constructor.getDefaultProps = getDefaultProps;
      }
    },
    propTypes: function(Constructor, propTypes) {
      if ("production" !== 'production') {
        validateTypeDef(Constructor, propTypes, ReactPropTypeLocations.prop);
      }
      Constructor.propTypes = assign({}, Constructor.propTypes, propTypes);
    },
    statics: function(Constructor, statics) {
      mixStaticSpecIntoComponent(Constructor, statics);
    },
    autobind: function() {}
  };
  function validateTypeDef(Constructor, typeDef, location) {
    for (var propName in typeDef) {
      if (typeDef.hasOwnProperty(propName)) {
        "production" !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : undefined;
      }
    }
  }
  function validateMethodOverride(proto, name) {
    var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;
    if (ReactClassMixin.hasOwnProperty(name)) {
      !(specPolicy === SpecPolicy.OVERRIDE_BASE) ? "production" !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override ' + '`%s` from your class specification. Ensure that your method names ' + 'do not overlap with React methods.', name) : invariant(false) : undefined;
    }
    if (proto.hasOwnProperty(name)) {
      !(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED) ? "production" !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define ' + '`%s` on your component more than once. This conflict may be due ' + 'to a mixin.', name) : invariant(false) : undefined;
    }
  }
  function mixSpecIntoComponent(Constructor, spec) {
    if (!spec) {
      return;
    }
    !(typeof spec !== 'function') ? "production" !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to ' + 'use a component class as a mixin. Instead, just use a regular object.') : invariant(false) : undefined;
    !!ReactElement.isValidElement(spec) ? "production" !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to ' + 'use a component as a mixin. Instead, just use a regular object.') : invariant(false) : undefined;
    var proto = Constructor.prototype;
    if (spec.hasOwnProperty(MIXINS_KEY)) {
      RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
    }
    for (var name in spec) {
      if (!spec.hasOwnProperty(name)) {
        continue;
      }
      if (name === MIXINS_KEY) {
        continue;
      }
      var property = spec[name];
      validateMethodOverride(proto, name);
      if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
        RESERVED_SPEC_KEYS[name](Constructor, property);
      } else {
        var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
        var isAlreadyDefined = proto.hasOwnProperty(name);
        var isFunction = typeof property === 'function';
        var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;
        if (shouldAutoBind) {
          if (!proto.__reactAutoBindMap) {
            proto.__reactAutoBindMap = {};
          }
          proto.__reactAutoBindMap[name] = property;
          proto[name] = property;
        } else {
          if (isAlreadyDefined) {
            var specPolicy = ReactClassInterface[name];
            !(isReactClassMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)) ? "production" !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s ' + 'when mixing in component specs.', specPolicy, name) : invariant(false) : undefined;
            if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
              proto[name] = createMergedResultFunction(proto[name], property);
            } else if (specPolicy === SpecPolicy.DEFINE_MANY) {
              proto[name] = createChainedFunction(proto[name], property);
            }
          } else {
            proto[name] = property;
            if ("production" !== 'production') {
              if (typeof property === 'function' && spec.displayName) {
                proto[name].displayName = spec.displayName + '_' + name;
              }
            }
          }
        }
      }
    }
  }
  function mixStaticSpecIntoComponent(Constructor, statics) {
    if (!statics) {
      return;
    }
    for (var name in statics) {
      var property = statics[name];
      if (!statics.hasOwnProperty(name)) {
        continue;
      }
      var isReserved = (name in RESERVED_SPEC_KEYS);
      !!isReserved ? "production" !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved ' + 'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' + 'as an instance property instead; it will still be accessible on the ' + 'constructor.', name) : invariant(false) : undefined;
      var isInherited = (name in Constructor);
      !!isInherited ? "production" !== 'production' ? invariant(false, 'ReactClass: You are attempting to define ' + '`%s` on your component more than once. This conflict may be ' + 'due to a mixin.', name) : invariant(false) : undefined;
      Constructor[name] = property;
    }
  }
  function mergeIntoWithNoDuplicateKeys(one, two) {
    !(one && two && typeof one === 'object' && typeof two === 'object') ? "production" !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : invariant(false) : undefined;
    for (var key in two) {
      if (two.hasOwnProperty(key)) {
        !(one[key] === undefined) ? "production" !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): ' + 'Tried to merge two objects with the same key: `%s`. This conflict ' + 'may be due to a mixin; in particular, this may be caused by two ' + 'getInitialState() or getDefaultProps() methods returning objects ' + 'with clashing keys.', key) : invariant(false) : undefined;
        one[key] = two[key];
      }
    }
    return one;
  }
  function createMergedResultFunction(one, two) {
    return function mergedResult() {
      var a = one.apply(this, arguments);
      var b = two.apply(this, arguments);
      if (a == null) {
        return b;
      } else if (b == null) {
        return a;
      }
      var c = {};
      mergeIntoWithNoDuplicateKeys(c, a);
      mergeIntoWithNoDuplicateKeys(c, b);
      return c;
    };
  }
  function createChainedFunction(one, two) {
    return function chainedFunction() {
      one.apply(this, arguments);
      two.apply(this, arguments);
    };
  }
  function bindAutoBindMethod(component, method) {
    var boundMethod = method.bind(component);
    if ("production" !== 'production') {
      boundMethod.__reactBoundContext = component;
      boundMethod.__reactBoundMethod = method;
      boundMethod.__reactBoundArguments = null;
      var componentName = component.constructor.displayName;
      var _bind = boundMethod.bind;
      boundMethod.bind = function(newThis) {
        for (var _len = arguments.length,
            args = Array(_len > 1 ? _len - 1 : 0),
            _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }
        if (newThis !== component && newThis !== null) {
          "production" !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : undefined;
        } else if (!args.length) {
          "production" !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : undefined;
          return boundMethod;
        }
        var reboundMethod = _bind.apply(boundMethod, arguments);
        reboundMethod.__reactBoundContext = component;
        reboundMethod.__reactBoundMethod = method;
        reboundMethod.__reactBoundArguments = args;
        return reboundMethod;
      };
    }
    return boundMethod;
  }
  function bindAutoBindMethods(component) {
    for (var autoBindKey in component.__reactAutoBindMap) {
      if (component.__reactAutoBindMap.hasOwnProperty(autoBindKey)) {
        var method = component.__reactAutoBindMap[autoBindKey];
        component[autoBindKey] = bindAutoBindMethod(component, method);
      }
    }
  }
  var ReactClassMixin = {
    replaceState: function(newState, callback) {
      this.updater.enqueueReplaceState(this, newState);
      if (callback) {
        this.updater.enqueueCallback(this, callback);
      }
    },
    isMounted: function() {
      return this.updater.isMounted(this);
    },
    setProps: function(partialProps, callback) {
      if ("production" !== 'production') {
        warnSetProps();
      }
      this.updater.enqueueSetProps(this, partialProps);
      if (callback) {
        this.updater.enqueueCallback(this, callback);
      }
    },
    replaceProps: function(newProps, callback) {
      if ("production" !== 'production') {
        warnSetProps();
      }
      this.updater.enqueueReplaceProps(this, newProps);
      if (callback) {
        this.updater.enqueueCallback(this, callback);
      }
    }
  };
  var ReactClassComponent = function() {};
  assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);
  var ReactClass = {
    createClass: function(spec) {
      var Constructor = function(props, context, updater) {
        if ("production" !== 'production') {
          "production" !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : undefined;
        }
        if (this.__reactAutoBindMap) {
          bindAutoBindMethods(this);
        }
        this.props = props;
        this.context = context;
        this.refs = emptyObject;
        this.updater = updater || ReactNoopUpdateQueue;
        this.state = null;
        var initialState = this.getInitialState ? this.getInitialState() : null;
        if ("production" !== 'production') {
          if (typeof initialState === 'undefined' && this.getInitialState._isMockFunction) {
            initialState = null;
          }
        }
        !(typeof initialState === 'object' && !Array.isArray(initialState)) ? "production" !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : invariant(false) : undefined;
        this.state = initialState;
      };
      Constructor.prototype = new ReactClassComponent();
      Constructor.prototype.constructor = Constructor;
      injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));
      mixSpecIntoComponent(Constructor, spec);
      if (Constructor.getDefaultProps) {
        Constructor.defaultProps = Constructor.getDefaultProps();
      }
      if ("production" !== 'production') {
        if (Constructor.getDefaultProps) {
          Constructor.getDefaultProps.isReactClassApproved = {};
        }
        if (Constructor.prototype.getInitialState) {
          Constructor.prototype.getInitialState.isReactClassApproved = {};
        }
      }
      !Constructor.prototype.render ? "production" !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : invariant(false) : undefined;
      if ("production" !== 'production') {
        "production" !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : undefined;
        "production" !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : undefined;
      }
      for (var methodName in ReactClassInterface) {
        if (!Constructor.prototype[methodName]) {
          Constructor.prototype[methodName] = null;
        }
      }
      return Constructor;
    },
    injection: {injectMixin: function(mixin) {
        injectedMixins.push(mixin);
      }}
  };
  module.exports = ReactClass;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactInjection.js", ["./DOMProperty", "./EventPluginHub", "./ReactComponentEnvironment", "./ReactClass", "./ReactEmptyComponent", "./ReactBrowserEventEmitter", "./ReactNativeComponent", "./ReactPerf", "./ReactRootIndex", "./ReactUpdates", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var DOMProperty = $__require('./DOMProperty');
  var EventPluginHub = $__require('./EventPluginHub');
  var ReactComponentEnvironment = $__require('./ReactComponentEnvironment');
  var ReactClass = $__require('./ReactClass');
  var ReactEmptyComponent = $__require('./ReactEmptyComponent');
  var ReactBrowserEventEmitter = $__require('./ReactBrowserEventEmitter');
  var ReactNativeComponent = $__require('./ReactNativeComponent');
  var ReactPerf = $__require('./ReactPerf');
  var ReactRootIndex = $__require('./ReactRootIndex');
  var ReactUpdates = $__require('./ReactUpdates');
  var ReactInjection = {
    Component: ReactComponentEnvironment.injection,
    Class: ReactClass.injection,
    DOMProperty: DOMProperty.injection,
    EmptyComponent: ReactEmptyComponent.injection,
    EventPluginHub: EventPluginHub.injection,
    EventEmitter: ReactBrowserEventEmitter.injection,
    NativeComponent: ReactNativeComponent.injection,
    Perf: ReactPerf.injection,
    RootIndex: ReactRootIndex.injection,
    Updates: ReactUpdates.injection
  };
  module.exports = ReactInjection;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactReconcileTransaction.js", ["./CallbackQueue", "./PooledClass", "./ReactBrowserEventEmitter", "./ReactDOMFeatureFlags", "./ReactInputSelection", "./Transaction", "./Object.assign", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var CallbackQueue = $__require('./CallbackQueue');
  var PooledClass = $__require('./PooledClass');
  var ReactBrowserEventEmitter = $__require('./ReactBrowserEventEmitter');
  var ReactDOMFeatureFlags = $__require('./ReactDOMFeatureFlags');
  var ReactInputSelection = $__require('./ReactInputSelection');
  var Transaction = $__require('./Transaction');
  var assign = $__require('./Object.assign');
  var SELECTION_RESTORATION = {
    initialize: ReactInputSelection.getSelectionInformation,
    close: ReactInputSelection.restoreSelection
  };
  var EVENT_SUPPRESSION = {
    initialize: function() {
      var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
      ReactBrowserEventEmitter.setEnabled(false);
      return currentlyEnabled;
    },
    close: function(previouslyEnabled) {
      ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
    }
  };
  var ON_DOM_READY_QUEUEING = {
    initialize: function() {
      this.reactMountReady.reset();
    },
    close: function() {
      this.reactMountReady.notifyAll();
    }
  };
  var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];
  function ReactReconcileTransaction(forceHTML) {
    this.reinitializeTransaction();
    this.renderToStaticMarkup = false;
    this.reactMountReady = CallbackQueue.getPooled(null);
    this.useCreateElement = !forceHTML && ReactDOMFeatureFlags.useCreateElement;
  }
  var Mixin = {
    getTransactionWrappers: function() {
      return TRANSACTION_WRAPPERS;
    },
    getReactMountReady: function() {
      return this.reactMountReady;
    },
    destructor: function() {
      CallbackQueue.release(this.reactMountReady);
      this.reactMountReady = null;
    }
  };
  assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);
  PooledClass.addPoolingTo(ReactReconcileTransaction);
  module.exports = ReactReconcileTransaction;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/getNodeForCharacterOffset.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  function getLeafNode(node) {
    while (node && node.firstChild) {
      node = node.firstChild;
    }
    return node;
  }
  function getSiblingNode(node) {
    while (node) {
      if (node.nextSibling) {
        return node.nextSibling;
      }
      node = node.parentNode;
    }
  }
  function getNodeForCharacterOffset(root, offset) {
    var node = getLeafNode(root);
    var nodeStart = 0;
    var nodeEnd = 0;
    while (node) {
      if (node.nodeType === 3) {
        nodeEnd = nodeStart + node.textContent.length;
        if (nodeStart <= offset && nodeEnd >= offset) {
          return {
            node: node,
            offset: offset - nodeStart
          };
        }
        nodeStart = nodeEnd;
      }
      node = getLeafNode(getSiblingNode(node));
    }
  }
  module.exports = getNodeForCharacterOffset;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/getTextContentAccessor.js", ["fbjs/lib/ExecutionEnvironment", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ExecutionEnvironment = $__require('fbjs/lib/ExecutionEnvironment');
  var contentKey = null;
  function getTextContentAccessor() {
    if (!contentKey && ExecutionEnvironment.canUseDOM) {
      contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
    }
    return contentKey;
  }
  module.exports = getTextContentAccessor;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactDOMSelection.js", ["fbjs/lib/ExecutionEnvironment", "./getNodeForCharacterOffset", "./getTextContentAccessor", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ExecutionEnvironment = $__require('fbjs/lib/ExecutionEnvironment');
  var getNodeForCharacterOffset = $__require('./getNodeForCharacterOffset');
  var getTextContentAccessor = $__require('./getTextContentAccessor');
  function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
    return anchorNode === focusNode && anchorOffset === focusOffset;
  }
  function getIEOffsets(node) {
    var selection = document.selection;
    var selectedRange = selection.createRange();
    var selectedLength = selectedRange.text.length;
    var fromStart = selectedRange.duplicate();
    fromStart.moveToElementText(node);
    fromStart.setEndPoint('EndToStart', selectedRange);
    var startOffset = fromStart.text.length;
    var endOffset = startOffset + selectedLength;
    return {
      start: startOffset,
      end: endOffset
    };
  }
  function getModernOffsets(node) {
    var selection = window.getSelection && window.getSelection();
    if (!selection || selection.rangeCount === 0) {
      return null;
    }
    var anchorNode = selection.anchorNode;
    var anchorOffset = selection.anchorOffset;
    var focusNode = selection.focusNode;
    var focusOffset = selection.focusOffset;
    var currentRange = selection.getRangeAt(0);
    try {
      currentRange.startContainer.nodeType;
      currentRange.endContainer.nodeType;
    } catch (e) {
      return null;
    }
    var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);
    var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;
    var tempRange = currentRange.cloneRange();
    tempRange.selectNodeContents(node);
    tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);
    var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);
    var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
    var end = start + rangeLength;
    var detectionRange = document.createRange();
    detectionRange.setStart(anchorNode, anchorOffset);
    detectionRange.setEnd(focusNode, focusOffset);
    var isBackward = detectionRange.collapsed;
    return {
      start: isBackward ? end : start,
      end: isBackward ? start : end
    };
  }
  function setIEOffsets(node, offsets) {
    var range = document.selection.createRange().duplicate();
    var start,
        end;
    if (typeof offsets.end === 'undefined') {
      start = offsets.start;
      end = start;
    } else if (offsets.start > offsets.end) {
      start = offsets.end;
      end = offsets.start;
    } else {
      start = offsets.start;
      end = offsets.end;
    }
    range.moveToElementText(node);
    range.moveStart('character', start);
    range.setEndPoint('EndToStart', range);
    range.moveEnd('character', end - start);
    range.select();
  }
  function setModernOffsets(node, offsets) {
    if (!window.getSelection) {
      return;
    }
    var selection = window.getSelection();
    var length = node[getTextContentAccessor()].length;
    var start = Math.min(offsets.start, length);
    var end = typeof offsets.end === 'undefined' ? start : Math.min(offsets.end, length);
    if (!selection.extend && start > end) {
      var temp = end;
      end = start;
      start = temp;
    }
    var startMarker = getNodeForCharacterOffset(node, start);
    var endMarker = getNodeForCharacterOffset(node, end);
    if (startMarker && endMarker) {
      var range = document.createRange();
      range.setStart(startMarker.node, startMarker.offset);
      selection.removeAllRanges();
      if (start > end) {
        selection.addRange(range);
        selection.extend(endMarker.node, endMarker.offset);
      } else {
        range.setEnd(endMarker.node, endMarker.offset);
        selection.addRange(range);
      }
    }
  }
  var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);
  var ReactDOMSelection = {
    getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,
    setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
  };
  module.exports = ReactDOMSelection;
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.6.1/lib/focusNode.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  function focusNode(node) {
    try {
      node.focus();
    } catch (e) {}
  }
  module.exports = focusNode;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactInputSelection.js", ["./ReactDOMSelection", "fbjs/lib/containsNode", "fbjs/lib/focusNode", "fbjs/lib/getActiveElement", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ReactDOMSelection = $__require('./ReactDOMSelection');
  var containsNode = $__require('fbjs/lib/containsNode');
  var focusNode = $__require('fbjs/lib/focusNode');
  var getActiveElement = $__require('fbjs/lib/getActiveElement');
  function isInDocument(node) {
    return containsNode(document.documentElement, node);
  }
  var ReactInputSelection = {
    hasSelectionCapabilities: function(elem) {
      var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
      return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
    },
    getSelectionInformation: function() {
      var focusedElem = getActiveElement();
      return {
        focusedElem: focusedElem,
        selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
      };
    },
    restoreSelection: function(priorSelectionInformation) {
      var curFocusedElem = getActiveElement();
      var priorFocusedElem = priorSelectionInformation.focusedElem;
      var priorSelectionRange = priorSelectionInformation.selectionRange;
      if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
        if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
          ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
        }
        focusNode(priorFocusedElem);
      }
    },
    getSelection: function(input) {
      var selection;
      if ('selectionStart' in input) {
        selection = {
          start: input.selectionStart,
          end: input.selectionEnd
        };
      } else if (document.selection && (input.nodeName && input.nodeName.toLowerCase() === 'input')) {
        var range = document.selection.createRange();
        if (range.parentElement() === input) {
          selection = {
            start: -range.moveStart('character', -input.value.length),
            end: -range.moveEnd('character', -input.value.length)
          };
        }
      } else {
        selection = ReactDOMSelection.getOffsets(input);
      }
      return selection || {
        start: 0,
        end: 0
      };
    },
    setSelection: function(input, offsets) {
      var start = offsets.start;
      var end = offsets.end;
      if (typeof end === 'undefined') {
        end = start;
      }
      if ('selectionStart' in input) {
        input.selectionStart = start;
        input.selectionEnd = Math.min(end, input.value.length);
      } else if (document.selection && (input.nodeName && input.nodeName.toLowerCase() === 'input')) {
        var range = input.createTextRange();
        range.collapse(true);
        range.moveStart('character', start);
        range.moveEnd('character', end - start);
        range.select();
      } else {
        ReactDOMSelection.setOffsets(input, offsets);
      }
    }
  };
  module.exports = ReactInputSelection;
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.6.1/lib/getActiveElement.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  function getActiveElement() {
    if (typeof document === 'undefined') {
      return null;
    }
    try {
      return document.activeElement || document.body;
    } catch (e) {
      return document.body;
    }
  }
  module.exports = getActiveElement;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/isTextInputElement.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var supportedInputTypes = {
    'color': true,
    'date': true,
    'datetime': true,
    'datetime-local': true,
    'email': true,
    'month': true,
    'number': true,
    'password': true,
    'range': true,
    'search': true,
    'tel': true,
    'text': true,
    'time': true,
    'url': true,
    'week': true
  };
  function isTextInputElement(elem) {
    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
    return nodeName && (nodeName === 'input' && supportedInputTypes[elem.type] || nodeName === 'textarea');
  }
  module.exports = isTextInputElement;
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.6.1/lib/shallowEqual.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  function shallowEqual(objA, objB) {
    if (objA === objB) {
      return true;
    }
    if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
      return false;
    }
    var keysA = Object.keys(objA);
    var keysB = Object.keys(objB);
    if (keysA.length !== keysB.length) {
      return false;
    }
    var bHasOwnProperty = hasOwnProperty.bind(objB);
    for (var i = 0; i < keysA.length; i++) {
      if (!bHasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {
        return false;
      }
    }
    return true;
  }
  module.exports = shallowEqual;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/SelectEventPlugin.js", ["./EventConstants", "./EventPropagators", "fbjs/lib/ExecutionEnvironment", "./ReactInputSelection", "./SyntheticEvent", "fbjs/lib/getActiveElement", "./isTextInputElement", "fbjs/lib/keyOf", "fbjs/lib/shallowEqual", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var EventConstants = $__require('./EventConstants');
  var EventPropagators = $__require('./EventPropagators');
  var ExecutionEnvironment = $__require('fbjs/lib/ExecutionEnvironment');
  var ReactInputSelection = $__require('./ReactInputSelection');
  var SyntheticEvent = $__require('./SyntheticEvent');
  var getActiveElement = $__require('fbjs/lib/getActiveElement');
  var isTextInputElement = $__require('./isTextInputElement');
  var keyOf = $__require('fbjs/lib/keyOf');
  var shallowEqual = $__require('fbjs/lib/shallowEqual');
  var topLevelTypes = EventConstants.topLevelTypes;
  var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;
  var eventTypes = {select: {
      phasedRegistrationNames: {
        bubbled: keyOf({onSelect: null}),
        captured: keyOf({onSelectCapture: null})
      },
      dependencies: [topLevelTypes.topBlur, topLevelTypes.topContextMenu, topLevelTypes.topFocus, topLevelTypes.topKeyDown, topLevelTypes.topMouseDown, topLevelTypes.topMouseUp, topLevelTypes.topSelectionChange]
    }};
  var activeElement = null;
  var activeElementID = null;
  var lastSelection = null;
  var mouseDown = false;
  var hasListener = false;
  var ON_SELECT_KEY = keyOf({onSelect: null});
  function getSelection(node) {
    if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
      return {
        start: node.selectionStart,
        end: node.selectionEnd
      };
    } else if (window.getSelection) {
      var selection = window.getSelection();
      return {
        anchorNode: selection.anchorNode,
        anchorOffset: selection.anchorOffset,
        focusNode: selection.focusNode,
        focusOffset: selection.focusOffset
      };
    } else if (document.selection) {
      var range = document.selection.createRange();
      return {
        parentElement: range.parentElement(),
        text: range.text,
        top: range.boundingTop,
        left: range.boundingLeft
      };
    }
  }
  function constructSelectEvent(nativeEvent, nativeEventTarget) {
    if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
      return null;
    }
    var currentSelection = getSelection(activeElement);
    if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
      lastSelection = currentSelection;
      var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementID, nativeEvent, nativeEventTarget);
      syntheticEvent.type = 'select';
      syntheticEvent.target = activeElement;
      EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);
      return syntheticEvent;
    }
    return null;
  }
  var SelectEventPlugin = {
    eventTypes: eventTypes,
    extractEvents: function(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
      if (!hasListener) {
        return null;
      }
      switch (topLevelType) {
        case topLevelTypes.topFocus:
          if (isTextInputElement(topLevelTarget) || topLevelTarget.contentEditable === 'true') {
            activeElement = topLevelTarget;
            activeElementID = topLevelTargetID;
            lastSelection = null;
          }
          break;
        case topLevelTypes.topBlur:
          activeElement = null;
          activeElementID = null;
          lastSelection = null;
          break;
        case topLevelTypes.topMouseDown:
          mouseDown = true;
          break;
        case topLevelTypes.topContextMenu:
        case topLevelTypes.topMouseUp:
          mouseDown = false;
          return constructSelectEvent(nativeEvent, nativeEventTarget);
        case topLevelTypes.topSelectionChange:
          if (skipSelectionChangeEvent) {
            break;
          }
        case topLevelTypes.topKeyDown:
        case topLevelTypes.topKeyUp:
          return constructSelectEvent(nativeEvent, nativeEventTarget);
      }
      return null;
    },
    didPutListener: function(id, registrationName, listener) {
      if (registrationName === ON_SELECT_KEY) {
        hasListener = true;
      }
    }
  };
  module.exports = SelectEventPlugin;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ServerReactRootIndex.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var GLOBAL_MOUNT_POINT_MAX = Math.pow(2, 53);
  var ServerReactRootIndex = {createReactRootIndex: function() {
      return Math.ceil(Math.random() * GLOBAL_MOUNT_POINT_MAX);
    }};
  module.exports = ServerReactRootIndex;
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.6.1/lib/EventListener.js", ["./emptyFunction", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var emptyFunction = $__require('./emptyFunction');
  var EventListener = {
    listen: function(target, eventType, callback) {
      if (target.addEventListener) {
        target.addEventListener(eventType, callback, false);
        return {remove: function() {
            target.removeEventListener(eventType, callback, false);
          }};
      } else if (target.attachEvent) {
        target.attachEvent('on' + eventType, callback);
        return {remove: function() {
            target.detachEvent('on' + eventType, callback);
          }};
      }
    },
    capture: function(target, eventType, callback) {
      if (target.addEventListener) {
        target.addEventListener(eventType, callback, true);
        return {remove: function() {
            target.removeEventListener(eventType, callback, true);
          }};
      } else {
        if ("production" !== 'production') {
          console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
        }
        return {remove: emptyFunction};
      }
    },
    registerDefault: function() {}
  };
  module.exports = EventListener;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/EventPropagators.js", ["./EventConstants", "./EventPluginHub", "fbjs/lib/warning", "./accumulateInto", "./forEachAccumulated", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var EventConstants = $__require('./EventConstants');
  var EventPluginHub = $__require('./EventPluginHub');
  var warning = $__require('fbjs/lib/warning');
  var accumulateInto = $__require('./accumulateInto');
  var forEachAccumulated = $__require('./forEachAccumulated');
  var PropagationPhases = EventConstants.PropagationPhases;
  var getListener = EventPluginHub.getListener;
  function listenerAtPhase(id, event, propagationPhase) {
    var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
    return getListener(id, registrationName);
  }
  function accumulateDirectionalDispatches(domID, upwards, event) {
    if ("production" !== 'production') {
      "production" !== 'production' ? warning(domID, 'Dispatching id must not be null') : undefined;
    }
    var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
    var listener = listenerAtPhase(domID, event, phase);
    if (listener) {
      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
      event._dispatchIDs = accumulateInto(event._dispatchIDs, domID);
    }
  }
  function accumulateTwoPhaseDispatchesSingle(event) {
    if (event && event.dispatchConfig.phasedRegistrationNames) {
      EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(event.dispatchMarker, accumulateDirectionalDispatches, event);
    }
  }
  function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
    if (event && event.dispatchConfig.phasedRegistrationNames) {
      EventPluginHub.injection.getInstanceHandle().traverseTwoPhaseSkipTarget(event.dispatchMarker, accumulateDirectionalDispatches, event);
    }
  }
  function accumulateDispatches(id, ignoredDirection, event) {
    if (event && event.dispatchConfig.registrationName) {
      var registrationName = event.dispatchConfig.registrationName;
      var listener = getListener(id, registrationName);
      if (listener) {
        event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
        event._dispatchIDs = accumulateInto(event._dispatchIDs, id);
      }
    }
  }
  function accumulateDirectDispatchesSingle(event) {
    if (event && event.dispatchConfig.registrationName) {
      accumulateDispatches(event.dispatchMarker, null, event);
    }
  }
  function accumulateTwoPhaseDispatches(events) {
    forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
  }
  function accumulateTwoPhaseDispatchesSkipTarget(events) {
    forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
  }
  function accumulateEnterLeaveDispatches(leave, enter, fromID, toID) {
    EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(fromID, toID, accumulateDispatches, leave, enter);
  }
  function accumulateDirectDispatches(events) {
    forEachAccumulated(events, accumulateDirectDispatchesSingle);
  }
  var EventPropagators = {
    accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
    accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
    accumulateDirectDispatches: accumulateDirectDispatches,
    accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
  };
  module.exports = EventPropagators;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/SyntheticClipboardEvent.js", ["./SyntheticEvent", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var SyntheticEvent = $__require('./SyntheticEvent');
  var ClipboardEventInterface = {clipboardData: function(event) {
      return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
    }};
  function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);
  module.exports = SyntheticClipboardEvent;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/SyntheticFocusEvent.js", ["./SyntheticUIEvent", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var SyntheticUIEvent = $__require('./SyntheticUIEvent');
  var FocusEventInterface = {relatedTarget: null};
  function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);
  module.exports = SyntheticFocusEvent;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/getEventKey.js", ["./getEventCharCode", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var getEventCharCode = $__require('./getEventCharCode');
  var normalizeKey = {
    'Esc': 'Escape',
    'Spacebar': ' ',
    'Left': 'ArrowLeft',
    'Up': 'ArrowUp',
    'Right': 'ArrowRight',
    'Down': 'ArrowDown',
    'Del': 'Delete',
    'Win': 'OS',
    'Menu': 'ContextMenu',
    'Apps': 'ContextMenu',
    'Scroll': 'ScrollLock',
    'MozPrintableKey': 'Unidentified'
  };
  var translateToKey = {
    8: 'Backspace',
    9: 'Tab',
    12: 'Clear',
    13: 'Enter',
    16: 'Shift',
    17: 'Control',
    18: 'Alt',
    19: 'Pause',
    20: 'CapsLock',
    27: 'Escape',
    32: ' ',
    33: 'PageUp',
    34: 'PageDown',
    35: 'End',
    36: 'Home',
    37: 'ArrowLeft',
    38: 'ArrowUp',
    39: 'ArrowRight',
    40: 'ArrowDown',
    45: 'Insert',
    46: 'Delete',
    112: 'F1',
    113: 'F2',
    114: 'F3',
    115: 'F4',
    116: 'F5',
    117: 'F6',
    118: 'F7',
    119: 'F8',
    120: 'F9',
    121: 'F10',
    122: 'F11',
    123: 'F12',
    144: 'NumLock',
    145: 'ScrollLock',
    224: 'Meta'
  };
  function getEventKey(nativeEvent) {
    if (nativeEvent.key) {
      var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
      if (key !== 'Unidentified') {
        return key;
      }
    }
    if (nativeEvent.type === 'keypress') {
      var charCode = getEventCharCode(nativeEvent);
      return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
    }
    if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
      return translateToKey[nativeEvent.keyCode] || 'Unidentified';
    }
    return '';
  }
  module.exports = getEventKey;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/SyntheticKeyboardEvent.js", ["./SyntheticUIEvent", "./getEventCharCode", "./getEventKey", "./getEventModifierState", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var SyntheticUIEvent = $__require('./SyntheticUIEvent');
  var getEventCharCode = $__require('./getEventCharCode');
  var getEventKey = $__require('./getEventKey');
  var getEventModifierState = $__require('./getEventModifierState');
  var KeyboardEventInterface = {
    key: getEventKey,
    location: null,
    ctrlKey: null,
    shiftKey: null,
    altKey: null,
    metaKey: null,
    repeat: null,
    locale: null,
    getModifierState: getEventModifierState,
    charCode: function(event) {
      if (event.type === 'keypress') {
        return getEventCharCode(event);
      }
      return 0;
    },
    keyCode: function(event) {
      if (event.type === 'keydown' || event.type === 'keyup') {
        return event.keyCode;
      }
      return 0;
    },
    which: function(event) {
      if (event.type === 'keypress') {
        return getEventCharCode(event);
      }
      if (event.type === 'keydown' || event.type === 'keyup') {
        return event.keyCode;
      }
      return 0;
    }
  };
  function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);
  module.exports = SyntheticKeyboardEvent;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/SyntheticDragEvent.js", ["./SyntheticMouseEvent", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var SyntheticMouseEvent = $__require('./SyntheticMouseEvent');
  var DragEventInterface = {dataTransfer: null};
  function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);
  module.exports = SyntheticDragEvent;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/SyntheticTouchEvent.js", ["./SyntheticUIEvent", "./getEventModifierState", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var SyntheticUIEvent = $__require('./SyntheticUIEvent');
  var getEventModifierState = $__require('./getEventModifierState');
  var TouchEventInterface = {
    touches: null,
    targetTouches: null,
    changedTouches: null,
    altKey: null,
    metaKey: null,
    ctrlKey: null,
    shiftKey: null,
    getModifierState: getEventModifierState
  };
  function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);
  module.exports = SyntheticTouchEvent;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/SyntheticEvent.js", ["./PooledClass", "./Object.assign", "fbjs/lib/emptyFunction", "fbjs/lib/warning", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var PooledClass = $__require('./PooledClass');
  var assign = $__require('./Object.assign');
  var emptyFunction = $__require('fbjs/lib/emptyFunction');
  var warning = $__require('fbjs/lib/warning');
  var EventInterface = {
    type: null,
    target: null,
    currentTarget: emptyFunction.thatReturnsNull,
    eventPhase: null,
    bubbles: null,
    cancelable: null,
    timeStamp: function(event) {
      return event.timeStamp || Date.now();
    },
    defaultPrevented: null,
    isTrusted: null
  };
  function SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    this.dispatchConfig = dispatchConfig;
    this.dispatchMarker = dispatchMarker;
    this.nativeEvent = nativeEvent;
    var Interface = this.constructor.Interface;
    for (var propName in Interface) {
      if (!Interface.hasOwnProperty(propName)) {
        continue;
      }
      var normalize = Interface[propName];
      if (normalize) {
        this[propName] = normalize(nativeEvent);
      } else {
        if (propName === 'target') {
          this.target = nativeEventTarget;
        } else {
          this[propName] = nativeEvent[propName];
        }
      }
    }
    var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
    if (defaultPrevented) {
      this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
    } else {
      this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
    }
    this.isPropagationStopped = emptyFunction.thatReturnsFalse;
  }
  assign(SyntheticEvent.prototype, {
    preventDefault: function() {
      this.defaultPrevented = true;
      var event = this.nativeEvent;
      if ("production" !== 'production') {
        "production" !== 'production' ? warning(event, 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re calling `preventDefault` on a ' + 'released/nullified synthetic event. This is a no-op. See ' + 'https://fb.me/react-event-pooling for more information.') : undefined;
      }
      if (!event) {
        return;
      }
      if (event.preventDefault) {
        event.preventDefault();
      } else {
        event.returnValue = false;
      }
      this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
    },
    stopPropagation: function() {
      var event = this.nativeEvent;
      if ("production" !== 'production') {
        "production" !== 'production' ? warning(event, 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re calling `stopPropagation` on a ' + 'released/nullified synthetic event. This is a no-op. See ' + 'https://fb.me/react-event-pooling for more information.') : undefined;
      }
      if (!event) {
        return;
      }
      if (event.stopPropagation) {
        event.stopPropagation();
      } else {
        event.cancelBubble = true;
      }
      this.isPropagationStopped = emptyFunction.thatReturnsTrue;
    },
    persist: function() {
      this.isPersistent = emptyFunction.thatReturnsTrue;
    },
    isPersistent: emptyFunction.thatReturnsFalse,
    destructor: function() {
      var Interface = this.constructor.Interface;
      for (var propName in Interface) {
        this[propName] = null;
      }
      this.dispatchConfig = null;
      this.dispatchMarker = null;
      this.nativeEvent = null;
    }
  });
  SyntheticEvent.Interface = EventInterface;
  SyntheticEvent.augmentClass = function(Class, Interface) {
    var Super = this;
    var prototype = Object.create(Super.prototype);
    assign(prototype, Class.prototype);
    Class.prototype = prototype;
    Class.prototype.constructor = Class;
    Class.Interface = assign({}, Super.Interface, Interface);
    Class.augmentClass = Super.augmentClass;
    PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
  };
  PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);
  module.exports = SyntheticEvent;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/getEventTarget.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  function getEventTarget(nativeEvent) {
    var target = nativeEvent.target || nativeEvent.srcElement || window;
    return target.nodeType === 3 ? target.parentNode : target;
  }
  module.exports = getEventTarget;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/SyntheticUIEvent.js", ["./SyntheticEvent", "./getEventTarget", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var SyntheticEvent = $__require('./SyntheticEvent');
  var getEventTarget = $__require('./getEventTarget');
  var UIEventInterface = {
    view: function(event) {
      if (event.view) {
        return event.view;
      }
      var target = getEventTarget(event);
      if (target != null && target.window === target) {
        return target;
      }
      var doc = target.ownerDocument;
      if (doc) {
        return doc.defaultView || doc.parentWindow;
      } else {
        return window;
      }
    },
    detail: function(event) {
      return event.detail || 0;
    }
  };
  function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);
  module.exports = SyntheticUIEvent;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/getEventModifierState.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var modifierKeyToProp = {
    'Alt': 'altKey',
    'Control': 'ctrlKey',
    'Meta': 'metaKey',
    'Shift': 'shiftKey'
  };
  function modifierStateGetter(keyArg) {
    var syntheticEvent = this;
    var nativeEvent = syntheticEvent.nativeEvent;
    if (nativeEvent.getModifierState) {
      return nativeEvent.getModifierState(keyArg);
    }
    var keyProp = modifierKeyToProp[keyArg];
    return keyProp ? !!nativeEvent[keyProp] : false;
  }
  function getEventModifierState(nativeEvent) {
    return modifierStateGetter;
  }
  module.exports = getEventModifierState;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/SyntheticMouseEvent.js", ["./SyntheticUIEvent", "./ViewportMetrics", "./getEventModifierState", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var SyntheticUIEvent = $__require('./SyntheticUIEvent');
  var ViewportMetrics = $__require('./ViewportMetrics');
  var getEventModifierState = $__require('./getEventModifierState');
  var MouseEventInterface = {
    screenX: null,
    screenY: null,
    clientX: null,
    clientY: null,
    ctrlKey: null,
    shiftKey: null,
    altKey: null,
    metaKey: null,
    getModifierState: getEventModifierState,
    button: function(event) {
      var button = event.button;
      if ('which' in event) {
        return button;
      }
      return button === 2 ? 2 : button === 4 ? 1 : 0;
    },
    buttons: null,
    relatedTarget: function(event) {
      return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
    },
    pageX: function(event) {
      return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
    },
    pageY: function(event) {
      return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
    }
  };
  function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);
  module.exports = SyntheticMouseEvent;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/SyntheticWheelEvent.js", ["./SyntheticMouseEvent", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var SyntheticMouseEvent = $__require('./SyntheticMouseEvent');
  var WheelEventInterface = {
    deltaX: function(event) {
      return 'deltaX' in event ? event.deltaX : 'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
    },
    deltaY: function(event) {
      return 'deltaY' in event ? event.deltaY : 'wheelDeltaY' in event ? -event.wheelDeltaY : 'wheelDelta' in event ? -event.wheelDelta : 0;
    },
    deltaZ: null,
    deltaMode: null
  };
  function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);
  module.exports = SyntheticWheelEvent;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/getEventCharCode.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  function getEventCharCode(nativeEvent) {
    var charCode;
    var keyCode = nativeEvent.keyCode;
    if ('charCode' in nativeEvent) {
      charCode = nativeEvent.charCode;
      if (charCode === 0 && keyCode === 13) {
        charCode = 13;
      }
    } else {
      charCode = keyCode;
    }
    if (charCode >= 32 || charCode === 13) {
      return charCode;
    }
    return 0;
  }
  module.exports = getEventCharCode;
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.6.1/lib/keyOf.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var keyOf = function(oneKeyObj) {
    var key;
    for (key in oneKeyObj) {
      if (!oneKeyObj.hasOwnProperty(key)) {
        continue;
      }
      return key;
    }
    return null;
  };
  module.exports = keyOf;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/SimpleEventPlugin.js", ["./EventConstants", "fbjs/lib/EventListener", "./EventPropagators", "./ReactMount", "./SyntheticClipboardEvent", "./SyntheticEvent", "./SyntheticFocusEvent", "./SyntheticKeyboardEvent", "./SyntheticMouseEvent", "./SyntheticDragEvent", "./SyntheticTouchEvent", "./SyntheticUIEvent", "./SyntheticWheelEvent", "fbjs/lib/emptyFunction", "./getEventCharCode", "fbjs/lib/invariant", "fbjs/lib/keyOf", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var EventConstants = $__require('./EventConstants');
  var EventListener = $__require('fbjs/lib/EventListener');
  var EventPropagators = $__require('./EventPropagators');
  var ReactMount = $__require('./ReactMount');
  var SyntheticClipboardEvent = $__require('./SyntheticClipboardEvent');
  var SyntheticEvent = $__require('./SyntheticEvent');
  var SyntheticFocusEvent = $__require('./SyntheticFocusEvent');
  var SyntheticKeyboardEvent = $__require('./SyntheticKeyboardEvent');
  var SyntheticMouseEvent = $__require('./SyntheticMouseEvent');
  var SyntheticDragEvent = $__require('./SyntheticDragEvent');
  var SyntheticTouchEvent = $__require('./SyntheticTouchEvent');
  var SyntheticUIEvent = $__require('./SyntheticUIEvent');
  var SyntheticWheelEvent = $__require('./SyntheticWheelEvent');
  var emptyFunction = $__require('fbjs/lib/emptyFunction');
  var getEventCharCode = $__require('./getEventCharCode');
  var invariant = $__require('fbjs/lib/invariant');
  var keyOf = $__require('fbjs/lib/keyOf');
  var topLevelTypes = EventConstants.topLevelTypes;
  var eventTypes = {
    abort: {phasedRegistrationNames: {
        bubbled: keyOf({onAbort: true}),
        captured: keyOf({onAbortCapture: true})
      }},
    blur: {phasedRegistrationNames: {
        bubbled: keyOf({onBlur: true}),
        captured: keyOf({onBlurCapture: true})
      }},
    canPlay: {phasedRegistrationNames: {
        bubbled: keyOf({onCanPlay: true}),
        captured: keyOf({onCanPlayCapture: true})
      }},
    canPlayThrough: {phasedRegistrationNames: {
        bubbled: keyOf({onCanPlayThrough: true}),
        captured: keyOf({onCanPlayThroughCapture: true})
      }},
    click: {phasedRegistrationNames: {
        bubbled: keyOf({onClick: true}),
        captured: keyOf({onClickCapture: true})
      }},
    contextMenu: {phasedRegistrationNames: {
        bubbled: keyOf({onContextMenu: true}),
        captured: keyOf({onContextMenuCapture: true})
      }},
    copy: {phasedRegistrationNames: {
        bubbled: keyOf({onCopy: true}),
        captured: keyOf({onCopyCapture: true})
      }},
    cut: {phasedRegistrationNames: {
        bubbled: keyOf({onCut: true}),
        captured: keyOf({onCutCapture: true})
      }},
    doubleClick: {phasedRegistrationNames: {
        bubbled: keyOf({onDoubleClick: true}),
        captured: keyOf({onDoubleClickCapture: true})
      }},
    drag: {phasedRegistrationNames: {
        bubbled: keyOf({onDrag: true}),
        captured: keyOf({onDragCapture: true})
      }},
    dragEnd: {phasedRegistrationNames: {
        bubbled: keyOf({onDragEnd: true}),
        captured: keyOf({onDragEndCapture: true})
      }},
    dragEnter: {phasedRegistrationNames: {
        bubbled: keyOf({onDragEnter: true}),
        captured: keyOf({onDragEnterCapture: true})
      }},
    dragExit: {phasedRegistrationNames: {
        bubbled: keyOf({onDragExit: true}),
        captured: keyOf({onDragExitCapture: true})
      }},
    dragLeave: {phasedRegistrationNames: {
        bubbled: keyOf({onDragLeave: true}),
        captured: keyOf({onDragLeaveCapture: true})
      }},
    dragOver: {phasedRegistrationNames: {
        bubbled: keyOf({onDragOver: true}),
        captured: keyOf({onDragOverCapture: true})
      }},
    dragStart: {phasedRegistrationNames: {
        bubbled: keyOf({onDragStart: true}),
        captured: keyOf({onDragStartCapture: true})
      }},
    drop: {phasedRegistrationNames: {
        bubbled: keyOf({onDrop: true}),
        captured: keyOf({onDropCapture: true})
      }},
    durationChange: {phasedRegistrationNames: {
        bubbled: keyOf({onDurationChange: true}),
        captured: keyOf({onDurationChangeCapture: true})
      }},
    emptied: {phasedRegistrationNames: {
        bubbled: keyOf({onEmptied: true}),
        captured: keyOf({onEmptiedCapture: true})
      }},
    encrypted: {phasedRegistrationNames: {
        bubbled: keyOf({onEncrypted: true}),
        captured: keyOf({onEncryptedCapture: true})
      }},
    ended: {phasedRegistrationNames: {
        bubbled: keyOf({onEnded: true}),
        captured: keyOf({onEndedCapture: true})
      }},
    error: {phasedRegistrationNames: {
        bubbled: keyOf({onError: true}),
        captured: keyOf({onErrorCapture: true})
      }},
    focus: {phasedRegistrationNames: {
        bubbled: keyOf({onFocus: true}),
        captured: keyOf({onFocusCapture: true})
      }},
    input: {phasedRegistrationNames: {
        bubbled: keyOf({onInput: true}),
        captured: keyOf({onInputCapture: true})
      }},
    keyDown: {phasedRegistrationNames: {
        bubbled: keyOf({onKeyDown: true}),
        captured: keyOf({onKeyDownCapture: true})
      }},
    keyPress: {phasedRegistrationNames: {
        bubbled: keyOf({onKeyPress: true}),
        captured: keyOf({onKeyPressCapture: true})
      }},
    keyUp: {phasedRegistrationNames: {
        bubbled: keyOf({onKeyUp: true}),
        captured: keyOf({onKeyUpCapture: true})
      }},
    load: {phasedRegistrationNames: {
        bubbled: keyOf({onLoad: true}),
        captured: keyOf({onLoadCapture: true})
      }},
    loadedData: {phasedRegistrationNames: {
        bubbled: keyOf({onLoadedData: true}),
        captured: keyOf({onLoadedDataCapture: true})
      }},
    loadedMetadata: {phasedRegistrationNames: {
        bubbled: keyOf({onLoadedMetadata: true}),
        captured: keyOf({onLoadedMetadataCapture: true})
      }},
    loadStart: {phasedRegistrationNames: {
        bubbled: keyOf({onLoadStart: true}),
        captured: keyOf({onLoadStartCapture: true})
      }},
    mouseDown: {phasedRegistrationNames: {
        bubbled: keyOf({onMouseDown: true}),
        captured: keyOf({onMouseDownCapture: true})
      }},
    mouseMove: {phasedRegistrationNames: {
        bubbled: keyOf({onMouseMove: true}),
        captured: keyOf({onMouseMoveCapture: true})
      }},
    mouseOut: {phasedRegistrationNames: {
        bubbled: keyOf({onMouseOut: true}),
        captured: keyOf({onMouseOutCapture: true})
      }},
    mouseOver: {phasedRegistrationNames: {
        bubbled: keyOf({onMouseOver: true}),
        captured: keyOf({onMouseOverCapture: true})
      }},
    mouseUp: {phasedRegistrationNames: {
        bubbled: keyOf({onMouseUp: true}),
        captured: keyOf({onMouseUpCapture: true})
      }},
    paste: {phasedRegistrationNames: {
        bubbled: keyOf({onPaste: true}),
        captured: keyOf({onPasteCapture: true})
      }},
    pause: {phasedRegistrationNames: {
        bubbled: keyOf({onPause: true}),
        captured: keyOf({onPauseCapture: true})
      }},
    play: {phasedRegistrationNames: {
        bubbled: keyOf({onPlay: true}),
        captured: keyOf({onPlayCapture: true})
      }},
    playing: {phasedRegistrationNames: {
        bubbled: keyOf({onPlaying: true}),
        captured: keyOf({onPlayingCapture: true})
      }},
    progress: {phasedRegistrationNames: {
        bubbled: keyOf({onProgress: true}),
        captured: keyOf({onProgressCapture: true})
      }},
    rateChange: {phasedRegistrationNames: {
        bubbled: keyOf({onRateChange: true}),
        captured: keyOf({onRateChangeCapture: true})
      }},
    reset: {phasedRegistrationNames: {
        bubbled: keyOf({onReset: true}),
        captured: keyOf({onResetCapture: true})
      }},
    scroll: {phasedRegistrationNames: {
        bubbled: keyOf({onScroll: true}),
        captured: keyOf({onScrollCapture: true})
      }},
    seeked: {phasedRegistrationNames: {
        bubbled: keyOf({onSeeked: true}),
        captured: keyOf({onSeekedCapture: true})
      }},
    seeking: {phasedRegistrationNames: {
        bubbled: keyOf({onSeeking: true}),
        captured: keyOf({onSeekingCapture: true})
      }},
    stalled: {phasedRegistrationNames: {
        bubbled: keyOf({onStalled: true}),
        captured: keyOf({onStalledCapture: true})
      }},
    submit: {phasedRegistrationNames: {
        bubbled: keyOf({onSubmit: true}),
        captured: keyOf({onSubmitCapture: true})
      }},
    suspend: {phasedRegistrationNames: {
        bubbled: keyOf({onSuspend: true}),
        captured: keyOf({onSuspendCapture: true})
      }},
    timeUpdate: {phasedRegistrationNames: {
        bubbled: keyOf({onTimeUpdate: true}),
        captured: keyOf({onTimeUpdateCapture: true})
      }},
    touchCancel: {phasedRegistrationNames: {
        bubbled: keyOf({onTouchCancel: true}),
        captured: keyOf({onTouchCancelCapture: true})
      }},
    touchEnd: {phasedRegistrationNames: {
        bubbled: keyOf({onTouchEnd: true}),
        captured: keyOf({onTouchEndCapture: true})
      }},
    touchMove: {phasedRegistrationNames: {
        bubbled: keyOf({onTouchMove: true}),
        captured: keyOf({onTouchMoveCapture: true})
      }},
    touchStart: {phasedRegistrationNames: {
        bubbled: keyOf({onTouchStart: true}),
        captured: keyOf({onTouchStartCapture: true})
      }},
    volumeChange: {phasedRegistrationNames: {
        bubbled: keyOf({onVolumeChange: true}),
        captured: keyOf({onVolumeChangeCapture: true})
      }},
    waiting: {phasedRegistrationNames: {
        bubbled: keyOf({onWaiting: true}),
        captured: keyOf({onWaitingCapture: true})
      }},
    wheel: {phasedRegistrationNames: {
        bubbled: keyOf({onWheel: true}),
        captured: keyOf({onWheelCapture: true})
      }}
  };
  var topLevelEventsToDispatchConfig = {
    topAbort: eventTypes.abort,
    topBlur: eventTypes.blur,
    topCanPlay: eventTypes.canPlay,
    topCanPlayThrough: eventTypes.canPlayThrough,
    topClick: eventTypes.click,
    topContextMenu: eventTypes.contextMenu,
    topCopy: eventTypes.copy,
    topCut: eventTypes.cut,
    topDoubleClick: eventTypes.doubleClick,
    topDrag: eventTypes.drag,
    topDragEnd: eventTypes.dragEnd,
    topDragEnter: eventTypes.dragEnter,
    topDragExit: eventTypes.dragExit,
    topDragLeave: eventTypes.dragLeave,
    topDragOver: eventTypes.dragOver,
    topDragStart: eventTypes.dragStart,
    topDrop: eventTypes.drop,
    topDurationChange: eventTypes.durationChange,
    topEmptied: eventTypes.emptied,
    topEncrypted: eventTypes.encrypted,
    topEnded: eventTypes.ended,
    topError: eventTypes.error,
    topFocus: eventTypes.focus,
    topInput: eventTypes.input,
    topKeyDown: eventTypes.keyDown,
    topKeyPress: eventTypes.keyPress,
    topKeyUp: eventTypes.keyUp,
    topLoad: eventTypes.load,
    topLoadedData: eventTypes.loadedData,
    topLoadedMetadata: eventTypes.loadedMetadata,
    topLoadStart: eventTypes.loadStart,
    topMouseDown: eventTypes.mouseDown,
    topMouseMove: eventTypes.mouseMove,
    topMouseOut: eventTypes.mouseOut,
    topMouseOver: eventTypes.mouseOver,
    topMouseUp: eventTypes.mouseUp,
    topPaste: eventTypes.paste,
    topPause: eventTypes.pause,
    topPlay: eventTypes.play,
    topPlaying: eventTypes.playing,
    topProgress: eventTypes.progress,
    topRateChange: eventTypes.rateChange,
    topReset: eventTypes.reset,
    topScroll: eventTypes.scroll,
    topSeeked: eventTypes.seeked,
    topSeeking: eventTypes.seeking,
    topStalled: eventTypes.stalled,
    topSubmit: eventTypes.submit,
    topSuspend: eventTypes.suspend,
    topTimeUpdate: eventTypes.timeUpdate,
    topTouchCancel: eventTypes.touchCancel,
    topTouchEnd: eventTypes.touchEnd,
    topTouchMove: eventTypes.touchMove,
    topTouchStart: eventTypes.touchStart,
    topVolumeChange: eventTypes.volumeChange,
    topWaiting: eventTypes.waiting,
    topWheel: eventTypes.wheel
  };
  for (var type in topLevelEventsToDispatchConfig) {
    topLevelEventsToDispatchConfig[type].dependencies = [type];
  }
  var ON_CLICK_KEY = keyOf({onClick: null});
  var onClickListeners = {};
  var SimpleEventPlugin = {
    eventTypes: eventTypes,
    extractEvents: function(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
      var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
      if (!dispatchConfig) {
        return null;
      }
      var EventConstructor;
      switch (topLevelType) {
        case topLevelTypes.topAbort:
        case topLevelTypes.topCanPlay:
        case topLevelTypes.topCanPlayThrough:
        case topLevelTypes.topDurationChange:
        case topLevelTypes.topEmptied:
        case topLevelTypes.topEncrypted:
        case topLevelTypes.topEnded:
        case topLevelTypes.topError:
        case topLevelTypes.topInput:
        case topLevelTypes.topLoad:
        case topLevelTypes.topLoadedData:
        case topLevelTypes.topLoadedMetadata:
        case topLevelTypes.topLoadStart:
        case topLevelTypes.topPause:
        case topLevelTypes.topPlay:
        case topLevelTypes.topPlaying:
        case topLevelTypes.topProgress:
        case topLevelTypes.topRateChange:
        case topLevelTypes.topReset:
        case topLevelTypes.topSeeked:
        case topLevelTypes.topSeeking:
        case topLevelTypes.topStalled:
        case topLevelTypes.topSubmit:
        case topLevelTypes.topSuspend:
        case topLevelTypes.topTimeUpdate:
        case topLevelTypes.topVolumeChange:
        case topLevelTypes.topWaiting:
          EventConstructor = SyntheticEvent;
          break;
        case topLevelTypes.topKeyPress:
          if (getEventCharCode(nativeEvent) === 0) {
            return null;
          }
        case topLevelTypes.topKeyDown:
        case topLevelTypes.topKeyUp:
          EventConstructor = SyntheticKeyboardEvent;
          break;
        case topLevelTypes.topBlur:
        case topLevelTypes.topFocus:
          EventConstructor = SyntheticFocusEvent;
          break;
        case topLevelTypes.topClick:
          if (nativeEvent.button === 2) {
            return null;
          }
        case topLevelTypes.topContextMenu:
        case topLevelTypes.topDoubleClick:
        case topLevelTypes.topMouseDown:
        case topLevelTypes.topMouseMove:
        case topLevelTypes.topMouseOut:
        case topLevelTypes.topMouseOver:
        case topLevelTypes.topMouseUp:
          EventConstructor = SyntheticMouseEvent;
          break;
        case topLevelTypes.topDrag:
        case topLevelTypes.topDragEnd:
        case topLevelTypes.topDragEnter:
        case topLevelTypes.topDragExit:
        case topLevelTypes.topDragLeave:
        case topLevelTypes.topDragOver:
        case topLevelTypes.topDragStart:
        case topLevelTypes.topDrop:
          EventConstructor = SyntheticDragEvent;
          break;
        case topLevelTypes.topTouchCancel:
        case topLevelTypes.topTouchEnd:
        case topLevelTypes.topTouchMove:
        case topLevelTypes.topTouchStart:
          EventConstructor = SyntheticTouchEvent;
          break;
        case topLevelTypes.topScroll:
          EventConstructor = SyntheticUIEvent;
          break;
        case topLevelTypes.topWheel:
          EventConstructor = SyntheticWheelEvent;
          break;
        case topLevelTypes.topCopy:
        case topLevelTypes.topCut:
        case topLevelTypes.topPaste:
          EventConstructor = SyntheticClipboardEvent;
          break;
      }
      !EventConstructor ? "production" !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : invariant(false) : undefined;
      var event = EventConstructor.getPooled(dispatchConfig, topLevelTargetID, nativeEvent, nativeEventTarget);
      EventPropagators.accumulateTwoPhaseDispatches(event);
      return event;
    },
    didPutListener: function(id, registrationName, listener) {
      if (registrationName === ON_CLICK_KEY) {
        var node = ReactMount.getNode(id);
        if (!onClickListeners[id]) {
          onClickListeners[id] = EventListener.listen(node, 'click', emptyFunction);
        }
      }
    },
    willDeleteListener: function(id, registrationName) {
      if (registrationName === ON_CLICK_KEY) {
        onClickListeners[id].remove();
        delete onClickListeners[id];
      }
    }
  };
  module.exports = SimpleEventPlugin;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/SVGDOMPropertyConfig.js", ["./DOMProperty", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var DOMProperty = $__require('./DOMProperty');
  var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;
  var NS = {
    xlink: 'http://www.w3.org/1999/xlink',
    xml: 'http://www.w3.org/XML/1998/namespace'
  };
  var SVGDOMPropertyConfig = {
    Properties: {
      clipPath: MUST_USE_ATTRIBUTE,
      cx: MUST_USE_ATTRIBUTE,
      cy: MUST_USE_ATTRIBUTE,
      d: MUST_USE_ATTRIBUTE,
      dx: MUST_USE_ATTRIBUTE,
      dy: MUST_USE_ATTRIBUTE,
      fill: MUST_USE_ATTRIBUTE,
      fillOpacity: MUST_USE_ATTRIBUTE,
      fontFamily: MUST_USE_ATTRIBUTE,
      fontSize: MUST_USE_ATTRIBUTE,
      fx: MUST_USE_ATTRIBUTE,
      fy: MUST_USE_ATTRIBUTE,
      gradientTransform: MUST_USE_ATTRIBUTE,
      gradientUnits: MUST_USE_ATTRIBUTE,
      markerEnd: MUST_USE_ATTRIBUTE,
      markerMid: MUST_USE_ATTRIBUTE,
      markerStart: MUST_USE_ATTRIBUTE,
      offset: MUST_USE_ATTRIBUTE,
      opacity: MUST_USE_ATTRIBUTE,
      patternContentUnits: MUST_USE_ATTRIBUTE,
      patternUnits: MUST_USE_ATTRIBUTE,
      points: MUST_USE_ATTRIBUTE,
      preserveAspectRatio: MUST_USE_ATTRIBUTE,
      r: MUST_USE_ATTRIBUTE,
      rx: MUST_USE_ATTRIBUTE,
      ry: MUST_USE_ATTRIBUTE,
      spreadMethod: MUST_USE_ATTRIBUTE,
      stopColor: MUST_USE_ATTRIBUTE,
      stopOpacity: MUST_USE_ATTRIBUTE,
      stroke: MUST_USE_ATTRIBUTE,
      strokeDasharray: MUST_USE_ATTRIBUTE,
      strokeLinecap: MUST_USE_ATTRIBUTE,
      strokeOpacity: MUST_USE_ATTRIBUTE,
      strokeWidth: MUST_USE_ATTRIBUTE,
      textAnchor: MUST_USE_ATTRIBUTE,
      transform: MUST_USE_ATTRIBUTE,
      version: MUST_USE_ATTRIBUTE,
      viewBox: MUST_USE_ATTRIBUTE,
      x1: MUST_USE_ATTRIBUTE,
      x2: MUST_USE_ATTRIBUTE,
      x: MUST_USE_ATTRIBUTE,
      xlinkActuate: MUST_USE_ATTRIBUTE,
      xlinkArcrole: MUST_USE_ATTRIBUTE,
      xlinkHref: MUST_USE_ATTRIBUTE,
      xlinkRole: MUST_USE_ATTRIBUTE,
      xlinkShow: MUST_USE_ATTRIBUTE,
      xlinkTitle: MUST_USE_ATTRIBUTE,
      xlinkType: MUST_USE_ATTRIBUTE,
      xmlBase: MUST_USE_ATTRIBUTE,
      xmlLang: MUST_USE_ATTRIBUTE,
      xmlSpace: MUST_USE_ATTRIBUTE,
      y1: MUST_USE_ATTRIBUTE,
      y2: MUST_USE_ATTRIBUTE,
      y: MUST_USE_ATTRIBUTE
    },
    DOMAttributeNamespaces: {
      xlinkActuate: NS.xlink,
      xlinkArcrole: NS.xlink,
      xlinkHref: NS.xlink,
      xlinkRole: NS.xlink,
      xlinkShow: NS.xlink,
      xlinkTitle: NS.xlink,
      xlinkType: NS.xlink,
      xmlBase: NS.xml,
      xmlLang: NS.xml,
      xmlSpace: NS.xml
    },
    DOMAttributeNames: {
      clipPath: 'clip-path',
      fillOpacity: 'fill-opacity',
      fontFamily: 'font-family',
      fontSize: 'font-size',
      gradientTransform: 'gradientTransform',
      gradientUnits: 'gradientUnits',
      markerEnd: 'marker-end',
      markerMid: 'marker-mid',
      markerStart: 'marker-start',
      patternContentUnits: 'patternContentUnits',
      patternUnits: 'patternUnits',
      preserveAspectRatio: 'preserveAspectRatio',
      spreadMethod: 'spreadMethod',
      stopColor: 'stop-color',
      stopOpacity: 'stop-opacity',
      strokeDasharray: 'stroke-dasharray',
      strokeLinecap: 'stroke-linecap',
      strokeOpacity: 'stroke-opacity',
      strokeWidth: 'stroke-width',
      textAnchor: 'text-anchor',
      viewBox: 'viewBox',
      xlinkActuate: 'xlink:actuate',
      xlinkArcrole: 'xlink:arcrole',
      xlinkHref: 'xlink:href',
      xlinkRole: 'xlink:role',
      xlinkShow: 'xlink:show',
      xlinkTitle: 'xlink:title',
      xlinkType: 'xlink:type',
      xmlBase: 'xml:base',
      xmlLang: 'xml:lang',
      xmlSpace: 'xml:space'
    }
  };
  module.exports = SVGDOMPropertyConfig;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactDefaultInjection.js", ["./BeforeInputEventPlugin", "./ChangeEventPlugin", "./ClientReactRootIndex", "./DefaultEventPluginOrder", "./EnterLeaveEventPlugin", "fbjs/lib/ExecutionEnvironment", "./HTMLDOMPropertyConfig", "./ReactBrowserComponentMixin", "./ReactComponentBrowserEnvironment", "./ReactDefaultBatchingStrategy", "./ReactDOMComponent", "./ReactDOMTextComponent", "./ReactEventListener", "./ReactInjection", "./ReactInstanceHandles", "./ReactMount", "./ReactReconcileTransaction", "./SelectEventPlugin", "./ServerReactRootIndex", "./SimpleEventPlugin", "./SVGDOMPropertyConfig", "./ReactDefaultPerf", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var BeforeInputEventPlugin = $__require('./BeforeInputEventPlugin');
  var ChangeEventPlugin = $__require('./ChangeEventPlugin');
  var ClientReactRootIndex = $__require('./ClientReactRootIndex');
  var DefaultEventPluginOrder = $__require('./DefaultEventPluginOrder');
  var EnterLeaveEventPlugin = $__require('./EnterLeaveEventPlugin');
  var ExecutionEnvironment = $__require('fbjs/lib/ExecutionEnvironment');
  var HTMLDOMPropertyConfig = $__require('./HTMLDOMPropertyConfig');
  var ReactBrowserComponentMixin = $__require('./ReactBrowserComponentMixin');
  var ReactComponentBrowserEnvironment = $__require('./ReactComponentBrowserEnvironment');
  var ReactDefaultBatchingStrategy = $__require('./ReactDefaultBatchingStrategy');
  var ReactDOMComponent = $__require('./ReactDOMComponent');
  var ReactDOMTextComponent = $__require('./ReactDOMTextComponent');
  var ReactEventListener = $__require('./ReactEventListener');
  var ReactInjection = $__require('./ReactInjection');
  var ReactInstanceHandles = $__require('./ReactInstanceHandles');
  var ReactMount = $__require('./ReactMount');
  var ReactReconcileTransaction = $__require('./ReactReconcileTransaction');
  var SelectEventPlugin = $__require('./SelectEventPlugin');
  var ServerReactRootIndex = $__require('./ServerReactRootIndex');
  var SimpleEventPlugin = $__require('./SimpleEventPlugin');
  var SVGDOMPropertyConfig = $__require('./SVGDOMPropertyConfig');
  var alreadyInjected = false;
  function inject() {
    if (alreadyInjected) {
      return;
    }
    alreadyInjected = true;
    ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);
    ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
    ReactInjection.EventPluginHub.injectInstanceHandle(ReactInstanceHandles);
    ReactInjection.EventPluginHub.injectMount(ReactMount);
    ReactInjection.EventPluginHub.injectEventPluginsByName({
      SimpleEventPlugin: SimpleEventPlugin,
      EnterLeaveEventPlugin: EnterLeaveEventPlugin,
      ChangeEventPlugin: ChangeEventPlugin,
      SelectEventPlugin: SelectEventPlugin,
      BeforeInputEventPlugin: BeforeInputEventPlugin
    });
    ReactInjection.NativeComponent.injectGenericComponentClass(ReactDOMComponent);
    ReactInjection.NativeComponent.injectTextComponentClass(ReactDOMTextComponent);
    ReactInjection.Class.injectMixin(ReactBrowserComponentMixin);
    ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
    ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);
    ReactInjection.EmptyComponent.injectEmptyComponent('noscript');
    ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
    ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);
    ReactInjection.RootIndex.injectCreateReactRootIndex(ExecutionEnvironment.canUseDOM ? ClientReactRootIndex.createReactRootIndex : ServerReactRootIndex.createReactRootIndex);
    ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
    if ("production" !== 'production') {
      var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
      if (/[?&]react_perf\b/.test(url)) {
        var ReactDefaultPerf = $__require('./ReactDefaultPerf');
        ReactDefaultPerf.start();
      }
    }
  }
  module.exports = {inject: inject};
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactVersion.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  module.exports = '0.14.7';
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/findDOMNode.js", ["./ReactCurrentOwner", "./ReactInstanceMap", "./ReactMount", "fbjs/lib/invariant", "fbjs/lib/warning", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ReactCurrentOwner = $__require('./ReactCurrentOwner');
  var ReactInstanceMap = $__require('./ReactInstanceMap');
  var ReactMount = $__require('./ReactMount');
  var invariant = $__require('fbjs/lib/invariant');
  var warning = $__require('fbjs/lib/warning');
  function findDOMNode(componentOrElement) {
    if ("production" !== 'production') {
      var owner = ReactCurrentOwner.current;
      if (owner !== null) {
        "production" !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing getDOMNode or findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : undefined;
        owner._warnedAboutRefsInRender = true;
      }
    }
    if (componentOrElement == null) {
      return null;
    }
    if (componentOrElement.nodeType === 1) {
      return componentOrElement;
    }
    if (ReactInstanceMap.has(componentOrElement)) {
      return ReactMount.getNodeFromInstance(componentOrElement);
    }
    !(componentOrElement.render == null || typeof componentOrElement.render !== 'function') ? "production" !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : invariant(false) : undefined;
    !false ? "production" !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : invariant(false) : undefined;
  }
  module.exports = findDOMNode;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/DOMProperty.js", ["fbjs/lib/invariant", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var invariant = $__require('fbjs/lib/invariant');
  function checkMask(value, bitmask) {
    return (value & bitmask) === bitmask;
  }
  var DOMPropertyInjection = {
    MUST_USE_ATTRIBUTE: 0x1,
    MUST_USE_PROPERTY: 0x2,
    HAS_SIDE_EFFECTS: 0x4,
    HAS_BOOLEAN_VALUE: 0x8,
    HAS_NUMERIC_VALUE: 0x10,
    HAS_POSITIVE_NUMERIC_VALUE: 0x20 | 0x10,
    HAS_OVERLOADED_BOOLEAN_VALUE: 0x40,
    injectDOMPropertyConfig: function(domPropertyConfig) {
      var Injection = DOMPropertyInjection;
      var Properties = domPropertyConfig.Properties || {};
      var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
      var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
      var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
      var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};
      if (domPropertyConfig.isCustomAttribute) {
        DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
      }
      for (var propName in Properties) {
        !!DOMProperty.properties.hasOwnProperty(propName) ? "production" !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property ' + '\'%s\' which has already been injected. You may be accidentally ' + 'injecting the same DOM property config twice, or you may be ' + 'injecting two configs that have conflicting property names.', propName) : invariant(false) : undefined;
        var lowerCased = propName.toLowerCase();
        var propConfig = Properties[propName];
        var propertyInfo = {
          attributeName: lowerCased,
          attributeNamespace: null,
          propertyName: propName,
          mutationMethod: null,
          mustUseAttribute: checkMask(propConfig, Injection.MUST_USE_ATTRIBUTE),
          mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
          hasSideEffects: checkMask(propConfig, Injection.HAS_SIDE_EFFECTS),
          hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
          hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
          hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
          hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
        };
        !(!propertyInfo.mustUseAttribute || !propertyInfo.mustUseProperty) ? "production" !== 'production' ? invariant(false, 'DOMProperty: Cannot require using both attribute and property: %s', propName) : invariant(false) : undefined;
        !(propertyInfo.mustUseProperty || !propertyInfo.hasSideEffects) ? "production" !== 'production' ? invariant(false, 'DOMProperty: Properties that have side effects must use property: %s', propName) : invariant(false) : undefined;
        !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? "production" !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or ' + 'numeric value, but not a combination: %s', propName) : invariant(false) : undefined;
        if ("production" !== 'production') {
          DOMProperty.getPossibleStandardName[lowerCased] = propName;
        }
        if (DOMAttributeNames.hasOwnProperty(propName)) {
          var attributeName = DOMAttributeNames[propName];
          propertyInfo.attributeName = attributeName;
          if ("production" !== 'production') {
            DOMProperty.getPossibleStandardName[attributeName] = propName;
          }
        }
        if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
          propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
        }
        if (DOMPropertyNames.hasOwnProperty(propName)) {
          propertyInfo.propertyName = DOMPropertyNames[propName];
        }
        if (DOMMutationMethods.hasOwnProperty(propName)) {
          propertyInfo.mutationMethod = DOMMutationMethods[propName];
        }
        DOMProperty.properties[propName] = propertyInfo;
      }
    }
  };
  var defaultValueCache = {};
  var DOMProperty = {
    ID_ATTRIBUTE_NAME: 'data-reactid',
    properties: {},
    getPossibleStandardName: "production" !== 'production' ? {} : null,
    _isCustomAttributeFunctions: [],
    isCustomAttribute: function(attributeName) {
      for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
        var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
        if (isCustomAttributeFn(attributeName)) {
          return true;
        }
      }
      return false;
    },
    getDefaultValueForProperty: function(nodeName, prop) {
      var nodeDefaults = defaultValueCache[nodeName];
      var testElement;
      if (!nodeDefaults) {
        defaultValueCache[nodeName] = nodeDefaults = {};
      }
      if (!(prop in nodeDefaults)) {
        testElement = document.createElement(nodeName);
        nodeDefaults[prop] = testElement[prop];
      }
      return nodeDefaults[prop];
    },
    injection: DOMPropertyInjection
  };
  module.exports = DOMProperty;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/EventPluginRegistry.js", ["fbjs/lib/invariant", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var invariant = $__require('fbjs/lib/invariant');
  var EventPluginOrder = null;
  var namesToPlugins = {};
  function recomputePluginOrdering() {
    if (!EventPluginOrder) {
      return;
    }
    for (var pluginName in namesToPlugins) {
      var PluginModule = namesToPlugins[pluginName];
      var pluginIndex = EventPluginOrder.indexOf(pluginName);
      !(pluginIndex > -1) ? "production" !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in ' + 'the plugin ordering, `%s`.', pluginName) : invariant(false) : undefined;
      if (EventPluginRegistry.plugins[pluginIndex]) {
        continue;
      }
      !PluginModule.extractEvents ? "production" !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` ' + 'method, but `%s` does not.', pluginName) : invariant(false) : undefined;
      EventPluginRegistry.plugins[pluginIndex] = PluginModule;
      var publishedEvents = PluginModule.eventTypes;
      for (var eventName in publishedEvents) {
        !publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName) ? "production" !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : invariant(false) : undefined;
      }
    }
  }
  function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
    !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? "production" !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same ' + 'event name, `%s`.', eventName) : invariant(false) : undefined;
    EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;
    var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
    if (phasedRegistrationNames) {
      for (var phaseName in phasedRegistrationNames) {
        if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
          var phasedRegistrationName = phasedRegistrationNames[phaseName];
          publishRegistrationName(phasedRegistrationName, PluginModule, eventName);
        }
      }
      return true;
    } else if (dispatchConfig.registrationName) {
      publishRegistrationName(dispatchConfig.registrationName, PluginModule, eventName);
      return true;
    }
    return false;
  }
  function publishRegistrationName(registrationName, PluginModule, eventName) {
    !!EventPluginRegistry.registrationNameModules[registrationName] ? "production" !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same ' + 'registration name, `%s`.', registrationName) : invariant(false) : undefined;
    EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
    EventPluginRegistry.registrationNameDependencies[registrationName] = PluginModule.eventTypes[eventName].dependencies;
  }
  var EventPluginRegistry = {
    plugins: [],
    eventNameDispatchConfigs: {},
    registrationNameModules: {},
    registrationNameDependencies: {},
    injectEventPluginOrder: function(InjectedEventPluginOrder) {
      !!EventPluginOrder ? "production" !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than ' + 'once. You are likely trying to load more than one copy of React.') : invariant(false) : undefined;
      EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
      recomputePluginOrdering();
    },
    injectEventPluginsByName: function(injectedNamesToPlugins) {
      var isOrderingDirty = false;
      for (var pluginName in injectedNamesToPlugins) {
        if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
          continue;
        }
        var PluginModule = injectedNamesToPlugins[pluginName];
        if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== PluginModule) {
          !!namesToPlugins[pluginName] ? "production" !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins ' + 'using the same name, `%s`.', pluginName) : invariant(false) : undefined;
          namesToPlugins[pluginName] = PluginModule;
          isOrderingDirty = true;
        }
      }
      if (isOrderingDirty) {
        recomputePluginOrdering();
      }
    },
    getPluginModuleForEvent: function(event) {
      var dispatchConfig = event.dispatchConfig;
      if (dispatchConfig.registrationName) {
        return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
      }
      for (var phase in dispatchConfig.phasedRegistrationNames) {
        if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
          continue;
        }
        var PluginModule = EventPluginRegistry.registrationNameModules[dispatchConfig.phasedRegistrationNames[phase]];
        if (PluginModule) {
          return PluginModule;
        }
      }
      return null;
    },
    _resetEventPlugins: function() {
      EventPluginOrder = null;
      for (var pluginName in namesToPlugins) {
        if (namesToPlugins.hasOwnProperty(pluginName)) {
          delete namesToPlugins[pluginName];
        }
      }
      EventPluginRegistry.plugins.length = 0;
      var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
      for (var eventName in eventNameDispatchConfigs) {
        if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
          delete eventNameDispatchConfigs[eventName];
        }
      }
      var registrationNameModules = EventPluginRegistry.registrationNameModules;
      for (var registrationName in registrationNameModules) {
        if (registrationNameModules.hasOwnProperty(registrationName)) {
          delete registrationNameModules[registrationName];
        }
      }
    }
  };
  module.exports = EventPluginRegistry;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/EventConstants.js", ["fbjs/lib/keyMirror", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var keyMirror = $__require('fbjs/lib/keyMirror');
  var PropagationPhases = keyMirror({
    bubbled: null,
    captured: null
  });
  var topLevelTypes = keyMirror({
    topAbort: null,
    topBlur: null,
    topCanPlay: null,
    topCanPlayThrough: null,
    topChange: null,
    topClick: null,
    topCompositionEnd: null,
    topCompositionStart: null,
    topCompositionUpdate: null,
    topContextMenu: null,
    topCopy: null,
    topCut: null,
    topDoubleClick: null,
    topDrag: null,
    topDragEnd: null,
    topDragEnter: null,
    topDragExit: null,
    topDragLeave: null,
    topDragOver: null,
    topDragStart: null,
    topDrop: null,
    topDurationChange: null,
    topEmptied: null,
    topEncrypted: null,
    topEnded: null,
    topError: null,
    topFocus: null,
    topInput: null,
    topKeyDown: null,
    topKeyPress: null,
    topKeyUp: null,
    topLoad: null,
    topLoadedData: null,
    topLoadedMetadata: null,
    topLoadStart: null,
    topMouseDown: null,
    topMouseMove: null,
    topMouseOut: null,
    topMouseOver: null,
    topMouseUp: null,
    topPaste: null,
    topPause: null,
    topPlay: null,
    topPlaying: null,
    topProgress: null,
    topRateChange: null,
    topReset: null,
    topScroll: null,
    topSeeked: null,
    topSeeking: null,
    topSelectionChange: null,
    topStalled: null,
    topSubmit: null,
    topSuspend: null,
    topTextInput: null,
    topTimeUpdate: null,
    topTouchCancel: null,
    topTouchEnd: null,
    topTouchMove: null,
    topTouchStart: null,
    topVolumeChange: null,
    topWaiting: null,
    topWheel: null
  });
  var EventConstants = {
    topLevelTypes: topLevelTypes,
    PropagationPhases: PropagationPhases
  };
  module.exports = EventConstants;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/EventPluginUtils.js", ["./EventConstants", "./ReactErrorUtils", "fbjs/lib/invariant", "fbjs/lib/warning", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var EventConstants = $__require('./EventConstants');
  var ReactErrorUtils = $__require('./ReactErrorUtils');
  var invariant = $__require('fbjs/lib/invariant');
  var warning = $__require('fbjs/lib/warning');
  var injection = {
    Mount: null,
    injectMount: function(InjectedMount) {
      injection.Mount = InjectedMount;
      if ("production" !== 'production') {
        "production" !== 'production' ? warning(InjectedMount && InjectedMount.getNode && InjectedMount.getID, 'EventPluginUtils.injection.injectMount(...): Injected Mount ' + 'module is missing getNode or getID.') : undefined;
      }
    }
  };
  var topLevelTypes = EventConstants.topLevelTypes;
  function isEndish(topLevelType) {
    return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;
  }
  function isMoveish(topLevelType) {
    return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;
  }
  function isStartish(topLevelType) {
    return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;
  }
  var validateEventDispatches;
  if ("production" !== 'production') {
    validateEventDispatches = function(event) {
      var dispatchListeners = event._dispatchListeners;
      var dispatchIDs = event._dispatchIDs;
      var listenersIsArr = Array.isArray(dispatchListeners);
      var idsIsArr = Array.isArray(dispatchIDs);
      var IDsLen = idsIsArr ? dispatchIDs.length : dispatchIDs ? 1 : 0;
      var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;
      "production" !== 'production' ? warning(idsIsArr === listenersIsArr && IDsLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : undefined;
    };
  }
  function executeDispatch(event, simulated, listener, domID) {
    var type = event.type || 'unknown-event';
    event.currentTarget = injection.Mount.getNode(domID);
    if (simulated) {
      ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event, domID);
    } else {
      ReactErrorUtils.invokeGuardedCallback(type, listener, event, domID);
    }
    event.currentTarget = null;
  }
  function executeDispatchesInOrder(event, simulated) {
    var dispatchListeners = event._dispatchListeners;
    var dispatchIDs = event._dispatchIDs;
    if ("production" !== 'production') {
      validateEventDispatches(event);
    }
    if (Array.isArray(dispatchListeners)) {
      for (var i = 0; i < dispatchListeners.length; i++) {
        if (event.isPropagationStopped()) {
          break;
        }
        executeDispatch(event, simulated, dispatchListeners[i], dispatchIDs[i]);
      }
    } else if (dispatchListeners) {
      executeDispatch(event, simulated, dispatchListeners, dispatchIDs);
    }
    event._dispatchListeners = null;
    event._dispatchIDs = null;
  }
  function executeDispatchesInOrderStopAtTrueImpl(event) {
    var dispatchListeners = event._dispatchListeners;
    var dispatchIDs = event._dispatchIDs;
    if ("production" !== 'production') {
      validateEventDispatches(event);
    }
    if (Array.isArray(dispatchListeners)) {
      for (var i = 0; i < dispatchListeners.length; i++) {
        if (event.isPropagationStopped()) {
          break;
        }
        if (dispatchListeners[i](event, dispatchIDs[i])) {
          return dispatchIDs[i];
        }
      }
    } else if (dispatchListeners) {
      if (dispatchListeners(event, dispatchIDs)) {
        return dispatchIDs;
      }
    }
    return null;
  }
  function executeDispatchesInOrderStopAtTrue(event) {
    var ret = executeDispatchesInOrderStopAtTrueImpl(event);
    event._dispatchIDs = null;
    event._dispatchListeners = null;
    return ret;
  }
  function executeDirectDispatch(event) {
    if ("production" !== 'production') {
      validateEventDispatches(event);
    }
    var dispatchListener = event._dispatchListeners;
    var dispatchID = event._dispatchIDs;
    !!Array.isArray(dispatchListener) ? "production" !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : invariant(false) : undefined;
    var res = dispatchListener ? dispatchListener(event, dispatchID) : null;
    event._dispatchListeners = null;
    event._dispatchIDs = null;
    return res;
  }
  function hasDispatches(event) {
    return !!event._dispatchListeners;
  }
  var EventPluginUtils = {
    isEndish: isEndish,
    isMoveish: isMoveish,
    isStartish: isStartish,
    executeDirectDispatch: executeDirectDispatch,
    executeDispatchesInOrder: executeDispatchesInOrder,
    executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
    hasDispatches: hasDispatches,
    getNode: function(id) {
      return injection.Mount.getNode(id);
    },
    getID: function(node) {
      return injection.Mount.getID(node);
    },
    injection: injection
  };
  module.exports = EventPluginUtils;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactErrorUtils.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var caughtError = null;
  function invokeGuardedCallback(name, func, a, b) {
    try {
      return func(a, b);
    } catch (x) {
      if (caughtError === null) {
        caughtError = x;
      }
      return undefined;
    }
  }
  var ReactErrorUtils = {
    invokeGuardedCallback: invokeGuardedCallback,
    invokeGuardedCallbackWithCatch: invokeGuardedCallback,
    rethrowCaughtError: function() {
      if (caughtError) {
        var error = caughtError;
        caughtError = null;
        throw error;
      }
    }
  };
  if ("production" !== 'production') {
    if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
      var fakeNode = document.createElement('react');
      ReactErrorUtils.invokeGuardedCallback = function(name, func, a, b) {
        var boundFunc = func.bind(null, a, b);
        var evtType = 'react-' + name;
        fakeNode.addEventListener(evtType, boundFunc, false);
        var evt = document.createEvent('Event');
        evt.initEvent(evtType, false, false);
        fakeNode.dispatchEvent(evt);
        fakeNode.removeEventListener(evtType, boundFunc, false);
      };
    }
  }
  module.exports = ReactErrorUtils;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/accumulateInto.js", ["fbjs/lib/invariant", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var invariant = $__require('fbjs/lib/invariant');
  function accumulateInto(current, next) {
    !(next != null) ? "production" !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : invariant(false) : undefined;
    if (current == null) {
      return next;
    }
    var currentIsArray = Array.isArray(current);
    var nextIsArray = Array.isArray(next);
    if (currentIsArray && nextIsArray) {
      current.push.apply(current, next);
      return current;
    }
    if (currentIsArray) {
      current.push(next);
      return current;
    }
    if (nextIsArray) {
      return [current].concat(next);
    }
    return [current, next];
  }
  module.exports = accumulateInto;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/forEachAccumulated.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var forEachAccumulated = function(arr, cb, scope) {
    if (Array.isArray(arr)) {
      arr.forEach(cb, scope);
    } else if (arr) {
      cb.call(scope, arr);
    }
  };
  module.exports = forEachAccumulated;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/EventPluginHub.js", ["./EventPluginRegistry", "./EventPluginUtils", "./ReactErrorUtils", "./accumulateInto", "./forEachAccumulated", "fbjs/lib/invariant", "fbjs/lib/warning", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var EventPluginRegistry = $__require('./EventPluginRegistry');
  var EventPluginUtils = $__require('./EventPluginUtils');
  var ReactErrorUtils = $__require('./ReactErrorUtils');
  var accumulateInto = $__require('./accumulateInto');
  var forEachAccumulated = $__require('./forEachAccumulated');
  var invariant = $__require('fbjs/lib/invariant');
  var warning = $__require('fbjs/lib/warning');
  var listenerBank = {};
  var eventQueue = null;
  var executeDispatchesAndRelease = function(event, simulated) {
    if (event) {
      EventPluginUtils.executeDispatchesInOrder(event, simulated);
      if (!event.isPersistent()) {
        event.constructor.release(event);
      }
    }
  };
  var executeDispatchesAndReleaseSimulated = function(e) {
    return executeDispatchesAndRelease(e, true);
  };
  var executeDispatchesAndReleaseTopLevel = function(e) {
    return executeDispatchesAndRelease(e, false);
  };
  var InstanceHandle = null;
  function validateInstanceHandle() {
    var valid = InstanceHandle && InstanceHandle.traverseTwoPhase && InstanceHandle.traverseEnterLeave;
    "production" !== 'production' ? warning(valid, 'InstanceHandle not injected before use!') : undefined;
  }
  var EventPluginHub = {
    injection: {
      injectMount: EventPluginUtils.injection.injectMount,
      injectInstanceHandle: function(InjectedInstanceHandle) {
        InstanceHandle = InjectedInstanceHandle;
        if ("production" !== 'production') {
          validateInstanceHandle();
        }
      },
      getInstanceHandle: function() {
        if ("production" !== 'production') {
          validateInstanceHandle();
        }
        return InstanceHandle;
      },
      injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,
      injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName
    },
    eventNameDispatchConfigs: EventPluginRegistry.eventNameDispatchConfigs,
    registrationNameModules: EventPluginRegistry.registrationNameModules,
    putListener: function(id, registrationName, listener) {
      !(typeof listener === 'function') ? "production" !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : invariant(false) : undefined;
      var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
      bankForRegistrationName[id] = listener;
      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
      if (PluginModule && PluginModule.didPutListener) {
        PluginModule.didPutListener(id, registrationName, listener);
      }
    },
    getListener: function(id, registrationName) {
      var bankForRegistrationName = listenerBank[registrationName];
      return bankForRegistrationName && bankForRegistrationName[id];
    },
    deleteListener: function(id, registrationName) {
      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
      if (PluginModule && PluginModule.willDeleteListener) {
        PluginModule.willDeleteListener(id, registrationName);
      }
      var bankForRegistrationName = listenerBank[registrationName];
      if (bankForRegistrationName) {
        delete bankForRegistrationName[id];
      }
    },
    deleteAllListeners: function(id) {
      for (var registrationName in listenerBank) {
        if (!listenerBank[registrationName][id]) {
          continue;
        }
        var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
        if (PluginModule && PluginModule.willDeleteListener) {
          PluginModule.willDeleteListener(id, registrationName);
        }
        delete listenerBank[registrationName][id];
      }
    },
    extractEvents: function(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
      var events;
      var plugins = EventPluginRegistry.plugins;
      for (var i = 0; i < plugins.length; i++) {
        var possiblePlugin = plugins[i];
        if (possiblePlugin) {
          var extractedEvents = possiblePlugin.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget);
          if (extractedEvents) {
            events = accumulateInto(events, extractedEvents);
          }
        }
      }
      return events;
    },
    enqueueEvents: function(events) {
      if (events) {
        eventQueue = accumulateInto(eventQueue, events);
      }
    },
    processEventQueue: function(simulated) {
      var processingEventQueue = eventQueue;
      eventQueue = null;
      if (simulated) {
        forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
      } else {
        forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
      }
      !!eventQueue ? "production" !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing ' + 'an event queue. Support for this has not yet been implemented.') : invariant(false) : undefined;
      ReactErrorUtils.rethrowCaughtError();
    },
    __purge: function() {
      listenerBank = {};
    },
    __getListenerBank: function() {
      return listenerBank;
    }
  };
  module.exports = EventPluginHub;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactEventEmitterMixin.js", ["./EventPluginHub", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var EventPluginHub = $__require('./EventPluginHub');
  function runEventQueueInBatch(events) {
    EventPluginHub.enqueueEvents(events);
    EventPluginHub.processEventQueue(false);
  }
  var ReactEventEmitterMixin = {handleTopLevel: function(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
      var events = EventPluginHub.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget);
      runEventQueueInBatch(events);
    }};
  module.exports = ReactEventEmitterMixin;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ViewportMetrics.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ViewportMetrics = {
    currentScrollLeft: 0,
    currentScrollTop: 0,
    refreshScrollValues: function(scrollPosition) {
      ViewportMetrics.currentScrollLeft = scrollPosition.x;
      ViewportMetrics.currentScrollTop = scrollPosition.y;
    }
  };
  module.exports = ViewportMetrics;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/isEventSupported.js", ["fbjs/lib/ExecutionEnvironment", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ExecutionEnvironment = $__require('fbjs/lib/ExecutionEnvironment');
  var useHasFeature;
  if (ExecutionEnvironment.canUseDOM) {
    useHasFeature = document.implementation && document.implementation.hasFeature && document.implementation.hasFeature('', '') !== true;
  }
  function isEventSupported(eventNameSuffix, capture) {
    if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
      return false;
    }
    var eventName = 'on' + eventNameSuffix;
    var isSupported = (eventName in document);
    if (!isSupported) {
      var element = document.createElement('div');
      element.setAttribute(eventName, 'return;');
      isSupported = typeof element[eventName] === 'function';
    }
    if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
      isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
    }
    return isSupported;
  }
  module.exports = isEventSupported;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactBrowserEventEmitter.js", ["./EventConstants", "./EventPluginHub", "./EventPluginRegistry", "./ReactEventEmitterMixin", "./ReactPerf", "./ViewportMetrics", "./Object.assign", "./isEventSupported", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var EventConstants = $__require('./EventConstants');
  var EventPluginHub = $__require('./EventPluginHub');
  var EventPluginRegistry = $__require('./EventPluginRegistry');
  var ReactEventEmitterMixin = $__require('./ReactEventEmitterMixin');
  var ReactPerf = $__require('./ReactPerf');
  var ViewportMetrics = $__require('./ViewportMetrics');
  var assign = $__require('./Object.assign');
  var isEventSupported = $__require('./isEventSupported');
  var alreadyListeningTo = {};
  var isMonitoringScrollValue = false;
  var reactTopListenersCounter = 0;
  var topEventMapping = {
    topAbort: 'abort',
    topBlur: 'blur',
    topCanPlay: 'canplay',
    topCanPlayThrough: 'canplaythrough',
    topChange: 'change',
    topClick: 'click',
    topCompositionEnd: 'compositionend',
    topCompositionStart: 'compositionstart',
    topCompositionUpdate: 'compositionupdate',
    topContextMenu: 'contextmenu',
    topCopy: 'copy',
    topCut: 'cut',
    topDoubleClick: 'dblclick',
    topDrag: 'drag',
    topDragEnd: 'dragend',
    topDragEnter: 'dragenter',
    topDragExit: 'dragexit',
    topDragLeave: 'dragleave',
    topDragOver: 'dragover',
    topDragStart: 'dragstart',
    topDrop: 'drop',
    topDurationChange: 'durationchange',
    topEmptied: 'emptied',
    topEncrypted: 'encrypted',
    topEnded: 'ended',
    topError: 'error',
    topFocus: 'focus',
    topInput: 'input',
    topKeyDown: 'keydown',
    topKeyPress: 'keypress',
    topKeyUp: 'keyup',
    topLoadedData: 'loadeddata',
    topLoadedMetadata: 'loadedmetadata',
    topLoadStart: 'loadstart',
    topMouseDown: 'mousedown',
    topMouseMove: 'mousemove',
    topMouseOut: 'mouseout',
    topMouseOver: 'mouseover',
    topMouseUp: 'mouseup',
    topPaste: 'paste',
    topPause: 'pause',
    topPlay: 'play',
    topPlaying: 'playing',
    topProgress: 'progress',
    topRateChange: 'ratechange',
    topScroll: 'scroll',
    topSeeked: 'seeked',
    topSeeking: 'seeking',
    topSelectionChange: 'selectionchange',
    topStalled: 'stalled',
    topSuspend: 'suspend',
    topTextInput: 'textInput',
    topTimeUpdate: 'timeupdate',
    topTouchCancel: 'touchcancel',
    topTouchEnd: 'touchend',
    topTouchMove: 'touchmove',
    topTouchStart: 'touchstart',
    topVolumeChange: 'volumechange',
    topWaiting: 'waiting',
    topWheel: 'wheel'
  };
  var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);
  function getListeningForDocument(mountAt) {
    if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
      mountAt[topListenersIDKey] = reactTopListenersCounter++;
      alreadyListeningTo[mountAt[topListenersIDKey]] = {};
    }
    return alreadyListeningTo[mountAt[topListenersIDKey]];
  }
  var ReactBrowserEventEmitter = assign({}, ReactEventEmitterMixin, {
    ReactEventListener: null,
    injection: {injectReactEventListener: function(ReactEventListener) {
        ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
        ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
      }},
    setEnabled: function(enabled) {
      if (ReactBrowserEventEmitter.ReactEventListener) {
        ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
      }
    },
    isEnabled: function() {
      return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
    },
    listenTo: function(registrationName, contentDocumentHandle) {
      var mountAt = contentDocumentHandle;
      var isListening = getListeningForDocument(mountAt);
      var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];
      var topLevelTypes = EventConstants.topLevelTypes;
      for (var i = 0; i < dependencies.length; i++) {
        var dependency = dependencies[i];
        if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
          if (dependency === topLevelTypes.topWheel) {
            if (isEventSupported('wheel')) {
              ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);
            } else if (isEventSupported('mousewheel')) {
              ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);
            } else {
              ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);
            }
          } else if (dependency === topLevelTypes.topScroll) {
            if (isEventSupported('scroll', true)) {
              ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);
            } else {
              ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
            }
          } else if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {
            if (isEventSupported('focus', true)) {
              ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);
              ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);
            } else if (isEventSupported('focusin')) {
              ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);
              ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);
            }
            isListening[topLevelTypes.topBlur] = true;
            isListening[topLevelTypes.topFocus] = true;
          } else if (topEventMapping.hasOwnProperty(dependency)) {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
          }
          isListening[dependency] = true;
        }
      }
    },
    trapBubbledEvent: function(topLevelType, handlerBaseName, handle) {
      return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
    },
    trapCapturedEvent: function(topLevelType, handlerBaseName, handle) {
      return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
    },
    ensureScrollValueMonitoring: function() {
      if (!isMonitoringScrollValue) {
        var refresh = ViewportMetrics.refreshScrollValues;
        ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
        isMonitoringScrollValue = true;
      }
    },
    eventNameDispatchConfigs: EventPluginHub.eventNameDispatchConfigs,
    registrationNameModules: EventPluginHub.registrationNameModules,
    putListener: EventPluginHub.putListener,
    getListener: EventPluginHub.getListener,
    deleteListener: EventPluginHub.deleteListener,
    deleteAllListeners: EventPluginHub.deleteAllListeners
  });
  ReactPerf.measureMethods(ReactBrowserEventEmitter, 'ReactBrowserEventEmitter', {
    putListener: 'putListener',
    deleteListener: 'deleteListener'
  });
  module.exports = ReactBrowserEventEmitter;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactDOMFeatureFlags.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ReactDOMFeatureFlags = {useCreateElement: false};
  module.exports = ReactDOMFeatureFlags;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactRootIndex.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ReactRootIndexInjection = {injectCreateReactRootIndex: function(_createReactRootIndex) {
      ReactRootIndex.createReactRootIndex = _createReactRootIndex;
    }};
  var ReactRootIndex = {
    createReactRootIndex: null,
    injection: ReactRootIndexInjection
  };
  module.exports = ReactRootIndex;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactInstanceHandles.js", ["./ReactRootIndex", "fbjs/lib/invariant", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ReactRootIndex = $__require('./ReactRootIndex');
  var invariant = $__require('fbjs/lib/invariant');
  var SEPARATOR = '.';
  var SEPARATOR_LENGTH = SEPARATOR.length;
  var MAX_TREE_DEPTH = 10000;
  function getReactRootIDString(index) {
    return SEPARATOR + index.toString(36);
  }
  function isBoundary(id, index) {
    return id.charAt(index) === SEPARATOR || index === id.length;
  }
  function isValidID(id) {
    return id === '' || id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR;
  }
  function isAncestorIDOf(ancestorID, descendantID) {
    return descendantID.indexOf(ancestorID) === 0 && isBoundary(descendantID, ancestorID.length);
  }
  function getParentID(id) {
    return id ? id.substr(0, id.lastIndexOf(SEPARATOR)) : '';
  }
  function getNextDescendantID(ancestorID, destinationID) {
    !(isValidID(ancestorID) && isValidID(destinationID)) ? "production" !== 'production' ? invariant(false, 'getNextDescendantID(%s, %s): Received an invalid React DOM ID.', ancestorID, destinationID) : invariant(false) : undefined;
    !isAncestorIDOf(ancestorID, destinationID) ? "production" !== 'production' ? invariant(false, 'getNextDescendantID(...): React has made an invalid assumption about ' + 'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.', ancestorID, destinationID) : invariant(false) : undefined;
    if (ancestorID === destinationID) {
      return ancestorID;
    }
    var start = ancestorID.length + SEPARATOR_LENGTH;
    var i;
    for (i = start; i < destinationID.length; i++) {
      if (isBoundary(destinationID, i)) {
        break;
      }
    }
    return destinationID.substr(0, i);
  }
  function getFirstCommonAncestorID(oneID, twoID) {
    var minLength = Math.min(oneID.length, twoID.length);
    if (minLength === 0) {
      return '';
    }
    var lastCommonMarkerIndex = 0;
    for (var i = 0; i <= minLength; i++) {
      if (isBoundary(oneID, i) && isBoundary(twoID, i)) {
        lastCommonMarkerIndex = i;
      } else if (oneID.charAt(i) !== twoID.charAt(i)) {
        break;
      }
    }
    var longestCommonID = oneID.substr(0, lastCommonMarkerIndex);
    !isValidID(longestCommonID) ? "production" !== 'production' ? invariant(false, 'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s', oneID, twoID, longestCommonID) : invariant(false) : undefined;
    return longestCommonID;
  }
  function traverseParentPath(start, stop, cb, arg, skipFirst, skipLast) {
    start = start || '';
    stop = stop || '';
    !(start !== stop) ? "production" !== 'production' ? invariant(false, 'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.', start) : invariant(false) : undefined;
    var traverseUp = isAncestorIDOf(stop, start);
    !(traverseUp || isAncestorIDOf(start, stop)) ? "production" !== 'production' ? invariant(false, 'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do ' + 'not have a parent path.', start, stop) : invariant(false) : undefined;
    var depth = 0;
    var traverse = traverseUp ? getParentID : getNextDescendantID;
    for (var id = start; ; id = traverse(id, stop)) {
      var ret;
      if ((!skipFirst || id !== start) && (!skipLast || id !== stop)) {
        ret = cb(id, traverseUp, arg);
      }
      if (ret === false || id === stop) {
        break;
      }
      !(depth++ < MAX_TREE_DEPTH) ? "production" !== 'production' ? invariant(false, 'traverseParentPath(%s, %s, ...): Detected an infinite loop while ' + 'traversing the React DOM ID tree. This may be due to malformed IDs: %s', start, stop, id) : invariant(false) : undefined;
    }
  }
  var ReactInstanceHandles = {
    createReactRootID: function() {
      return getReactRootIDString(ReactRootIndex.createReactRootIndex());
    },
    createReactID: function(rootID, name) {
      return rootID + name;
    },
    getReactRootIDFromNodeID: function(id) {
      if (id && id.charAt(0) === SEPARATOR && id.length > 1) {
        var index = id.indexOf(SEPARATOR, 1);
        return index > -1 ? id.substr(0, index) : id;
      }
      return null;
    },
    traverseEnterLeave: function(leaveID, enterID, cb, upArg, downArg) {
      var ancestorID = getFirstCommonAncestorID(leaveID, enterID);
      if (ancestorID !== leaveID) {
        traverseParentPath(leaveID, ancestorID, cb, upArg, false, true);
      }
      if (ancestorID !== enterID) {
        traverseParentPath(ancestorID, enterID, cb, downArg, true, false);
      }
    },
    traverseTwoPhase: function(targetID, cb, arg) {
      if (targetID) {
        traverseParentPath('', targetID, cb, arg, true, false);
        traverseParentPath(targetID, '', cb, arg, false, true);
      }
    },
    traverseTwoPhaseSkipTarget: function(targetID, cb, arg) {
      if (targetID) {
        traverseParentPath('', targetID, cb, arg, true, true);
        traverseParentPath(targetID, '', cb, arg, true, true);
      }
    },
    traverseAncestors: function(targetID, cb, arg) {
      traverseParentPath('', targetID, cb, arg, true, false);
    },
    getFirstCommonAncestorID: getFirstCommonAncestorID,
    _getNextDescendantID: getNextDescendantID,
    isAncestorIDOf: isAncestorIDOf,
    SEPARATOR: SEPARATOR
  };
  module.exports = ReactInstanceHandles;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/adler32.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var MOD = 65521;
  function adler32(data) {
    var a = 1;
    var b = 0;
    var i = 0;
    var l = data.length;
    var m = l & ~0x3;
    while (i < m) {
      for (; i < Math.min(i + 4096, m); i += 4) {
        b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
      }
      a %= MOD;
      b %= MOD;
    }
    for (; i < l; i++) {
      b += a += data.charCodeAt(i);
    }
    a %= MOD;
    b %= MOD;
    return a | b << 16;
  }
  module.exports = adler32;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactMarkupChecksum.js", ["./adler32", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var adler32 = $__require('./adler32');
  var TAG_END = /\/?>/;
  var ReactMarkupChecksum = {
    CHECKSUM_ATTR_NAME: 'data-react-checksum',
    addChecksumToMarkup: function(markup) {
      var checksum = adler32(markup);
      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
    },
    canReuseMarkup: function(markup, element) {
      var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
      existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
      var markupChecksum = adler32(markup);
      return markupChecksum === existingChecksum;
    }
  };
  module.exports = ReactMarkupChecksum;
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.6.1/lib/isNode.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  function isNode(object) {
    return !!(object && (typeof Node === 'function' ? object instanceof Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
  }
  module.exports = isNode;
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.6.1/lib/isTextNode.js", ["./isNode", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var isNode = $__require('./isNode');
  function isTextNode(object) {
    return isNode(object) && object.nodeType == 3;
  }
  module.exports = isTextNode;
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.6.1/lib/containsNode.js", ["./isTextNode", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var isTextNode = $__require('./isTextNode');
  function containsNode(_x, _x2) {
    var _again = true;
    _function: while (_again) {
      var outerNode = _x,
          innerNode = _x2;
      _again = false;
      if (!outerNode || !innerNode) {
        return false;
      } else if (outerNode === innerNode) {
        return true;
      } else if (isTextNode(outerNode)) {
        return false;
      } else if (isTextNode(innerNode)) {
        _x = outerNode;
        _x2 = innerNode.parentNode;
        _again = true;
        continue _function;
      } else if (outerNode.contains) {
        return outerNode.contains(innerNode);
      } else if (outerNode.compareDocumentPosition) {
        return !!(outerNode.compareDocumentPosition(innerNode) & 16);
      } else {
        return false;
      }
    }
  }
  module.exports = containsNode;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactComponentEnvironment.js", ["fbjs/lib/invariant", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var invariant = $__require('fbjs/lib/invariant');
  var injected = false;
  var ReactComponentEnvironment = {
    unmountIDFromEnvironment: null,
    replaceNodeWithMarkupByID: null,
    processChildrenUpdates: null,
    injection: {injectEnvironment: function(environment) {
        !!injected ? "production" !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : invariant(false) : undefined;
        ReactComponentEnvironment.unmountIDFromEnvironment = environment.unmountIDFromEnvironment;
        ReactComponentEnvironment.replaceNodeWithMarkupByID = environment.replaceNodeWithMarkupByID;
        ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
        injected = true;
      }}
  };
  module.exports = ReactComponentEnvironment;
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.6.1/lib/keyMirror.js", ["./invariant", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var invariant = $__require('./invariant');
  var keyMirror = function(obj) {
    var ret = {};
    var key;
    !(obj instanceof Object && !Array.isArray(obj)) ? "production" !== 'production' ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : undefined;
    for (key in obj) {
      if (!obj.hasOwnProperty(key)) {
        continue;
      }
      ret[key] = key;
    }
    return ret;
  };
  module.exports = keyMirror;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactPropTypeLocations.js", ["fbjs/lib/keyMirror", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var keyMirror = $__require('fbjs/lib/keyMirror');
  var ReactPropTypeLocations = keyMirror({
    prop: null,
    context: null,
    childContext: null
  });
  module.exports = ReactPropTypeLocations;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactPropTypeLocationNames.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ReactPropTypeLocationNames = {};
  if ("production" !== 'production') {
    ReactPropTypeLocationNames = {
      prop: 'prop',
      context: 'context',
      childContext: 'child context'
    };
  }
  module.exports = ReactPropTypeLocationNames;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactInstanceMap.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ReactInstanceMap = {
    remove: function(key) {
      key._reactInternalInstance = undefined;
    },
    get: function(key) {
      return key._reactInternalInstance;
    },
    has: function(key) {
      return key._reactInternalInstance !== undefined;
    },
    set: function(key, value) {
      key._reactInternalInstance = value;
    }
  };
  module.exports = ReactInstanceMap;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/CallbackQueue.js", ["./PooledClass", "./Object.assign", "fbjs/lib/invariant", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var PooledClass = $__require('./PooledClass');
  var assign = $__require('./Object.assign');
  var invariant = $__require('fbjs/lib/invariant');
  function CallbackQueue() {
    this._callbacks = null;
    this._contexts = null;
  }
  assign(CallbackQueue.prototype, {
    enqueue: function(callback, context) {
      this._callbacks = this._callbacks || [];
      this._contexts = this._contexts || [];
      this._callbacks.push(callback);
      this._contexts.push(context);
    },
    notifyAll: function() {
      var callbacks = this._callbacks;
      var contexts = this._contexts;
      if (callbacks) {
        !(callbacks.length === contexts.length) ? "production" !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : invariant(false) : undefined;
        this._callbacks = null;
        this._contexts = null;
        for (var i = 0; i < callbacks.length; i++) {
          callbacks[i].call(contexts[i]);
        }
        callbacks.length = 0;
        contexts.length = 0;
      }
    },
    reset: function() {
      this._callbacks = null;
      this._contexts = null;
    },
    destructor: function() {
      this.reset();
    }
  });
  PooledClass.addPoolingTo(CallbackQueue);
  module.exports = CallbackQueue;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/PooledClass.js", ["fbjs/lib/invariant", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var invariant = $__require('fbjs/lib/invariant');
  var oneArgumentPooler = function(copyFieldsFrom) {
    var Klass = this;
    if (Klass.instancePool.length) {
      var instance = Klass.instancePool.pop();
      Klass.call(instance, copyFieldsFrom);
      return instance;
    } else {
      return new Klass(copyFieldsFrom);
    }
  };
  var twoArgumentPooler = function(a1, a2) {
    var Klass = this;
    if (Klass.instancePool.length) {
      var instance = Klass.instancePool.pop();
      Klass.call(instance, a1, a2);
      return instance;
    } else {
      return new Klass(a1, a2);
    }
  };
  var threeArgumentPooler = function(a1, a2, a3) {
    var Klass = this;
    if (Klass.instancePool.length) {
      var instance = Klass.instancePool.pop();
      Klass.call(instance, a1, a2, a3);
      return instance;
    } else {
      return new Klass(a1, a2, a3);
    }
  };
  var fourArgumentPooler = function(a1, a2, a3, a4) {
    var Klass = this;
    if (Klass.instancePool.length) {
      var instance = Klass.instancePool.pop();
      Klass.call(instance, a1, a2, a3, a4);
      return instance;
    } else {
      return new Klass(a1, a2, a3, a4);
    }
  };
  var fiveArgumentPooler = function(a1, a2, a3, a4, a5) {
    var Klass = this;
    if (Klass.instancePool.length) {
      var instance = Klass.instancePool.pop();
      Klass.call(instance, a1, a2, a3, a4, a5);
      return instance;
    } else {
      return new Klass(a1, a2, a3, a4, a5);
    }
  };
  var standardReleaser = function(instance) {
    var Klass = this;
    !(instance instanceof Klass) ? "production" !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : invariant(false) : undefined;
    instance.destructor();
    if (Klass.instancePool.length < Klass.poolSize) {
      Klass.instancePool.push(instance);
    }
  };
  var DEFAULT_POOL_SIZE = 10;
  var DEFAULT_POOLER = oneArgumentPooler;
  var addPoolingTo = function(CopyConstructor, pooler) {
    var NewKlass = CopyConstructor;
    NewKlass.instancePool = [];
    NewKlass.getPooled = pooler || DEFAULT_POOLER;
    if (!NewKlass.poolSize) {
      NewKlass.poolSize = DEFAULT_POOL_SIZE;
    }
    NewKlass.release = standardReleaser;
    return NewKlass;
  };
  var PooledClass = {
    addPoolingTo: addPoolingTo,
    oneArgumentPooler: oneArgumentPooler,
    twoArgumentPooler: twoArgumentPooler,
    threeArgumentPooler: threeArgumentPooler,
    fourArgumentPooler: fourArgumentPooler,
    fiveArgumentPooler: fiveArgumentPooler
  };
  module.exports = PooledClass;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactPerf.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ReactPerf = {
    enableMeasure: false,
    storedMeasure: _noMeasure,
    measureMethods: function(object, objectName, methodNames) {
      if ("production" !== 'production') {
        for (var key in methodNames) {
          if (!methodNames.hasOwnProperty(key)) {
            continue;
          }
          object[key] = ReactPerf.measure(objectName, methodNames[key], object[key]);
        }
      }
    },
    measure: function(objName, fnName, func) {
      if ("production" !== 'production') {
        var measuredFunc = null;
        var wrapper = function() {
          if (ReactPerf.enableMeasure) {
            if (!measuredFunc) {
              measuredFunc = ReactPerf.storedMeasure(objName, fnName, func);
            }
            return measuredFunc.apply(this, arguments);
          }
          return func.apply(this, arguments);
        };
        wrapper.displayName = objName + '_' + fnName;
        return wrapper;
      }
      return func;
    },
    injection: {injectMeasure: function(measure) {
        ReactPerf.storedMeasure = measure;
      }}
  };
  function _noMeasure(objName, fnName, func) {
    return func;
  }
  module.exports = ReactPerf;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/Transaction.js", ["fbjs/lib/invariant", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var invariant = $__require('fbjs/lib/invariant');
  var Mixin = {
    reinitializeTransaction: function() {
      this.transactionWrappers = this.getTransactionWrappers();
      if (this.wrapperInitData) {
        this.wrapperInitData.length = 0;
      } else {
        this.wrapperInitData = [];
      }
      this._isInTransaction = false;
    },
    _isInTransaction: false,
    getTransactionWrappers: null,
    isInTransaction: function() {
      return !!this._isInTransaction;
    },
    perform: function(method, scope, a, b, c, d, e, f) {
      !!this.isInTransaction() ? "production" !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there ' + 'is already an outstanding transaction.') : invariant(false) : undefined;
      var errorThrown;
      var ret;
      try {
        this._isInTransaction = true;
        errorThrown = true;
        this.initializeAll(0);
        ret = method.call(scope, a, b, c, d, e, f);
        errorThrown = false;
      } finally {
        try {
          if (errorThrown) {
            try {
              this.closeAll(0);
            } catch (err) {}
          } else {
            this.closeAll(0);
          }
        } finally {
          this._isInTransaction = false;
        }
      }
      return ret;
    },
    initializeAll: function(startIndex) {
      var transactionWrappers = this.transactionWrappers;
      for (var i = startIndex; i < transactionWrappers.length; i++) {
        var wrapper = transactionWrappers[i];
        try {
          this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
          this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
        } finally {
          if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
            try {
              this.initializeAll(i + 1);
            } catch (err) {}
          }
        }
      }
    },
    closeAll: function(startIndex) {
      !this.isInTransaction() ? "production" !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : invariant(false) : undefined;
      var transactionWrappers = this.transactionWrappers;
      for (var i = startIndex; i < transactionWrappers.length; i++) {
        var wrapper = transactionWrappers[i];
        var initData = this.wrapperInitData[i];
        var errorThrown;
        try {
          errorThrown = true;
          if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {
            wrapper.close.call(this, initData);
          }
          errorThrown = false;
        } finally {
          if (errorThrown) {
            try {
              this.closeAll(i + 1);
            } catch (e) {}
          }
        }
      }
      this.wrapperInitData.length = 0;
    }
  };
  var Transaction = {
    Mixin: Mixin,
    OBSERVED_ERROR: {}
  };
  module.exports = Transaction;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactUpdates.js", ["./CallbackQueue", "./PooledClass", "./ReactPerf", "./ReactReconciler", "./Transaction", "./Object.assign", "fbjs/lib/invariant", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var CallbackQueue = $__require('./CallbackQueue');
  var PooledClass = $__require('./PooledClass');
  var ReactPerf = $__require('./ReactPerf');
  var ReactReconciler = $__require('./ReactReconciler');
  var Transaction = $__require('./Transaction');
  var assign = $__require('./Object.assign');
  var invariant = $__require('fbjs/lib/invariant');
  var dirtyComponents = [];
  var asapCallbackQueue = CallbackQueue.getPooled();
  var asapEnqueued = false;
  var batchingStrategy = null;
  function ensureInjected() {
    !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? "production" !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching ' + 'strategy') : invariant(false) : undefined;
  }
  var NESTED_UPDATES = {
    initialize: function() {
      this.dirtyComponentsLength = dirtyComponents.length;
    },
    close: function() {
      if (this.dirtyComponentsLength !== dirtyComponents.length) {
        dirtyComponents.splice(0, this.dirtyComponentsLength);
        flushBatchedUpdates();
      } else {
        dirtyComponents.length = 0;
      }
    }
  };
  var UPDATE_QUEUEING = {
    initialize: function() {
      this.callbackQueue.reset();
    },
    close: function() {
      this.callbackQueue.notifyAll();
    }
  };
  var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];
  function ReactUpdatesFlushTransaction() {
    this.reinitializeTransaction();
    this.dirtyComponentsLength = null;
    this.callbackQueue = CallbackQueue.getPooled();
    this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(false);
  }
  assign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {
    getTransactionWrappers: function() {
      return TRANSACTION_WRAPPERS;
    },
    destructor: function() {
      this.dirtyComponentsLength = null;
      CallbackQueue.release(this.callbackQueue);
      this.callbackQueue = null;
      ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
      this.reconcileTransaction = null;
    },
    perform: function(method, scope, a) {
      return Transaction.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
    }
  });
  PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);
  function batchedUpdates(callback, a, b, c, d, e) {
    ensureInjected();
    batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
  }
  function mountOrderComparator(c1, c2) {
    return c1._mountOrder - c2._mountOrder;
  }
  function runBatchedUpdates(transaction) {
    var len = transaction.dirtyComponentsLength;
    !(len === dirtyComponents.length) ? "production" !== 'production' ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to ' + 'match dirty-components array length (%s).', len, dirtyComponents.length) : invariant(false) : undefined;
    dirtyComponents.sort(mountOrderComparator);
    for (var i = 0; i < len; i++) {
      var component = dirtyComponents[i];
      var callbacks = component._pendingCallbacks;
      component._pendingCallbacks = null;
      ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction);
      if (callbacks) {
        for (var j = 0; j < callbacks.length; j++) {
          transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
        }
      }
    }
  }
  var flushBatchedUpdates = function() {
    while (dirtyComponents.length || asapEnqueued) {
      if (dirtyComponents.length) {
        var transaction = ReactUpdatesFlushTransaction.getPooled();
        transaction.perform(runBatchedUpdates, null, transaction);
        ReactUpdatesFlushTransaction.release(transaction);
      }
      if (asapEnqueued) {
        asapEnqueued = false;
        var queue = asapCallbackQueue;
        asapCallbackQueue = CallbackQueue.getPooled();
        queue.notifyAll();
        CallbackQueue.release(queue);
      }
    }
  };
  flushBatchedUpdates = ReactPerf.measure('ReactUpdates', 'flushBatchedUpdates', flushBatchedUpdates);
  function enqueueUpdate(component) {
    ensureInjected();
    if (!batchingStrategy.isBatchingUpdates) {
      batchingStrategy.batchedUpdates(enqueueUpdate, component);
      return;
    }
    dirtyComponents.push(component);
  }
  function asap(callback, context) {
    !batchingStrategy.isBatchingUpdates ? "production" !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context where' + 'updates are not being batched.') : invariant(false) : undefined;
    asapCallbackQueue.enqueue(callback, context);
    asapEnqueued = true;
  }
  var ReactUpdatesInjection = {
    injectReconcileTransaction: function(ReconcileTransaction) {
      !ReconcileTransaction ? "production" !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : invariant(false) : undefined;
      ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
    },
    injectBatchingStrategy: function(_batchingStrategy) {
      !_batchingStrategy ? "production" !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : invariant(false) : undefined;
      !(typeof _batchingStrategy.batchedUpdates === 'function') ? "production" !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : invariant(false) : undefined;
      !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? "production" !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : invariant(false) : undefined;
      batchingStrategy = _batchingStrategy;
    }
  };
  var ReactUpdates = {
    ReactReconcileTransaction: null,
    batchedUpdates: batchedUpdates,
    enqueueUpdate: enqueueUpdate,
    flushBatchedUpdates: flushBatchedUpdates,
    injection: ReactUpdatesInjection,
    asap: asap
  };
  module.exports = ReactUpdates;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactUpdateQueue.js", ["./ReactCurrentOwner", "./ReactElement", "./ReactInstanceMap", "./ReactUpdates", "./Object.assign", "fbjs/lib/invariant", "fbjs/lib/warning", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ReactCurrentOwner = $__require('./ReactCurrentOwner');
  var ReactElement = $__require('./ReactElement');
  var ReactInstanceMap = $__require('./ReactInstanceMap');
  var ReactUpdates = $__require('./ReactUpdates');
  var assign = $__require('./Object.assign');
  var invariant = $__require('fbjs/lib/invariant');
  var warning = $__require('fbjs/lib/warning');
  function enqueueUpdate(internalInstance) {
    ReactUpdates.enqueueUpdate(internalInstance);
  }
  function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
    var internalInstance = ReactInstanceMap.get(publicInstance);
    if (!internalInstance) {
      if ("production" !== 'production') {
        "production" !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor.displayName) : undefined;
      }
      return null;
    }
    if ("production" !== 'production') {
      "production" !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition ' + '(such as within `render`). Render methods should be a pure function ' + 'of props and state.', callerName) : undefined;
    }
    return internalInstance;
  }
  var ReactUpdateQueue = {
    isMounted: function(publicInstance) {
      if ("production" !== 'production') {
        var owner = ReactCurrentOwner.current;
        if (owner !== null) {
          "production" !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : undefined;
          owner._warnedAboutRefsInRender = true;
        }
      }
      var internalInstance = ReactInstanceMap.get(publicInstance);
      if (internalInstance) {
        return !!internalInstance._renderedComponent;
      } else {
        return false;
      }
    },
    enqueueCallback: function(publicInstance, callback) {
      !(typeof callback === 'function') ? "production" !== 'production' ? invariant(false, 'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + '`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 'isn\'t callable.') : invariant(false) : undefined;
      var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);
      if (!internalInstance) {
        return null;
      }
      if (internalInstance._pendingCallbacks) {
        internalInstance._pendingCallbacks.push(callback);
      } else {
        internalInstance._pendingCallbacks = [callback];
      }
      enqueueUpdate(internalInstance);
    },
    enqueueCallbackInternal: function(internalInstance, callback) {
      !(typeof callback === 'function') ? "production" !== 'production' ? invariant(false, 'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + '`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 'isn\'t callable.') : invariant(false) : undefined;
      if (internalInstance._pendingCallbacks) {
        internalInstance._pendingCallbacks.push(callback);
      } else {
        internalInstance._pendingCallbacks = [callback];
      }
      enqueueUpdate(internalInstance);
    },
    enqueueForceUpdate: function(publicInstance) {
      var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');
      if (!internalInstance) {
        return;
      }
      internalInstance._pendingForceUpdate = true;
      enqueueUpdate(internalInstance);
    },
    enqueueReplaceState: function(publicInstance, completeState) {
      var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');
      if (!internalInstance) {
        return;
      }
      internalInstance._pendingStateQueue = [completeState];
      internalInstance._pendingReplaceState = true;
      enqueueUpdate(internalInstance);
    },
    enqueueSetState: function(publicInstance, partialState) {
      var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');
      if (!internalInstance) {
        return;
      }
      var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
      queue.push(partialState);
      enqueueUpdate(internalInstance);
    },
    enqueueSetProps: function(publicInstance, partialProps) {
      var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setProps');
      if (!internalInstance) {
        return;
      }
      ReactUpdateQueue.enqueueSetPropsInternal(internalInstance, partialProps);
    },
    enqueueSetPropsInternal: function(internalInstance, partialProps) {
      var topLevelWrapper = internalInstance._topLevelWrapper;
      !topLevelWrapper ? "production" !== 'production' ? invariant(false, 'setProps(...): You called `setProps` on a ' + 'component with a parent. This is an anti-pattern since props will ' + 'get reactively updated when rendered. Instead, change the owner\'s ' + '`render` method to pass the correct value as props to the component ' + 'where it is created.') : invariant(false) : undefined;
      var wrapElement = topLevelWrapper._pendingElement || topLevelWrapper._currentElement;
      var element = wrapElement.props;
      var props = assign({}, element.props, partialProps);
      topLevelWrapper._pendingElement = ReactElement.cloneAndReplaceProps(wrapElement, ReactElement.cloneAndReplaceProps(element, props));
      enqueueUpdate(topLevelWrapper);
    },
    enqueueReplaceProps: function(publicInstance, props) {
      var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceProps');
      if (!internalInstance) {
        return;
      }
      ReactUpdateQueue.enqueueReplacePropsInternal(internalInstance, props);
    },
    enqueueReplacePropsInternal: function(internalInstance, props) {
      var topLevelWrapper = internalInstance._topLevelWrapper;
      !topLevelWrapper ? "production" !== 'production' ? invariant(false, 'replaceProps(...): You called `replaceProps` on a ' + 'component with a parent. This is an anti-pattern since props will ' + 'get reactively updated when rendered. Instead, change the owner\'s ' + '`render` method to pass the correct value as props to the component ' + 'where it is created.') : invariant(false) : undefined;
      var wrapElement = topLevelWrapper._pendingElement || topLevelWrapper._currentElement;
      var element = wrapElement.props;
      topLevelWrapper._pendingElement = ReactElement.cloneAndReplaceProps(wrapElement, ReactElement.cloneAndReplaceProps(element, props));
      enqueueUpdate(topLevelWrapper);
    },
    enqueueElementInternal: function(internalInstance, newElement) {
      internalInstance._pendingElement = newElement;
      enqueueUpdate(internalInstance);
    }
  };
  module.exports = ReactUpdateQueue;
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.6.1/lib/emptyObject.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var emptyObject = {};
  if ("production" !== 'production') {
    Object.freeze(emptyObject);
  }
  module.exports = emptyObject;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactCompositeComponent.js", ["./ReactComponentEnvironment", "./ReactCurrentOwner", "./ReactElement", "./ReactInstanceMap", "./ReactPerf", "./ReactPropTypeLocations", "./ReactPropTypeLocationNames", "./ReactReconciler", "./ReactUpdateQueue", "./Object.assign", "fbjs/lib/emptyObject", "fbjs/lib/invariant", "./shouldUpdateReactComponent", "fbjs/lib/warning", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ReactComponentEnvironment = $__require('./ReactComponentEnvironment');
  var ReactCurrentOwner = $__require('./ReactCurrentOwner');
  var ReactElement = $__require('./ReactElement');
  var ReactInstanceMap = $__require('./ReactInstanceMap');
  var ReactPerf = $__require('./ReactPerf');
  var ReactPropTypeLocations = $__require('./ReactPropTypeLocations');
  var ReactPropTypeLocationNames = $__require('./ReactPropTypeLocationNames');
  var ReactReconciler = $__require('./ReactReconciler');
  var ReactUpdateQueue = $__require('./ReactUpdateQueue');
  var assign = $__require('./Object.assign');
  var emptyObject = $__require('fbjs/lib/emptyObject');
  var invariant = $__require('fbjs/lib/invariant');
  var shouldUpdateReactComponent = $__require('./shouldUpdateReactComponent');
  var warning = $__require('fbjs/lib/warning');
  function getDeclarationErrorAddendum(component) {
    var owner = component._currentElement._owner || null;
    if (owner) {
      var name = owner.getName();
      if (name) {
        return ' Check the render method of `' + name + '`.';
      }
    }
    return '';
  }
  function StatelessComponent(Component) {}
  StatelessComponent.prototype.render = function() {
    var Component = ReactInstanceMap.get(this)._currentElement.type;
    return Component(this.props, this.context, this.updater);
  };
  var nextMountID = 1;
  var ReactCompositeComponentMixin = {
    construct: function(element) {
      this._currentElement = element;
      this._rootNodeID = null;
      this._instance = null;
      this._pendingElement = null;
      this._pendingStateQueue = null;
      this._pendingReplaceState = false;
      this._pendingForceUpdate = false;
      this._renderedComponent = null;
      this._context = null;
      this._mountOrder = 0;
      this._topLevelWrapper = null;
      this._pendingCallbacks = null;
    },
    mountComponent: function(rootID, transaction, context) {
      this._context = context;
      this._mountOrder = nextMountID++;
      this._rootNodeID = rootID;
      var publicProps = this._processProps(this._currentElement.props);
      var publicContext = this._processContext(context);
      var Component = this._currentElement.type;
      var inst;
      var renderedElement;
      var canInstantiate = ('prototype' in Component);
      if (canInstantiate) {
        if ("production" !== 'production') {
          ReactCurrentOwner.current = this;
          try {
            inst = new Component(publicProps, publicContext, ReactUpdateQueue);
          } finally {
            ReactCurrentOwner.current = null;
          }
        } else {
          inst = new Component(publicProps, publicContext, ReactUpdateQueue);
        }
      }
      if (!canInstantiate || inst === null || inst === false || ReactElement.isValidElement(inst)) {
        renderedElement = inst;
        inst = new StatelessComponent(Component);
      }
      if ("production" !== 'production') {
        if (inst.render == null) {
          "production" !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`, returned ' + 'null/false from a stateless component, or tried to render an ' + 'element whose type is a function that isn\'t a React component.', Component.displayName || Component.name || 'Component') : undefined;
        } else {
          "production" !== 'production' ? warning(Component.prototype && Component.prototype.isReactComponent || !canInstantiate || !(inst instanceof Component), '%s(...): React component classes must extend React.Component.', Component.displayName || Component.name || 'Component') : undefined;
        }
      }
      inst.props = publicProps;
      inst.context = publicContext;
      inst.refs = emptyObject;
      inst.updater = ReactUpdateQueue;
      this._instance = inst;
      ReactInstanceMap.set(inst, this);
      if ("production" !== 'production') {
        "production" !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : undefined;
        "production" !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : undefined;
        "production" !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : undefined;
        "production" !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : undefined;
        "production" !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : undefined;
        "production" !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : undefined;
        "production" !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : undefined;
      }
      var initialState = inst.state;
      if (initialState === undefined) {
        inst.state = initialState = null;
      }
      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? "production" !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;
      this._pendingStateQueue = null;
      this._pendingReplaceState = false;
      this._pendingForceUpdate = false;
      if (inst.componentWillMount) {
        inst.componentWillMount();
        if (this._pendingStateQueue) {
          inst.state = this._processPendingState(inst.props, inst.context);
        }
      }
      if (renderedElement === undefined) {
        renderedElement = this._renderValidatedComponent();
      }
      this._renderedComponent = this._instantiateReactComponent(renderedElement);
      var markup = ReactReconciler.mountComponent(this._renderedComponent, rootID, transaction, this._processChildContext(context));
      if (inst.componentDidMount) {
        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
      }
      return markup;
    },
    unmountComponent: function() {
      var inst = this._instance;
      if (inst.componentWillUnmount) {
        inst.componentWillUnmount();
      }
      ReactReconciler.unmountComponent(this._renderedComponent);
      this._renderedComponent = null;
      this._instance = null;
      this._pendingStateQueue = null;
      this._pendingReplaceState = false;
      this._pendingForceUpdate = false;
      this._pendingCallbacks = null;
      this._pendingElement = null;
      this._context = null;
      this._rootNodeID = null;
      this._topLevelWrapper = null;
      ReactInstanceMap.remove(inst);
    },
    _maskContext: function(context) {
      var maskedContext = null;
      var Component = this._currentElement.type;
      var contextTypes = Component.contextTypes;
      if (!contextTypes) {
        return emptyObject;
      }
      maskedContext = {};
      for (var contextName in contextTypes) {
        maskedContext[contextName] = context[contextName];
      }
      return maskedContext;
    },
    _processContext: function(context) {
      var maskedContext = this._maskContext(context);
      if ("production" !== 'production') {
        var Component = this._currentElement.type;
        if (Component.contextTypes) {
          this._checkPropTypes(Component.contextTypes, maskedContext, ReactPropTypeLocations.context);
        }
      }
      return maskedContext;
    },
    _processChildContext: function(currentContext) {
      var Component = this._currentElement.type;
      var inst = this._instance;
      var childContext = inst.getChildContext && inst.getChildContext();
      if (childContext) {
        !(typeof Component.childContextTypes === 'object') ? "production" !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;
        if ("production" !== 'production') {
          this._checkPropTypes(Component.childContextTypes, childContext, ReactPropTypeLocations.childContext);
        }
        for (var name in childContext) {
          !(name in Component.childContextTypes) ? "production" !== 'production' ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : invariant(false) : undefined;
        }
        return assign({}, currentContext, childContext);
      }
      return currentContext;
    },
    _processProps: function(newProps) {
      if ("production" !== 'production') {
        var Component = this._currentElement.type;
        if (Component.propTypes) {
          this._checkPropTypes(Component.propTypes, newProps, ReactPropTypeLocations.prop);
        }
      }
      return newProps;
    },
    _checkPropTypes: function(propTypes, props, location) {
      var componentName = this.getName();
      for (var propName in propTypes) {
        if (propTypes.hasOwnProperty(propName)) {
          var error;
          try {
            !(typeof propTypes[propName] === 'function') ? "production" !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually ' + 'from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : undefined;
            error = propTypes[propName](props, propName, componentName, location);
          } catch (ex) {
            error = ex;
          }
          if (error instanceof Error) {
            var addendum = getDeclarationErrorAddendum(this);
            if (location === ReactPropTypeLocations.prop) {
              "production" !== 'production' ? warning(false, 'Failed Composite propType: %s%s', error.message, addendum) : undefined;
            } else {
              "production" !== 'production' ? warning(false, 'Failed Context Types: %s%s', error.message, addendum) : undefined;
            }
          }
        }
      }
    },
    receiveComponent: function(nextElement, transaction, nextContext) {
      var prevElement = this._currentElement;
      var prevContext = this._context;
      this._pendingElement = null;
      this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
    },
    performUpdateIfNecessary: function(transaction) {
      if (this._pendingElement != null) {
        ReactReconciler.receiveComponent(this, this._pendingElement || this._currentElement, transaction, this._context);
      }
      if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
        this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
      }
    },
    updateComponent: function(transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
      var inst = this._instance;
      var nextContext = this._context === nextUnmaskedContext ? inst.context : this._processContext(nextUnmaskedContext);
      var nextProps;
      if (prevParentElement === nextParentElement) {
        nextProps = nextParentElement.props;
      } else {
        nextProps = this._processProps(nextParentElement.props);
        if (inst.componentWillReceiveProps) {
          inst.componentWillReceiveProps(nextProps, nextContext);
        }
      }
      var nextState = this._processPendingState(nextProps, nextContext);
      var shouldUpdate = this._pendingForceUpdate || !inst.shouldComponentUpdate || inst.shouldComponentUpdate(nextProps, nextState, nextContext);
      if ("production" !== 'production') {
        "production" !== 'production' ? warning(typeof shouldUpdate !== 'undefined', '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : undefined;
      }
      if (shouldUpdate) {
        this._pendingForceUpdate = false;
        this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
      } else {
        this._currentElement = nextParentElement;
        this._context = nextUnmaskedContext;
        inst.props = nextProps;
        inst.state = nextState;
        inst.context = nextContext;
      }
    },
    _processPendingState: function(props, context) {
      var inst = this._instance;
      var queue = this._pendingStateQueue;
      var replace = this._pendingReplaceState;
      this._pendingReplaceState = false;
      this._pendingStateQueue = null;
      if (!queue) {
        return inst.state;
      }
      if (replace && queue.length === 1) {
        return queue[0];
      }
      var nextState = assign({}, replace ? queue[0] : inst.state);
      for (var i = replace ? 1 : 0; i < queue.length; i++) {
        var partial = queue[i];
        assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
      }
      return nextState;
    },
    _performComponentUpdate: function(nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
      var inst = this._instance;
      var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
      var prevProps;
      var prevState;
      var prevContext;
      if (hasComponentDidUpdate) {
        prevProps = inst.props;
        prevState = inst.state;
        prevContext = inst.context;
      }
      if (inst.componentWillUpdate) {
        inst.componentWillUpdate(nextProps, nextState, nextContext);
      }
      this._currentElement = nextElement;
      this._context = unmaskedContext;
      inst.props = nextProps;
      inst.state = nextState;
      inst.context = nextContext;
      this._updateRenderedComponent(transaction, unmaskedContext);
      if (hasComponentDidUpdate) {
        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
      }
    },
    _updateRenderedComponent: function(transaction, context) {
      var prevComponentInstance = this._renderedComponent;
      var prevRenderedElement = prevComponentInstance._currentElement;
      var nextRenderedElement = this._renderValidatedComponent();
      if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
        ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
      } else {
        var thisID = this._rootNodeID;
        var prevComponentID = prevComponentInstance._rootNodeID;
        ReactReconciler.unmountComponent(prevComponentInstance);
        this._renderedComponent = this._instantiateReactComponent(nextRenderedElement);
        var nextMarkup = ReactReconciler.mountComponent(this._renderedComponent, thisID, transaction, this._processChildContext(context));
        this._replaceNodeWithMarkupByID(prevComponentID, nextMarkup);
      }
    },
    _replaceNodeWithMarkupByID: function(prevComponentID, nextMarkup) {
      ReactComponentEnvironment.replaceNodeWithMarkupByID(prevComponentID, nextMarkup);
    },
    _renderValidatedComponentWithoutOwnerOrContext: function() {
      var inst = this._instance;
      var renderedComponent = inst.render();
      if ("production" !== 'production') {
        if (typeof renderedComponent === 'undefined' && inst.render._isMockFunction) {
          renderedComponent = null;
        }
      }
      return renderedComponent;
    },
    _renderValidatedComponent: function() {
      var renderedComponent;
      ReactCurrentOwner.current = this;
      try {
        renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
      } finally {
        ReactCurrentOwner.current = null;
      }
      !(renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ? "production" !== 'production' ? invariant(false, '%s.render(): A valid ReactComponent must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;
      return renderedComponent;
    },
    attachRef: function(ref, component) {
      var inst = this.getPublicInstance();
      !(inst != null) ? "production" !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : invariant(false) : undefined;
      var publicComponentInstance = component.getPublicInstance();
      if ("production" !== 'production') {
        var componentName = component && component.getName ? component.getName() : 'a component';
        "production" !== 'production' ? warning(publicComponentInstance != null, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : undefined;
      }
      var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
      refs[ref] = publicComponentInstance;
    },
    detachRef: function(ref) {
      var refs = this.getPublicInstance().refs;
      delete refs[ref];
    },
    getName: function() {
      var type = this._currentElement.type;
      var constructor = this._instance && this._instance.constructor;
      return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
    },
    getPublicInstance: function() {
      var inst = this._instance;
      if (inst instanceof StatelessComponent) {
        return null;
      }
      return inst;
    },
    _instantiateReactComponent: null
  };
  ReactPerf.measureMethods(ReactCompositeComponentMixin, 'ReactCompositeComponent', {
    mountComponent: 'mountComponent',
    updateComponent: 'updateComponent',
    _renderValidatedComponent: '_renderValidatedComponent'
  });
  var ReactCompositeComponent = {Mixin: ReactCompositeComponentMixin};
  module.exports = ReactCompositeComponent;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactCurrentOwner.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ReactCurrentOwner = {current: null};
  module.exports = ReactCurrentOwner;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/canDefineProperty.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var canDefineProperty = false;
  if ("production" !== 'production') {
    try {
      Object.defineProperty({}, 'x', {get: function() {}});
      canDefineProperty = true;
    } catch (x) {}
  }
  module.exports = canDefineProperty;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactElement.js", ["./ReactCurrentOwner", "./Object.assign", "./canDefineProperty", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ReactCurrentOwner = $__require('./ReactCurrentOwner');
  var assign = $__require('./Object.assign');
  var canDefineProperty = $__require('./canDefineProperty');
  var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;
  var RESERVED_PROPS = {
    key: true,
    ref: true,
    __self: true,
    __source: true
  };
  var ReactElement = function(type, key, ref, self, source, owner, props) {
    var element = {
      $$typeof: REACT_ELEMENT_TYPE,
      type: type,
      key: key,
      ref: ref,
      props: props,
      _owner: owner
    };
    if ("production" !== 'production') {
      element._store = {};
      if (canDefineProperty) {
        Object.defineProperty(element._store, 'validated', {
          configurable: false,
          enumerable: false,
          writable: true,
          value: false
        });
        Object.defineProperty(element, '_self', {
          configurable: false,
          enumerable: false,
          writable: false,
          value: self
        });
        Object.defineProperty(element, '_source', {
          configurable: false,
          enumerable: false,
          writable: false,
          value: source
        });
      } else {
        element._store.validated = false;
        element._self = self;
        element._source = source;
      }
      Object.freeze(element.props);
      Object.freeze(element);
    }
    return element;
  };
  ReactElement.createElement = function(type, config, children) {
    var propName;
    var props = {};
    var key = null;
    var ref = null;
    var self = null;
    var source = null;
    if (config != null) {
      ref = config.ref === undefined ? null : config.ref;
      key = config.key === undefined ? null : '' + config.key;
      self = config.__self === undefined ? null : config.__self;
      source = config.__source === undefined ? null : config.__source;
      for (propName in config) {
        if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
          props[propName] = config[propName];
        }
      }
    }
    var childrenLength = arguments.length - 2;
    if (childrenLength === 1) {
      props.children = children;
    } else if (childrenLength > 1) {
      var childArray = Array(childrenLength);
      for (var i = 0; i < childrenLength; i++) {
        childArray[i] = arguments[i + 2];
      }
      props.children = childArray;
    }
    if (type && type.defaultProps) {
      var defaultProps = type.defaultProps;
      for (propName in defaultProps) {
        if (typeof props[propName] === 'undefined') {
          props[propName] = defaultProps[propName];
        }
      }
    }
    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
  };
  ReactElement.createFactory = function(type) {
    var factory = ReactElement.createElement.bind(null, type);
    factory.type = type;
    return factory;
  };
  ReactElement.cloneAndReplaceKey = function(oldElement, newKey) {
    var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
    return newElement;
  };
  ReactElement.cloneAndReplaceProps = function(oldElement, newProps) {
    var newElement = ReactElement(oldElement.type, oldElement.key, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, newProps);
    if ("production" !== 'production') {
      newElement._store.validated = oldElement._store.validated;
    }
    return newElement;
  };
  ReactElement.cloneElement = function(element, config, children) {
    var propName;
    var props = assign({}, element.props);
    var key = element.key;
    var ref = element.ref;
    var self = element._self;
    var source = element._source;
    var owner = element._owner;
    if (config != null) {
      if (config.ref !== undefined) {
        ref = config.ref;
        owner = ReactCurrentOwner.current;
      }
      if (config.key !== undefined) {
        key = '' + config.key;
      }
      for (propName in config) {
        if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
          props[propName] = config[propName];
        }
      }
    }
    var childrenLength = arguments.length - 2;
    if (childrenLength === 1) {
      props.children = children;
    } else if (childrenLength > 1) {
      var childArray = Array(childrenLength);
      for (var i = 0; i < childrenLength; i++) {
        childArray[i] = arguments[i + 2];
      }
      props.children = childArray;
    }
    return ReactElement(element.type, key, ref, self, source, owner, props);
  };
  ReactElement.isValidElement = function(object) {
    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
  };
  module.exports = ReactElement;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactEmptyComponentRegistry.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var nullComponentIDsRegistry = {};
  function isNullComponentID(id) {
    return !!nullComponentIDsRegistry[id];
  }
  function registerNullComponentID(id) {
    nullComponentIDsRegistry[id] = true;
  }
  function deregisterNullComponentID(id) {
    delete nullComponentIDsRegistry[id];
  }
  var ReactEmptyComponentRegistry = {
    isNullComponentID: isNullComponentID,
    registerNullComponentID: registerNullComponentID,
    deregisterNullComponentID: deregisterNullComponentID
  };
  module.exports = ReactEmptyComponentRegistry;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactOwner.js", ["fbjs/lib/invariant", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var invariant = $__require('fbjs/lib/invariant');
  var ReactOwner = {
    isValidOwner: function(object) {
      return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
    },
    addComponentAsRefTo: function(component, ref, owner) {
      !ReactOwner.isValidOwner(owner) ? "production" !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might ' + 'be adding a ref to a component that was not created inside a component\'s ' + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).') : invariant(false) : undefined;
      owner.attachRef(ref, component);
    },
    removeComponentAsRefFrom: function(component, ref, owner) {
      !ReactOwner.isValidOwner(owner) ? "production" !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might ' + 'be removing a ref to a component that was not created inside a component\'s ' + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).') : invariant(false) : undefined;
      if (owner.getPublicInstance().refs[ref] === component.getPublicInstance()) {
        owner.detachRef(ref);
      }
    }
  };
  module.exports = ReactOwner;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactRef.js", ["./ReactOwner", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ReactOwner = $__require('./ReactOwner');
  var ReactRef = {};
  function attachRef(ref, component, owner) {
    if (typeof ref === 'function') {
      ref(component.getPublicInstance());
    } else {
      ReactOwner.addComponentAsRefTo(component, ref, owner);
    }
  }
  function detachRef(ref, component, owner) {
    if (typeof ref === 'function') {
      ref(null);
    } else {
      ReactOwner.removeComponentAsRefFrom(component, ref, owner);
    }
  }
  ReactRef.attachRefs = function(instance, element) {
    if (element === null || element === false) {
      return;
    }
    var ref = element.ref;
    if (ref != null) {
      attachRef(ref, instance, element._owner);
    }
  };
  ReactRef.shouldUpdateRefs = function(prevElement, nextElement) {
    var prevEmpty = prevElement === null || prevElement === false;
    var nextEmpty = nextElement === null || nextElement === false;
    return (prevEmpty || nextEmpty || nextElement._owner !== prevElement._owner || nextElement.ref !== prevElement.ref);
  };
  ReactRef.detachRefs = function(instance, element) {
    if (element === null || element === false) {
      return;
    }
    var ref = element.ref;
    if (ref != null) {
      detachRef(ref, instance, element._owner);
    }
  };
  module.exports = ReactRef;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactReconciler.js", ["./ReactRef", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ReactRef = $__require('./ReactRef');
  function attachRefs() {
    ReactRef.attachRefs(this, this._currentElement);
  }
  var ReactReconciler = {
    mountComponent: function(internalInstance, rootID, transaction, context) {
      var markup = internalInstance.mountComponent(rootID, transaction, context);
      if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
        transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
      }
      return markup;
    },
    unmountComponent: function(internalInstance) {
      ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
      internalInstance.unmountComponent();
    },
    receiveComponent: function(internalInstance, nextElement, transaction, context) {
      var prevElement = internalInstance._currentElement;
      if (nextElement === prevElement && context === internalInstance._context) {
        return;
      }
      var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);
      if (refsChanged) {
        ReactRef.detachRefs(internalInstance, prevElement);
      }
      internalInstance.receiveComponent(nextElement, transaction, context);
      if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
        transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
      }
    },
    performUpdateIfNecessary: function(internalInstance, transaction) {
      internalInstance.performUpdateIfNecessary(transaction);
    }
  };
  module.exports = ReactReconciler;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactEmptyComponent.js", ["./ReactElement", "./ReactEmptyComponentRegistry", "./ReactReconciler", "./Object.assign", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ReactElement = $__require('./ReactElement');
  var ReactEmptyComponentRegistry = $__require('./ReactEmptyComponentRegistry');
  var ReactReconciler = $__require('./ReactReconciler');
  var assign = $__require('./Object.assign');
  var placeholderElement;
  var ReactEmptyComponentInjection = {injectEmptyComponent: function(component) {
      placeholderElement = ReactElement.createElement(component);
    }};
  var ReactEmptyComponent = function(instantiate) {
    this._currentElement = null;
    this._rootNodeID = null;
    this._renderedComponent = instantiate(placeholderElement);
  };
  assign(ReactEmptyComponent.prototype, {
    construct: function(element) {},
    mountComponent: function(rootID, transaction, context) {
      ReactEmptyComponentRegistry.registerNullComponentID(rootID);
      this._rootNodeID = rootID;
      return ReactReconciler.mountComponent(this._renderedComponent, rootID, transaction, context);
    },
    receiveComponent: function() {},
    unmountComponent: function(rootID, transaction, context) {
      ReactReconciler.unmountComponent(this._renderedComponent);
      ReactEmptyComponentRegistry.deregisterNullComponentID(this._rootNodeID);
      this._rootNodeID = null;
      this._renderedComponent = null;
    }
  });
  ReactEmptyComponent.injection = ReactEmptyComponentInjection;
  module.exports = ReactEmptyComponent;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactNativeComponent.js", ["./Object.assign", "fbjs/lib/invariant", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var assign = $__require('./Object.assign');
  var invariant = $__require('fbjs/lib/invariant');
  var autoGenerateWrapperClass = null;
  var genericComponentClass = null;
  var tagToComponentClass = {};
  var textComponentClass = null;
  var ReactNativeComponentInjection = {
    injectGenericComponentClass: function(componentClass) {
      genericComponentClass = componentClass;
    },
    injectTextComponentClass: function(componentClass) {
      textComponentClass = componentClass;
    },
    injectComponentClasses: function(componentClasses) {
      assign(tagToComponentClass, componentClasses);
    }
  };
  function getComponentClassForElement(element) {
    if (typeof element.type === 'function') {
      return element.type;
    }
    var tag = element.type;
    var componentClass = tagToComponentClass[tag];
    if (componentClass == null) {
      tagToComponentClass[tag] = componentClass = autoGenerateWrapperClass(tag);
    }
    return componentClass;
  }
  function createInternalComponent(element) {
    !genericComponentClass ? "production" !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : invariant(false) : undefined;
    return new genericComponentClass(element.type, element.props);
  }
  function createInstanceForText(text) {
    return new textComponentClass(text);
  }
  function isTextComponent(component) {
    return component instanceof textComponentClass;
  }
  var ReactNativeComponent = {
    getComponentClassForElement: getComponentClassForElement,
    createInternalComponent: createInternalComponent,
    createInstanceForText: createInstanceForText,
    isTextComponent: isTextComponent,
    injection: ReactNativeComponentInjection
  };
  module.exports = ReactNativeComponent;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/instantiateReactComponent.js", ["./ReactCompositeComponent", "./ReactEmptyComponent", "./ReactNativeComponent", "./Object.assign", "fbjs/lib/invariant", "fbjs/lib/warning", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ReactCompositeComponent = $__require('./ReactCompositeComponent');
  var ReactEmptyComponent = $__require('./ReactEmptyComponent');
  var ReactNativeComponent = $__require('./ReactNativeComponent');
  var assign = $__require('./Object.assign');
  var invariant = $__require('fbjs/lib/invariant');
  var warning = $__require('fbjs/lib/warning');
  var ReactCompositeComponentWrapper = function() {};
  assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent.Mixin, {_instantiateReactComponent: instantiateReactComponent});
  function getDeclarationErrorAddendum(owner) {
    if (owner) {
      var name = owner.getName();
      if (name) {
        return ' Check the render method of `' + name + '`.';
      }
    }
    return '';
  }
  function isInternalComponentType(type) {
    return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
  }
  function instantiateReactComponent(node) {
    var instance;
    if (node === null || node === false) {
      instance = new ReactEmptyComponent(instantiateReactComponent);
    } else if (typeof node === 'object') {
      var element = node;
      !(element && (typeof element.type === 'function' || typeof element.type === 'string')) ? "production" !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) ' + 'or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : invariant(false) : undefined;
      if (typeof element.type === 'string') {
        instance = ReactNativeComponent.createInternalComponent(element);
      } else if (isInternalComponentType(element.type)) {
        instance = new element.type(element);
      } else {
        instance = new ReactCompositeComponentWrapper();
      }
    } else if (typeof node === 'string' || typeof node === 'number') {
      instance = ReactNativeComponent.createInstanceForText(node);
    } else {
      !false ? "production" !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : invariant(false) : undefined;
    }
    if ("production" !== 'production') {
      "production" !== 'production' ? warning(typeof instance.construct === 'function' && typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : undefined;
    }
    instance.construct(node);
    instance._mountIndex = 0;
    instance._mountImage = null;
    if ("production" !== 'production') {
      instance._isOwnerNecessary = false;
      instance._warnedAboutRefsInRender = false;
    }
    if ("production" !== 'production') {
      if (Object.preventExtensions) {
        Object.preventExtensions(instance);
      }
    }
    return instance;
  }
  module.exports = instantiateReactComponent;
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.6.1/lib/invariant.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  function invariant(condition, format, a, b, c, d, e, f) {
    if ("production" !== 'production') {
      if (format === undefined) {
        throw new Error('invariant requires an error message argument');
      }
    }
    if (!condition) {
      var error;
      if (format === undefined) {
        error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
      } else {
        var args = [a, b, c, d, e, f];
        var argIndex = 0;
        error = new Error(format.replace(/%s/g, function() {
          return args[argIndex++];
        }));
        error.name = 'Invariant Violation';
      }
      error.framesToPop = 1;
      throw error;
    }
  }
  module.exports = invariant;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/setInnerHTML.js", ["fbjs/lib/ExecutionEnvironment", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ExecutionEnvironment = $__require('fbjs/lib/ExecutionEnvironment');
  var WHITESPACE_TEST = /^[ \r\n\t\f]/;
  var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;
  var setInnerHTML = function(node, html) {
    node.innerHTML = html;
  };
  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
    setInnerHTML = function(node, html) {
      MSApp.execUnsafeLocalFunction(function() {
        node.innerHTML = html;
      });
    };
  }
  if (ExecutionEnvironment.canUseDOM) {
    var testElement = document.createElement('div');
    testElement.innerHTML = ' ';
    if (testElement.innerHTML === '') {
      setInnerHTML = function(node, html) {
        if (node.parentNode) {
          node.parentNode.replaceChild(node, node);
        }
        if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
          node.innerHTML = String.fromCharCode(0xFEFF) + html;
          var textNode = node.firstChild;
          if (textNode.data.length === 1) {
            node.removeChild(textNode);
          } else {
            textNode.deleteData(0, 1);
          }
        } else {
          node.innerHTML = html;
        }
      };
    }
  }
  module.exports = setInnerHTML;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/shouldUpdateReactComponent.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  function shouldUpdateReactComponent(prevElement, nextElement) {
    var prevEmpty = prevElement === null || prevElement === false;
    var nextEmpty = nextElement === null || nextElement === false;
    if (prevEmpty || nextEmpty) {
      return prevEmpty === nextEmpty;
    }
    var prevType = typeof prevElement;
    var nextType = typeof nextElement;
    if (prevType === 'string' || prevType === 'number') {
      return nextType === 'string' || nextType === 'number';
    } else {
      return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
    }
    return false;
  }
  module.exports = shouldUpdateReactComponent;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/Object.assign.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  function assign(target, sources) {
    if (target == null) {
      throw new TypeError('Object.assign target cannot be null or undefined');
    }
    var to = Object(target);
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {
      var nextSource = arguments[nextIndex];
      if (nextSource == null) {
        continue;
      }
      var from = Object(nextSource);
      for (var key in from) {
        if (hasOwnProperty.call(from, key)) {
          to[key] = from[key];
        }
      }
    }
    return to;
  }
  module.exports = assign;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/validateDOMNesting.js", ["./Object.assign", "fbjs/lib/emptyFunction", "fbjs/lib/warning", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var assign = $__require('./Object.assign');
  var emptyFunction = $__require('fbjs/lib/emptyFunction');
  var warning = $__require('fbjs/lib/warning');
  var validateDOMNesting = emptyFunction;
  if ("production" !== 'production') {
    var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];
    var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template', 'foreignObject', 'desc', 'title'];
    var buttonScopeTags = inScopeTags.concat(['button']);
    var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];
    var emptyAncestorInfo = {
      parentTag: null,
      formTag: null,
      aTagInScope: null,
      buttonTagInScope: null,
      nobrTagInScope: null,
      pTagInButtonScope: null,
      listItemTagAutoclosing: null,
      dlItemTagAutoclosing: null
    };
    var updatedAncestorInfo = function(oldInfo, tag, instance) {
      var ancestorInfo = assign({}, oldInfo || emptyAncestorInfo);
      var info = {
        tag: tag,
        instance: instance
      };
      if (inScopeTags.indexOf(tag) !== -1) {
        ancestorInfo.aTagInScope = null;
        ancestorInfo.buttonTagInScope = null;
        ancestorInfo.nobrTagInScope = null;
      }
      if (buttonScopeTags.indexOf(tag) !== -1) {
        ancestorInfo.pTagInButtonScope = null;
      }
      if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
        ancestorInfo.listItemTagAutoclosing = null;
        ancestorInfo.dlItemTagAutoclosing = null;
      }
      ancestorInfo.parentTag = info;
      if (tag === 'form') {
        ancestorInfo.formTag = info;
      }
      if (tag === 'a') {
        ancestorInfo.aTagInScope = info;
      }
      if (tag === 'button') {
        ancestorInfo.buttonTagInScope = info;
      }
      if (tag === 'nobr') {
        ancestorInfo.nobrTagInScope = info;
      }
      if (tag === 'p') {
        ancestorInfo.pTagInButtonScope = info;
      }
      if (tag === 'li') {
        ancestorInfo.listItemTagAutoclosing = info;
      }
      if (tag === 'dd' || tag === 'dt') {
        ancestorInfo.dlItemTagAutoclosing = info;
      }
      return ancestorInfo;
    };
    var isTagValidWithParent = function(tag, parentTag) {
      switch (parentTag) {
        case 'select':
          return tag === 'option' || tag === 'optgroup' || tag === '#text';
        case 'optgroup':
          return tag === 'option' || tag === '#text';
        case 'option':
          return tag === '#text';
        case 'tr':
          return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
        case 'tbody':
        case 'thead':
        case 'tfoot':
          return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
        case 'colgroup':
          return tag === 'col' || tag === 'template';
        case 'table':
          return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
        case 'head':
          return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
        case 'html':
          return tag === 'head' || tag === 'body';
      }
      switch (tag) {
        case 'h1':
        case 'h2':
        case 'h3':
        case 'h4':
        case 'h5':
        case 'h6':
          return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';
        case 'rp':
        case 'rt':
          return impliedEndTags.indexOf(parentTag) === -1;
        case 'caption':
        case 'col':
        case 'colgroup':
        case 'frame':
        case 'head':
        case 'tbody':
        case 'td':
        case 'tfoot':
        case 'th':
        case 'thead':
        case 'tr':
          return parentTag == null;
      }
      return true;
    };
    var findInvalidAncestorForTag = function(tag, ancestorInfo) {
      switch (tag) {
        case 'address':
        case 'article':
        case 'aside':
        case 'blockquote':
        case 'center':
        case 'details':
        case 'dialog':
        case 'dir':
        case 'div':
        case 'dl':
        case 'fieldset':
        case 'figcaption':
        case 'figure':
        case 'footer':
        case 'header':
        case 'hgroup':
        case 'main':
        case 'menu':
        case 'nav':
        case 'ol':
        case 'p':
        case 'section':
        case 'summary':
        case 'ul':
        case 'pre':
        case 'listing':
        case 'table':
        case 'hr':
        case 'xmp':
        case 'h1':
        case 'h2':
        case 'h3':
        case 'h4':
        case 'h5':
        case 'h6':
          return ancestorInfo.pTagInButtonScope;
        case 'form':
          return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
        case 'li':
          return ancestorInfo.listItemTagAutoclosing;
        case 'dd':
        case 'dt':
          return ancestorInfo.dlItemTagAutoclosing;
        case 'button':
          return ancestorInfo.buttonTagInScope;
        case 'a':
          return ancestorInfo.aTagInScope;
        case 'nobr':
          return ancestorInfo.nobrTagInScope;
      }
      return null;
    };
    var findOwnerStack = function(instance) {
      if (!instance) {
        return [];
      }
      var stack = [];
      do {
        stack.push(instance);
      } while (instance = instance._currentElement._owner);
      stack.reverse();
      return stack;
    };
    var didWarn = {};
    validateDOMNesting = function(childTag, childInstance, ancestorInfo) {
      ancestorInfo = ancestorInfo || emptyAncestorInfo;
      var parentInfo = ancestorInfo.parentTag;
      var parentTag = parentInfo && parentInfo.tag;
      var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
      var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
      var problematic = invalidParent || invalidAncestor;
      if (problematic) {
        var ancestorTag = problematic.tag;
        var ancestorInstance = problematic.instance;
        var childOwner = childInstance && childInstance._currentElement._owner;
        var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;
        var childOwners = findOwnerStack(childOwner);
        var ancestorOwners = findOwnerStack(ancestorOwner);
        var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
        var i;
        var deepestCommon = -1;
        for (i = 0; i < minStackLen; i++) {
          if (childOwners[i] === ancestorOwners[i]) {
            deepestCommon = i;
          } else {
            break;
          }
        }
        var UNKNOWN = '(unknown)';
        var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function(inst) {
          return inst.getName() || UNKNOWN;
        });
        var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function(inst) {
          return inst.getName() || UNKNOWN;
        });
        var ownerInfo = [].concat(deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag, invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');
        var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
        if (didWarn[warnKey]) {
          return;
        }
        didWarn[warnKey] = true;
        if (invalidParent) {
          var info = '';
          if (ancestorTag === 'table' && childTag === 'tr') {
            info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
          }
          "production" !== 'production' ? warning(false, 'validateDOMNesting(...): <%s> cannot appear as a child of <%s>. ' + 'See %s.%s', childTag, ancestorTag, ownerInfo, info) : undefined;
        } else {
          "production" !== 'production' ? warning(false, 'validateDOMNesting(...): <%s> cannot appear as a descendant of ' + '<%s>. See %s.', childTag, ancestorTag, ownerInfo) : undefined;
        }
      }
    };
    validateDOMNesting.ancestorInfoContextKey = '__validateDOMNesting_ancestorInfo$' + Math.random().toString(36).slice(2);
    validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;
    validateDOMNesting.isTagValidInContext = function(tag, ancestorInfo) {
      ancestorInfo = ancestorInfo || emptyAncestorInfo;
      var parentInfo = ancestorInfo.parentTag;
      var parentTag = parentInfo && parentInfo.tag;
      return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
    };
  }
  module.exports = validateDOMNesting;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/ReactMount.js", ["./DOMProperty", "./ReactBrowserEventEmitter", "./ReactCurrentOwner", "./ReactDOMFeatureFlags", "./ReactElement", "./ReactEmptyComponentRegistry", "./ReactInstanceHandles", "./ReactInstanceMap", "./ReactMarkupChecksum", "./ReactPerf", "./ReactReconciler", "./ReactUpdateQueue", "./ReactUpdates", "./Object.assign", "fbjs/lib/emptyObject", "fbjs/lib/containsNode", "./instantiateReactComponent", "fbjs/lib/invariant", "./setInnerHTML", "./shouldUpdateReactComponent", "./validateDOMNesting", "fbjs/lib/warning", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var DOMProperty = $__require('./DOMProperty');
  var ReactBrowserEventEmitter = $__require('./ReactBrowserEventEmitter');
  var ReactCurrentOwner = $__require('./ReactCurrentOwner');
  var ReactDOMFeatureFlags = $__require('./ReactDOMFeatureFlags');
  var ReactElement = $__require('./ReactElement');
  var ReactEmptyComponentRegistry = $__require('./ReactEmptyComponentRegistry');
  var ReactInstanceHandles = $__require('./ReactInstanceHandles');
  var ReactInstanceMap = $__require('./ReactInstanceMap');
  var ReactMarkupChecksum = $__require('./ReactMarkupChecksum');
  var ReactPerf = $__require('./ReactPerf');
  var ReactReconciler = $__require('./ReactReconciler');
  var ReactUpdateQueue = $__require('./ReactUpdateQueue');
  var ReactUpdates = $__require('./ReactUpdates');
  var assign = $__require('./Object.assign');
  var emptyObject = $__require('fbjs/lib/emptyObject');
  var containsNode = $__require('fbjs/lib/containsNode');
  var instantiateReactComponent = $__require('./instantiateReactComponent');
  var invariant = $__require('fbjs/lib/invariant');
  var setInnerHTML = $__require('./setInnerHTML');
  var shouldUpdateReactComponent = $__require('./shouldUpdateReactComponent');
  var validateDOMNesting = $__require('./validateDOMNesting');
  var warning = $__require('fbjs/lib/warning');
  var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
  var nodeCache = {};
  var ELEMENT_NODE_TYPE = 1;
  var DOC_NODE_TYPE = 9;
  var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
  var ownerDocumentContextKey = '__ReactMount_ownerDocument$' + Math.random().toString(36).slice(2);
  var instancesByReactRootID = {};
  var containersByReactRootID = {};
  if ("production" !== 'production') {
    var rootElementsByReactRootID = {};
  }
  var findComponentRootReusableArray = [];
  function firstDifferenceIndex(string1, string2) {
    var minLen = Math.min(string1.length, string2.length);
    for (var i = 0; i < minLen; i++) {
      if (string1.charAt(i) !== string2.charAt(i)) {
        return i;
      }
    }
    return string1.length === string2.length ? -1 : minLen;
  }
  function getReactRootElementInContainer(container) {
    if (!container) {
      return null;
    }
    if (container.nodeType === DOC_NODE_TYPE) {
      return container.documentElement;
    } else {
      return container.firstChild;
    }
  }
  function getReactRootID(container) {
    var rootElement = getReactRootElementInContainer(container);
    return rootElement && ReactMount.getID(rootElement);
  }
  function getID(node) {
    var id = internalGetID(node);
    if (id) {
      if (nodeCache.hasOwnProperty(id)) {
        var cached = nodeCache[id];
        if (cached !== node) {
          !!isValid(cached, id) ? "production" !== 'production' ? invariant(false, 'ReactMount: Two valid but unequal nodes with the same `%s`: %s', ATTR_NAME, id) : invariant(false) : undefined;
          nodeCache[id] = node;
        }
      } else {
        nodeCache[id] = node;
      }
    }
    return id;
  }
  function internalGetID(node) {
    return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';
  }
  function setID(node, id) {
    var oldID = internalGetID(node);
    if (oldID !== id) {
      delete nodeCache[oldID];
    }
    node.setAttribute(ATTR_NAME, id);
    nodeCache[id] = node;
  }
  function getNode(id) {
    if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
      nodeCache[id] = ReactMount.findReactNodeByID(id);
    }
    return nodeCache[id];
  }
  function getNodeFromInstance(instance) {
    var id = ReactInstanceMap.get(instance)._rootNodeID;
    if (ReactEmptyComponentRegistry.isNullComponentID(id)) {
      return null;
    }
    if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
      nodeCache[id] = ReactMount.findReactNodeByID(id);
    }
    return nodeCache[id];
  }
  function isValid(node, id) {
    if (node) {
      !(internalGetID(node) === id) ? "production" !== 'production' ? invariant(false, 'ReactMount: Unexpected modification of `%s`', ATTR_NAME) : invariant(false) : undefined;
      var container = ReactMount.findReactContainerForID(id);
      if (container && containsNode(container, node)) {
        return true;
      }
    }
    return false;
  }
  function purgeID(id) {
    delete nodeCache[id];
  }
  var deepestNodeSoFar = null;
  function findDeepestCachedAncestorImpl(ancestorID) {
    var ancestor = nodeCache[ancestorID];
    if (ancestor && isValid(ancestor, ancestorID)) {
      deepestNodeSoFar = ancestor;
    } else {
      return false;
    }
  }
  function findDeepestCachedAncestor(targetID) {
    deepestNodeSoFar = null;
    ReactInstanceHandles.traverseAncestors(targetID, findDeepestCachedAncestorImpl);
    var foundNode = deepestNodeSoFar;
    deepestNodeSoFar = null;
    return foundNode;
  }
  function mountComponentIntoNode(componentInstance, rootID, container, transaction, shouldReuseMarkup, context) {
    if (ReactDOMFeatureFlags.useCreateElement) {
      context = assign({}, context);
      if (container.nodeType === DOC_NODE_TYPE) {
        context[ownerDocumentContextKey] = container;
      } else {
        context[ownerDocumentContextKey] = container.ownerDocument;
      }
    }
    if ("production" !== 'production') {
      if (context === emptyObject) {
        context = {};
      }
      var tag = container.nodeName.toLowerCase();
      context[validateDOMNesting.ancestorInfoContextKey] = validateDOMNesting.updatedAncestorInfo(null, tag, null);
    }
    var markup = ReactReconciler.mountComponent(componentInstance, rootID, transaction, context);
    componentInstance._renderedComponent._topLevelWrapper = componentInstance;
    ReactMount._mountImageIntoNode(markup, container, shouldReuseMarkup, transaction);
  }
  function batchedMountComponentIntoNode(componentInstance, rootID, container, shouldReuseMarkup, context) {
    var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(shouldReuseMarkup);
    transaction.perform(mountComponentIntoNode, null, componentInstance, rootID, container, transaction, shouldReuseMarkup, context);
    ReactUpdates.ReactReconcileTransaction.release(transaction);
  }
  function unmountComponentFromNode(instance, container) {
    ReactReconciler.unmountComponent(instance);
    if (container.nodeType === DOC_NODE_TYPE) {
      container = container.documentElement;
    }
    while (container.lastChild) {
      container.removeChild(container.lastChild);
    }
  }
  function hasNonRootReactChild(node) {
    var reactRootID = getReactRootID(node);
    return reactRootID ? reactRootID !== ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID) : false;
  }
  function findFirstReactDOMImpl(node) {
    for (; node && node.parentNode !== node; node = node.parentNode) {
      if (node.nodeType !== 1) {
        continue;
      }
      var nodeID = internalGetID(node);
      if (!nodeID) {
        continue;
      }
      var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);
      var current = node;
      var lastID;
      do {
        lastID = internalGetID(current);
        current = current.parentNode;
        if (current == null) {
          return null;
        }
      } while (lastID !== reactRootID);
      if (current === containersByReactRootID[reactRootID]) {
        return node;
      }
    }
    return null;
  }
  var TopLevelWrapper = function() {};
  TopLevelWrapper.prototype.isReactComponent = {};
  if ("production" !== 'production') {
    TopLevelWrapper.displayName = 'TopLevelWrapper';
  }
  TopLevelWrapper.prototype.render = function() {
    return this.props;
  };
  var ReactMount = {
    TopLevelWrapper: TopLevelWrapper,
    _instancesByReactRootID: instancesByReactRootID,
    scrollMonitor: function(container, renderCallback) {
      renderCallback();
    },
    _updateRootComponent: function(prevComponent, nextElement, container, callback) {
      ReactMount.scrollMonitor(container, function() {
        ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement);
        if (callback) {
          ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
        }
      });
      if ("production" !== 'production') {
        rootElementsByReactRootID[getReactRootID(container)] = getReactRootElementInContainer(container);
      }
      return prevComponent;
    },
    _registerComponent: function(nextComponent, container) {
      !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? "production" !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : invariant(false) : undefined;
      ReactBrowserEventEmitter.ensureScrollValueMonitoring();
      var reactRootID = ReactMount.registerContainer(container);
      instancesByReactRootID[reactRootID] = nextComponent;
      return reactRootID;
    },
    _renderNewRootComponent: function(nextElement, container, shouldReuseMarkup, context) {
      "production" !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : undefined;
      var componentInstance = instantiateReactComponent(nextElement, null);
      var reactRootID = ReactMount._registerComponent(componentInstance, container);
      ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, reactRootID, container, shouldReuseMarkup, context);
      if ("production" !== 'production') {
        rootElementsByReactRootID[reactRootID] = getReactRootElementInContainer(container);
      }
      return componentInstance;
    },
    renderSubtreeIntoContainer: function(parentComponent, nextElement, container, callback) {
      !(parentComponent != null && parentComponent._reactInternalInstance != null) ? "production" !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : invariant(false) : undefined;
      return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
    },
    _renderSubtreeIntoContainer: function(parentComponent, nextElement, container, callback) {
      !ReactElement.isValidElement(nextElement) ? "production" !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing an element string, make sure to instantiate ' + 'it by passing it to React.createElement.' : typeof nextElement === 'function' ? ' Instead of passing a component class, make sure to instantiate ' + 'it by passing it to React.createElement.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : invariant(false) : undefined;
      "production" !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : undefined;
      var nextWrappedElement = new ReactElement(TopLevelWrapper, null, null, null, null, null, nextElement);
      var prevComponent = instancesByReactRootID[getReactRootID(container)];
      if (prevComponent) {
        var prevWrappedElement = prevComponent._currentElement;
        var prevElement = prevWrappedElement.props;
        if (shouldUpdateReactComponent(prevElement, nextElement)) {
          var publicInst = prevComponent._renderedComponent.getPublicInstance();
          var updatedCallback = callback && function() {
            callback.call(publicInst);
          };
          ReactMount._updateRootComponent(prevComponent, nextWrappedElement, container, updatedCallback);
          return publicInst;
        } else {
          ReactMount.unmountComponentAtNode(container);
        }
      }
      var reactRootElement = getReactRootElementInContainer(container);
      var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
      var containerHasNonRootReactChild = hasNonRootReactChild(container);
      if ("production" !== 'production') {
        "production" !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : undefined;
        if (!containerHasReactMarkup || reactRootElement.nextSibling) {
          var rootElementSibling = reactRootElement;
          while (rootElementSibling) {
            if (internalGetID(rootElementSibling)) {
              "production" !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : undefined;
              break;
            }
            rootElementSibling = rootElementSibling.nextSibling;
          }
        }
      }
      var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
      var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, parentComponent != null ? parentComponent._reactInternalInstance._processChildContext(parentComponent._reactInternalInstance._context) : emptyObject)._renderedComponent.getPublicInstance();
      if (callback) {
        callback.call(component);
      }
      return component;
    },
    render: function(nextElement, container, callback) {
      return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
    },
    registerContainer: function(container) {
      var reactRootID = getReactRootID(container);
      if (reactRootID) {
        reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);
      }
      if (!reactRootID) {
        reactRootID = ReactInstanceHandles.createReactRootID();
      }
      containersByReactRootID[reactRootID] = container;
      return reactRootID;
    },
    unmountComponentAtNode: function(container) {
      "production" !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : undefined;
      !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? "production" !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : invariant(false) : undefined;
      var reactRootID = getReactRootID(container);
      var component = instancesByReactRootID[reactRootID];
      if (!component) {
        var containerHasNonRootReactChild = hasNonRootReactChild(container);
        var containerID = internalGetID(container);
        var isContainerReactRoot = containerID && containerID === ReactInstanceHandles.getReactRootIDFromNodeID(containerID);
        if ("production" !== 'production') {
          "production" !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : undefined;
        }
        return false;
      }
      ReactUpdates.batchedUpdates(unmountComponentFromNode, component, container);
      delete instancesByReactRootID[reactRootID];
      delete containersByReactRootID[reactRootID];
      if ("production" !== 'production') {
        delete rootElementsByReactRootID[reactRootID];
      }
      return true;
    },
    findReactContainerForID: function(id) {
      var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(id);
      var container = containersByReactRootID[reactRootID];
      if ("production" !== 'production') {
        var rootElement = rootElementsByReactRootID[reactRootID];
        if (rootElement && rootElement.parentNode !== container) {
          "production" !== 'production' ? warning(internalGetID(rootElement) === reactRootID, 'ReactMount: Root element ID differed from reactRootID.') : undefined;
          var containerChild = container.firstChild;
          if (containerChild && reactRootID === internalGetID(containerChild)) {
            rootElementsByReactRootID[reactRootID] = containerChild;
          } else {
            "production" !== 'production' ? warning(false, 'ReactMount: Root element has been removed from its original ' + 'container. New container: %s', rootElement.parentNode) : undefined;
          }
        }
      }
      return container;
    },
    findReactNodeByID: function(id) {
      var reactRoot = ReactMount.findReactContainerForID(id);
      return ReactMount.findComponentRoot(reactRoot, id);
    },
    getFirstReactDOM: function(node) {
      return findFirstReactDOMImpl(node);
    },
    findComponentRoot: function(ancestorNode, targetID) {
      var firstChildren = findComponentRootReusableArray;
      var childIndex = 0;
      var deepestAncestor = findDeepestCachedAncestor(targetID) || ancestorNode;
      if ("production" !== 'production') {
        "production" !== 'production' ? warning(deepestAncestor != null, 'React can\'t find the root component node for data-reactid value ' + '`%s`. If you\'re seeing this message, it probably means that ' + 'you\'ve loaded two copies of React on the page. At this time, only ' + 'a single copy of React can be loaded at a time.', targetID) : undefined;
      }
      firstChildren[0] = deepestAncestor.firstChild;
      firstChildren.length = 1;
      while (childIndex < firstChildren.length) {
        var child = firstChildren[childIndex++];
        var targetChild;
        while (child) {
          var childID = ReactMount.getID(child);
          if (childID) {
            if (targetID === childID) {
              targetChild = child;
            } else if (ReactInstanceHandles.isAncestorIDOf(childID, targetID)) {
              firstChildren.length = childIndex = 0;
              firstChildren.push(child.firstChild);
            }
          } else {
            firstChildren.push(child.firstChild);
          }
          child = child.nextSibling;
        }
        if (targetChild) {
          firstChildren.length = 0;
          return targetChild;
        }
      }
      firstChildren.length = 0;
      !false ? "production" !== 'production' ? invariant(false, 'findComponentRoot(..., %s): Unable to find element. This probably ' + 'means the DOM was unexpectedly mutated (e.g., by the browser), ' + 'usually due to forgetting a <tbody> when using tables, nesting tags ' + 'like <form>, <p>, or <a>, or using non-SVG elements in an <svg> ' + 'parent. ' + 'Try inspecting the child nodes of the element with React ID `%s`.', targetID, ReactMount.getID(ancestorNode)) : invariant(false) : undefined;
    },
    _mountImageIntoNode: function(markup, container, shouldReuseMarkup, transaction) {
      !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? "production" !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : invariant(false) : undefined;
      if (shouldReuseMarkup) {
        var rootElement = getReactRootElementInContainer(container);
        if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
          return;
        } else {
          var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
          rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
          var rootMarkup = rootElement.outerHTML;
          rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);
          var normalizedMarkup = markup;
          if ("production" !== 'production') {
            var normalizer;
            if (container.nodeType === ELEMENT_NODE_TYPE) {
              normalizer = document.createElement('div');
              normalizer.innerHTML = markup;
              normalizedMarkup = normalizer.innerHTML;
            } else {
              normalizer = document.createElement('iframe');
              document.body.appendChild(normalizer);
              normalizer.contentDocument.write(markup);
              normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
              document.body.removeChild(normalizer);
            }
          }
          var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
          var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);
          !(container.nodeType !== DOC_NODE_TYPE) ? "production" !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using ' + 'server rendering but the checksum was invalid. This usually ' + 'means you rendered a different component type or props on ' + 'the client from the one on the server, or your render() ' + 'methods are impure. React cannot handle this case due to ' + 'cross-browser quirks by rendering at the document root. You ' + 'should look for environment dependent code in your components ' + 'and ensure the props are the same client and server side:\n%s', difference) : invariant(false) : undefined;
          if ("production" !== 'production') {
            "production" !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : undefined;
          }
        }
      }
      !(container.nodeType !== DOC_NODE_TYPE) ? "production" !== 'production' ? invariant(false, 'You\'re trying to render a component to the document but ' + 'you didn\'t use server rendering. We can\'t do this ' + 'without using server rendering due to cross-browser quirks. ' + 'See ReactDOMServer.renderToString() for server rendering.') : invariant(false) : undefined;
      if (transaction.useCreateElement) {
        while (container.lastChild) {
          container.removeChild(container.lastChild);
        }
        container.appendChild(markup);
      } else {
        setInnerHTML(container, markup);
      }
    },
    ownerDocumentContextKey: ownerDocumentContextKey,
    getReactRootID: getReactRootID,
    getID: getID,
    setID: setID,
    getNode: getNode,
    getNodeFromInstance: getNodeFromInstance,
    isValid: isValid,
    purgeID: purgeID
  };
  ReactPerf.measureMethods(ReactMount, 'ReactMount', {
    _renderNewRootComponent: '_renderNewRootComponent',
    _mountImageIntoNode: '_mountImageIntoNode'
  });
  module.exports = ReactMount;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7/lib/renderSubtreeIntoContainer.js", ["./ReactMount", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ReactMount = $__require('./ReactMount');
  module.exports = ReactMount.renderSubtreeIntoContainer;
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.6.1/lib/emptyFunction.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  function makeEmptyFunction(arg) {
    return function() {
      return arg;
    };
  }
  function emptyFunction() {}
  emptyFunction.thatReturns = makeEmptyFunction;
  emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
  emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
  emptyFunction.thatReturnsNull = makeEmptyFunction(null);
  emptyFunction.thatReturnsThis = function() {
    return this;
  };
  emptyFunction.thatReturnsArgument = function(arg) {
    return arg;
  };
  module.exports = emptyFunction;
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.6.1/lib/warning.js", ["./emptyFunction", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var emptyFunction = $__require('./emptyFunction');
  var warning = emptyFunction;
  if ("production" !== 'production') {
    warning = function(condition, format) {
      for (var _len = arguments.length,
          args = Array(_len > 2 ? _len - 2 : 0),
          _key = 2; _key < _len; _key++) {
        args[_key - 2] = arguments[_key];
      }
      if (format === undefined) {
        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
      }
      if (format.indexOf('Failed Composite propType: ') === 0) {
        return;
      }
      if (!condition) {
        var argIndex = 0;
        var message = 'Warning: ' + format.replace(/%s/g, function() {
          return args[argIndex++];
        });
        if (typeof console !== 'undefined') {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {}
      }
    };
  }
  module.exports = warning;
  return module.exports;
});

System.registerDynamic("npm:fbjs@0.6.1.json", [], false, function() {
  return {
    "main": "index.js",
    "format": "cjs",
    "meta": {
      "*": {
        "globals": {
          "process": "process"
        }
      },
      "*.json": {
        "format": "json"
      }
    }
  };
});

System.registerDynamic("npm:fbjs@0.6.1/lib/ExecutionEnvironment.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
  var ExecutionEnvironment = {
    canUseDOM: canUseDOM,
    canUseWorkers: typeof Worker !== 'undefined',
    canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),
    canUseViewport: canUseDOM && !!window.screen,
    isInWorker: !canUseDOM
  };
  module.exports = ExecutionEnvironment;
  return module.exports;
});

System.registerDynamic("npm:react@0.14.7.json", [], false, function() {
  return {
    "main": "react.js",
    "format": "cjs",
    "meta": {
      "*": {
        "globals": {
          "process": "process"
        }
      }
    },
    "map": {
      "fbjs/lib/ExecutionEnvironment.js": {
        "production": "@empty"
      },
      "./lib/ReactDefaultPerf.js": {
        "production": "@empty"
      },
      "./lib/ReactTestUtils.js": {
        "production": "@empty"
      }
    }
  };
});

System.registerDynamic("npm:react@0.14.7/lib/ReactDOM.js", ["./ReactCurrentOwner", "./ReactDOMTextComponent", "./ReactDefaultInjection", "./ReactInstanceHandles", "./ReactMount", "./ReactPerf", "./ReactReconciler", "./ReactUpdates", "./ReactVersion", "./findDOMNode", "./renderSubtreeIntoContainer", "fbjs/lib/warning", "fbjs/lib/ExecutionEnvironment", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ReactCurrentOwner = $__require('./ReactCurrentOwner');
  var ReactDOMTextComponent = $__require('./ReactDOMTextComponent');
  var ReactDefaultInjection = $__require('./ReactDefaultInjection');
  var ReactInstanceHandles = $__require('./ReactInstanceHandles');
  var ReactMount = $__require('./ReactMount');
  var ReactPerf = $__require('./ReactPerf');
  var ReactReconciler = $__require('./ReactReconciler');
  var ReactUpdates = $__require('./ReactUpdates');
  var ReactVersion = $__require('./ReactVersion');
  var findDOMNode = $__require('./findDOMNode');
  var renderSubtreeIntoContainer = $__require('./renderSubtreeIntoContainer');
  var warning = $__require('fbjs/lib/warning');
  ReactDefaultInjection.inject();
  var render = ReactPerf.measure('React', 'render', ReactMount.render);
  var React = {
    findDOMNode: findDOMNode,
    render: render,
    unmountComponentAtNode: ReactMount.unmountComponentAtNode,
    version: ReactVersion,
    unstable_batchedUpdates: ReactUpdates.batchedUpdates,
    unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
  };
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
    __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
      CurrentOwner: ReactCurrentOwner,
      InstanceHandles: ReactInstanceHandles,
      Mount: ReactMount,
      Reconciler: ReactReconciler,
      TextComponent: ReactDOMTextComponent
    });
  }
  if ("production" !== 'production') {
    var ExecutionEnvironment = $__require('fbjs/lib/ExecutionEnvironment');
    if (ExecutionEnvironment.canUseDOM && window.top === window.self) {
      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
        if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
          console.debug('Download the React DevTools for a better development experience: ' + 'https://fb.me/react-devtools');
        }
      }
      var ieCompatibilityMode = document.documentMode && document.documentMode < 8;
      "production" !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : undefined;
      var expectedFeatures = [Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.split, String.prototype.trim, Object.create, Object.freeze];
      for (var i = 0; i < expectedFeatures.length; i++) {
        if (!expectedFeatures[i]) {
          console.error('One or more ES5 shim/shams expected by React are not available: ' + 'https://fb.me/react-warning-polyfills');
          break;
        }
      }
    }
  }
  module.exports = React;
  return module.exports;
});

System.registerDynamic("npm:react-dom@0.14.7.json", [], false, function() {
  return {
    "main": "index.js",
    "format": "cjs",
    "meta": {
      "*": {
        "globals": {
          "process": "process"
        }
      },
      "*.json": {
        "format": "json"
      }
    }
  };
});

System.registerDynamic("npm:react-dom@0.14.7/index.js", ["react/lib/ReactDOM", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  module.exports = $__require('react/lib/ReactDOM');
  return module.exports;
});

(function() {
var define = System.amdDefine;
!function() {
  var a = "undefined" != typeof System ? System : void 0;
  !function(a) {
    "use strict";
    function b(a) {
      a.Reflect = a.Reflect || {}, a.Reflect.global = a.Reflect.global || a;
    }
    if (!a.$traceurRuntime) {
      b(a);
      var c = function(a) {
        return typeof a;
      };
      a.$traceurRuntime = {
        options: {},
        setupGlobals: b,
        "typeof": c
      };
    }
  }("undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this), function() {
    function a(a, b, c, d, e, f, g) {
      var h = [];
      return a && h.push(a, ":"), c && (h.push("//"), b && h.push(b, "@"), h.push(c), d && h.push(":", d)), e && h.push(e), f && h.push("?", f), g && h.push("#", g), h.join("");
    }
    function b(a) {
      return a.match(h);
    }
    function c(a) {
      if ("/" === a)
        return "/";
      for (var b = "/" === a[0] ? "/" : "",
          c = "/" === a.slice(-1) ? "/" : "",
          d = a.split("/"),
          e = [],
          f = 0,
          g = 0; g < d.length; g++) {
        var h = d[g];
        switch (h) {
          case "":
          case ".":
            break;
          case "..":
            e.length ? e.pop() : f++;
            break;
          default:
            e.push(h);
        }
      }
      if (!b) {
        for (; f-- > 0; )
          e.unshift("..");
        0 === e.length && e.push(".");
      }
      return b + e.join("/") + c;
    }
    function d(b) {
      var d = b[i.PATH] || "";
      return d = c(d), b[i.PATH] = d, a(b[i.SCHEME], b[i.USER_INFO], b[i.DOMAIN], b[i.PORT], b[i.PATH], b[i.QUERY_DATA], b[i.FRAGMENT]);
    }
    function e(a) {
      var c = b(a);
      return d(c);
    }
    function f(a, c) {
      var e = b(c),
          f = b(a);
      if (e[i.SCHEME])
        return d(e);
      e[i.SCHEME] = f[i.SCHEME];
      for (var g = i.SCHEME; g <= i.PORT; g++)
        e[g] || (e[g] = f[g]);
      if ("/" == e[i.PATH][0])
        return d(e);
      var h = f[i.PATH],
          j = h.lastIndexOf("/");
      return h = h.slice(0, j + 1) + e[i.PATH], e[i.PATH] = h, d(e);
    }
    function g(a) {
      if (!a)
        return !1;
      if ("/" === a[0])
        return !0;
      var c = b(a);
      return c[i.SCHEME] ? !0 : !1;
    }
    var h = new RegExp("^(?:([^:/?#.]+):)?(?://(?:([^/?#]*)@)?([\\w\\d\\-\\u0100-\\uffff.%]*)(?::([0-9]+))?)?([^?#]+)?(?:\\?([^#]*))?(?:#(.*))?$"),
        i = {
          SCHEME: 1,
          USER_INFO: 2,
          DOMAIN: 3,
          PORT: 4,
          PATH: 5,
          QUERY_DATA: 6,
          FRAGMENT: 7
        };
    $traceurRuntime.canonicalizeUrl = e, $traceurRuntime.isAbsolute = g, $traceurRuntime.removeDotSegments = c, $traceurRuntime.resolveUrl = f;
  }(), function(a) {
    "use strict";
    function b(a, b) {
      this.url = a, this.value_ = b;
    }
    function c(a, b) {
      this.message = this.constructor.name + ": " + this.stripCause(b) + " in " + a, b instanceof c || !b.stack ? this.stack = "" : this.stack = this.stripStack(b.stack);
    }
    function d(a, b) {
      var c = [],
          d = b - 3;
      0 > d && (d = 0);
      for (var e = d; b > e; e++)
        c.push(a[e]);
      return c;
    }
    function e(a, b) {
      var c = b + 1;
      c > a.length - 1 && (c = a.length - 1);
      for (var d = [],
          e = b; c >= e; e++)
        d.push(a[e]);
      return d;
    }
    function f(a) {
      for (var b = "",
          c = 0; a - 1 > c; c++)
        b += "-";
      return b;
    }
    function g(a, c) {
      b.call(this, a, null), this.func = c;
    }
    function h(a) {
      if (a) {
        var b = r.normalize(a);
        return o[b];
      }
    }
    function i(a) {
      var b = arguments[1],
          c = Object.create(null);
      return Object.getOwnPropertyNames(a).forEach(function(d) {
        var e,
            f;
        if (b === q) {
          var g = Object.getOwnPropertyDescriptor(a, d);
          g.get && (e = g.get);
        }
        e || (f = a[d], e = function() {
          return f;
        }), Object.defineProperty(c, d, {
          get: e,
          enumerable: !0
        });
      }), Object.preventExtensions(c), c;
    }
    var j,
        k = $traceurRuntime,
        l = k.canonicalizeUrl,
        m = k.resolveUrl,
        n = k.isAbsolute,
        o = Object.create(null);
    j = a.location && a.location.href ? m(a.location.href, "./") : "", c.prototype = Object.create(Error.prototype), c.prototype.constructor = c, c.prototype.stripError = function(a) {
      return a.replace(/.*Error:/, this.constructor.name + ":");
    }, c.prototype.stripCause = function(a) {
      return a ? a.message ? this.stripError(a.message) : a + "" : "";
    }, c.prototype.loadedBy = function(a) {
      this.stack += "\n loaded by " + a;
    }, c.prototype.stripStack = function(a) {
      var b = [];
      return a.split("\n").some(function(a) {
        return /UncoatedModuleInstantiator/.test(a) ? !0 : void b.push(a);
      }), b[0] = this.stripError(b[0]), b.join("\n");
    }, g.prototype = Object.create(b.prototype), g.prototype.getUncoatedModule = function() {
      var b = this;
      if (this.value_)
        return this.value_;
      try {
        var g;
        return void 0 !== typeof $traceurRuntime && $traceurRuntime.require && (g = $traceurRuntime.require.bind(null, this.url)), this.value_ = this.func.call(a, g);
      } catch (h) {
        if (h instanceof c)
          throw h.loadedBy(this.url), h;
        if (h.stack) {
          var i = this.func.toString().split("\n"),
              j = [];
          h.stack.split("\n").some(function(a, c) {
            if (a.indexOf("UncoatedModuleInstantiator.getUncoatedModule") > 0)
              return !0;
            var g = /(at\s[^\s]*\s).*>:(\d*):(\d*)\)/.exec(a);
            if (g) {
              var h = parseInt(g[2], 10);
              j = j.concat(d(i, h)), 1 === c ? j.push(f(g[3]) + "^ " + b.url) : j.push(f(g[3]) + "^"), j = j.concat(e(i, h)), j.push("= = = = = = = = =");
            } else
              j.push(a);
          }), h.stack = j.join("\n");
        }
        throw new c(this.url, h);
      }
    };
    var p = Object.create(null),
        q = {},
        r = {
          normalize: function(a, b, c) {
            if ("string" != typeof a)
              throw new TypeError("module name must be a string, not " + typeof a);
            if (n(a))
              return l(a);
            if (/[^\.]\/\.\.\//.test(a))
              throw new Error("module name embeds /../: " + a);
            return "." === a[0] && b ? m(b, a) : l(a);
          },
          get: function(a) {
            var b = h(a);
            if (b) {
              var c = p[b.url];
              return c ? c : (c = i(b.getUncoatedModule(), q), p[b.url] = c);
            }
          },
          set: function(a, b) {
            a = String(a), o[a] = new g(a, function() {
              return b;
            }), p[a] = b;
          },
          get baseURL() {
            return j;
          },
          set baseURL(a) {
            j = String(a);
          },
          registerModule: function(a, b, c) {
            var d = r.normalize(a);
            if (o[d])
              throw new Error("duplicate module named " + d);
            o[d] = new g(d, c);
          },
          bundleStore: Object.create(null),
          register: function(a, b, c) {
            b && (b.length || c.length) ? this.bundleStore[a] = {
              deps: b,
              execute: function() {
                var a = arguments,
                    d = {};
                b.forEach(function(b, c) {
                  return d[b] = a[c];
                });
                var e = c.call(this, d);
                return e.execute.call(this), e.exports;
              }
            } : this.registerModule(a, b, c);
          },
          getAnonymousModule: function(b) {
            return new i(b.call(a), q);
          }
        },
        s = new i({ModuleStore: r});
    r.set("@traceur/src/runtime/ModuleStore.js", s);
    var t = $traceurRuntime.setupGlobals;
    $traceurRuntime.setupGlobals = function(a) {
      t(a);
    }, $traceurRuntime.ModuleStore = r, $traceurRuntime.registerModule = r.registerModule.bind(r), $traceurRuntime.getModule = r.get, $traceurRuntime.setModule = r.set, $traceurRuntime.normalizeModuleName = r.normalize;
  }("undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this), $traceurRuntime.registerModule("traceur-runtime@0.0.102/src/runtime/new-unique-string.js", [], function() {
    "use strict";
    function a() {
      return "__$" + (1e9 * b() >>> 1) + "$" + ++c + "$__";
    }
    var b = Math.random,
        c = Date.now() % 1e9,
        d = a;
    return {get default() {
        return d;
      }};
  }), $traceurRuntime.registerModule("traceur-runtime@0.0.102/src/runtime/has-native-symbols.js", [], function() {
    "use strict";
    function a() {
      return b;
    }
    var b = !!Object.getOwnPropertySymbols && "function" == typeof Symbol,
        c = a;
    return {get default() {
        return c;
      }};
  }), $traceurRuntime.registerModule("traceur-runtime@0.0.102/src/runtime/symbols.js", [], function() {
    "use strict";
    function a(a) {
      return {
        configurable: !0,
        enumerable: !1,
        value: a,
        writable: !0
      };
    }
    function b(a) {
      var b = i();
      l(this, s, {value: this}), l(this, q, {value: b}), l(this, r, {value: a}), m(this), t[b] = this;
    }
    function c(a) {
      return t[a];
    }
    function d(a) {
      for (var b = [],
          d = 0; d < a.length; d++)
        c(a[d]) || b.push(a[d]);
      return b;
    }
    function e(a) {
      return d(n(a));
    }
    function f(a) {
      return d(o(a));
    }
    function g(a) {
      for (var b = [],
          c = n(a),
          d = 0; d < c.length; d++) {
        var e = t[c[d]];
        e && b.push(e);
      }
      return b;
    }
    function h(b) {
      var c = b.Object;
      j() || (b.Symbol = u, c.getOwnPropertyNames = e, c.keys = f, l(c, "getOwnPropertySymbols", a(g))), b.Symbol.iterator || (b.Symbol.iterator = b.Symbol("Symbol.iterator")), b.Symbol.observer || (b.Symbol.observer = b.Symbol("Symbol.observer"));
    }
    var i = $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("./new-unique-string.js", "traceur-runtime@0.0.102/src/runtime/symbols.js"))["default"],
        j = $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("./has-native-symbols.js", "traceur-runtime@0.0.102/src/runtime/symbols.js"))["default"],
        k = Object.create,
        l = Object.defineProperty,
        m = Object.freeze,
        n = Object.getOwnPropertyNames,
        o = Object.keys,
        p = TypeError,
        q = i(),
        r = i(),
        s = i(),
        t = k(null),
        u = function(a) {
          var c = new b(a);
          if (!(this instanceof u))
            return c;
          throw new p("Symbol cannot be new'ed");
        };
    l(u.prototype, "constructor", a(u)), l(u.prototype, "toString", a(function() {
      var a = this[s];
      return a[q];
    })), l(u.prototype, "valueOf", a(function() {
      var a = this[s];
      if (!a)
        throw p("Conversion from symbol to string");
      return a[q];
    })), l(b.prototype, "constructor", a(u)), l(b.prototype, "toString", {
      value: u.prototype.toString,
      enumerable: !1
    }), l(b.prototype, "valueOf", {
      value: u.prototype.valueOf,
      enumerable: !1
    }), m(b.prototype);
    var v = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this;
    h(v);
    var w = j() ? function(a) {
      return typeof a;
    } : function(a) {
      return a instanceof b ? "symbol" : typeof a;
    };
    return $traceurRuntime["typeof"] = w, {};
  }), $traceurRuntime.registerModule("traceur-runtime@0.0.102/src/runtime/classes.js", [], function() {
    "use strict";
    function a(a, b) {
      var c = s(a);
      do {
        var d = p(c, b);
        if (d)
          return d;
        c = s(c);
      } while (c);
    }
    function b(a) {
      return a.__proto__;
    }
    function c(b, c, d) {
      var e = a(c, d);
      if (e) {
        var f = e.value;
        return f ? f : e.get ? e.get.call(b) : f;
      }
    }
    function d(b, c, d, e) {
      var f = a(c, d);
      if (f && f.set)
        return f.set.call(b, e), e;
      throw k("super has no setter '" + d + "'.");
    }
    function e(a, b) {
      q(a).forEach(b), r && r(a).forEach(b);
    }
    function f(a) {
      var b = {};
      return e(a, function(c) {
        b[c] = p(a, c), b[c].enumerable = !1;
      }), b;
    }
    function g(a) {
      e(a, function(b) {
        o(a, b, t);
      });
    }
    function h(a, b, c, d) {
      return o(b, "constructor", {
        value: a,
        configurable: !0,
        enumerable: !1,
        writable: !0
      }), arguments.length > 3 ? ("function" == typeof d && (a.__proto__ = d), a.prototype = m(i(d), f(b))) : (g(b), a.prototype = b), o(a, "prototype", {
        configurable: !1,
        writable: !1
      }), n(a, f(c));
    }
    function i(a) {
      if ("function" == typeof a) {
        var b = a.prototype;
        if (j(b) === b || null === b)
          return a.prototype;
        throw new k("super prototype must be an Object or null");
      }
      if (null === a)
        return null;
      throw new k("Super expression must either be null or a function, not " + typeof a + ".");
    }
    var j = Object,
        k = TypeError,
        l = Object,
        m = l.create,
        n = l.defineProperties,
        o = l.defineProperty,
        p = l.getOwnPropertyDescriptor,
        q = l.getOwnPropertyNames,
        r = l.getOwnPropertySymbols,
        s = l.getPrototypeOf,
        t = {enumerable: !1};
    return $traceurRuntime.createClass = h, $traceurRuntime.superConstructor = b, $traceurRuntime.superGet = c, $traceurRuntime.superSet = d, {};
  }), $traceurRuntime.registerModule("traceur-runtime@0.0.102/src/runtime/exportStar.js", [], function() {
    "use strict";
    function a(a) {
      for (var b = arguments,
          e = function(e) {
            var f,
                g = b[e],
                h = d(g),
                i = function(b) {
                  var d = h[b];
                  return "__esModule" === d || "default" === d ? 0 : void c(a, d, {
                    get: function() {
                      return g[d];
                    },
                    enumerable: !0
                  });
                };
            a: for (var j = 0; j < h.length; j++)
              switch (f = i(j)) {
                case 0:
                  continue a;
              }
          },
          f = 1; f < arguments.length; f++)
        e(f);
      return a;
    }
    var b = Object,
        c = b.defineProperty,
        d = b.getOwnPropertyNames;
    return $traceurRuntime.exportStar = a, {};
  }), $traceurRuntime.registerModule("traceur-runtime@0.0.102/src/runtime/private-symbol.js", [], function() {
    "use strict";
    function a(a) {
      return l[a];
    }
    function b() {
      var a = (i || h)();
      return l[a] = !0, a;
    }
    function c(a, b) {
      return hasOwnProperty.call(a, b);
    }
    function d(a, b) {
      return c(a, b) ? (delete a[b], !0) : !1;
    }
    function e(a, b, c) {
      a[b] = c;
    }
    function f(a, b) {
      var c = a[b];
      if (void 0 !== c)
        return hasOwnProperty.call(a, b) ? c : void 0;
    }
    function g() {
      j && (Object.getOwnPropertySymbols = function(b) {
        for (var c = [],
            d = j(b),
            e = 0; e < d.length; e++) {
          var f = d[e];
          a(f) || c.push(f);
        }
        return c;
      });
    }
    var h = $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("./new-unique-string.js", "traceur-runtime@0.0.102/src/runtime/private-symbol.js"))["default"],
        i = "function" == typeof Symbol ? Symbol : void 0,
        j = Object.getOwnPropertySymbols,
        k = Object.create,
        l = k(null);
    return {
      get isPrivateSymbol() {
        return a;
      },
      get createPrivateSymbol() {
        return b;
      },
      get hasPrivate() {
        return c;
      },
      get deletePrivate() {
        return d;
      },
      get setPrivate() {
        return e;
      },
      get getPrivate() {
        return f;
      },
      get init() {
        return g;
      }
    };
  }), $traceurRuntime.registerModule("traceur-runtime@0.0.102/src/runtime/private-weak-map.js", [], function() {
    "use strict";
    function a(a) {
      return !1;
    }
    function b() {
      return new h;
    }
    function c(a, b) {
      return b.has(a);
    }
    function d(a, b) {
      return b["delete"](a);
    }
    function e(a, b, c) {
      b.set(a, c);
    }
    function f(a, b) {
      return b.get(a);
    }
    function g() {}
    var h = "function" == typeof WeakMap ? WeakMap : void 0;
    return {
      get isPrivateSymbol() {
        return a;
      },
      get createPrivateSymbol() {
        return b;
      },
      get hasPrivate() {
        return c;
      },
      get deletePrivate() {
        return d;
      },
      get setPrivate() {
        return e;
      },
      get getPrivate() {
        return f;
      },
      get init() {
        return g;
      }
    };
  }), $traceurRuntime.registerModule("traceur-runtime@0.0.102/src/runtime/private.js", [], function() {
    "use strict";
    var a = $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("./private-symbol.js", "traceur-runtime@0.0.102/src/runtime/private.js")),
        b = $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("./private-weak-map.js", "traceur-runtime@0.0.102/src/runtime/private.js")),
        c = "function" == typeof WeakMap,
        d = c ? b : a,
        e = d.isPrivateSymbol,
        f = d.createPrivateSymbol,
        g = d.hasPrivate,
        h = d.deletePrivate,
        i = d.setPrivate,
        j = d.getPrivate;
    return d.init(), {
      get isPrivateSymbol() {
        return e;
      },
      get createPrivateSymbol() {
        return f;
      },
      get hasPrivate() {
        return g;
      },
      get deletePrivate() {
        return h;
      },
      get setPrivate() {
        return i;
      },
      get getPrivate() {
        return j;
      }
    };
  }), $traceurRuntime.registerModule("traceur-runtime@0.0.102/src/runtime/properTailCalls.js", [], function() {
    "use strict";
    function a(a, b, c) {
      return [o, a, b, c];
    }
    function b(a) {
      return a && a[0] === o;
    }
    function c(a, b, c) {
      for (var d = [b],
          e = 0; e < c.length; e++)
        d[e + 1] = c[e];
      var f = n(Function.prototype.bind, a, d);
      return f;
    }
    function d(a, b) {
      var d = new (c(a, null, b));
      return d;
    }
    function e(a) {
      return !!k(a, p);
    }
    function f(c, d, f) {
      var g = f[0];
      if (b(g))
        return g = n(c, d, g[3]);
      for (g = a(c, d, f); ; ) {
        if (g = e(c) ? n(c, g[2], [g]) : n(c, g[2], g[3]), !b(g))
          return g;
        c = g[1];
      }
    }
    function g() {
      var b;
      return b = e(this) ? d(this, [a(null, null, arguments)]) : d(this, arguments);
    }
    function h() {
      p = m(), Function.prototype.call = i(function(b) {
        var c = f(function(b) {
          for (var c = [],
              d = 1; d < arguments.length; ++d)
            c[d - 1] = arguments[d];
          var e = a(this, b, c);
          return e;
        }, this, arguments);
        return c;
      }), Function.prototype.apply = i(function(b, c) {
        var d = f(function(b, c) {
          var d = a(this, b, c);
          return d;
        }, this, arguments);
        return d;
      });
    }
    function i(a) {
      return null === p && h(), l(a, p, !0), a;
    }
    var j = $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("./private.js", "traceur-runtime@0.0.102/src/runtime/properTailCalls.js")),
        k = j.getPrivate,
        l = j.setPrivate,
        m = j.createPrivateSymbol,
        n = Function.prototype.call.bind(Function.prototype.apply),
        o = Object.create(null),
        p = null;
    return $traceurRuntime.initTailRecursiveFunction = i, $traceurRuntime.call = f, $traceurRuntime.continuation = a, $traceurRuntime.construct = g, {};
  }), $traceurRuntime.registerModule("traceur-runtime@0.0.102/src/runtime/relativeRequire.js", [], function() {
    "use strict";
    function a(a, c) {
      function d(a) {
        return "/" === a.slice(-1);
      }
      function e(a) {
        return "/" === a[0];
      }
      function f(a) {
        return "." === a[0];
      }
      return b = b || "undefined" != typeof require && require("path"), d(c) || e(c) ? void 0 : f(c) ? require(b.resolve(b.dirname(a), c)) : require(c);
    }
    var b;
    return $traceurRuntime.require = a, {};
  }), $traceurRuntime.registerModule("traceur-runtime@0.0.102/src/runtime/checkObjectCoercible.js", [], function() {
    "use strict";
    function a(a) {
      if (null === a || void 0 === a)
        throw new b("Value cannot be converted to an Object");
      return a;
    }
    var b = TypeError,
        c = a;
    return {get default() {
        return c;
      }};
  }), $traceurRuntime.registerModule("traceur-runtime@0.0.102/src/runtime/spread.js", [], function() {
    "use strict";
    function a() {
      for (var a,
          c = [],
          d = 0,
          e = 0; e < arguments.length; e++) {
        var f = b(arguments[e]);
        if ("function" != typeof f[Symbol.iterator])
          throw new TypeError("Cannot spread non-iterable object.");
        for (var g = f[Symbol.iterator](); !(a = g.next()).done; )
          c[d++] = a.value;
      }
      return c;
    }
    var b = $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("./checkObjectCoercible.js", "traceur-runtime@0.0.102/src/runtime/spread.js"))["default"];
    return $traceurRuntime.spread = a, {};
  }), $traceurRuntime.registerModule("traceur-runtime@0.0.102/src/runtime/destructuring.js", [], function() {
    "use strict";
    function a(a) {
      for (var b,
          c = [],
          d = 0; !(b = a.next()).done; )
        c[d++] = b.value;
      return c;
    }
    return $traceurRuntime.iteratorToArray = a, {};
  }), $traceurRuntime.registerModule("traceur-runtime@0.0.102/src/runtime/async.js", [], function() {
    "use strict";
    function a() {}
    function b() {}
    function c(a) {
      return a.prototype = m(b.prototype), a.__proto__ = b, a;
    }
    function d(a, b) {
      for (var c = [],
          d = 2; d < arguments.length; d++)
        c[d - 2] = arguments[d];
      var e = m(b.prototype);
      return k(e, o, a), e;
    }
    function e(a, b) {
      return new Promise(function(c, d) {
        var e = a({
          next: function(a) {
            return b.call(e, a);
          },
          "throw": function(a) {
            d(a);
          },
          "return": function(a) {
            c(a);
          }
        });
      });
    }
    function f(a) {
      return Promise.resolve().then(a);
    }
    function g(a, b) {
      return new s(a, b);
    }
    var h = $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("./private.js", "traceur-runtime@0.0.102/src/runtime/async.js")),
        i = h.createPrivateSymbol,
        j = h.getPrivate,
        k = h.setPrivate,
        l = Object,
        m = l.create,
        n = l.defineProperty,
        o = i();
    a.prototype = b, b.constructor = a, n(b, "constructor", {enumerable: !1});
    var p = function() {
      function a(a) {
        var b = this;
        this.decoratedObserver = $traceurRuntime.createDecoratedGenerator(a, function() {
          b.done = !0;
        }), this.done = !1, this.inReturn = !1;
      }
      return $traceurRuntime.createClass(a, {
        "throw": function(a) {
          if (!this.inReturn)
            throw a;
        },
        "yield": function(a) {
          if (this.done)
            throw void(this.inReturn = !0);
          var b;
          try {
            b = this.decoratedObserver.next(a);
          } catch (c) {
            throw this.done = !0, c;
          }
          if (void 0 !== b) {
            if (b.done)
              throw this.done = !0, void(this.inReturn = !0);
            return b.value;
          }
        },
        yieldFor: function(a) {
          var b = this;
          return $traceurRuntime.observeForEach(a[Symbol.observer].bind(a), function(a) {
            if (b.done)
              return void this["return"]();
            var c;
            try {
              c = b.decoratedObserver.next(a);
            } catch (d) {
              throw b.done = !0, d;
            }
            if (void 0 !== c)
              return c.done && (b.done = !0), c;
          });
        }
      }, {});
    }();
    b.prototype[Symbol.observer] = function(a) {
      var b = j(this, o),
          c = new p(a);
      return $traceurRuntime.schedule(function() {
        return b(c);
      }).then(function(a) {
        c.done || c.decoratedObserver["return"](a);
      })["catch"](function(a) {
        c.done || c.decoratedObserver["throw"](a);
      }), c.decoratedObserver;
    }, n(b.prototype, Symbol.observer, {enumerable: !1});
    var q = Symbol(),
        r = Symbol(),
        s = function() {
          function a(a, b) {
            this[q] = a, this[r] = b;
          }
          return $traceurRuntime.createClass(a, {
            next: function(a) {
              var b = this[q].next(a);
              return void 0 !== b && b.done && this[r].call(this), b;
            },
            "throw": function(a) {
              return this[r].call(this), this[q]["throw"](a);
            },
            "return": function(a) {
              return this[r].call(this), this[q]["return"](a);
            }
          }, {});
        }();
    return Array.prototype[Symbol.observer] = function(a) {
      var b = !1,
          c = g(a, function() {
            return b = !0;
          }),
          d = !0,
          e = !1,
          f = void 0;
      try {
        for (var h = void 0,
            i = this[Symbol.iterator](); !(d = (h = i.next()).done); d = !0) {
          var j = h.value;
          if (c.next(j), b)
            return;
        }
      } catch (k) {
        e = !0, f = k;
      } finally {
        try {
          d || null == i["return"] || i["return"]();
        } finally {
          if (e)
            throw f;
        }
      }
      return c["return"](), c;
    }, n(Array.prototype, Symbol.observer, {enumerable: !1}), $traceurRuntime.initAsyncGeneratorFunction = c, $traceurRuntime.createAsyncGeneratorInstance = d, $traceurRuntime.observeForEach = e, $traceurRuntime.schedule = f, $traceurRuntime.createDecoratedGenerator = g, {};
  }), $traceurRuntime.registerModule("traceur-runtime@0.0.102/src/runtime/generators.js", [], function() {
    "use strict";
    function a(a) {
      return {
        configurable: !0,
        enumerable: !1,
        value: a,
        writable: !0
      };
    }
    function b(a) {
      return new Error("Traceur compiler bug: invalid state in state machine: " + a);
    }
    function c() {
      this.state = 0, this.GState = v, this.storedException = void 0, this.finallyFallThrough = void 0, this.sent_ = void 0, this.returnValue = void 0, this.oldReturnValue = void 0, this.tryStack_ = [];
    }
    function d(a, b, c, d) {
      switch (a.GState) {
        case w:
          throw new Error('"' + c + '" on executing generator');
        case y:
          if ("next" == c)
            return {
              value: void 0,
              done: !0
            };
          if (d === B)
            return {
              value: a.returnValue,
              done: !0
            };
          throw d;
        case v:
          if ("throw" === c) {
            if (a.GState = y, d === B)
              return {
                value: a.returnValue,
                done: !0
              };
            throw d;
          }
          if (void 0 !== d)
            throw q("Sent value to newborn generator");
        case x:
          a.GState = w, a.action = c, a.sent = d;
          var e;
          try {
            e = b(a);
          } catch (f) {
            if (f !== B)
              throw f;
            e = a;
          }
          var g = e === a;
          return g && (e = a.returnValue), a.GState = g ? y : x, {
            value: e,
            done: g
          };
      }
    }
    function e() {}
    function f() {}
    function g(a, b, d) {
      var e = k(a, d),
          f = new c,
          g = s(b.prototype);
      return p(g, C, f), p(g, D, e), g;
    }
    function h(a) {
      return a.prototype = s(f.prototype), a.__proto__ = f, a;
    }
    function i() {
      c.call(this), this.err = void 0;
      var a = this;
      a.result = new Promise(function(b, c) {
        a.resolve = b, a.reject = c;
      });
    }
    function j(a, b) {
      var c = k(a, b),
          d = new i;
      return d.createCallback = function(a) {
        return function(b) {
          d.state = a, d.value = b, c(d);
        };
      }, d.errback = function(a) {
        l(d, a), c(d);
      }, c(d), d.result;
    }
    function k(a, b) {
      return function(c) {
        for (; ; )
          try {
            return a.call(b, c);
          } catch (d) {
            l(c, d);
          }
      };
    }
    function l(a, b) {
      a.storedException = b;
      var c = a.tryStack_[a.tryStack_.length - 1];
      return c ? (a.state = void 0 !== c["catch"] ? c["catch"] : c["finally"], void(void 0 !== c.finallyFallThrough && (a.finallyFallThrough = c.finallyFallThrough))) : void a.handleException(b);
    }
    var m = $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("./private.js", "traceur-runtime@0.0.102/src/runtime/generators.js")),
        n = m.createPrivateSymbol,
        o = m.getPrivate,
        p = m.setPrivate,
        q = TypeError,
        r = Object,
        s = r.create,
        t = r.defineProperties,
        u = r.defineProperty,
        v = 0,
        w = 1,
        x = 2,
        y = 3,
        z = -2,
        A = -3,
        B = {};
    c.prototype = {
      pushTry: function(a, b) {
        if (null !== b) {
          for (var c = null,
              d = this.tryStack_.length - 1; d >= 0; d--)
            if (void 0 !== this.tryStack_[d]["catch"]) {
              c = this.tryStack_[d]["catch"];
              break;
            }
          null === c && (c = A), this.tryStack_.push({
            "finally": b,
            finallyFallThrough: c
          });
        }
        null !== a && this.tryStack_.push({"catch": a});
      },
      popTry: function() {
        this.tryStack_.pop();
      },
      maybeUncatchable: function() {
        if (this.storedException === B)
          throw B;
      },
      get sent() {
        return this.maybeThrow(), this.sent_;
      },
      set sent(a) {
        this.sent_ = a;
      },
      get sentIgnoreThrow() {
        return this.sent_;
      },
      maybeThrow: function() {
        if ("throw" === this.action)
          throw this.action = "next", this.sent_;
      },
      end: function() {
        switch (this.state) {
          case z:
            return this;
          case A:
            throw this.storedException;
          default:
            throw b(this.state);
        }
      },
      handleException: function(a) {
        throw this.GState = y, this.state = z, a;
      },
      wrapYieldStar: function(a) {
        var b = this;
        return {
          next: function(b) {
            return a.next(b);
          },
          "throw": function(c) {
            var d;
            if (c === B) {
              if (a["return"]) {
                if (d = a["return"](b.returnValue), !d.done)
                  return b.returnValue = b.oldReturnValue, d;
                b.returnValue = d.value;
              }
              throw c;
            }
            if (a["throw"])
              return a["throw"](c);
            throw a["return"] && a["return"](), q("Inner iterator does not have a throw method");
          }
        };
      }
    };
    var C = n(),
        D = n();
    return e.prototype = f, u(f, "constructor", a(e)), f.prototype = {
      constructor: f,
      next: function(a) {
        return d(o(this, C), o(this, D), "next", a);
      },
      "throw": function(a) {
        return d(o(this, C), o(this, D), "throw", a);
      },
      "return": function(a) {
        var b = o(this, C);
        return b.oldReturnValue = b.returnValue, b.returnValue = a, d(b, o(this, D), "throw", B);
      }
    }, t(f.prototype, {
      constructor: {enumerable: !1},
      next: {enumerable: !1},
      "throw": {enumerable: !1},
      "return": {enumerable: !1}
    }), Object.defineProperty(f.prototype, Symbol.iterator, a(function() {
      return this;
    })), i.prototype = s(c.prototype), i.prototype.end = function() {
      switch (this.state) {
        case z:
          this.resolve(this.returnValue);
          break;
        case A:
          this.reject(this.storedException);
          break;
        default:
          this.reject(b(this.state));
      }
    }, i.prototype.handleException = function() {
      this.state = A;
    }, $traceurRuntime.asyncWrap = j, $traceurRuntime.initGeneratorFunction = h, $traceurRuntime.createGeneratorInstance = g, {};
  }), $traceurRuntime.registerModule("traceur-runtime@0.0.102/src/runtime/template.js", [], function() {
    "use strict";
    function a(a) {
      var b = arguments[1],
          g = a.join("${}"),
          h = f[g];
      return h ? h : (b || (b = e.call(a)), f[g] = d(c(b, "raw", {value: d(a)})));
    }
    var b = Object,
        c = b.defineProperty,
        d = b.freeze,
        e = Array.prototype.slice,
        f = Object.create(null);
    return $traceurRuntime.getTemplateObject = a, {};
  }), $traceurRuntime.registerModule("traceur-runtime@0.0.102/src/runtime/runtime-modules.js", [], function() {
    "use strict";
    return $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("./symbols.js", "traceur-runtime@0.0.102/src/runtime/runtime-modules.js")), $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("./classes.js", "traceur-runtime@0.0.102/src/runtime/runtime-modules.js")), $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("./exportStar.js", "traceur-runtime@0.0.102/src/runtime/runtime-modules.js")), $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("./properTailCalls.js", "traceur-runtime@0.0.102/src/runtime/runtime-modules.js")), $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("./relativeRequire.js", "traceur-runtime@0.0.102/src/runtime/runtime-modules.js")), $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("./spread.js", "traceur-runtime@0.0.102/src/runtime/runtime-modules.js")), $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("./destructuring.js", "traceur-runtime@0.0.102/src/runtime/runtime-modules.js")), $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("./async.js", "traceur-runtime@0.0.102/src/runtime/runtime-modules.js")), $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("./generators.js", "traceur-runtime@0.0.102/src/runtime/runtime-modules.js")), $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("./template.js", "traceur-runtime@0.0.102/src/runtime/runtime-modules.js")), {};
  }), $traceurRuntime.getModule("traceur-runtime@0.0.102/src/runtime/runtime-modules.js"), $traceurRuntime.registerModule("traceur-runtime@0.0.102/src/runtime/frozen-data.js", [], function() {
    "use strict";
    function a(a, b) {
      for (var c = 0; c < a.length; c += 2)
        if (a[c] === b)
          return c;
      return -1;
    }
    function b(b, c, d) {
      var e = a(b, c);
      -1 === e && b.push(c, d);
    }
    function c(b, c) {
      var d = a(b, c);
      return -1 !== d ? b[d + 1] : void 0;
    }
    function d(b, c) {
      return -1 !== a(b, c);
    }
    function e(b, c) {
      var d = a(b, c);
      return -1 !== d ? (b.splice(d, 2), !0) : !1;
    }
    return {
      get setFrozen() {
        return b;
      },
      get getFrozen() {
        return c;
      },
      get hasFrozen() {
        return d;
      },
      get deleteFrozen() {
        return e;
      }
    };
  }), $traceurRuntime.registerModule("traceur-runtime@0.0.102/src/runtime/polyfills/utils.js", [], function() {
    "use strict";
    function a(a) {
      if (null == a)
        throw y();
      return z(a);
    }
    function b(a) {
      return a >>> 0;
    }
    function c(a) {
      return a && ("object" == typeof a || "function" == typeof a);
    }
    function d(a) {
      return "function" == typeof a;
    }
    function e(a) {
      return "number" == typeof a;
    }
    function f(a) {
      return a = +a, v(a) ? 0 : 0 !== a && u(a) ? a > 0 ? t(a) : s(a) : a;
    }
    function g(a) {
      var b = f(a);
      return 0 > b ? 0 : x(b, A);
    }
    function h(a) {
      return c(a) ? a[Symbol.iterator] : void 0;
    }
    function i(a) {
      return d(a);
    }
    function j(a, b) {
      return {
        value: a,
        done: b
      };
    }
    function k(a, b, c) {
      b in a || Object.defineProperty(a, b, c);
    }
    function l(a, b, c) {
      k(a, b, {
        value: c,
        configurable: !0,
        enumerable: !1,
        writable: !0
      });
    }
    function m(a, b, c) {
      k(a, b, {
        value: c,
        configurable: !1,
        enumerable: !1,
        writable: !1
      });
    }
    function n(a, b) {
      for (var c = 0; c < b.length; c += 2) {
        var d = b[c],
            e = b[c + 1];
        l(a, d, e);
      }
    }
    function o(a, b) {
      for (var c = 0; c < b.length; c += 2) {
        var d = b[c],
            e = b[c + 1];
        m(a, d, e);
      }
    }
    function p(a, b, c) {
      c && c.iterator && !a[c.iterator] && (a["@@iterator"] && (b = a["@@iterator"]), Object.defineProperty(a, c.iterator, {
        value: b,
        configurable: !0,
        enumerable: !1,
        writable: !0
      }));
    }
    function q(a) {
      B.push(a);
    }
    function r(a) {
      B.forEach(function(b) {
        return b(a);
      });
    }
    var s = Math.ceil,
        t = Math.floor,
        u = isFinite,
        v = isNaN,
        w = Math.pow,
        x = Math.min,
        y = TypeError,
        z = Object,
        A = w(2, 53) - 1,
        B = [];
    return {
      get toObject() {
        return a;
      },
      get toUint32() {
        return b;
      },
      get isObject() {
        return c;
      },
      get isCallable() {
        return d;
      },
      get isNumber() {
        return e;
      },
      get toInteger() {
        return f;
      },
      get toLength() {
        return g;
      },
      get checkIterable() {
        return h;
      },
      get isConstructor() {
        return i;
      },
      get createIteratorResultObject() {
        return j;
      },
      get maybeDefine() {
        return k;
      },
      get maybeDefineMethod() {
        return l;
      },
      get maybeDefineConst() {
        return m;
      },
      get maybeAddFunctions() {
        return n;
      },
      get maybeAddConsts() {
        return o;
      },
      get maybeAddIterator() {
        return p;
      },
      get registerPolyfill() {
        return q;
      },
      get polyfillAll() {
        return r;
      }
    };
  }), $traceurRuntime.registerModule("traceur-runtime@0.0.102/src/runtime/polyfills/Map.js", [], function() {
    "use strict";
    function a(a) {
      return i(a, y);
    }
    function b(b) {
      var c = a(b);
      return c || (c = x++, j(b, y, c)), c;
    }
    function c(b, c) {
      if ("string" == typeof c)
        return b.stringIndex_[c];
      if (p(c)) {
        if (!v(c))
          return m(b.frozenData_, c);
        var d = a(c);
        if (void 0 === d)
          return;
        return b.objectIndex_[d];
      }
      return b.primitiveIndex_[c];
    }
    function d(a) {
      a.entries_ = [], a.objectIndex_ = Object.create(null), a.stringIndex_ = Object.create(null), a.primitiveIndex_ = Object.create(null), a.frozenData_ = [], a.deletedCount_ = 0;
    }
    function e(a) {
      var b = a,
          c = b.Map,
          d = b.Symbol;
      if (!(c && r() && c.prototype[d.iterator] && c.prototype.entries))
        return !0;
      try {
        return 1 !== new c([[]]).size;
      } catch (e) {
        return !1;
      }
    }
    function f(a) {
      e(a) && (a.Map = z);
    }
    var g = $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("../private.js", "traceur-runtime@0.0.102/src/runtime/polyfills/Map.js")),
        h = g.createPrivateSymbol,
        i = g.getPrivate,
        j = g.setPrivate,
        k = $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("../frozen-data.js", "traceur-runtime@0.0.102/src/runtime/polyfills/Map.js")),
        l = k.deleteFrozen,
        m = k.getFrozen,
        n = k.setFrozen,
        o = $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("./utils.js", "traceur-runtime@0.0.102/src/runtime/polyfills/Map.js")),
        p = o.isObject,
        q = o.registerPolyfill,
        r = $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("../has-native-symbols.js", "traceur-runtime@0.0.102/src/runtime/polyfills/Map.js"))["default"],
        s = Object,
        t = s.defineProperty,
        u = (s.getOwnPropertyDescriptor, s.hasOwnProperty),
        v = s.isExtensible,
        w = {},
        x = 1,
        y = h(),
        z = function() {
          function e() {
            var a,
                b,
                c = arguments[0];
            if (!p(this))
              throw new TypeError("Map called on incompatible type");
            if (u.call(this, "entries_"))
              throw new TypeError("Map can not be reentrantly initialised");
            if (d(this), null !== c && void 0 !== c) {
              var e = !0,
                  f = !1,
                  g = void 0;
              try {
                for (var h = void 0,
                    i = c[Symbol.iterator](); !(e = (h = i.next()).done); e = !0) {
                  var j = h.value,
                      k = (a = j[Symbol.iterator](), (b = a.next()).done ? void 0 : b.value),
                      l = (b = a.next()).done ? void 0 : b.value;
                  this.set(k, l);
                }
              } catch (m) {
                f = !0, g = m;
              } finally {
                try {
                  e || null == i["return"] || i["return"]();
                } finally {
                  if (f)
                    throw g;
                }
              }
            }
          }
          return $traceurRuntime.createClass(e, {
            get size() {
              return this.entries_.length / 2 - this.deletedCount_;
            },
            get: function(a) {
              var b = c(this, a);
              return void 0 !== b ? this.entries_[b + 1] : void 0;
            },
            set: function(a, d) {
              var e = c(this, a);
              if (void 0 !== e)
                this.entries_[e + 1] = d;
              else if (e = this.entries_.length, this.entries_[e] = a, this.entries_[e + 1] = d, p(a))
                if (v(a)) {
                  var f = b(a);
                  this.objectIndex_[f] = e;
                } else
                  n(this.frozenData_, a, e);
              else
                "string" == typeof a ? this.stringIndex_[a] = e : this.primitiveIndex_[a] = e;
              return this;
            },
            has: function(a) {
              return void 0 !== c(this, a);
            },
            "delete": function(b) {
              var d = c(this, b);
              if (void 0 === d)
                return !1;
              if (this.entries_[d] = w, this.entries_[d + 1] = void 0, this.deletedCount_++, p(b))
                if (v(b)) {
                  var e = a(b);
                  delete this.objectIndex_[e];
                } else
                  l(this.frozenData_, b);
              else
                "string" == typeof b ? delete this.stringIndex_[b] : delete this.primitiveIndex_[b];
              return !0;
            },
            clear: function() {
              d(this);
            },
            forEach: function(a) {
              for (var b = arguments[1],
                  c = 0; c < this.entries_.length; c += 2) {
                var d = this.entries_[c],
                    e = this.entries_[c + 1];
                d !== w && a.call(b, e, d, this);
              }
            },
            entries: $traceurRuntime.initGeneratorFunction(function f() {
              var a,
                  b,
                  c;
              return $traceurRuntime.createGeneratorInstance(function(d) {
                for (; ; )
                  switch (d.state) {
                    case 0:
                      a = 0, d.state = 12;
                      break;
                    case 12:
                      d.state = a < this.entries_.length ? 8 : -2;
                      break;
                    case 4:
                      a += 2, d.state = 12;
                      break;
                    case 8:
                      b = this.entries_[a], c = this.entries_[a + 1], d.state = 9;
                      break;
                    case 9:
                      d.state = b === w ? 4 : 6;
                      break;
                    case 6:
                      return d.state = 2, [b, c];
                    case 2:
                      d.maybeThrow(), d.state = 4;
                      break;
                    default:
                      return d.end();
                  }
              }, f, this);
            }),
            keys: $traceurRuntime.initGeneratorFunction(function g() {
              var a,
                  b,
                  c;
              return $traceurRuntime.createGeneratorInstance(function(d) {
                for (; ; )
                  switch (d.state) {
                    case 0:
                      a = 0, d.state = 12;
                      break;
                    case 12:
                      d.state = a < this.entries_.length ? 8 : -2;
                      break;
                    case 4:
                      a += 2, d.state = 12;
                      break;
                    case 8:
                      b = this.entries_[a], c = this.entries_[a + 1], d.state = 9;
                      break;
                    case 9:
                      d.state = b === w ? 4 : 6;
                      break;
                    case 6:
                      return d.state = 2, b;
                    case 2:
                      d.maybeThrow(), d.state = 4;
                      break;
                    default:
                      return d.end();
                  }
              }, g, this);
            }),
            values: $traceurRuntime.initGeneratorFunction(function h() {
              var a,
                  b,
                  c;
              return $traceurRuntime.createGeneratorInstance(function(d) {
                for (; ; )
                  switch (d.state) {
                    case 0:
                      a = 0, d.state = 12;
                      break;
                    case 12:
                      d.state = a < this.entries_.length ? 8 : -2;
                      break;
                    case 4:
                      a += 2, d.state = 12;
                      break;
                    case 8:
                      b = this.entries_[a], c = this.entries_[a + 1], d.state = 9;
                      break;
                    case 9:
                      d.state = b === w ? 4 : 6;
                      break;
                    case 6:
                      return d.state = 2, c;
                    case 2:
                      d.maybeThrow(), d.state = 4;
                      break;
                    default:
                      return d.end();
                  }
              }, h, this);
            })
          }, {});
        }();
    return t(z.prototype, Symbol.iterator, {
      configurable: !0,
      writable: !0,
      value: z.prototype.entries
    }), q(f), {
      get Map() {
        return z;
      },
      get polyfillMap() {
        return f;
      }
    };
  }), $traceurRuntime.getModule("traceur-runtime@0.0.102/src/runtime/polyfills/Map.js"), $traceurRuntime.registerModule("traceur-runtime@0.0.102/src/runtime/polyfills/Set.js", [], function() {
    "use strict";
    function a(a) {
      var b = a,
          c = b.Set,
          d = b.Symbol;
      if (!(c && g() && c.prototype[d.iterator] && c.prototype.values))
        return !0;
      try {
        return 1 !== new c([1]).size;
      } catch (e) {
        return !1;
      }
    }
    function b(b) {
      a(b) && (b.Set = i);
    }
    var c = $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("./utils.js", "traceur-runtime@0.0.102/src/runtime/polyfills/Set.js")),
        d = c.isObject,
        e = c.registerPolyfill,
        f = $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("./Map.js", "traceur-runtime@0.0.102/src/runtime/polyfills/Set.js")).Map,
        g = $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("../has-native-symbols.js", "traceur-runtime@0.0.102/src/runtime/polyfills/Set.js"))["default"],
        h = Object.prototype.hasOwnProperty,
        i = function() {
          function a() {
            var a = arguments[0];
            if (!d(this))
              throw new TypeError("Set called on incompatible type");
            if (h.call(this, "map_"))
              throw new TypeError("Set can not be reentrantly initialised");
            if (this.map_ = new f, null !== a && void 0 !== a) {
              var b = !0,
                  c = !1,
                  e = void 0;
              try {
                for (var g = void 0,
                    i = a[Symbol.iterator](); !(b = (g = i.next()).done); b = !0) {
                  var j = g.value;
                  this.add(j);
                }
              } catch (k) {
                c = !0, e = k;
              } finally {
                try {
                  b || null == i["return"] || i["return"]();
                } finally {
                  if (c)
                    throw e;
                }
              }
            }
          }
          return $traceurRuntime.createClass(a, {
            get size() {
              return this.map_.size;
            },
            has: function(a) {
              return this.map_.has(a);
            },
            add: function(a) {
              return this.map_.set(a, a), this;
            },
            "delete": function(a) {
              return this.map_["delete"](a);
            },
            clear: function() {
              return this.map_.clear();
            },
            forEach: function(a) {
              var b = arguments[1],
                  c = this;
              return this.map_.forEach(function(d, e) {
                a.call(b, e, e, c);
              });
            },
            values: $traceurRuntime.initGeneratorFunction(function b() {
              var a,
                  c;
              return $traceurRuntime.createGeneratorInstance(function(b) {
                for (; ; )
                  switch (b.state) {
                    case 0:
                      a = b.wrapYieldStar(this.map_.keys()[Symbol.iterator]()), b.sent = void 0, b.action = "next", b.state = 12;
                      break;
                    case 12:
                      c = a[b.action](b.sentIgnoreThrow), b.state = 9;
                      break;
                    case 9:
                      b.state = c.done ? 3 : 2;
                      break;
                    case 3:
                      b.sent = c.value, b.state = -2;
                      break;
                    case 2:
                      return b.state = 12, c.value;
                    default:
                      return b.end();
                  }
              }, b, this);
            }),
            entries: $traceurRuntime.initGeneratorFunction(function c() {
              var a,
                  b;
              return $traceurRuntime.createGeneratorInstance(function(c) {
                for (; ; )
                  switch (c.state) {
                    case 0:
                      a = c.wrapYieldStar(this.map_.entries()[Symbol.iterator]()), c.sent = void 0, c.action = "next", c.state = 12;
                      break;
                    case 12:
                      b = a[c.action](c.sentIgnoreThrow), c.state = 9;
                      break;
                    case 9:
                      c.state = b.done ? 3 : 2;
                      break;
                    case 3:
                      c.sent = b.value, c.state = -2;
                      break;
                    case 2:
                      return c.state = 12, b.value;
                    default:
                      return c.end();
                  }
              }, c, this);
            })
          }, {});
        }();
    return Object.defineProperty(i.prototype, Symbol.iterator, {
      configurable: !0,
      writable: !0,
      value: i.prototype.values
    }), Object.defineProperty(i.prototype, "keys", {
      configurable: !0,
      writable: !0,
      value: i.prototype.values
    }), e(b), {
      get Set() {
        return i;
      },
      get polyfillSet() {
        return b;
      }
    };
  }), $traceurRuntime.getModule("traceur-runtime@0.0.102/src/runtime/polyfills/Set.js"), $traceurRuntime.registerModule("traceur-runtime@0.0.102/node_modules/rsvp/lib/rsvp/asap.js", [], function() {
    "use strict";
    function a(a, b) {
      r[k] = a, r[k + 1] = b, k += 2, 2 === k && j();
    }
    function b() {
      var a = process.nextTick,
          b = process.versions.node.match(/^(?:(\d+)\.)?(?:(\d+)\.)?(\*|\d+)$/);
      return Array.isArray(b) && "0" === b[1] && "10" === b[2] && (a = setImmediate), function() {
        a(g);
      };
    }
    function c() {
      return function() {
        i(g);
      };
    }
    function d() {
      var a = 0,
          b = new o(g),
          c = document.createTextNode("");
      return b.observe(c, {characterData: !0}), function() {
        c.data = a = ++a % 2;
      };
    }
    function e() {
      var a = new MessageChannel;
      return a.port1.onmessage = g, function() {
        a.port2.postMessage(0);
      };
    }
    function f() {
      return function() {
        setTimeout(g, 1);
      };
    }
    function g() {
      for (var a = 0; k > a; a += 2) {
        var b = r[a],
            c = r[a + 1];
        b(c), r[a] = void 0, r[a + 1] = void 0;
      }
      k = 0;
    }
    function h() {
      try {
        var a = require,
            b = a("vertx");
        return i = b.runOnLoop || b.runOnContext, c();
      } catch (d) {
        return f();
      }
    }
    var i,
        j,
        k = 0,
        l = ({}.toString, a),
        m = "undefined" != typeof window ? window : void 0,
        n = m || {},
        o = n.MutationObserver || n.WebKitMutationObserver,
        p = "undefined" == typeof self && "undefined" != typeof process && "[object process]" === {}.toString.call(process),
        q = "undefined" != typeof Uint8ClampedArray && "undefined" != typeof importScripts && "undefined" != typeof MessageChannel,
        r = new Array(1e3);
    return j = p ? b() : o ? d() : q ? e() : void 0 === m && "function" == typeof require ? h() : f(), {get default() {
        return l;
      }};
  }), $traceurRuntime.registerModule("traceur-runtime@0.0.102/src/runtime/polyfills/Promise.js", [], function() {
    "use strict";
    function a(a) {
      return a && "object" == typeof a && void 0 !== a.status_;
    }
    function b(a) {
      return a;
    }
    function c(a) {
      throw a;
    }
    function d(a) {
      var d = void 0 !== arguments[1] ? arguments[1] : b,
          f = void 0 !== arguments[2] ? arguments[2] : c,
          g = e(a.constructor);
      switch (a.status_) {
        case void 0:
          throw TypeError;
        case 0:
          a.onResolve_.push(d, g), a.onReject_.push(f, g);
          break;
        case 1:
          k(a.value_, [d, g]);
          break;
        case -1:
          k(a.value_, [f, g]);
      }
      return g.promise;
    }
    function e(a) {
      if (this === y) {
        var b = g(new y(w));
        return {
          promise: b,
          resolve: function(a) {
            h(b, a);
          },
          reject: function(a) {
            i(b, a);
          }
        };
      }
      var c = {};
      return c.promise = new a(function(a, b) {
        c.resolve = a, c.reject = b;
      }), c;
    }
    function f(a, b, c, d, e) {
      return a.status_ = b, a.value_ = c, a.onResolve_ = d, a.onReject_ = e, a;
    }
    function g(a) {
      return f(a, 0, void 0, [], []);
    }
    function h(a, b) {
      j(a, 1, b, a.onResolve_);
    }
    function i(a, b) {
      j(a, -1, b, a.onReject_);
    }
    function j(a, b, c, d) {
      0 === a.status_ && (k(c, d), f(a, b, c));
    }
    function k(a, b) {
      o(function() {
        for (var c = 0; c < b.length; c += 2)
          l(a, b[c], b[c + 1]);
      });
    }
    function l(b, c, e) {
      try {
        var f = c(b);
        if (f === e.promise)
          throw new TypeError;
        a(f) ? d(f, e.resolve, e.reject) : e.resolve(f);
      } catch (g) {
        try {
          e.reject(g);
        } catch (g) {}
      }
    }
    function m(b, c) {
      if (!a(c) && q(c)) {
        var d;
        try {
          d = c.then;
        } catch (f) {
          var g = z.call(b, f);
          return v(c, A, g), g;
        }
        if ("function" == typeof d) {
          var h = u(c, A);
          if (h)
            return h;
          var i = e(b);
          v(c, A, i.promise);
          try {
            d.call(c, i.resolve, i.reject);
          } catch (f) {
            i.reject(f);
          }
          return i.promise;
        }
      }
      return c;
    }
    function n(a) {
      a.Promise || (a.Promise = x);
    }
    var o = $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("../../../node_modules/rsvp/lib/rsvp/asap.js", "traceur-runtime@0.0.102/src/runtime/polyfills/Promise.js"))["default"],
        p = $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("./utils.js", "traceur-runtime@0.0.102/src/runtime/polyfills/Promise.js")),
        q = p.isObject,
        r = p.registerPolyfill,
        s = $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("../private.js", "traceur-runtime@0.0.102/src/runtime/polyfills/Promise.js")),
        t = s.createPrivateSymbol,
        u = s.getPrivate,
        v = s.setPrivate,
        w = {},
        x = function() {
          function j(a) {
            if (a !== w) {
              if ("function" != typeof a)
                throw new TypeError;
              var b = g(this);
              try {
                a(function(a) {
                  h(b, a);
                }, function(a) {
                  i(b, a);
                });
              } catch (c) {
                i(b, c);
              }
            }
          }
          return $traceurRuntime.createClass(j, {
            "catch": function(a) {
              return this.then(void 0, a);
            },
            then: function(e, f) {
              "function" != typeof e && (e = b), "function" != typeof f && (f = c);
              var g = this,
                  h = this.constructor;
              return d(this, function(b) {
                return b = m(h, b), b === g ? f(new TypeError) : a(b) ? b.then(e, f) : e(b);
              }, f);
            }
          }, {
            resolve: function(b) {
              return this === y ? a(b) ? b : f(new y(w), 1, b) : new this(function(a, c) {
                a(b);
              });
            },
            reject: function(a) {
              return this === y ? f(new y(w), -1, a) : new this(function(b, c) {
                c(a);
              });
            },
            all: function(a) {
              var b = e(this),
                  c = [];
              try {
                var d = function(a) {
                  return function(d) {
                    c[a] = d, 0 === --f && b.resolve(c);
                  };
                },
                    f = 0,
                    g = 0,
                    h = !0,
                    i = !1,
                    j = void 0;
                try {
                  for (var k = void 0,
                      l = a[Symbol.iterator](); !(h = (k = l.next()).done); h = !0) {
                    var m = k.value,
                        n = d(g);
                    this.resolve(m).then(n, function(a) {
                      b.reject(a);
                    }), ++g, ++f;
                  }
                } catch (o) {
                  i = !0, j = o;
                } finally {
                  try {
                    h || null == l["return"] || l["return"]();
                  } finally {
                    if (i)
                      throw j;
                  }
                }
                0 === f && b.resolve(c);
              } catch (p) {
                b.reject(p);
              }
              return b.promise;
            },
            race: function(a) {
              var b = e(this);
              try {
                for (var c = 0; c < a.length; c++)
                  this.resolve(a[c]).then(function(a) {
                    b.resolve(a);
                  }, function(a) {
                    b.reject(a);
                  });
              } catch (d) {
                b.reject(d);
              }
              return b.promise;
            }
          });
        }(),
        y = x,
        z = y.reject,
        A = t();
    return r(n), {
      get Promise() {
        return x;
      },
      get polyfillPromise() {
        return n;
      }
    };
  }), $traceurRuntime.getModule("traceur-runtime@0.0.102/src/runtime/polyfills/Promise.js"), $traceurRuntime.registerModule("traceur-runtime@0.0.102/src/runtime/polyfills/StringIterator.js", [], function() {
    "use strict";
    function a(a) {
      var b = String(a),
          c = Object.create(h.prototype);
      return c[f] = b, c[g] = 0, c;
    }
    var b = $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("./utils.js", "traceur-runtime@0.0.102/src/runtime/polyfills/StringIterator.js")),
        c = b.createIteratorResultObject,
        d = b.isObject,
        e = Object.prototype.hasOwnProperty,
        f = Symbol("iteratedString"),
        g = Symbol("stringIteratorNextIndex"),
        h = function() {
          function a() {}
          var b;
          return $traceurRuntime.createClass(a, (b = {}, Object.defineProperty(b, "next", {
            value: function() {
              var a = this;
              if (!d(a) || !e.call(a, f))
                throw new TypeError("this must be a StringIterator object");
              var b = a[f];
              if (void 0 === b)
                return c(void 0, !0);
              var h = a[g],
                  i = b.length;
              if (h >= i)
                return a[f] = void 0, c(void 0, !0);
              var j,
                  k = b.charCodeAt(h);
              if (55296 > k || k > 56319 || h + 1 === i)
                j = String.fromCharCode(k);
              else {
                var l = b.charCodeAt(h + 1);
                j = 56320 > l || l > 57343 ? String.fromCharCode(k) : String.fromCharCode(k) + String.fromCharCode(l);
              }
              return a[g] = h + j.length, c(j, !1);
            },
            configurable: !0,
            enumerable: !0,
            writable: !0
          }), Object.defineProperty(b, Symbol.iterator, {
            value: function() {
              return this;
            },
            configurable: !0,
            enumerable: !0,
            writable: !0
          }), b), {});
        }();
    return {get createStringIterator() {
        return a;
      }};
  }), $traceurRuntime.registerModule("traceur-runtime@0.0.102/src/runtime/polyfills/String.js", [], function() {
    "use strict";
    function a(a) {
      var b = String(this);
      if (null == this || "[object RegExp]" == p.call(a))
        throw TypeError();
      var c = b.length,
          d = String(a),
          e = (d.length, arguments.length > 1 ? arguments[1] : void 0),
          f = e ? Number(e) : 0;
      isNaN(f) && (f = 0);
      var g = Math.min(Math.max(f, 0), c);
      return q.call(b, d, f) == g;
    }
    function b(a) {
      var b = String(this);
      if (null == this || "[object RegExp]" == p.call(a))
        throw TypeError();
      var c = b.length,
          d = String(a),
          e = d.length,
          f = c;
      if (arguments.length > 1) {
        var g = arguments[1];
        void 0 !== g && (f = g ? Number(g) : 0, isNaN(f) && (f = 0));
      }
      var h = Math.min(Math.max(f, 0), c),
          i = h - e;
      return 0 > i ? !1 : r.call(b, d, i) == i;
    }
    function c(a) {
      if (null == this)
        throw TypeError();
      var b = String(this);
      if (a && "[object RegExp]" == p.call(a))
        throw TypeError();
      var c = b.length,
          d = String(a),
          e = d.length,
          f = arguments.length > 1 ? arguments[1] : void 0,
          g = f ? Number(f) : 0;
      g != g && (g = 0);
      var h = Math.min(Math.max(g, 0), c);
      return e + h > c ? !1 : -1 != q.call(b, d, g);
    }
    function d(a) {
      if (null == this)
        throw TypeError();
      var b = String(this),
          c = a ? Number(a) : 0;
      if (isNaN(c) && (c = 0), 0 > c || c == 1 / 0)
        throw RangeError();
      if (0 == c)
        return "";
      for (var d = ""; c--; )
        d += b;
      return d;
    }
    function e(a) {
      if (null == this)
        throw TypeError();
      var b = String(this),
          c = b.length,
          d = a ? Number(a) : 0;
      if (isNaN(d) && (d = 0), !(0 > d || d >= c)) {
        var e,
            f = b.charCodeAt(d);
        return f >= 55296 && 56319 >= f && c > d + 1 && (e = b.charCodeAt(d + 1), e >= 56320 && 57343 >= e) ? 1024 * (f - 55296) + e - 56320 + 65536 : f;
      }
    }
    function f(a) {
      var b = a.raw,
          c = b.length >>> 0;
      if (0 === c)
        return "";
      for (var d = "",
          e = 0; ; ) {
        if (d += b[e], e + 1 === c)
          return d;
        d += arguments[++e];
      }
    }
    function g(a) {
      var b,
          c,
          d = [],
          e = Math.floor,
          f = -1,
          g = arguments.length;
      if (!g)
        return "";
      for (; ++f < g; ) {
        var h = Number(arguments[f]);
        if (!isFinite(h) || 0 > h || h > 1114111 || e(h) != h)
          throw RangeError("Invalid code point: " + h);
        65535 >= h ? d.push(h) : (h -= 65536, b = (h >> 10) + 55296, c = h % 1024 + 56320, d.push(b, c));
      }
      return String.fromCharCode.apply(null, d);
    }
    function h() {
      var a = j(this),
          b = String(a);
      return k(b);
    }
    function i(i) {
      var j = i.String;
      m(j.prototype, ["codePointAt", e, "endsWith", b, "includes", c, "repeat", d, "startsWith", a]), m(j, ["fromCodePoint", g, "raw", f]), n(j.prototype, h, Symbol);
    }
    var j = $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("../checkObjectCoercible.js", "traceur-runtime@0.0.102/src/runtime/polyfills/String.js"))["default"],
        k = $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("./StringIterator.js", "traceur-runtime@0.0.102/src/runtime/polyfills/String.js")).createStringIterator,
        l = $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("./utils.js", "traceur-runtime@0.0.102/src/runtime/polyfills/String.js")),
        m = l.maybeAddFunctions,
        n = l.maybeAddIterator,
        o = l.registerPolyfill,
        p = Object.prototype.toString,
        q = String.prototype.indexOf,
        r = String.prototype.lastIndexOf;
    return o(i), {
      get startsWith() {
        return a;
      },
      get endsWith() {
        return b;
      },
      get includes() {
        return c;
      },
      get repeat() {
        return d;
      },
      get codePointAt() {
        return e;
      },
      get raw() {
        return f;
      },
      get fromCodePoint() {
        return g;
      },
      get stringPrototypeIterator() {
        return h;
      },
      get polyfillString() {
        return i;
      }
    };
  }), $traceurRuntime.getModule("traceur-runtime@0.0.102/src/runtime/polyfills/String.js"), $traceurRuntime.registerModule("traceur-runtime@0.0.102/src/runtime/polyfills/ArrayIterator.js", [], function() {
    "use strict";
    function a(a, b) {
      var c = f(a),
          d = new l;
      return d.iteratorObject_ = c, d.arrayIteratorNextIndex_ = 0, d.arrayIterationKind_ = b, d;
    }
    function b() {
      return a(this, k);
    }
    function c() {
      return a(this, i);
    }
    function d() {
      return a(this, j);
    }
    var e = $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("./utils.js", "traceur-runtime@0.0.102/src/runtime/polyfills/ArrayIterator.js")),
        f = e.toObject,
        g = e.toUint32,
        h = e.createIteratorResultObject,
        i = 1,
        j = 2,
        k = 3,
        l = function() {
          function a() {}
          var b;
          return $traceurRuntime.createClass(a, (b = {}, Object.defineProperty(b, "next", {
            value: function() {
              var a = f(this),
                  b = a.iteratorObject_;
              if (!b)
                throw new TypeError("Object is not an ArrayIterator");
              var c = a.arrayIteratorNextIndex_,
                  d = a.arrayIterationKind_,
                  e = g(b.length);
              return c >= e ? (a.arrayIteratorNextIndex_ = 1 / 0, h(void 0, !0)) : (a.arrayIteratorNextIndex_ = c + 1, d == j ? h(b[c], !1) : d == k ? h([c, b[c]], !1) : h(c, !1));
            },
            configurable: !0,
            enumerable: !0,
            writable: !0
          }), Object.defineProperty(b, Symbol.iterator, {
            value: function() {
              return this;
            },
            configurable: !0,
            enumerable: !0,
            writable: !0
          }), b), {});
        }();
    return {
      get entries() {
        return b;
      },
      get keys() {
        return c;
      },
      get values() {
        return d;
      }
    };
  }), $traceurRuntime.registerModule("traceur-runtime@0.0.102/src/runtime/polyfills/Array.js", [], function() {
    "use strict";
    function a(a) {
      var b,
          c,
          d = arguments[1],
          e = arguments[2],
          f = this,
          g = u(a),
          h = void 0 !== d,
          i = 0;
      if (h && !n(d))
        throw TypeError();
      if (m(g)) {
        b = o(f) ? new f : [];
        var j = !0,
            k = !1,
            l = void 0;
        try {
          for (var p = void 0,
              q = g[Symbol.iterator](); !(j = (p = q.next()).done); j = !0) {
            var r = p.value;
            h ? b[i] = d.call(e, r, i) : b[i] = r, i++;
          }
        } catch (s) {
          k = !0, l = s;
        } finally {
          try {
            j || null == q["return"] || q["return"]();
          } finally {
            if (k)
              throw l;
          }
        }
        return b.length = i, b;
      }
      for (c = t(g.length), b = o(f) ? new f(c) : new Array(c); c > i; i++)
        h ? b[i] = "undefined" == typeof e ? d(g[i], i) : d.call(e, g[i], i) : b[i] = g[i];
      return b.length = c, b;
    }
    function b() {
      for (var a = [],
          b = 0; b < arguments.length; b++)
        a[b] = arguments[b];
      for (var c = this,
          d = a.length,
          e = o(c) ? new c(d) : new Array(d),
          f = 0; d > f; f++)
        e[f] = a[f];
      return e.length = d, e;
    }
    function c(a) {
      var b = void 0 !== arguments[1] ? arguments[1] : 0,
          c = arguments[2],
          d = u(this),
          e = t(d.length),
          f = s(b),
          g = void 0 !== c ? s(c) : e;
      for (f = 0 > f ? Math.max(e + f, 0) : Math.min(f, e), g = 0 > g ? Math.max(e + g, 0) : Math.min(g, e); g > f; )
        d[f] = a, f++;
      return d;
    }
    function d(a) {
      var b = arguments[1];
      return f(this, a, b);
    }
    function e(a) {
      var b = arguments[1];
      return f(this, a, b, !0);
    }
    function f(a, b) {
      var c = arguments[2],
          d = void 0 !== arguments[3] ? arguments[3] : !1,
          e = u(a),
          f = t(e.length);
      if (!n(b))
        throw TypeError();
      for (var g = 0; f > g; g++) {
        var h = e[g];
        if (b.call(c, h, g, e))
          return d ? g : h;
      }
      return d ? -1 : void 0;
    }
    function g(f) {
      var g = f,
          h = g.Array,
          l = g.Object,
          m = g.Symbol,
          n = k;
      m && m.iterator && h.prototype[m.iterator] && (n = h.prototype[m.iterator]), p(h.prototype, ["entries", i, "keys", j, "values", n, "fill", c, "find", d, "findIndex", e]), p(h, ["from", a, "of", b]), q(h.prototype, n, m), q(l.getPrototypeOf([].values()), function() {
        return this;
      }, m);
    }
    var h = $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("./ArrayIterator.js", "traceur-runtime@0.0.102/src/runtime/polyfills/Array.js")),
        i = h.entries,
        j = h.keys,
        k = h.values,
        l = $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("./utils.js", "traceur-runtime@0.0.102/src/runtime/polyfills/Array.js")),
        m = l.checkIterable,
        n = l.isCallable,
        o = l.isConstructor,
        p = l.maybeAddFunctions,
        q = l.maybeAddIterator,
        r = l.registerPolyfill,
        s = l.toInteger,
        t = l.toLength,
        u = l.toObject;
    return r(g), {
      get from() {
        return a;
      },
      get of() {
        return b;
      },
      get fill() {
        return c;
      },
      get find() {
        return d;
      },
      get findIndex() {
        return e;
      },
      get polyfillArray() {
        return g;
      }
    };
  }), $traceurRuntime.getModule("traceur-runtime@0.0.102/src/runtime/polyfills/Array.js"), $traceurRuntime.registerModule("traceur-runtime@0.0.102/src/runtime/polyfills/Object.js", [], function() {
    "use strict";
    function a(a, b) {
      return a === b ? 0 !== a || 1 / a === 1 / b : a !== a && b !== b;
    }
    function b(a) {
      for (var b = 1; b < arguments.length; b++) {
        var c = arguments[b],
            d = null == c ? [] : l(c),
            e = void 0,
            f = d.length;
        for (e = 0; f > e; e++) {
          var g = d[e];
          a[g] = c[g];
        }
      }
      return a;
    }
    function c(a, b) {
      var c,
          d,
          e = k(b),
          f = e.length;
      for (c = 0; f > c; c++) {
        e[c];
        d = j(b, e[c]), i(a, e[c], d);
      }
      return a;
    }
    function d(d) {
      var e = d.Object;
      f(e, ["assign", b, "is", a, "mixin", c]);
    }
    var e = $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("./utils.js", "traceur-runtime@0.0.102/src/runtime/polyfills/Object.js")),
        f = e.maybeAddFunctions,
        g = e.registerPolyfill,
        h = Object,
        i = h.defineProperty,
        j = h.getOwnPropertyDescriptor,
        k = h.getOwnPropertyNames,
        l = h.keys;
    return g(d), {
      get is() {
        return a;
      },
      get assign() {
        return b;
      },
      get mixin() {
        return c;
      },
      get polyfillObject() {
        return d;
      }
    };
  }), $traceurRuntime.getModule("traceur-runtime@0.0.102/src/runtime/polyfills/Object.js"), $traceurRuntime.registerModule("traceur-runtime@0.0.102/src/runtime/polyfills/Number.js", [], function() {
    "use strict";
    function a(a) {
      return g(a) && m(a);
    }
    function b(b) {
      return a(b) && k(b) === b;
    }
    function c(a) {
      return g(a) && n(a);
    }
    function d(b) {
      if (a(b)) {
        var c = k(b);
        if (c === b)
          return l(c) <= o;
      }
      return !1;
    }
    function e(e) {
      var f = e.Number;
      h(f, ["MAX_SAFE_INTEGER", o, "MIN_SAFE_INTEGER", p, "EPSILON", q]), i(f, ["isFinite", a, "isInteger", b, "isNaN", c, "isSafeInteger", d]);
    }
    var f = $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("./utils.js", "traceur-runtime@0.0.102/src/runtime/polyfills/Number.js")),
        g = f.isNumber,
        h = f.maybeAddConsts,
        i = f.maybeAddFunctions,
        j = f.registerPolyfill,
        k = f.toInteger,
        l = Math.abs,
        m = isFinite,
        n = isNaN,
        o = Math.pow(2, 53) - 1,
        p = -Math.pow(2, 53) + 1,
        q = Math.pow(2, -52);
    return j(e), {
      get MAX_SAFE_INTEGER() {
        return o;
      },
      get MIN_SAFE_INTEGER() {
        return p;
      },
      get EPSILON() {
        return q;
      },
      get isFinite() {
        return a;
      },
      get isInteger() {
        return b;
      },
      get isNaN() {
        return c;
      },
      get isSafeInteger() {
        return d;
      },
      get polyfillNumber() {
        return e;
      }
    };
  }), $traceurRuntime.getModule("traceur-runtime@0.0.102/src/runtime/polyfills/Number.js"), $traceurRuntime.registerModule("traceur-runtime@0.0.102/src/runtime/polyfills/fround.js", [], function() {
    "use strict";
    function a(a, b, c) {
      function d(a) {
        var b = k(a),
            c = a - b;
        return .5 > c ? b : c > .5 ? b + 1 : b % 2 ? b + 1 : b;
      }
      var e,
          f,
          g,
          h,
          o,
          p,
          q,
          r = (1 << b - 1) - 1;
      for (a !== a ? (f = (1 << b) - 1, g = n(2, c - 1), e = 0) : a === 1 / 0 || a === -(1 / 0) ? (f = (1 << b) - 1, g = 0, e = 0 > a ? 1 : 0) : 0 === a ? (f = 0, g = 0, e = 1 / a === -(1 / 0) ? 1 : 0) : (e = 0 > a, a = j(a), a >= n(2, 1 - r) ? (f = m(k(l(a) / i), 1023), g = d(a / n(2, f) * n(2, c)), g / n(2, c) >= 2 && (f += 1, g = 1), f > r ? (f = (1 << b) - 1, g = 0) : (f += r, g -= n(2, c))) : (f = 0, g = d(a / n(2, 1 - r - c)))), o = [], h = c; h; h -= 1)
        o.push(g % 2 ? 1 : 0), g = k(g / 2);
      for (h = b; h; h -= 1)
        o.push(f % 2 ? 1 : 0), f = k(f / 2);
      for (o.push(e ? 1 : 0), o.reverse(), p = o.join(""), q = []; p.length; )
        q.push(parseInt(p.substring(0, 8), 2)), p = p.substring(8);
      return q;
    }
    function b(a, b, c) {
      var d,
          e,
          f,
          g,
          h,
          i,
          j,
          k,
          l = [];
      for (d = a.length; d; d -= 1)
        for (f = a[d - 1], e = 8; e; e -= 1)
          l.push(f % 2 ? 1 : 0), f >>= 1;
      return l.reverse(), g = l.join(""), h = (1 << b - 1) - 1, i = parseInt(g.substring(0, 1), 2) ? -1 : 1, j = parseInt(g.substring(1, 1 + b), 2), k = parseInt(g.substring(1 + b), 2), j === (1 << b) - 1 ? 0 !== k ? NaN : i * (1 / 0) : j > 0 ? i * n(2, j - h) * (1 + k / n(2, c)) : 0 !== k ? i * n(2, -(h - 1)) * (k / n(2, c)) : 0 > i ? -0 : 0;
    }
    function c(a) {
      return b(a, 8, 23);
    }
    function d(b) {
      return a(b, 8, 23);
    }
    function e(a) {
      return 0 === a || !f(a) || g(a) ? a : c(d(Number(a)));
    }
    var f = isFinite,
        g = isNaN,
        h = Math,
        i = h.LN2,
        j = h.abs,
        k = h.floor,
        l = h.log,
        m = h.min,
        n = h.pow;
    return {get fround() {
        return e;
      }};
  }), $traceurRuntime.registerModule("traceur-runtime@0.0.102/src/runtime/polyfills/Math.js", [], function() {
    "use strict";
    function a(a) {
      if (a = x(+a), 0 == a)
        return 32;
      var b = 0;
      return 0 === (4294901760 & a) && (a <<= 16, b += 16), 0 === (4278190080 & a) && (a <<= 8, b += 8), 0 === (4026531840 & a) && (a <<= 4, b += 4), 0 === (3221225472 & a) && (a <<= 2, b += 2), 0 === (2147483648 & a) && (a <<= 1, b += 1), b;
    }
    function b(a, b) {
      a = x(+a), b = x(+b);
      var c = a >>> 16 & 65535,
          d = 65535 & a,
          e = b >>> 16 & 65535,
          f = 65535 & b;
      return d * f + (c * f + d * e << 16 >>> 0) | 0;
    }
    function c(a) {
      return a = +a, a > 0 ? 1 : 0 > a ? -1 : a;
    }
    function d(a) {
      return .4342944819032518 * F(a);
    }
    function e(a) {
      return 1.4426950408889634 * F(a);
    }
    function f(a) {
      if (a = +a, -1 > a || z(a))
        return NaN;
      if (0 === a || a === 1 / 0)
        return a;
      if (-1 === a)
        return -(1 / 0);
      var b = 0,
          c = 50;
      if (0 > a || a > 1)
        return F(1 + a);
      for (var d = 1; c > d; d++)
        d % 2 === 0 ? b -= G(a, d) / d : b += G(a, d) / d;
      return b;
    }
    function g(a) {
      return a = +a, a === -(1 / 0) ? -1 : y(a) && 0 !== a ? D(a) - 1 : a;
    }
    function h(a) {
      return a = +a, 0 === a ? 1 : z(a) ? NaN : y(a) ? (0 > a && (a = -a), a > 21 ? D(a) / 2 : (D(a) + D(-a)) / 2) : 1 / 0;
    }
    function i(a) {
      return a = +a, y(a) && 0 !== a ? (D(a) - D(-a)) / 2 : a;
    }
    function j(a) {
      if (a = +a, 0 === a)
        return a;
      if (!y(a))
        return c(a);
      var b = D(a),
          d = D(-a);
      return (b - d) / (b + d);
    }
    function k(a) {
      return a = +a, 1 > a ? NaN : y(a) ? F(a + H(a + 1) * H(a - 1)) : a;
    }
    function l(a) {
      return a = +a, 0 !== a && y(a) ? a > 0 ? F(a + H(a * a + 1)) : -F(-a + H(a * a + 1)) : a;
    }
    function m(a) {
      return a = +a, -1 === a ? -(1 / 0) : 1 === a ? 1 / 0 : 0 === a ? a : z(a) || -1 > a || a > 1 ? NaN : .5 * F((1 + a) / (1 - a));
    }
    function n(a, b) {
      for (var c = arguments.length,
          d = new Array(c),
          e = 0,
          f = 0; c > f; f++) {
        var g = arguments[f];
        if (g = +g, g === 1 / 0 || g === -(1 / 0))
          return 1 / 0;
        g = B(g), g > e && (e = g), d[f] = g;
      }
      0 === e && (e = 1);
      for (var h = 0,
          i = 0,
          f = 0; c > f; f++) {
        var g = d[f] / e,
            j = g * g - i,
            k = h + j;
        i = k - h - j, h = k;
      }
      return H(h) * e;
    }
    function o(a) {
      return a = +a, a > 0 ? E(a) : 0 > a ? C(a) : a;
    }
    function p(a) {
      if (a = +a, 0 === a)
        return a;
      var b = 0 > a;
      b && (a = -a);
      var c = G(a, 1 / 3);
      return b ? -c : c;
    }
    function q(q) {
      var s = q.Math;
      v(s, ["acosh", k, "asinh", l, "atanh", m, "cbrt", p, "clz32", a, "cosh", h, "expm1", g, "fround", r, "hypot", n, "imul", b, "log10", d, "log1p", f, "log2", e, "sign", c, "sinh", i, "tanh", j, "trunc", o]);
    }
    var r,
        s,
        t = $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("./fround.js", "traceur-runtime@0.0.102/src/runtime/polyfills/Math.js")).fround,
        u = $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("./utils.js", "traceur-runtime@0.0.102/src/runtime/polyfills/Math.js")),
        v = u.maybeAddFunctions,
        w = u.registerPolyfill,
        x = u.toUint32,
        y = isFinite,
        z = isNaN,
        A = Math,
        B = A.abs,
        C = A.ceil,
        D = A.exp,
        E = A.floor,
        F = A.log,
        G = A.pow,
        H = A.sqrt;
    return "function" == typeof Float32Array ? (s = new Float32Array(1), r = function(a) {
      return s[0] = Number(a), s[0];
    }) : r = t, w(q), {
      get clz32() {
        return a;
      },
      get imul() {
        return b;
      },
      get sign() {
        return c;
      },
      get log10() {
        return d;
      },
      get log2() {
        return e;
      },
      get log1p() {
        return f;
      },
      get expm1() {
        return g;
      },
      get cosh() {
        return h;
      },
      get sinh() {
        return i;
      },
      get tanh() {
        return j;
      },
      get acosh() {
        return k;
      },
      get asinh() {
        return l;
      },
      get atanh() {
        return m;
      },
      get hypot() {
        return n;
      },
      get trunc() {
        return o;
      },
      get fround() {
        return r;
      },
      get cbrt() {
        return p;
      },
      get polyfillMath() {
        return q;
      }
    };
  }), $traceurRuntime.getModule("traceur-runtime@0.0.102/src/runtime/polyfills/Math.js"), $traceurRuntime.registerModule("traceur-runtime@0.0.102/src/runtime/polyfills/WeakMap.js", [], function() {
    "use strict";
    function a(a) {
      var b = a,
          c = b.WeakMap;
      b.Symbol;
      if (!c || !q())
        return !0;
      try {
        var d = {},
            e = new c([[d, !1]]);
        return e.get(d);
      } catch (f) {
        return !1;
      }
    }
    function b(b) {
      a(b) && (b.WeakMap = u);
    }
    var c = $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("../private.js", "traceur-runtime@0.0.102/src/runtime/polyfills/WeakMap.js")),
        d = c.createPrivateSymbol,
        e = c.deletePrivate,
        f = c.getPrivate,
        g = c.hasPrivate,
        h = c.setPrivate,
        i = $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("../frozen-data.js", "traceur-runtime@0.0.102/src/runtime/polyfills/WeakMap.js")),
        j = i.deleteFrozen,
        k = i.getFrozen,
        l = i.hasFrozen,
        m = i.setFrozen,
        n = $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("./utils.js", "traceur-runtime@0.0.102/src/runtime/polyfills/WeakMap.js")),
        o = n.isObject,
        p = n.registerPolyfill,
        q = $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("../has-native-symbols.js", "traceur-runtime@0.0.102/src/runtime/polyfills/WeakMap.js"))["default"],
        r = Object,
        s = (r.defineProperty, r.getOwnPropertyDescriptor, r.isExtensible),
        t = TypeError,
        u = (Object.prototype.hasOwnProperty, function() {
          function a() {
            this.name_ = d(), this.frozenData_ = [];
          }
          return $traceurRuntime.createClass(a, {
            set: function(a, b) {
              if (!o(a))
                throw new t("key must be an object");
              return s(a) ? h(a, this.name_, b) : m(this.frozenData_, a, b), this;
            },
            get: function(a) {
              return o(a) ? s(a) ? f(a, this.name_) : k(this.frozenData_, a) : void 0;
            },
            "delete": function(a) {
              return o(a) ? s(a) ? e(a, this.name_) : j(this.frozenData_, a) : !1;
            },
            has: function(a) {
              return o(a) ? s(a) ? g(a, this.name_) : l(this.frozenData_, a) : !1;
            }
          }, {});
        }());
    return p(b), {
      get WeakMap() {
        return u;
      },
      get polyfillWeakMap() {
        return b;
      }
    };
  }), $traceurRuntime.getModule("traceur-runtime@0.0.102/src/runtime/polyfills/WeakMap.js"), $traceurRuntime.registerModule("traceur-runtime@0.0.102/src/runtime/polyfills/WeakSet.js", [], function() {
    "use strict";
    function a(a) {
      var b = a,
          c = b.WeakSet;
      b.Symbol;
      if (!c || !o())
        return !0;
      try {
        var d = {},
            e = new c([[d]]);
        return !e.has(d);
      } catch (f) {
        return !1;
      }
    }
    function b(b) {
      a(b) && (b.WeakSet = s);
    }
    var c = $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("../private.js", "traceur-runtime@0.0.102/src/runtime/polyfills/WeakSet.js")),
        d = c.createPrivateSymbol,
        e = c.deletePrivate,
        f = (c.getPrivate, c.hasPrivate),
        g = c.setPrivate,
        h = $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("../frozen-data.js", "traceur-runtime@0.0.102/src/runtime/polyfills/WeakSet.js")),
        i = h.deleteFrozen,
        j = h.getFrozen,
        k = h.setFrozen,
        l = $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("./utils.js", "traceur-runtime@0.0.102/src/runtime/polyfills/WeakSet.js")),
        m = l.isObject,
        n = l.registerPolyfill,
        o = $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("../has-native-symbols.js", "traceur-runtime@0.0.102/src/runtime/polyfills/WeakSet.js"))["default"],
        p = Object,
        q = (p.defineProperty, p.isExtensible),
        r = TypeError,
        s = (Object.prototype.hasOwnProperty, function() {
          function a() {
            this.name_ = d(), this.frozenData_ = [];
          }
          return $traceurRuntime.createClass(a, {
            add: function(a) {
              if (!m(a))
                throw new r("value must be an object");
              return q(a) ? g(a, this.name_, !0) : k(this.frozenData_, a, a), this;
            },
            "delete": function(a) {
              return m(a) ? q(a) ? e(a, this.name_) : i(this.frozenData_, a) : !1;
            },
            has: function(a) {
              return m(a) ? q(a) ? f(a, this.name_) : j(this.frozenData_, a) === a : !1;
            }
          }, {});
        }());
    return n(b), {
      get WeakSet() {
        return s;
      },
      get polyfillWeakSet() {
        return b;
      }
    };
  }), $traceurRuntime.getModule("traceur-runtime@0.0.102/src/runtime/polyfills/WeakSet.js"), $traceurRuntime.registerModule("traceur-runtime@0.0.102/src/runtime/polyfills/polyfills.js", [], function() {
    "use strict";
    var a = $traceurRuntime.getModule($traceurRuntime.normalizeModuleName("./utils.js", "traceur-runtime@0.0.102/src/runtime/polyfills/polyfills.js")).polyfillAll;
    a(Reflect.global);
    var b = $traceurRuntime.setupGlobals;
    return $traceurRuntime.setupGlobals = function(c) {
      b(c), a(c);
    }, {};
  }), $traceurRuntime.getModule("traceur-runtime@0.0.102/src/runtime/polyfills/polyfills.js"), System = a;
}(), !function(a) {
  function b(a, b, e) {
    return 4 === arguments.length ? c.apply(this, arguments) : void d(a, {
      declarative: !0,
      deps: b,
      declare: e
    });
  }
  function c(a, b, c, e) {
    d(a, {
      declarative: !1,
      deps: b,
      executingRequire: c,
      execute: e
    });
  }
  function d(a, b) {
    b.name = a, a in n || (n[a] = b), b.normalizedDeps = b.deps;
  }
  function e(a, b) {
    if (b[a.groupIndex] = b[a.groupIndex] || [], -1 == o.call(b[a.groupIndex], a)) {
      b[a.groupIndex].push(a);
      for (var c = 0,
          d = a.normalizedDeps.length; d > c; c++) {
        var f = a.normalizedDeps[c],
            g = n[f];
        if (g && !g.evaluated) {
          var h = a.groupIndex + (g.declarative != a.declarative);
          if (void 0 === g.groupIndex || g.groupIndex < h) {
            if (void 0 !== g.groupIndex && (b[g.groupIndex].splice(o.call(b[g.groupIndex], g), 1), 0 == b[g.groupIndex].length))
              throw new TypeError("Mixed dependency cycle detected");
            g.groupIndex = h;
          }
          e(g, b);
        }
      }
    }
  }
  function f(a) {
    var b = n[a];
    b.groupIndex = 0;
    var c = [];
    e(b, c);
    for (var d = !!b.declarative == c.length % 2,
        f = c.length - 1; f >= 0; f--) {
      for (var g = c[f],
          i = 0; i < g.length; i++) {
        var k = g[i];
        d ? h(k) : j(k);
      }
      d = !d;
    }
  }
  function g(a) {
    return s[a] || (s[a] = {
      name: a,
      dependencies: [],
      exports: {},
      importers: []
    });
  }
  function h(b) {
    if (!b.module) {
      var c = b.module = g(b.name),
          d = b.module.exports,
          e = b.declare.call(a, function(a, b) {
            if (c.locked = !0, "object" == typeof a)
              for (var e in a)
                d[e] = a[e];
            else
              d[a] = b;
            for (var f = 0,
                g = c.importers.length; g > f; f++) {
              var h = c.importers[f];
              if (!h.locked)
                for (var i = 0; i < h.dependencies.length; ++i)
                  h.dependencies[i] === c && h.setters[i](d);
            }
            return c.locked = !1, b;
          }, b.name);
      c.setters = e.setters, c.execute = e.execute;
      for (var f = 0,
          i = b.normalizedDeps.length; i > f; f++) {
        var j,
            k = b.normalizedDeps[f],
            l = n[k],
            o = s[k];
        o ? j = o.exports : l && !l.declarative ? j = l.esModule : l ? (h(l), o = l.module, j = o.exports) : j = m(k), o && o.importers ? (o.importers.push(c), c.dependencies.push(o)) : c.dependencies.push(null), c.setters[f] && c.setters[f](j);
      }
    }
  }
  function i(a) {
    var b,
        c = n[a];
    if (c)
      c.declarative ? l(a, []) : c.evaluated || j(c), b = c.module.exports;
    else if (b = m(a), !b)
      throw new Error("Unable to load dependency " + a + ".");
    return (!c || c.declarative) && b && b.__useDefault ? b["default"] : b;
  }
  function j(b) {
    if (!b.module) {
      var c = {},
          d = b.module = {
            exports: c,
            id: b.name
          };
      if (!b.executingRequire)
        for (var e = 0,
            f = b.normalizedDeps.length; f > e; e++) {
          var g = b.normalizedDeps[e],
              h = n[g];
          h && j(h);
        }
      b.evaluated = !0;
      var l = b.execute.call(a, function(a) {
        for (var c = 0,
            d = b.deps.length; d > c; c++)
          if (b.deps[c] == a)
            return i(b.normalizedDeps[c]);
        throw new TypeError("Module " + a + " not declared as a dependency.");
      }, c, d);
      l && (d.exports = l), c = d.exports, c && c.__esModule ? b.esModule = c : b.esModule = k(c);
    }
  }
  function k(b) {
    if (b === a)
      return b;
    var c = {};
    if ("object" == typeof b || "function" == typeof b)
      if (p) {
        var d;
        for (var e in b)
          (d = Object.getOwnPropertyDescriptor(b, e)) && r(c, e, d);
      } else {
        var f = b && b.hasOwnProperty;
        for (var e in b)
          (!f || b.hasOwnProperty(e)) && (c[e] = b[e]);
      }
    return c["default"] = b, r(c, "__useDefault", {value: !0}), c;
  }
  function l(b, c) {
    var d = n[b];
    if (d && !d.evaluated && d.declarative) {
      c.push(b);
      for (var e = 0,
          f = d.normalizedDeps.length; f > e; e++) {
        var g = d.normalizedDeps[e];
        -1 == o.call(c, g) && (n[g] ? l(g, c) : m(g));
      }
      d.evaluated || (d.evaluated = !0, d.module.execute.call(a));
    }
  }
  function m(a) {
    if (u[a])
      return u[a];
    if ("@node/" == a.substr(0, 6))
      return t(a.substr(6));
    var b = n[a];
    if (!b)
      throw "Module " + a + " not present.";
    return f(a), l(a, []), n[a] = void 0, b.declarative && r(b.module.exports, "__esModule", {value: !0}), u[a] = b.declarative ? b.module.exports : b.esModule;
  }
  var n = {},
      o = Array.prototype.indexOf || function(a) {
        for (var b = 0,
            c = this.length; c > b; b++)
          if (this[b] === a)
            return b;
        return -1;
      },
      p = !0;
  try {
    Object.getOwnPropertyDescriptor({a: 0}, "a");
  } catch (q) {
    p = !1;
  }
  var r;
  !function() {
    try {
      Object.defineProperty({}, "a", {}) && (r = Object.defineProperty);
    } catch (a) {
      r = function(a, b, c) {
        try {
          a[b] = c.value || c.get.call(a);
        } catch (d) {}
      };
    }
  }();
  var s = {},
      t = "undefined" != typeof System && System._nodeRequire || "undefined" != typeof require && require.resolve && "undefined" != typeof process && require,
      u = {"@empty": {}};
  return function(a, d, e) {
    return function(f) {
      f(function(f) {
        for (var g = {
          _nodeRequire: t,
          register: b,
          registerDynamic: c,
          get: m,
          set: function(a, b) {
            u[a] = b;
          },
          newModule: function(a) {
            return a;
          }
        },
            h = 0; h < d.length; h++)
          (function(a, b) {
            b && b.__esModule ? u[a] = b : u[a] = k(b);
          })(d[h], arguments[h]);
        e(g);
        var i = m(a[0]);
        if (a.length > 1)
          for (var h = 1; h < a.length; h++)
            m(a[h]);
        return i.__useDefault ? i["default"] : i;
      });
    };
  };
}("undefined" != typeof self ? self : global)(["1", "1"], [], function(a) {
  !function() {
    var b = a;
    if ("undefined" != typeof window && "undefined" != typeof document && window.location)
      var c = location.protocol + "//" + location.hostname + (location.port ? ":" + location.port : "");
    b.set("@@cjs-helpers", b.newModule({getPathVars: function(a) {
        var b,
            d = a.lastIndexOf("!");
        b = -1 != d ? a.substr(0, d) : a;
        var e = b.split("/");
        return e.pop(), e = e.join("/"), "file:///" == b.substr(0, 8) ? (b = b.substr(7), e = e.substr(7), isWindows && (b = b.substr(1), e = e.substr(1))) : c && b.substr(0, c.length) === c && (b = b.substr(c.length), e = e.substr(c.length)), {
          filename: b,
          dirname: e
        };
      }}));
  }(), !function(b) {
    function c(a, b) {
      a = a.replace(h, "");
      var c = a.match(k),
          d = (c[1].split(",")[b] || "require").replace(l, ""),
          e = m[d] || (m[d] = new RegExp(i + d + j, "g"));
      e.lastIndex = 0;
      for (var f,
          g = []; f = e.exec(a); )
        g.push(f[2] || f[3]);
      return g;
    }
    function d(a, b, c, e) {
      if ("object" == typeof a && !(a instanceof Array))
        return d.apply(null, Array.prototype.splice.call(arguments, 1, arguments.length - 1));
      if ("string" == typeof a && "function" == typeof b && (a = [a]), !(a instanceof Array)) {
        if ("string" == typeof a) {
          var g = f.get(a);
          return g.__useDefault ? g["default"] : g;
        }
        throw new TypeError("Invalid require");
      }
      for (var h = [],
          i = 0; i < a.length; i++)
        h.push(f["import"](a[i], e));
      Promise.all(h).then(function(a) {
        b && b.apply(null, a);
      }, c);
    }
    function e(a, e, h) {
      "string" != typeof a && (h = e, e = a, a = null), e instanceof Array || (h = e, e = ["require", "exports", "module"].splice(0, h.length)), "function" != typeof h && (h = function(a) {
        return function() {
          return a;
        };
      }(h)), void 0 === e[e.length - 1] && e.pop();
      var i,
          j,
          k;
      -1 != (i = g.call(e, "require")) && (e.splice(i, 1), a || (e = e.concat(c(h.toString(), i)))), -1 != (j = g.call(e, "exports")) && e.splice(j, 1), -1 != (k = g.call(e, "module")) && e.splice(k, 1);
      var l = {
        name: a,
        deps: e,
        execute: function(a, c, g) {
          for (var l = [],
              m = 0; m < e.length; m++)
            l.push(a(e[m]));
          g.uri = g.id, g.config = function() {}, -1 != k && l.splice(k, 0, g), -1 != j && l.splice(j, 0, c), -1 != i && l.splice(i, 0, function(b, c, e) {
            return "string" == typeof b && "function" != typeof c ? a(b) : d.call(f, b, c, e, g.id);
          });
          var n = h.apply(-1 == j ? b : c, l);
          return "undefined" == typeof n && g && (n = g.exports), "undefined" != typeof n ? n : void 0;
        }
      };
      if (a)
        n.anonDefine || n.isBundle ? n.anonDefine && n.anonDefine.name && (n.anonDefine = null) : n.anonDefine = l, n.isBundle = !0, f.registerDynamic(l.name, l.deps, !1, l.execute);
      else {
        if (n.anonDefine && !n.anonDefine.name)
          throw new Error("Multiple anonymous defines in module " + a);
        n.anonDefine = l;
      }
    }
    var f = a,
        g = Array.prototype.indexOf || function(a) {
          for (var b = 0,
              c = this.length; c > b; b++)
            if (this[b] === a)
              return b;
          return -1;
        },
        h = /(\/\*([\s\S]*?)\*\/|([^:]|^)\/\/(.*)$)/gm,
        i = "(?:^|[^$_a-zA-Z\\xA0-\\uFFFF.])",
        j = "\\s*\\(\\s*(\"([^\"]+)\"|'([^']+)')\\s*\\)",
        k = /\(([^\)]*)\)/,
        l = /^\s+|\s+$/g,
        m = {};
    e.amd = {};
    var n = {
      isBundle: !1,
      anonDefine: null
    };
    f.amdDefine = e, f.amdRequire = d;
  }("undefined" != typeof self ? self : global), a.registerDynamic("2", ["4", "5", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("4")["default"]);
    b.__esModule = !0;
    var e = a("5"),
        f = d(e);
    return b["default"] = function(a, b, c) {
      if (a) {
        if ("Program" === a.type)
          return f.file(a, b || [], c || []);
        if ("File" === a.type)
          return a;
      }
      throw new Error("Not a valid ast?");
    }, c.exports = b["default"], c.exports;
  }), a.registerDynamic("6", ["9", "a", "2", "7", "8", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("9")["default"]),
        e = a("a")["default"];
    b.__esModule = !0;
    var f = a("2"),
        g = e(f),
        h = a("7"),
        i = e(h),
        j = a("8"),
        k = e(j),
        l = function() {
          function a() {
            d(this, a);
          }
          return a.prototype.lint = function(a) {
            var b = arguments.length <= 1 || void 0 === arguments[1] ? {} : arguments[1];
            return b.code = !1, b.mode = "lint", this.transform(a, b);
          }, a.prototype.pretransform = function(a, b) {
            var c = new k["default"](b, this);
            return c.wrap(a, function() {
              return c.addCode(a), c.parseCode(a), c;
            });
          }, a.prototype.transform = function(a, b) {
            var c = new k["default"](b, this);
            return c.wrap(a, function() {
              return c.addCode(a), c.parseCode(a), c.transform();
            });
          }, a.prototype.analyse = function(a, b, c) {
            return void 0 === b && (b = {}), b.code = !1, c && (b.plugins = b.plugins || [], b.plugins.push(new i["default"]({visitor: c}))), this.transform(a, b).metadata;
          }, a.prototype.transformFromAst = function(a, b, c) {
            a = g["default"](a);
            var d = new k["default"](c, this);
            return d.wrap(b, function() {
              return d.addCode(b), d.addAst(a), d.transform();
            });
          }, a;
        }();
    return b["default"] = l, c.exports = b["default"], c.exports;
  }), a.registerDynamic("b", ["c", "4", "5", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a, b) {
      var c = a.node,
          d = c.source ? c.source.value : null,
          e = b.metadata.modules.exports,
          g = a.get("declaration");
      if (g.isStatement()) {
        var h = g.getBindingIdentifiers();
        for (var j in h)
          e.exported.push(j), e.specifiers.push({
            kind: "local",
            local: j,
            exported: a.isExportDefaultDeclaration() ? "default" : j
          });
      }
      if (a.isExportNamedDeclaration() && c.specifiers)
        for (var k = c.specifiers,
            l = Array.isArray(k),
            m = 0,
            k = l ? k : f(k); ; ) {
          var n;
          if (l) {
            if (m >= k.length)
              break;
            n = k[m++];
          } else {
            if (m = k.next(), m.done)
              break;
            n = m.value;
          }
          var o = n,
              p = o.exported.name;
          e.exported.push(p), i.isExportDefaultSpecifier(o) && e.specifiers.push({
            kind: "external",
            local: p,
            exported: p,
            source: d
          }), i.isExportNamespaceSpecifier(o) && e.specifiers.push({
            kind: "external-namespace",
            exported: p,
            source: d
          });
          var q = o.local;
          q && (d && e.specifiers.push({
            kind: "external",
            local: q.name,
            exported: p,
            source: d
          }), d || e.specifiers.push({
            kind: "local",
            local: q.name,
            exported: p
          }));
        }
      a.isExportAllDeclaration() && e.specifiers.push({
        kind: "external-all",
        source: d
      });
    }
    function e(a) {
      a.skip();
    }
    var f = (a("3"), a("c")["default"]),
        g = a("4")["default"];
    b.__esModule = !0, b.ExportDeclaration = d, b.Scope = e;
    var h = a("5"),
        i = g(h),
        j = {enter: function(a, b) {
            var c = a.node;
            c.source && (c.source.value = b.resolveModuleSource(c.source.value));
          }};
    b.ModuleDeclaration = j;
    var k = {exit: function(a, b) {
        var c = a.node,
            d = [],
            e = [];
        b.metadata.modules.imports.push({
          source: c.source.value,
          imported: e,
          specifiers: d
        });
        for (var g = a.get("specifiers"),
            h = Array.isArray(g),
            i = 0,
            g = h ? g : f(g); ; ) {
          var j;
          if (h) {
            if (i >= g.length)
              break;
            j = g[i++];
          } else {
            if (i = g.next(), i.done)
              break;
            j = i.value;
          }
          var k = j,
              l = k.node.local.name;
          if (k.isImportDefaultSpecifier() && (e.push("default"), d.push({
            kind: "named",
            imported: "default",
            local: l
          })), k.isImportSpecifier()) {
            var m = k.node.imported.name;
            e.push(m), d.push({
              kind: "named",
              imported: m,
              local: l
            });
          }
          k.isImportNamespaceSpecifier() && (e.push("*"), d.push({
            kind: "namespace",
            local: l
          }));
        }
      }};
    return b.ImportDeclaration = k, c.exports;
  }), a.registerDynamic("d", ["e", "f", "3", "10"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return new i(a, "base64").toString();
    }
    function e(a) {
      return a.split(",").pop();
    }
    function f(a, b) {
      var c = m.exec(a);
      m.lastIndex = 0;
      var d = c[1] || c[2],
          e = k.join(b, d);
      try {
        return j.readFileSync(e, "utf8");
      } catch (f) {
        throw new Error("An error occurred while trying to read the map file at " + e + "\n" + f);
      }
    }
    function g(a, b) {
      b = b || {}, b.isFileComment && (a = f(a, b.commentFileDir)), b.hasComment && (a = e(a)), b.isEncoded && (a = d(a)), (b.isJSON || b.isEncoded) && (a = JSON.parse(a)), this.sourcemap = a;
    }
    function h(a) {
      for (var c,
          d = a.split("\n"),
          e = d.length - 1; e > 0; e--)
        if (c = d[e], ~c.indexOf("sourceMappingURL=data:"))
          return b.fromComment(c);
    }
    var i = (a("3"), a("10")),
        j = a("e"),
        k = a("f"),
        l = /^\s*\/(?:\/|\*)[@#]\s+sourceMappingURL=data:(?:application|text)\/json;(?:charset[:=]\S+;)?base64,(.*)$/gm,
        m = /(?:\/\/[@#][ \t]+sourceMappingURL=([^\s'"]+?)[ \t]*$)|(?:\/\*[@#][ \t]+sourceMappingURL=([^\*]+?)[ \t]*(?:\*\/){1}[ \t]*$)/gm;
    return g.prototype.toJSON = function(a) {
      return JSON.stringify(this.sourcemap, null, a);
    }, g.prototype.toBase64 = function() {
      var a = this.toJSON();
      return new i(a).toString("base64");
    }, g.prototype.toComment = function(a) {
      var b = this.toBase64(),
          c = "sourceMappingURL=data:application/json;base64," + b;
      return a && a.multiline ? "/*# " + c + " */" : "//# " + c;
    }, g.prototype.toObject = function() {
      return JSON.parse(this.toJSON());
    }, g.prototype.addProperty = function(a, b) {
      if (this.sourcemap.hasOwnProperty(a))
        throw new Error("property %s already exists on the sourcemap, use set property instead");
      return this.setProperty(a, b);
    }, g.prototype.setProperty = function(a, b) {
      return this.sourcemap[a] = b, this;
    }, g.prototype.getProperty = function(a) {
      return this.sourcemap[a];
    }, b.fromObject = function(a) {
      return new g(a);
    }, b.fromJSON = function(a) {
      return new g(a, {isJSON: !0});
    }, b.fromBase64 = function(a) {
      return new g(a, {isEncoded: !0});
    }, b.fromComment = function(a) {
      return a = a.replace(/^\/\*/g, "//").replace(/\*\/$/g, ""), new g(a, {
        isEncoded: !0,
        hasComment: !0
      });
    }, b.fromMapFileComment = function(a, b) {
      return new g(a, {
        commentFileDir: b,
        isFileComment: !0,
        isJSON: !0
      });
    }, b.fromSource = function(a, c) {
      if (c) {
        var d = h(a);
        return d ? d : null;
      }
      var e = a.match(l);
      return l.lastIndex = 0, e ? b.fromComment(e.pop()) : null;
    }, b.fromMapFileSource = function(a, c) {
      var d = a.match(m);
      return m.lastIndex = 0, d ? b.fromMapFileComment(d.pop(), c) : null;
    }, b.removeComments = function(a) {
      return l.lastIndex = 0, a.replace(l, "");
    }, b.removeMapFileComments = function(a) {
      return m.lastIndex = 0, a.replace(m, "");
    }, Object.defineProperty(b, "commentRegex", {get: function() {
        return l.lastIndex = 0, l;
      }}), Object.defineProperty(b, "mapFileCommentRegex", {get: function() {
        return m.lastIndex = 0, m;
      }}), c.exports;
  }), a.registerDynamic("11", ["13", "9", "a", "12", "14", "8", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("13")["default"]),
        e = a("9")["default"],
        f = a("a")["default"];
    b.__esModule = !0;
    var g = a("12"),
        h = f(g),
        i = a("14"),
        j = f(i),
        k = a("8"),
        l = (f(k), function(a) {
          function b(c, d) {
            var f = arguments.length <= 2 || void 0 === arguments[2] ? {} : arguments[2];
            e(this, b), a.call(this), this.plugin = d, this.file = c, this.opts = f;
          }
          return d(b, a), b.prototype.transform = function() {
            var a = this.file;
            a.log.debug("Start transformer " + this.key), j["default"](a.ast, this.plugin.visitor, a.scope, a), a.log.debug("Finish transformer " + this.key);
          }, b.prototype.addHelper = function() {
            var a;
            return (a = this.file).addHelper.apply(a, arguments);
          }, b.prototype.addImport = function() {
            var a;
            return (a = this.file).addImport.apply(a, arguments);
          }, b.prototype.getModuleName = function() {
            var a;
            return (a = this.file).getModuleName.apply(a, arguments);
          }, b.prototype.buildCodeFrameError = function() {
            var a;
            return (a = this.file).buildCodeFrameError.apply(a, arguments);
          }, b;
        }(h["default"]));
    return b["default"] = l, c.exports = b["default"], c.exports;
  }), a.registerDynamic("15", ["3"], !0, function(a, b, c) {
    "use strict";
    a("3");
    return c.exports = /^#!.*/, c.exports;
  }), a.registerDynamic("16", ["9", "a", "17", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("9")["default"]),
        e = a("a")["default"];
    b.__esModule = !0;
    var f = a("17"),
        g = e(f),
        h = g["default"]("babel:verbose"),
        i = g["default"]("babel"),
        j = [],
        k = function() {
          function a(b, c) {
            d(this, a), this.filename = c, this.file = b;
          }
          return a.prototype._buildMessage = function(a) {
            var b = "[BABEL] " + this.filename;
            return a && (b += ": " + a), b;
          }, a.prototype.warn = function(a) {
            console.warn(this._buildMessage(a));
          }, a.prototype.error = function(a) {
            var b = arguments.length <= 1 || void 0 === arguments[1] ? Error : arguments[1];
            throw new b(this._buildMessage(a));
          }, a.prototype.deprecate = function(a) {
            this.file.opts && this.file.opts.suppressDeprecationMessages || (a = this._buildMessage(a), j.indexOf(a) >= 0 || (j.push(a), console.error(a)));
          }, a.prototype.verbose = function(a) {
            h.enabled && h(this._buildMessage(a));
          }, a.prototype.debug = function(a) {
            i.enabled && i(this._buildMessage(a));
          }, a.prototype.deopt = function(a, b) {
            this.debug(b);
          }, a;
        }();
    return b["default"] = k, c.exports = b["default"], c.exports;
  }), a.registerDynamic("18", ["3"], !0, function(a, b, c) {
    function d(a, b) {
      var c = a.length;
      for (a.sort(b); c--; )
        a[c] = a[c].value;
      return a;
    }
    a("3");
    return c.exports = d, c.exports;
  }), a.registerDynamic("19", ["3"], !0, function(a, b, c) {
    function d(a, b) {
      if (a !== b) {
        var c = null === a,
            d = void 0 === a,
            e = a === a,
            f = null === b,
            g = void 0 === b,
            h = b === b;
        if (a > b && !f || !e || c && !g && h || d && h)
          return 1;
        if (b > a && !c || !h || f && !d && e || g && e)
          return -1;
      }
      return 0;
    }
    a("3");
    return c.exports = d, c.exports;
  }), a.registerDynamic("1a", ["19", "3"], !0, function(a, b, c) {
    function d(a, b) {
      return e(a.criteria, b.criteria) || a.index - b.index;
    }
    var e = (a("3"), a("19"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("1b", ["1c", "1d", "18", "1a", "1e", "3"], !0, function(a, b, c) {
    function d(a, b, c) {
      if (null == a)
        return [];
      c && i(a, b, c) && (b = void 0);
      var d = -1;
      b = e(b, c, 3);
      var j = f(a, function(a, c, e) {
        return {
          criteria: b(a, c, e),
          index: ++d,
          value: a
        };
      });
      return g(j, h);
    }
    var e = (a("3"), a("1c")),
        f = a("1d"),
        g = a("18"),
        h = a("1a"),
        i = a("1e");
    return c.exports = d, c.exports;
  }), a.registerDynamic("1f", ["a", "7", "1b", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("a")["default"]);
    b.__esModule = !0;
    var e = a("7"),
        f = d(e),
        g = a("1b"),
        h = d(g);
    return b["default"] = new f["default"]({visitor: {Block: {exit: function(a) {
            for (var b = a.node,
                c = !1,
                d = 0; d < b.body.length; d++) {
              var e = b.body[d];
              if (e && null != e._blockHoist) {
                c = !0;
                break;
              }
            }
            c && (b.body = h["default"](b.body, function(a) {
              var b = a && a._blockHoist;
              return null == b && (b = 1), b === !0 && (b = 2), -1 * b;
            }));
          }}}}), c.exports = b["default"], c.exports;
  }), a.registerDynamic("20", ["3"], !0, function(a, b, c) {
    function d(a, b, c) {
      return b ? a = e[a] : c && (a = f[a]), "\\" + a;
    }
    var e = (a("3"), {
      0: "x30",
      1: "x31",
      2: "x32",
      3: "x33",
      4: "x34",
      5: "x35",
      6: "x36",
      7: "x37",
      8: "x38",
      9: "x39",
      A: "x41",
      B: "x42",
      C: "x43",
      D: "x44",
      E: "x45",
      F: "x46",
      a: "x61",
      b: "x62",
      c: "x63",
      d: "x64",
      e: "x65",
      f: "x66",
      n: "x6e",
      r: "x72",
      t: "x74",
      u: "x75",
      v: "x76",
      x: "x78"
    }),
        f = {
          "\\": "\\",
          "'": "'",
          "\n": "n",
          "\r": "r",
          "\u2028": "u2028",
          "\u2029": "u2029"
        };
    return c.exports = d, c.exports;
  }), a.registerDynamic("21", ["22", "20", "3"], !0, function(a, b, c) {
    function d(a) {
      return a = e(a), a && h.test(a) ? a.replace(g, f) : a || "(?:)";
    }
    var e = (a("3"), a("22")),
        f = a("20"),
        g = /^[:!,]|[\\^$.*+?()[\]{}|\/]|(^[0-9a-fA-Fnrtuvx])|([\n\r\u2028\u2029])/g,
        h = RegExp(g.source);
    return c.exports = d, c.exports;
  }), a.registerDynamic("23", ["22", "3"], !0, function(a, b, c) {
    function d(a, b, c) {
      return a = e(a), c = null == c ? 0 : f(0 > c ? 0 : +c || 0, a.length), a.lastIndexOf(b, c) == c;
    }
    var e = (a("3"), a("22")),
        f = Math.min;
    return c.exports = d, c.exports;
  }), a.registerDynamic("24", ["3"], !0, function(a, b, c) {
    a("3");
    c.exports = function(a, b) {
      for (var c = [],
          e = 0; e < a.length; e++) {
        var f = b(a[e], e);
        d(f) ? c.push.apply(c, f) : c.push(f);
      }
      return c;
    };
    var d = Array.isArray || function(a) {
      return "[object Array]" === Object.prototype.toString.call(a);
    };
    return c.exports;
  }), a.registerDynamic("25", ["3"], !0, function(a, b, c) {
    function d(a, b, c) {
      var d = e(a, b, c);
      return d && {
        start: d[0],
        end: d[1],
        pre: c.slice(0, d[0]),
        body: c.slice(d[0] + a.length, d[1]),
        post: c.slice(d[1] + b.length)
      };
    }
    function e(a, b, c) {
      var d,
          e,
          f,
          g,
          h,
          i = c.indexOf(a),
          j = c.indexOf(b, i + 1),
          k = i;
      if (i >= 0 && j > 0) {
        for (d = [], f = c.length; k < c.length && k >= 0 && !h; )
          k == i ? (d.push(k), i = c.indexOf(a, k + 1)) : 1 == d.length ? h = [d.pop(), j] : (e = d.pop(), f > e && (f = e, g = j), j = c.indexOf(b, k + 1)), k = j > i && i >= 0 ? i : j;
        d.length && (h = [f, g]);
      }
      return h;
    }
    a("3");
    return c.exports = d, d.range = e, c.exports;
  }), a.registerDynamic("26", ["24", "25", "3"], !0, function(a, b, c) {
    function d(a) {
      return parseInt(a, 10) == a ? parseInt(a, 10) : a.charCodeAt(0);
    }
    function e(a) {
      return a.split("\\\\").join(p).split("\\{").join(q).split("\\}").join(r).split("\\,").join(s).split("\\.").join(t);
    }
    function f(a) {
      return a.split(p).join("\\").split(q).join("{").split(r).join("}").split(s).join(",").split(t).join(".");
    }
    function g(a) {
      if (!a)
        return [""];
      var b = [],
          c = o("{", "}", a);
      if (!c)
        return a.split(",");
      var d = c.pre,
          e = c.body,
          f = c.post,
          h = d.split(",");
      h[h.length - 1] += "{" + e + "}";
      var i = g(f);
      return f.length && (h[h.length - 1] += i.shift(), h.push.apply(h, i)), b.push.apply(b, h), b;
    }
    function h(a) {
      return a ? m(e(a), !0).map(f) : [];
    }
    function i(a) {
      return "{" + a + "}";
    }
    function j(a) {
      return /^-?0\d/.test(a);
    }
    function k(a, b) {
      return b >= a;
    }
    function l(a, b) {
      return a >= b;
    }
    function m(a, b) {
      var c = [],
          e = o("{", "}", a);
      if (!e || /\$$/.test(e.pre))
        return [a];
      var f = /^-?\d+\.\.-?\d+(?:\.\.-?\d+)?$/.test(e.body),
          h = /^[a-zA-Z]\.\.[a-zA-Z](?:\.\.-?\d+)?$/.test(e.body),
          p = f || h,
          q = /^(.*,)+(.+)?$/.test(e.body);
      if (!p && !q)
        return e.post.match(/,.*\}/) ? (a = e.pre + "{" + e.body + r + e.post, m(a)) : [a];
      var s;
      if (p)
        s = e.body.split(/\.\./);
      else if (s = g(e.body), 1 === s.length && (s = m(s[0], !1).map(i), 1 === s.length)) {
        var t = e.post.length ? m(e.post, !1) : [""];
        return t.map(function(a) {
          return e.pre + s[0] + a;
        });
      }
      var u,
          v = e.pre,
          t = e.post.length ? m(e.post, !1) : [""];
      if (p) {
        var w = d(s[0]),
            x = d(s[1]),
            y = Math.max(s[0].length, s[1].length),
            z = 3 == s.length ? Math.abs(d(s[2])) : 1,
            A = k,
            B = w > x;
        B && (z *= -1, A = l);
        var C = s.some(j);
        u = [];
        for (var D = w; A(D, x); D += z) {
          var E;
          if (h)
            E = String.fromCharCode(D), "\\" === E && (E = "");
          else if (E = String(D), C) {
            var F = y - E.length;
            if (F > 0) {
              var G = new Array(F + 1).join("0");
              E = 0 > D ? "-" + G + E.slice(1) : G + E;
            }
          }
          u.push(E);
        }
      } else
        u = n(s, function(a) {
          return m(a, !1);
        });
      for (var H = 0; H < u.length; H++)
        for (var I = 0; I < t.length; I++) {
          var J = v + u[H] + t[I];
          (!b || p || J) && c.push(J);
        }
      return c;
    }
    var n = (a("3"), a("24")),
        o = a("25");
    c.exports = h;
    var p = "\x00SLASH" + Math.random() + "\x00",
        q = "\x00OPEN" + Math.random() + "\x00",
        r = "\x00CLOSE" + Math.random() + "\x00",
        s = "\x00COMMA" + Math.random() + "\x00",
        t = "\x00PERIOD" + Math.random() + "\x00";
    return c.exports;
  }), a.registerDynamic("27", ["f", "26", "3"], !0, function(a, b, c) {
    function d(a) {
      return a.split("").reduce(function(a, b) {
        return a[b] = !0, a;
      }, {});
    }
    function e(a, b) {
      return b = b || {}, function(c, d, e) {
        return g(c, a, b);
      };
    }
    function f(a, b) {
      a = a || {}, b = b || {};
      var c = {};
      return Object.keys(b).forEach(function(a) {
        c[a] = b[a];
      }), Object.keys(a).forEach(function(b) {
        c[b] = a[b];
      }), c;
    }
    function g(a, b, c) {
      if ("string" != typeof b)
        throw new TypeError("glob pattern string required");
      return c || (c = {}), c.nocomment || "#" !== b.charAt(0) ? "" === b.trim() ? "" === a : new h(b, c).match(a) : !1;
    }
    function h(a, b) {
      if (!(this instanceof h))
        return new h(a, b);
      if ("string" != typeof a)
        throw new TypeError("glob pattern string required");
      b || (b = {}), a = a.trim(), "/" !== q.sep && (a = a.split(q.sep).join("/")), this.options = b, this.set = [], this.pattern = a, this.regexp = null, this.negate = !1, this.comment = !1, this.empty = !1, this.make();
    }
    function i() {
      if (!this._made) {
        var a = this.pattern,
            b = this.options;
        if (!b.nocomment && "#" === a.charAt(0))
          return void(this.comment = !0);
        if (!a)
          return void(this.empty = !0);
        this.parseNegate();
        var c = this.globSet = this.braceExpand();
        b.debug && (this.debug = console.error), this.debug(this.pattern, c), c = this.globParts = c.map(function(a) {
          return a.split(z);
        }), this.debug(this.pattern, c), c = c.map(function(a, b, c) {
          return a.map(this.parse, this);
        }, this), this.debug(this.pattern, c), c = c.filter(function(a) {
          return -1 === a.indexOf(!1);
        }), this.debug(this.pattern, c), this.set = c;
      }
    }
    function j() {
      var a = this.pattern,
          b = !1,
          c = this.options,
          d = 0;
      if (!c.nonegate) {
        for (var e = 0,
            f = a.length; f > e && "!" === a.charAt(e); e++)
          b = !b, d++;
        d && (this.pattern = a.substr(d)), this.negate = b;
      }
    }
    function k(a, b) {
      if (b || (b = this instanceof h ? this.options : {}), a = "undefined" == typeof a ? this.pattern : a, "undefined" == typeof a)
        throw new Error("undefined pattern");
      return b.nobrace || !a.match(/\{.*\}/) ? [a] : t(a);
    }
    function l(a, b) {
      function c() {
        if (f) {
          switch (f) {
            case "*":
              h += v, i = !0;
              break;
            case "?":
              h += u, i = !0;
              break;
            default:
              h += "\\" + f;
          }
          r.debug("clearStateChar %j %j", f, h), f = !1;
        }
      }
      var d = this.options;
      if (!d.noglobstar && "**" === a)
        return s;
      if ("" === a)
        return "";
      for (var e,
          f,
          g,
          h = "",
          i = !!d.nocase,
          j = !1,
          k = [],
          l = [],
          m = !1,
          n = -1,
          p = -1,
          q = "." === a.charAt(0) ? "" : d.dot ? "(?!(?:^|\\/)\\.{1,2}(?:$|\\/))" : "(?!\\.)",
          r = this,
          t = 0,
          w = a.length; w > t && (g = a.charAt(t)); t++)
        if (this.debug("%s	%s %s %j", a, t, h, g), j && y[g])
          h += "\\" + g, j = !1;
        else
          switch (g) {
            case "/":
              return !1;
            case "\\":
              c(), j = !0;
              continue;
            case "?":
            case "*":
            case "+":
            case "@":
            case "!":
              if (this.debug("%s	%s %s %j <-- stateChar", a, t, h, g), m) {
                this.debug("  in class"), "!" === g && t === p + 1 && (g = "^"), h += g;
                continue;
              }
              r.debug("call clearStateChar %j", f), c(), f = g, d.noext && c();
              continue;
            case "(":
              if (m) {
                h += "(";
                continue;
              }
              if (!f) {
                h += "\\(";
                continue;
              }
              e = f, k.push({
                type: e,
                start: t - 1,
                reStart: h.length
              }), h += "!" === f ? "(?:(?!(?:" : "(?:", this.debug("plType %j %j", f, h), f = !1;
              continue;
            case ")":
              if (m || !k.length) {
                h += "\\)";
                continue;
              }
              c(), i = !0, h += ")";
              var x = k.pop();
              switch (e = x.type) {
                case "!":
                  l.push(x), h += ")[^/]*?)", x.reEnd = h.length;
                  break;
                case "?":
                case "+":
                case "*":
                  h += e;
                  break;
                case "@":
              }
              continue;
            case "|":
              if (m || !k.length || j) {
                h += "\\|", j = !1;
                continue;
              }
              c(), h += "|";
              continue;
            case "[":
              if (c(), m) {
                h += "\\" + g;
                continue;
              }
              m = !0, p = t, n = h.length, h += g;
              continue;
            case "]":
              if (t === p + 1 || !m) {
                h += "\\" + g, j = !1;
                continue;
              }
              if (m) {
                var z = a.substring(p + 1, t);
                try {
                  RegExp("[" + z + "]");
                } catch (B) {
                  var C = this.parse(z, A);
                  h = h.substr(0, n) + "\\[" + C[0] + "\\]", i = i || C[1], m = !1;
                  continue;
                }
              }
              i = !0, m = !1, h += g;
              continue;
            default:
              c(), j ? j = !1 : !y[g] || "^" === g && m || (h += "\\"), h += g;
          }
      for (m && (z = a.substr(p + 1), C = this.parse(z, A), h = h.substr(0, n) + "\\[" + C[0], i = i || C[1]), x = k.pop(); x; x = k.pop()) {
        var D = h.slice(x.reStart + 3);
        D = D.replace(/((?:\\{2})*)(\\?)\|/g, function(a, b, c) {
          return c || (c = "\\"), b + b + c + "|";
        }), this.debug("tail=%j\n   %s", D, D);
        var E = "*" === x.type ? v : "?" === x.type ? u : "\\" + x.type;
        i = !0, h = h.slice(0, x.reStart) + E + "\\(" + D;
      }
      c(), j && (h += "\\\\");
      var F = !1;
      switch (h.charAt(0)) {
        case ".":
        case "[":
        case "(":
          F = !0;
      }
      for (var G = l.length - 1; G > -1; G--) {
        var H = l[G],
            I = h.slice(0, H.reStart),
            J = h.slice(H.reStart, H.reEnd - 8),
            K = h.slice(H.reEnd - 8, H.reEnd),
            L = h.slice(H.reEnd);
        K += L;
        var M = I.split("(").length - 1,
            N = L;
        for (t = 0; M > t; t++)
          N = N.replace(/\)[+*?]?/, "");
        L = N;
        var O = "";
        "" === L && b !== A && (O = "$");
        var P = I + J + L + O + K;
        h = P;
      }
      if ("" !== h && i && (h = "(?=.)" + h), F && (h = q + h), b === A)
        return [h, i];
      if (!i)
        return o(a);
      var Q = d.nocase ? "i" : "",
          R = new RegExp("^" + h + "$", Q);
      return R._glob = a, R._src = h, R;
    }
    function m() {
      if (this.regexp || this.regexp === !1)
        return this.regexp;
      var a = this.set;
      if (!a.length)
        return this.regexp = !1, this.regexp;
      var b = this.options,
          c = b.noglobstar ? v : b.dot ? w : x,
          d = b.nocase ? "i" : "",
          e = a.map(function(a) {
            return a.map(function(a) {
              return a === s ? c : "string" == typeof a ? p(a) : a._src;
            }).join("\\/");
          }).join("|");
      e = "^(?:" + e + ")$", this.negate && (e = "^(?!" + e + ").*$");
      try {
        this.regexp = new RegExp(e, d);
      } catch (f) {
        this.regexp = !1;
      }
      return this.regexp;
    }
    function n(a, b) {
      if (this.debug("match", a, this.pattern), this.comment)
        return !1;
      if (this.empty)
        return "" === a;
      if ("/" === a && b)
        return !0;
      var c = this.options;
      "/" !== q.sep && (a = a.split(q.sep).join("/")), a = a.split(z), this.debug(this.pattern, "split", a);
      var d = this.set;
      this.debug(this.pattern, "set", d);
      var e,
          f;
      for (f = a.length - 1; f >= 0 && !(e = a[f]); f--)
        ;
      for (f = 0; f < d.length; f++) {
        var g = d[f],
            h = a;
        c.matchBase && 1 === g.length && (h = [e]);
        var i = this.matchOne(h, g, b);
        if (i)
          return c.flipNegate ? !0 : !this.negate;
      }
      return c.flipNegate ? !1 : this.negate;
    }
    function o(a) {
      return a.replace(/\\(.)/g, "$1");
    }
    function p(a) {
      return a.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&");
    }
    a("3");
    c.exports = g, g.Minimatch = h;
    var q = {sep: "/"};
    try {
      q = a("f");
    } catch (r) {}
    var s = g.GLOBSTAR = h.GLOBSTAR = {},
        t = a("26"),
        u = "[^/]",
        v = u + "*?",
        w = "(?:(?!(?:\\/|^)(?:\\.{1,2})($|\\/)).)*?",
        x = "(?:(?!(?:\\/|^)\\.).)*?",
        y = d("().*{}+?[]^$\\!"),
        z = /\/+/;
    g.filter = e, g.defaults = function(a) {
      if (!a || !Object.keys(a).length)
        return g;
      var b = g,
          c = function(c, d, e) {
            return b.minimatch(c, d, f(a, e));
          };
      return c.Minimatch = function(c, d) {
        return new b.Minimatch(c, f(a, d));
      }, c;
    }, h.defaults = function(a) {
      return a && Object.keys(a).length ? g.defaults(a).Minimatch : h;
    }, h.prototype.debug = function() {}, h.prototype.make = i, h.prototype.parseNegate = j, g.braceExpand = function(a, b) {
      return k(a, b);
    }, h.prototype.braceExpand = k, h.prototype.parse = l;
    var A = {};
    return g.makeRe = function(a, b) {
      return new h(a, b || {}).makeRe();
    }, h.prototype.makeRe = m, g.match = function(a, b, c) {
      c = c || {};
      var d = new h(b, c);
      return a = a.filter(function(a) {
        return d.match(a);
      }), d.options.nonull && !a.length && a.push(b), a;
    }, h.prototype.match = n, h.prototype.matchOne = function(a, b, c) {
      var d = this.options;
      this.debug("matchOne", {
        "this": this,
        file: a,
        pattern: b
      }), this.debug("matchOne", a.length, b.length);
      for (var e = 0,
          f = 0,
          g = a.length,
          h = b.length; g > e && h > f; e++, f++) {
        this.debug("matchOne loop");
        var i = b[f],
            j = a[e];
        if (this.debug(b, i, j), i === !1)
          return !1;
        if (i === s) {
          this.debug("GLOBSTAR", [b, i, j]);
          var k = e,
              l = f + 1;
          if (l === h) {
            for (this.debug("** at the end"); g > e; e++)
              if ("." === a[e] || ".." === a[e] || !d.dot && "." === a[e].charAt(0))
                return !1;
            return !0;
          }
          for (; g > k; ) {
            var m = a[k];
            if (this.debug("\nglobstar while", a, k, b, l, m), this.matchOne(a.slice(k), b.slice(l), c))
              return this.debug("globstar found match!", k, g, m), !0;
            if ("." === m || ".." === m || !d.dot && "." === m.charAt(0)) {
              this.debug("dot detected!", a, k, b, l);
              break;
            }
            this.debug("globstar swallow a segment, and continue"), k++;
          }
          return c && (this.debug("\n>>> no match, partial?", a, k, b, l), k === g) ? !0 : !1;
        }
        var n;
        if ("string" == typeof i ? (n = d.nocase ? j.toLowerCase() === i.toLowerCase() : j === i, this.debug("string match", i, j, n)) : (n = j.match(i), this.debug("pattern match", i, j, n)), !n)
          return !1;
      }
      if (e === g && f === h)
        return !0;
      if (e === g)
        return c;
      if (f === h) {
        var o = e === g - 1 && "" === a[e];
        return o;
      }
      throw new Error("wtf?");
    }, c.exports;
  }), a.registerDynamic("28", ["29", "3"], !0, function(a, b, c) {
    a("3");
    return c.exports = a("29"), c.exports;
  }), a.registerDynamic("2a", ["3"], !0, function(a, b, c) {
    "use strict";
    a("3");
    return c.exports = function(a) {
      var b = /^\\\\\?\\/.test(a),
          c = /[^\x00-\x80]+/.test(a);
      return b || c ? a : a.replace(/\\/g, "/");
    }, c.exports;
  }), a.registerDynamic("2b", ["c", "a", "21", "23", "2d", "27", "28", "2e", "2f", "f", "2a", "2c", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a, b) {
      var c = b || d.EXTENSIONS,
          e = B["default"].extname(a);
      return v["default"](c, e);
    }
    function e(a) {
      return a ? Array.isArray(a) ? a : "string" == typeof a ? a.split(",") : [a] : [];
    }
    function f(a) {
      if (!a)
        return new RegExp(/.^/);
      if (Array.isArray(a) && (a = new RegExp(a.map(n["default"]).join("|"), "i")), "string" == typeof a) {
        a = D["default"](a), (p["default"](a, "./") || p["default"](a, "*/")) && (a = a.slice(2)), p["default"](a, "**/") && (a = a.slice(3));
        var b = t["default"].makeRe(a, {nocase: !0});
        return new RegExp(b.source.slice(1, -1), "i");
      }
      if (z["default"](a))
        return a;
      throw new TypeError("illegal type for regexify");
    }
    function g(a, b) {
      return a ? r["default"](a) ? g([a], b) : x["default"](a) ? g(e(a), b) : Array.isArray(a) ? (b && (a = a.map(b)), a) : [a] : [];
    }
    function h(a) {
      return "true" === a || 1 == a ? !0 : "false" !== a && 0 != a && a ? a : !1;
    }
    function i(a, b, c) {
      if (void 0 === b && (b = []), a = D["default"](a), c) {
        for (var d = c,
            e = Array.isArray(d),
            f = 0,
            d = e ? d : k(d); ; ) {
          var g;
          if (e) {
            if (f >= d.length)
              break;
            g = d[f++];
          } else {
            if (f = d.next(), f.done)
              break;
            g = f.value;
          }
          var h = g;
          if (j(h, a))
            return !1;
        }
        return !0;
      }
      if (b.length)
        for (var i = b,
            l = Array.isArray(i),
            m = 0,
            i = l ? i : k(i); ; ) {
          var n;
          if (l) {
            if (m >= i.length)
              break;
            n = i[m++];
          } else {
            if (m = i.next(), m.done)
              break;
            n = m.value;
          }
          var h = n;
          if (j(h, a))
            return !0;
        }
      return !1;
    }
    function j(a, b) {
      return "function" == typeof a ? a(b) : a.test(b);
    }
    var k = (a("3"), a("c")["default"]),
        l = a("a")["default"];
    b.__esModule = !0, b.canCompile = d, b.list = e, b.regexify = f, b.arrayify = g, b.booleanify = h, b.shouldIgnore = i;
    var m = a("21"),
        n = l(m),
        o = a("23"),
        p = l(o),
        q = a("2d"),
        r = l(q),
        s = a("27"),
        t = l(s),
        u = a("28"),
        v = l(u),
        w = a("2e"),
        x = l(w),
        y = a("2f"),
        z = l(y),
        A = a("f"),
        B = l(A),
        C = a("2a"),
        D = l(C),
        E = a("2c");
    return b.inherits = E.inherits, b.inspect = E.inspect, d.EXTENSIONS = [".js", ".jsx", ".es6", ".es"], c.exports;
  }), a.registerDynamic("30", ["a", "4", "2a", "2b", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return !!a;
    }
    function e(a) {
      return l.booleanify(a);
    }
    function f(a) {
      return l.list(a);
    }
    var g = (a("3"), a("a")["default"]),
        h = a("4")["default"];
    b.__esModule = !0, b["boolean"] = d, b.booleanString = e, b.list = f;
    var i = a("2a"),
        j = g(i),
        k = a("2b"),
        l = h(k),
        m = j["default"];
    return b.filename = m, c.exports;
  }), a.registerDynamic("31", ["4", "a", "30", "32", "3"], !0, function(a, b, c) {
    "use strict";
    function d() {
      var a = arguments.length <= 0 || void 0 === arguments[0] ? {} : arguments[0];
      for (var b in a) {
        var c = a[b];
        if (null != c) {
          var d = j["default"][b];
          if (d && d.alias && (d = j["default"][d.alias]), d) {
            var e = h[d.type];
            e && (c = e(c)), a[b] = c;
          }
        }
      }
      return a;
    }
    var e = (a("3"), a("4")["default"]),
        f = a("a")["default"];
    b.__esModule = !0, b.normaliseOptions = d;
    var g = a("30"),
        h = e(g),
        i = a("32"),
        j = f(i);
    return b.config = j["default"], c.exports;
  }), a.registerDynamic("33", [], !0, function(b, c, d) {
    return d.exports = a._nodeRequire && a._nodeRequire("module"), d.exports;
  }), a.registerDynamic("34", ["a", "33", "3"], !0, function(a, b, c) {
    "use strict";
    var d = a("3"),
        e = a("a")["default"];
    b.__esModule = !0;
    var f = a("33"),
        g = e(f),
        h = {};
    return b["default"] = function(a) {
      var b = arguments.length <= 1 || void 0 === arguments[1] ? d.cwd() : arguments[1];
      if ("object" == typeof g["default"])
        return null;
      var c = h[b];
      c || (c = new g["default"], c.paths = g["default"]._nodeModulePaths(b), h[b] = c);
      try {
        return g["default"]._resolveFilename(a, c);
      } catch (e) {
        return null;
      }
    }, c.exports = b["default"], c.exports;
  }), a.registerDynamic("35", ["3"], !0, function(a, b, c) {
    var d = (a("3"), "object" == typeof b ? b : {});
    return d.parse = function() {
      "use strict";
      var a,
          b,
          c,
          d,
          e = {
            "'": "'",
            '"': '"',
            "\\": "\\",
            "/": "/",
            "\n": "",
            b: "\b",
            f: "\f",
            n: "\n",
            r: "\r",
            t: "	"
          },
          f = [" ", "	", "\r", "\n", "\x0B", "\f", " ", "\ufeff"],
          g = function(b) {
            var d = new SyntaxError;
            throw d.message = b, d.at = a, d.text = c, d;
          },
          h = function(d) {
            return d && d !== b && g("Expected '" + d + "' instead of '" + b + "'"), b = c.charAt(a), a += 1, b;
          },
          i = function() {
            return c.charAt(a);
          },
          j = function() {
            var a = b;
            for ("_" !== b && "$" !== b && ("a" > b || b > "z") && ("A" > b || b > "Z") && g("Bad identifier"); h() && ("_" === b || "$" === b || b >= "a" && "z" >= b || b >= "A" && "Z" >= b || b >= "0" && "9" >= b); )
              a += b;
            return a;
          },
          k = function() {
            var a,
                c = "",
                d = "",
                e = 10;
            if (("-" === b || "+" === b) && (c = b, h(b)), "I" === b)
              return a = q(), ("number" != typeof a || isNaN(a)) && g("Unexpected word for number"), "-" === c ? -a : a;
            if ("N" === b)
              return a = q(), isNaN(a) || g("expected word to be NaN"), a;
            switch ("0" === b && (d += b, h(), "x" === b || "X" === b ? (d += b, h(), e = 16) : b >= "0" && "9" >= b && g("Octal literal")), e) {
              case 10:
                for (; b >= "0" && "9" >= b; )
                  d += b, h();
                if ("." === b)
                  for (d += "."; h() && b >= "0" && "9" >= b; )
                    d += b;
                if ("e" === b || "E" === b)
                  for (d += b, h(), ("-" === b || "+" === b) && (d += b, h()); b >= "0" && "9" >= b; )
                    d += b, h();
                break;
              case 16:
                for (; b >= "0" && "9" >= b || b >= "A" && "F" >= b || b >= "a" && "f" >= b; )
                  d += b, h();
            }
            return a = "-" === c ? -d : +d, isFinite(a) ? a : void g("Bad number");
          },
          l = function() {
            var a,
                c,
                d,
                f,
                j = "";
            if ('"' === b || "'" === b)
              for (d = b; h(); ) {
                if (b === d)
                  return h(), j;
                if ("\\" === b)
                  if (h(), "u" === b) {
                    for (f = 0, c = 0; 4 > c && (a = parseInt(h(), 16), isFinite(a)); c += 1)
                      f = 16 * f + a;
                    j += String.fromCharCode(f);
                  } else if ("\r" === b)
                    "\n" === i() && h();
                  else {
                    if ("string" != typeof e[b])
                      break;
                    j += e[b];
                  }
                else {
                  if ("\n" === b)
                    break;
                  j += b;
                }
              }
            g("Bad string");
          },
          m = function() {
            "/" !== b && g("Not an inline comment");
            do
              if (h(), "\n" === b || "\r" === b)
                return void h();
 while (b);
          },
          n = function() {
            "*" !== b && g("Not a block comment");
            do
              for (h(); "*" === b; )
                if (h("*"), "/" === b)
                  return void h("/");
 while (b);
            g("Unterminated block comment");
          },
          o = function() {
            "/" !== b && g("Not a comment"), h("/"), "/" === b ? m() : "*" === b ? n() : g("Unrecognized comment");
          },
          p = function() {
            for (; b; )
              if ("/" === b)
                o();
              else {
                if (!(f.indexOf(b) >= 0))
                  return;
                h();
              }
          },
          q = function() {
            switch (b) {
              case "t":
                return h("t"), h("r"), h("u"), h("e"), !0;
              case "f":
                return h("f"), h("a"), h("l"), h("s"), h("e"), !1;
              case "n":
                return h("n"), h("u"), h("l"), h("l"), null;
              case "I":
                return h("I"), h("n"), h("f"), h("i"), h("n"), h("i"), h("t"), h("y"), 1 / 0;
              case "N":
                return h("N"), h("a"), h("N"), NaN;
            }
            g("Unexpected '" + b + "'");
          },
          r = function() {
            var a = [];
            if ("[" === b)
              for (h("["), p(); b; ) {
                if ("]" === b)
                  return h("]"), a;
                if ("," === b ? g("Missing array element") : a.push(d()), p(), "," !== b)
                  return h("]"), a;
                h(","), p();
              }
            g("Bad array");
          },
          s = function() {
            var a,
                c = {};
            if ("{" === b)
              for (h("{"), p(); b; ) {
                if ("}" === b)
                  return h("}"), c;
                if (a = '"' === b || "'" === b ? l() : j(), p(), h(":"), c[a] = d(), p(), "," !== b)
                  return h("}"), c;
                h(","), p();
              }
            g("Bad object");
          };
      return d = function() {
        switch (p(), b) {
          case "{":
            return s();
          case "[":
            return r();
          case '"':
          case "'":
            return l();
          case "-":
          case "+":
          case ".":
            return k();
          default:
            return b >= "0" && "9" >= b ? k() : q();
        }
      }, function(e, f) {
        var h;
        return c = String(e), a = 0, b = " ", h = d(), p(), b && g("Syntax error"), "function" == typeof f ? function i(a, b) {
          var c,
              d,
              e = a[b];
          if (e && "object" == typeof e)
            for (c in e)
              Object.prototype.hasOwnProperty.call(e, c) && (d = i(e, c), void 0 !== d ? e[c] = d : delete e[c]);
          return f.call(a, b, e);
        }({"": h}, "") : h;
      };
    }(), d.stringify = function(a, b, c) {
      function e(a) {
        return a >= "a" && "z" >= a || a >= "A" && "Z" >= a || a >= "0" && "9" >= a || "_" === a || "$" === a;
      }
      function f(a) {
        return a >= "a" && "z" >= a || a >= "A" && "Z" >= a || "_" === a || "$" === a;
      }
      function g(a) {
        if ("string" != typeof a)
          return !1;
        if (!f(a[0]))
          return !1;
        for (var b = 1,
            c = a.length; c > b; ) {
          if (!e(a[b]))
            return !1;
          b++;
        }
        return !0;
      }
      function h(a) {
        return Array.isArray ? Array.isArray(a) : "[object Array]" === Object.prototype.toString.call(a);
      }
      function i(a) {
        return "[object Date]" === Object.prototype.toString.call(a);
      }
      function j(a) {
        for (var b = 0; b < p.length; b++)
          if (p[b] === a)
            throw new TypeError("Converting circular structure to JSON");
      }
      function k(a, b, c) {
        if (!a)
          return "";
        a.length > 10 && (a = a.substring(0, 10));
        for (var d = c ? "" : "\n",
            e = 0; b > e; e++)
          d += a;
        return d;
      }
      function l(a) {
        return q.lastIndex = 0, q.test(a) ? '"' + a.replace(q, function(a) {
          var b = r[a];
          return "string" == typeof b ? b : "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4);
        }) + '"' : '"' + a + '"';
      }
      function m(a, b, c) {
        var d,
            e,
            f = n(a, b, c);
        switch (f && !i(f) && (f = f.valueOf()), typeof f) {
          case "boolean":
            return f.toString();
          case "number":
            return isNaN(f) || !isFinite(f) ? "null" : f.toString();
          case "string":
            return l(f.toString());
          case "object":
            if (null === f)
              return "null";
            if (h(f)) {
              j(f), d = "[", p.push(f);
              for (var q = 0; q < f.length; q++)
                e = m(f, q, !1), d += k(o, p.length), d += null === e || "undefined" == typeof e ? "null" : e, q < f.length - 1 ? d += "," : o && (d += "\n");
              p.pop(), d += k(o, p.length, !0) + "]";
            } else {
              j(f), d = "{";
              var r = !1;
              p.push(f);
              for (var s in f)
                if (f.hasOwnProperty(s)) {
                  var t = m(f, s, !1);
                  if (c = !1, "undefined" != typeof t && null !== t) {
                    d += k(o, p.length), r = !0;
                    var b = g(s) ? s : l(s);
                    d += b + ":" + (o ? " " : "") + t + ",";
                  }
                }
              p.pop(), d = r ? d.substring(0, d.length - 1) + k(o, p.length) + "}" : "{}";
            }
            return d;
          default:
            return;
        }
      }
      if (b && "function" != typeof b && !h(b))
        throw new Error("Replacer must be a function or an array");
      var n = function(a, c, d) {
        var e = a[c];
        return e && e.toJSON && "function" == typeof e.toJSON && (e = e.toJSON()), "function" == typeof b ? b.call(a, c, e) : b ? d || h(a) || b.indexOf(c) >= 0 ? e : void 0 : e;
      };
      d.isWord = g, isNaN = isNaN || function(a) {
        return "number" == typeof a && a !== a;
      };
      var o,
          p = [];
      c && ("string" == typeof c ? o = c : "number" == typeof c && c >= 0 && (o = k(" ", c, !0)));
      var q = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
          r = {
            "\b": "\\b",
            "	": "\\t",
            "\n": "\\n",
            "\f": "\\f",
            "\r": "\\r",
            '"': '\\"',
            "\\": "\\\\"
          },
          s = {"": a};
      return void 0 === a ? n(s, "", !0) : m(s, "", !0);
    }, c.exports;
  }), a.registerDynamic("36", ["3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return "/" === a.charAt(0);
    }
    function e(a) {
      var b = /^([a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/]+[^\\\/]+)?([\\\/])?([\s\S]*?)$/,
          c = b.exec(a),
          d = c[1] || "",
          e = !!d && ":" !== d.charAt(1);
      return !!c[2] || e;
    }
    var f = a("3");
    return c.exports = "win32" === f.platform ? e : d, c.exports.posix = d, c.exports.win32 = e, c.exports;
  }), a.registerDynamic("37", ["e", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("e"));
    return c.exports = function(a, b) {
      var c = "function" == typeof d.access ? d.access : d.stat;
      c(a, function(a) {
        b(null, !a);
      });
    }, c.exports.sync = function(a) {
      var b = "function" == typeof d.accessSync ? d.accessSync : d.statSync;
      try {
        return b(a), !0;
      } catch (c) {
        return !1;
      }
    }, c.exports;
  }), a.registerDynamic("38", ["39", "3a", "3"], !0, function(a, b, c) {
    function d(a) {
      return e(a, f(a));
    }
    var e = (a("3"), a("39")),
        f = a("3a");
    return c.exports = d, c.exports;
  }), a.registerDynamic("3b", ["3c", "3d", "3e", "3f", "40", "41", "38", "3"], !0, function(a, b, c) {
    function d(a, b, c, d, l, m, n) {
      for (var o = m.length,
          p = b[c]; o--; )
        if (m[o] == p)
          return void(a[c] = n[o]);
      var q = a[c],
          r = l ? l(q, p, c, a, b) : void 0,
          s = void 0 === r;
      s && (r = p, h(p) && (g(p) || j(p)) ? r = g(q) ? q : h(q) ? e(q) : [] : i(p) || f(p) ? r = f(q) ? k(q) : i(q) ? q : {} : s = !1), m.push(p), n.push(r), s ? a[c] = d(r, p, l, m, n) : (r === r ? r !== q : q === q) && (a[c] = r);
    }
    var e = (a("3"), a("3c")),
        f = a("3d"),
        g = a("3e"),
        h = a("3f"),
        i = a("40"),
        j = a("41"),
        k = a("38");
    return c.exports = d, c.exports;
  }), a.registerDynamic("42", ["43", "3b", "3e", "3f", "44", "45", "41", "46", "3"], !0, function(a, b, c) {
    function d(a, b, c, m, n) {
      if (!i(a))
        return a;
      var o = h(b) && (g(b) || k(b)),
          p = o ? void 0 : l(b);
      return e(p || b, function(e, g) {
        if (p && (g = e, e = b[g]), j(e))
          m || (m = []), n || (n = []), f(a, b, g, d, c, m, n);
        else {
          var h = a[g],
              i = c ? c(h, e, g, a, b) : void 0,
              k = void 0 === i;
          k && (i = e), void 0 === i && (!o || g in a) || !k && (i === i ? i === h : h !== h) || (a[g] = i);
        }
      }), a;
    }
    var e = (a("3"), a("43")),
        f = a("3b"),
        g = a("3e"),
        h = a("3f"),
        i = a("44"),
        j = a("45"),
        k = a("41"),
        l = a("46");
    return c.exports = d, c.exports;
  }), a.registerDynamic("47", ["42", "48", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("42")),
        e = a("48"),
        f = e(d);
    return c.exports = f, c.exports;
  }), a.registerDynamic("49", ["c", "a", "47", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("c")["default"]),
        e = a("a")["default"];
    b.__esModule = !0;
    var f = a("47"),
        g = e(f);
    return b["default"] = function(a, b) {
      return a && b ? g["default"](a, b, function(a, b) {
        if (b && Array.isArray(a)) {
          for (var c = b.slice(0),
              e = a,
              f = Array.isArray(e),
              g = 0,
              e = f ? e : d(e); ; ) {
            var h;
            if (f) {
              if (g >= e.length)
                break;
              h = e[g++];
            } else {
              if (g = e.next(), g.done)
                break;
              h = g.value;
            }
            var i = h;
            c.indexOf(i) < 0 && c.push(i);
          }
          return c;
        }
      }) : void 0;
    }, c.exports = b["default"], c.exports;
  }), a.registerDynamic("f", ["3"], !0, function(a, b, c) {
    function d(a, b) {
      for (var c = 0,
          d = a.length - 1; d >= 0; d--) {
        var e = a[d];
        "." === e ? a.splice(d, 1) : ".." === e ? (a.splice(d, 1), c++) : c && (a.splice(d, 1), c--);
      }
      if (b)
        for (; c--; c)
          a.unshift("..");
      return a;
    }
    function e(a, b) {
      if (a.filter)
        return a.filter(b);
      for (var c = [],
          d = 0; d < a.length; d++)
        b(a[d], d, a) && c.push(a[d]);
      return c;
    }
    var f = a("3"),
        g = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/,
        h = function(a) {
          return g.exec(a).slice(1);
        };
    b.resolve = function() {
      for (var a = "",
          b = !1,
          c = arguments.length - 1; c >= -1 && !b; c--) {
        var g = c >= 0 ? arguments[c] : f.cwd();
        if ("string" != typeof g)
          throw new TypeError("Arguments to path.resolve must be strings");
        g && (a = g + "/" + a, b = "/" === g.charAt(0));
      }
      return a = d(e(a.split("/"), function(a) {
        return !!a;
      }), !b).join("/"), (b ? "/" : "") + a || ".";
    }, b.normalize = function(a) {
      var c = b.isAbsolute(a),
          f = "/" === i(a, -1);
      return a = d(e(a.split("/"), function(a) {
        return !!a;
      }), !c).join("/"), a || c || (a = "."), a && f && (a += "/"), (c ? "/" : "") + a;
    }, b.isAbsolute = function(a) {
      return "/" === a.charAt(0);
    }, b.join = function() {
      var a = Array.prototype.slice.call(arguments, 0);
      return b.normalize(e(a, function(a, b) {
        if ("string" != typeof a)
          throw new TypeError("Arguments to path.join must be strings");
        return a;
      }).join("/"));
    }, b.relative = function(a, c) {
      function d(a) {
        for (var b = 0; b < a.length && "" === a[b]; b++)
          ;
        for (var c = a.length - 1; c >= 0 && "" === a[c]; c--)
          ;
        return b > c ? [] : a.slice(b, c - b + 1);
      }
      a = b.resolve(a).substr(1), c = b.resolve(c).substr(1);
      for (var e = d(a.split("/")),
          f = d(c.split("/")),
          g = Math.min(e.length, f.length),
          h = g,
          i = 0; g > i; i++)
        if (e[i] !== f[i]) {
          h = i;
          break;
        }
      for (var j = [],
          i = h; i < e.length; i++)
        j.push("..");
      return j = j.concat(f.slice(h)), j.join("/");
    }, b.sep = "/", b.delimiter = ":", b.dirname = function(a) {
      var b = h(a),
          c = b[0],
          d = b[1];
      return c || d ? (d && (d = d.substr(0, d.length - 1)), c + d) : ".";
    }, b.basename = function(a, b) {
      var c = h(a)[2];
      return b && c.substr(-1 * b.length) === b && (c = c.substr(0, c.length - b.length)), c;
    }, b.extname = function(a) {
      return h(a)[3];
    };
    var i = "b" === "ab".substr(-1) ? function(a, b, c) {
      return a.substr(b, c);
    } : function(a, b, c) {
      return 0 > b && (b = a.length + b), a.substr(b, c);
    };
    return c.exports;
  }), a.registerDynamic("e", [], !0, function(a, b, c) {
    return b.readFileSync = function(a) {
      var b,
          c = new XMLHttpRequest;
      return c.open("GET", a, !1), c.onreadystatechange = function(d) {
        if (4 == c.readyState) {
          var e = c.status;
          if (e > 399 && 600 > e || 400 == e)
            throw "File read error on " + a;
          b = c.responseText;
        }
      }, c.send(null), b;
    }, c.exports;
  }), a.registerDynamic("4a", ["9", "c", "4c", "4", "a", "4b", "7", "4d", "31", "34", "35", "36", "37", "4e", "4f", "49", "32", "f", "e", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      var b = L[a];
      return null == b ? L[a] = y["default"].sync(a) : b;
    }
    var e = a("3"),
        f = a("9")["default"],
        g = a("c")["default"],
        h = a("4c")["default"],
        i = a("4")["default"],
        j = a("a")["default"];
    b.__esModule = !0;
    var k = a("4b"),
        l = i(k),
        m = a("7"),
        n = j(m),
        o = a("4d"),
        p = i(o),
        q = a("31"),
        r = a("34"),
        s = j(r),
        t = a("35"),
        u = j(t),
        v = a("36"),
        w = j(v),
        x = a("37"),
        y = j(x),
        z = a("4e"),
        A = j(z),
        B = a("4f"),
        C = j(B),
        D = a("49"),
        E = j(D),
        F = a("32"),
        G = j(F),
        H = a("f"),
        I = j(H),
        J = a("e"),
        K = j(J),
        L = {},
        M = {},
        N = ".babelignore",
        O = ".babelrc",
        P = "package.json",
        Q = function() {
          function b(a) {
            f(this, b), this.resolvedConfigs = [], this.options = b.createBareOptions(), this.log = a;
          }
          return b.memoisePluginContainer = function(a, c, d, e) {
            for (var f = b.memoisedPlugins,
                h = Array.isArray(f),
                i = 0,
                f = h ? f : g(f); ; ) {
              var j;
              if (h) {
                if (i >= f.length)
                  break;
                j = f[i++];
              } else {
                if (i = f.next(), i.done)
                  break;
                j = i.value;
              }
              var k = j;
              if (k.container === a)
                return k.plugin;
            }
            var m = void 0;
            if (m = "function" == typeof a ? a(l) : a, "object" == typeof m) {
              var o = new n["default"](m, e);
              return b.memoisedPlugins.push({
                container: a,
                plugin: o
              }), o;
            }
            throw new TypeError(p.get("pluginNotObject", c, d, typeof m) + c + d);
          }, b.createBareOptions = function() {
            var a = {};
            for (var b in G["default"]) {
              var c = G["default"][b];
              a[b] = C["default"](c["default"]);
            }
            return a;
          }, b.normalisePlugin = function(a, c, d, e) {
            if (a = a.__esModule ? a["default"] : a, !(a instanceof n["default"])) {
              if ("function" != typeof a && "object" != typeof a)
                throw new TypeError(p.get("pluginNotFunction", c, d, typeof a));
              a = b.memoisePluginContainer(a, c, d, e);
            }
            return a.init(c, d), a;
          }, b.normalisePlugins = function(c, d, e) {
            return e.map(function(e, f) {
              var g = void 0,
                  h = void 0;
              if (!e)
                throw new TypeError("Falsy value found in plugins");
              Array.isArray(e) ? (g = e[0], h = e[1]) : g = e;
              var i = "string" == typeof g ? g : c + "$" + f;
              if ("string" == typeof g) {
                var j = s["default"]("babel-plugin-" + g, d) || s["default"](g, d);
                if (!j)
                  throw new ReferenceError(p.get("pluginUnknown", g, c, f, d));
                g = a(j);
              }
              return g = b.normalisePlugin(g, c, f, i), [g, h];
            });
          }, b.prototype.addConfig = function(a, b) {
            var c = arguments.length <= 2 || void 0 === arguments[2] ? u["default"] : arguments[2];
            if (this.resolvedConfigs.indexOf(a) >= 0)
              return !1;
            var d = K["default"].readFileSync(a, "utf8"),
                e = void 0;
            try {
              e = M[d] = M[d] || c.parse(d), b && (e = e[b]);
            } catch (f) {
              throw f.message = a + ": Error while parsing JSON - " + f.message, f;
            }
            return this.mergeOptions({
              options: e,
              alias: a,
              dirname: I["default"].dirname(a)
            }), this.resolvedConfigs.push(a), !!e;
          }, b.prototype.mergeOptions = function(a) {
            var c = this,
                d = a.options,
                f = a.extending,
                g = a.alias,
                i = a.loc,
                j = a.dirname;
            if (g = g || "foreign", d) {
              ("object" != typeof d || Array.isArray(d)) && this.log.error("Invalid options type for " + g, TypeError);
              var k = A["default"](d, function(a) {
                return a instanceof n["default"] ? a : void 0;
              });
              j = j || e.cwd(), i = i || g;
              for (var l in k) {
                var m = G["default"][l];
                !m && this.log && this.log.error("Unknown option: " + g + "." + l, ReferenceError);
              }
              if (q.normaliseOptions(k), k.plugins && (k.plugins = b.normalisePlugins(i, j, k.plugins)), k["extends"]) {
                var o = s["default"](k["extends"], j);
                o ? this.addConfig(o) : this.log && this.log.error("Couldn't resolve extends clause of " + k["extends"] + " in " + g), delete k["extends"];
              }
              k.presets && (k.passPerPreset ? k.presets = this.resolvePresets(k.presets, j, function(a, b) {
                c.mergeOptions({
                  options: a,
                  extending: a,
                  alias: b,
                  loc: b,
                  dirname: j
                });
              }) : (this.mergePresets(k.presets, j), delete k.presets));
              var p = void 0,
                  r = e.env.BABEL_ENV || "production" || "development";
              k.env && (p = k.env[r], delete k.env), d === f ? h(f, k) : E["default"](f || this.options, k), this.mergeOptions({
                options: p,
                extending: f,
                alias: g + ".env." + r,
                dirname: j
              });
            }
          }, b.prototype.mergePresets = function(a, b) {
            var c = this;
            this.resolvePresets(a, b, function(a, b) {
              c.mergeOptions({
                options: a,
                alias: b,
                loc: b,
                dirname: I["default"].dirname(b)
              });
            });
          }, b.prototype.resolvePresets = function(b, c, d) {
            return b.map(function(b) {
              if ("string" == typeof b) {
                var e = s["default"]("babel-preset-" + b, c) || s["default"](b, c);
                if (e) {
                  var f = a(e);
                  return d && d(f, e), f;
                }
                throw new Error("Couldn't find preset " + JSON.stringify(b) + " relative to directory " + JSON.stringify(c));
              }
              if ("object" == typeof b)
                return d && d(b), b;
              throw new Error("Unsupported preset format: " + b + ".");
            });
          }, b.prototype.addIgnoreConfig = function(a) {
            var b = K["default"].readFileSync(a, "utf8"),
                c = b.split("\n");
            c = c.map(function(a) {
              return a.replace(/#(.*?)$/, "").trim();
            }).filter(function(a) {
              return !!a;
            }), this.mergeOptions({
              options: {ignore: c},
              loc: a
            });
          }, b.prototype.findConfigs = function(a) {
            if (a) {
              w["default"](a) || (a = I["default"].join(e.cwd(), a));
              for (var b = !1,
                  c = !1; a !== (a = I["default"].dirname(a)); ) {
                if (!b) {
                  var f = I["default"].join(a, O);
                  d(f) && (this.addConfig(f), b = !0);
                  var g = I["default"].join(a, P);
                  !b && d(g) && (b = this.addConfig(g, "babel", JSON));
                }
                if (!c) {
                  var h = I["default"].join(a, N);
                  d(h) && (this.addIgnoreConfig(h), c = !0);
                }
                if (c && b)
                  return;
              }
            }
          }, b.prototype.normaliseOptions = function() {
            var a = this.options;
            for (var b in G["default"]) {
              var c = G["default"][b],
                  d = a[b];
              (d || !c.optional) && (c.alias ? a[c.alias] = a[c.alias] || d : a[b] = d);
            }
          }, b.prototype.init = function() {
            var a = arguments.length <= 0 || void 0 === arguments[0] ? {} : arguments[0],
                b = a.filename;
            return a.babelrc !== !1 && this.findConfigs(b), this.mergeOptions({
              options: a,
              alias: "base",
              dirname: b && I["default"].dirname(b)
            }), this.normaliseOptions(a), this.options;
          }, b;
        }();
    return b["default"] = Q, Q.memoisedPlugins = [], c.exports = b["default"], c.exports;
  }), a.registerDynamic("50", ["51", "52", "53", "54", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("51")),
        e = a("52"),
        f = a("53"),
        g = a("54")("species");
    return c.exports = function(a) {
      var b = d[a];
      f && b && !b[g] && e.setDesc(b, g, {
        configurable: !0,
        get: function() {
          return this;
        }
      });
    }, c.exports;
  }), a.registerDynamic("55", ["52", "56", "57", "58", "59", "5a", "5b", "5c", "5d", "5e", "5f", "60", "50", "53", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("52")),
        e = a("56"),
        f = a("57"),
        g = a("58"),
        h = a("59"),
        i = a("5a"),
        j = a("5b"),
        k = a("5c"),
        l = a("5d"),
        m = a("5e")("id"),
        n = a("5f"),
        o = a("60"),
        p = a("50"),
        q = a("53"),
        r = Object.isExtensible || o,
        s = q ? "_s" : "size",
        t = 0,
        u = function(a, b) {
          if (!o(a))
            return "symbol" == typeof a ? a : ("string" == typeof a ? "S" : "P") + a;
          if (!n(a, m)) {
            if (!r(a))
              return "F";
            if (!b)
              return "E";
            e(a, m, ++t);
          }
          return "O" + a[m];
        },
        v = function(a, b) {
          var c,
              d = u(b);
          if ("F" !== d)
            return a._i[d];
          for (c = a._f; c; c = c.n)
            if (c.k == b)
              return c;
        };
    return c.exports = {
      getConstructor: function(a, b, c, e) {
        var k = a(function(a, f) {
          h(a, k, b), a._i = d.create(null), a._f = void 0, a._l = void 0, a[s] = 0, void 0 != f && j(f, c, a[e], a);
        });
        return f(k.prototype, {
          clear: function() {
            for (var a = this,
                b = a._i,
                c = a._f; c; c = c.n)
              c.r = !0, c.p && (c.p = c.p.n = void 0), delete b[c.i];
            a._f = a._l = void 0, a[s] = 0;
          },
          "delete": function(a) {
            var b = this,
                c = v(b, a);
            if (c) {
              var d = c.n,
                  e = c.p;
              delete b._i[c.i], c.r = !0, e && (e.n = d), d && (d.p = e), b._f == c && (b._f = d), b._l == c && (b._l = e), b[s]--;
            }
            return !!c;
          },
          forEach: function(a) {
            for (var b,
                c = g(a, arguments.length > 1 ? arguments[1] : void 0, 3); b = b ? b.n : this._f; )
              for (c(b.v, b.k, this); b && b.r; )
                b = b.p;
          },
          has: function(a) {
            return !!v(this, a);
          }
        }), q && d.setDesc(k.prototype, "size", {get: function() {
            return i(this[s]);
          }}), k;
      },
      def: function(a, b, c) {
        var d,
            e,
            f = v(a, b);
        return f ? f.v = c : (a._l = f = {
          i: e = u(b, !0),
          k: b,
          v: c,
          p: d = a._l,
          n: void 0,
          r: !1
        }, a._f || (a._f = f), d && (d.n = f), a[s]++, "F" !== e && (a._i[e] = f)), a;
      },
      getEntry: v,
      setStrong: function(a, b, c) {
        k(a, b, function(a, b) {
          this._t = a, this._k = b, this._l = void 0;
        }, function() {
          for (var a = this,
              b = a._k,
              c = a._l; c && c.r; )
            c = c.p;
          return a._t && (a._l = c = c ? c.n : a._t._f) ? "keys" == b ? l(0, c.k) : "values" == b ? l(0, c.v) : l(0, [c.k, c.v]) : (a._t = void 0, l(1));
        }, c ? "entries" : "values", !c, !0), p(b);
      }
    }, c.exports;
  }), a.registerDynamic("57", ["61", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("61"));
    return c.exports = function(a, b) {
      for (var c in b)
        d(a, c, b[c]);
      return a;
    }, c.exports;
  }), a.registerDynamic("59", ["3"], !0, function(a, b, c) {
    a("3");
    return c.exports = function(a, b, c) {
      if (!(a instanceof b))
        throw TypeError(c + ": use the 'new' operator!");
      return a;
    }, c.exports;
  }), a.registerDynamic("62", ["52", "63", "64", "65", "56", "57", "5b", "59", "60", "66", "53", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), this),
        e = a("52"),
        d = a("63"),
        f = a("64"),
        g = a("65"),
        h = a("56"),
        i = a("57"),
        j = a("5b"),
        k = a("59"),
        l = a("60"),
        m = a("66"),
        n = a("53");
    return c.exports = function(a, b, c, o, p, q) {
      var r = d[a],
          s = r,
          t = p ? "set" : "add",
          u = s && s.prototype,
          v = {};
      return n && "function" == typeof s && (q || u.forEach && !g(function() {
        (new s).entries().next();
      })) ? (s = b(function(b, c) {
        k(b, s, a), b._c = new r, void 0 != c && j(c, p, b[t], b);
      }), e.each.call("add,clear,delete,forEach,get,has,set,keys,values,entries".split(","), function(a) {
        var b = "add" == a || "set" == a;
        a in u && (!q || "clear" != a) && h(s.prototype, a, function(c, d) {
          if (!b && q && !l(c))
            return "get" == a ? void 0 : !1;
          var e = this._c[a](0 === c ? 0 : c, d);
          return b ? this : e;
        });
      }), "size" in u && e.setDesc(s.prototype, "size", {get: function() {
          return this._c.size;
        }})) : (s = o.getConstructor(b, a, p, t), i(s.prototype, c)), m(s, a), v[a] = s, f(f.G + f.W + f.F, v), q || o.setStrong(s, a, p), s;
    }, c.exports;
  }), a.registerDynamic("67", ["55", "62", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("55"));
    return a("62")("Map", function(a) {
      return function() {
        return a(this, arguments.length > 0 ? arguments[0] : void 0);
      };
    }, {
      get: function(a) {
        var b = d.getEntry(this, a);
        return b && b.v;
      },
      set: function(a, b) {
        return d.def(this, 0 === a ? 0 : a, b);
      }
    }, d, !0), c.exports;
  }), a.registerDynamic("68", ["69", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("69"));
    return c.exports = function(a, b, c, e) {
      try {
        return e ? b(d(c)[0], c[1]) : b(c);
      } catch (f) {
        var g = a["return"];
        throw void 0 !== g && d(g.call(a)), f;
      }
    }, c.exports;
  }), a.registerDynamic("6a", ["6b", "54", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("6b")),
        e = a("54")("iterator"),
        f = Array.prototype;
    return c.exports = function(a) {
      return void 0 !== a && (d.Array === a || f[e] === a);
    }, c.exports;
  }), a.registerDynamic("6c", ["6d", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("6d")),
        e = Math.min;
    return c.exports = function(a) {
      return a > 0 ? e(d(a), 9007199254740991) : 0;
    }, c.exports;
  }), a.registerDynamic("5b", ["58", "68", "6a", "69", "6c", "6e", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("58")),
        e = a("68"),
        f = a("6a"),
        g = a("69"),
        h = a("6c"),
        i = a("6e");
    return c.exports = function(a, b, c, j) {
      var k,
          l,
          m,
          n = i(a),
          o = d(c, j, b ? 2 : 1),
          p = 0;
      if ("function" != typeof n)
        throw TypeError(a + " is not iterable!");
      if (f(n))
        for (k = h(a.length); k > p; p++)
          b ? o(g(l = a[p])[0], l[1]) : o(a[p]);
      else
        for (m = n.call(a); !(l = m.next()).done; )
          e(m, o, l.value, b);
    }, c.exports;
  }), a.registerDynamic("6f", ["5b", "70", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("5b")),
        e = a("70");
    return c.exports = function(a) {
      return function() {
        if (e(this) != a)
          throw TypeError(a + "#toJSON isn't generic");
        var b = [];
        return d(this, !1, b.push, b), b;
      };
    }, c.exports;
  }), a.registerDynamic("71", ["64", "6f", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("64"));
    return d(d.P, "Map", {toJSON: a("6f")("Map")}), c.exports;
  }), a.registerDynamic("72", ["73", "74", "75", "67", "71", "51", "3"], !0, function(a, b, c) {
    a("3");
    return a("73"), a("74"), a("75"), a("67"), a("71"), c.exports = a("51").Map, c.exports;
  }), a.registerDynamic("76", ["72", "3"], !0, function(a, b, c) {
    a("3");
    return c.exports = {
      "default": a("72"),
      __esModule: !0
    }, c.exports;
  }), a.registerDynamic("12", ["13", "9", "76", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("13")["default"]),
        e = a("9")["default"],
        f = a("76")["default"];
    b.__esModule = !0;
    var g = function(a) {
      function b() {
        e(this, b), a.call(this), this.dynamicData = {};
      }
      return d(b, a), b.prototype.setDynamic = function(a, b) {
        this.dynamicData[a] = b;
      }, b.prototype.get = function(b) {
        if (this.has(b))
          return a.prototype.get.call(this, b);
        if (Object.prototype.hasOwnProperty.call(this.dynamicData, b)) {
          var c = this.dynamicData[b]();
          return this.set(b, c), c;
        }
      }, b;
    }(f);
    return b["default"] = g, c.exports = b["default"], c.exports;
  }), a.registerDynamic("7", ["13", "9", "c", "a", "4", "4a", "4d", "12", "14", "77", "4f", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("13")["default"]),
        e = a("9")["default"],
        f = a("c")["default"],
        g = a("a")["default"],
        h = a("4")["default"];
    b.__esModule = !0;
    var i = a("4a"),
        j = g(i),
        k = a("4d"),
        l = h(k),
        m = a("12"),
        n = g(m),
        o = a("14"),
        p = g(o),
        q = a("77"),
        r = g(q),
        s = a("4f"),
        t = g(s),
        u = ["enter", "exit"],
        v = function(a) {
          function b(c, d) {
            e(this, b), a.call(this), this.initialized = !1, this.raw = r["default"]({}, c), this.key = d, this.manipulateOptions = this.take("manipulateOptions"), this.post = this.take("post"), this.pre = this.take("pre"), this.visitor = this.normaliseVisitor(t["default"](this.take("visitor")) || {});
          }
          return d(b, a), b.prototype.take = function(a) {
            var b = this.raw[a];
            return delete this.raw[a], b;
          }, b.prototype.chain = function(a, b) {
            if (!a[b])
              return this[b];
            if (!this[b])
              return a[b];
            var c = [a[b], this[b]];
            return function() {
              for (var a = void 0,
                  b = arguments.length,
                  d = Array(b),
                  e = 0; b > e; e++)
                d[e] = arguments[e];
              for (var g = c,
                  h = Array.isArray(g),
                  i = 0,
                  g = h ? g : f(g); ; ) {
                var j;
                if (h) {
                  if (i >= g.length)
                    break;
                  j = g[i++];
                } else {
                  if (i = g.next(), i.done)
                    break;
                  j = i.value;
                }
                var k = j;
                if (k) {
                  var l = k.apply(this, d);
                  null != l && (a = l);
                }
              }
              return a;
            };
          }, b.prototype.maybeInherit = function(a) {
            var b = this.take("inherits");
            b && (b = j["default"].normalisePlugin(b, a, "inherits"), this.manipulateOptions = this.chain(b, "manipulateOptions"), this.post = this.chain(b, "post"), this.pre = this.chain(b, "pre"), this.visitor = p["default"].visitors.merge([b.visitor, this.visitor]));
          }, b.prototype.init = function(a, b) {
            if (!this.initialized) {
              this.initialized = !0, this.maybeInherit(a);
              for (var c in this.raw)
                throw new Error(l.get("pluginInvalidProperty", a, b, c));
            }
          }, b.prototype.normaliseVisitor = function(a) {
            for (var b = u,
                c = Array.isArray(b),
                d = 0,
                b = c ? b : f(b); ; ) {
              var e;
              if (c) {
                if (d >= b.length)
                  break;
                e = b[d++];
              } else {
                if (d = b.next(), d.done)
                  break;
                e = d.value;
              }
              var g = e;
              if (a[g])
                throw new Error("Plugins aren't allowed to specify catch-all enter/exit handlers. Please target individual nodes.");
            }
            return p["default"].explode(a), a;
          }, b;
        }(n["default"]);
    return b["default"] = v, c.exports = b["default"], c.exports;
  }), a.registerDynamic("78", ["a", "4", "7", "5", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a, b) {
      return a.is("_forceShadow") ? !0 : b && !b.isArrowFunctionExpression();
    }
    function e(a, b, c) {
      var e = a.inShadow(b);
      if (d(a, e)) {
        var f = a.node._shadowedFunctionLiteral,
            g = void 0,
            h = a.findParent(function(a) {
              return (a.isProgram() || a.isFunction()) && (g = g || a), a.isProgram() ? !0 : a.isFunction() ? f ? a === f || a.node === f.node : !a.is("shadow") : !1;
            });
        if (h !== g) {
          var i = h.getData(b);
          if (i)
            return a.replaceWith(i);
          var j = c(),
              k = a.scope.generateUidIdentifier(b);
          return h.setData(b, k), h.scope.push({
            id: k,
            init: j
          }), a.replaceWith(k);
        }
      }
    }
    var f = (a("3"), a("a")["default"]),
        g = a("4")["default"];
    b.__esModule = !0;
    var h = a("7"),
        i = f(h),
        j = a("5"),
        k = g(j);
    return b["default"] = new i["default"]({visitor: {
        ThisExpression: function(a) {
          e(a, "this", function() {
            return k.thisExpression();
          });
        },
        ReferencedIdentifier: function(a) {
          "arguments" === a.node.name && e(a, "arguments", function() {
            return k.identifier("arguments");
          });
        }
      }}), c.exports = b["default"], c.exports;
  }), a.registerDynamic("8", ["13", "9", "4c", "79", "c", "a", "4", "7a", "b", "d", "4a", "11", "15", "14", "7b", "7c", "7d", "7e", "16", "12", "7f", "2b", "f", "5", "1f", "78", "3"], !0, function(a, b, c) {
    "use strict";
    var d = a("3"),
        e = a("13")["default"],
        f = a("9")["default"],
        g = a("4c")["default"],
        h = a("79")["default"],
        i = a("c")["default"],
        j = a("a")["default"],
        k = a("4")["default"];
    b.__esModule = !0;
    var l = a("7a"),
        m = j(l),
        n = a("b"),
        o = k(n),
        p = a("d"),
        q = j(p),
        r = a("4a"),
        s = j(r),
        t = a("11"),
        u = j(t),
        v = a("15"),
        w = j(v),
        x = a("14"),
        y = a("7b"),
        z = j(y),
        A = a("7c"),
        B = j(A),
        C = a("7d"),
        D = j(C),
        E = a("7e"),
        F = j(E),
        G = j(x),
        H = a("16"),
        I = j(H),
        J = a("12"),
        K = j(J),
        L = a("7f"),
        M = a("2b"),
        N = k(M),
        O = a("f"),
        P = j(O),
        Q = a("5"),
        R = k(Q),
        S = a("1f"),
        T = j(S),
        U = a("78"),
        V = j(U),
        W = [[T["default"]], [V["default"]]],
        X = {enter: function(a, b) {
            var c = a.node.loc;
            c && (b.loc = c, a.stop());
          }},
        Y = function(a) {
          function b(c, d) {
            var e = this;
            void 0 === c && (c = {}), f(this, b), a.call(this), this.pipeline = d, this.log = new I["default"](this, c.filename || "unknown"), this.opts = this.initOptions(c), this.parserOpts = {
              highlightCode: this.opts.highlightCode,
              nonStandard: this.opts.nonStandard,
              sourceType: this.opts.sourceType,
              filename: this.opts.filename,
              plugins: []
            }, this.pluginVisitors = [], this.pluginPasses = [], this.buildPluginsForOptions(this.opts), this.opts.passPerPreset && (this.perPresetOpts = [], this.opts.presets.forEach(function(a) {
              var b = g(h(e.opts), a);
              e.perPresetOpts.push(b), e.buildPluginsForOptions(b);
            })), this.metadata = {
              usedHelpers: [],
              marked: [],
              modules: {
                imports: [],
                exports: {
                  exported: [],
                  specifiers: []
                }
              }
            }, this.dynamicImportTypes = {}, this.dynamicImportIds = {}, this.dynamicImports = [], this.declarations = {}, this.usedHelpers = {}, this.path = null, this.ast = {}, this.code = "", this.shebang = "", this.hub = new x.Hub(this);
          }
          return e(b, a), b.prototype.getMetadata = function() {
            for (var a = !1,
                b = this.ast.program.body,
                c = Array.isArray(b),
                d = 0,
                b = c ? b : i(b); ; ) {
              var e;
              if (c) {
                if (d >= b.length)
                  break;
                e = b[d++];
              } else {
                if (d = b.next(), d.done)
                  break;
                e = d.value;
              }
              var f = e;
              if (R.isModuleDeclaration(f)) {
                a = !0;
                break;
              }
            }
            a && this.path.traverse(o, this);
          }, b.prototype.initOptions = function(a) {
            a = new s["default"](this.log, this.pipeline).init(a), a.inputSourceMap && (a.sourceMaps = !0), a.moduleId && (a.moduleIds = !0), a.basename = P["default"].basename(a.filename, P["default"].extname(a.filename)), a.ignore = N.arrayify(a.ignore, N.regexify), a.only && (a.only = N.arrayify(a.only, N.regexify)), F["default"](a, {moduleRoot: a.sourceRoot}), F["default"](a, {sourceRoot: a.moduleRoot}), F["default"](a, {filenameRelative: a.filename});
            var b = P["default"].basename(a.filenameRelative);
            return F["default"](a, {
              sourceFileName: b,
              sourceMapTarget: b
            }), a;
          }, b.prototype.buildPluginsForOptions = function(a) {
            if (Array.isArray(a.plugins)) {
              for (var b = a.plugins.concat(W),
                  c = [],
                  d = [],
                  e = b,
                  f = Array.isArray(e),
                  g = 0,
                  e = f ? e : i(e); ; ) {
                var h;
                if (f) {
                  if (g >= e.length)
                    break;
                  h = e[g++];
                } else {
                  if (g = e.next(), g.done)
                    break;
                  h = g.value;
                }
                var j = h,
                    k = j[0],
                    l = j[1];
                c.push(k.visitor), d.push(new u["default"](this, k, l)), k.manipulateOptions && k.manipulateOptions(a, this.parserOpts, this);
              }
              this.pluginVisitors.push(c), this.pluginPasses.push(d);
            }
          }, b.prototype.getModuleName = function() {
            var a = this.opts;
            if (!a.moduleIds)
              return null;
            if (null != a.moduleId && !a.getModuleId)
              return a.moduleId;
            var b = a.filenameRelative,
                c = "";
            if (null != a.moduleRoot && (c = a.moduleRoot + "/"), !a.filenameRelative)
              return c + a.filename.replace(/^\//, "");
            if (null != a.sourceRoot) {
              var d = new RegExp("^" + a.sourceRoot + "/?");
              b = b.replace(d, "");
            }
            return b = b.replace(/\.(\w*?)$/, ""), c += b, c = c.replace(/\\/g, "/"), a.getModuleId ? a.getModuleId(c) || c : c;
          }, b.prototype.resolveModuleSource = function c(a) {
            var c = this.opts.resolveModuleSource;
            return c && (a = c(a, this.opts.filename)), a;
          }, b.prototype.addImport = function(a, b) {
            var c = arguments.length <= 2 || void 0 === arguments[2] ? b : arguments[2];
            return function() {
              var d = a + ":" + b,
                  e = this.dynamicImportIds[d];
              if (!e) {
                a = this.resolveModuleSource(a), e = this.dynamicImportIds[d] = this.scope.generateUidIdentifier(c);
                var f = [];
                "*" === b ? f.push(R.importNamespaceSpecifier(e)) : "default" === b ? f.push(R.importDefaultSpecifier(e)) : f.push(R.importSpecifier(e, R.identifier(b)));
                var g = R.importDeclaration(f, R.stringLiteral(a));
                g._blockHoist = 3, this.path.unshiftContainer("body", g);
              }
              return e;
            }.apply(this, arguments);
          }, b.prototype.addHelper = function(a) {
            var b = this.declarations[a];
            if (b)
              return b;
            this.usedHelpers[a] || (this.metadata.usedHelpers.push(a), this.usedHelpers[a] = !0);
            var c = this.get("helperGenerator"),
                d = this.get("helpersNamespace");
            if (c) {
              var e = c(a);
              if (e)
                return e;
            } else if (d)
              return R.memberExpression(d, R.identifier(a));
            var f = m["default"](a),
                g = this.declarations[a] = this.scope.generateUidIdentifier(a);
            return R.isFunctionExpression(f) && !f.id ? (f.body._compact = !0, f._generated = !0, f.id = g, f.type = "FunctionDeclaration", this.path.unshiftContainer("body", f)) : (f._compact = !0, this.scope.push({
              id: g,
              init: f,
              unique: !0
            })), g;
          }, b.prototype.addTemplateObject = function(a, b, c) {
            var d = c.elements.map(function(a) {
              return a.value;
            }),
                e = a + "_" + c.elements.length + "_" + d.join(","),
                f = this.declarations[e];
            if (f)
              return f;
            var g = this.declarations[e] = this.scope.generateUidIdentifier("templateObject"),
                h = this.addHelper(a),
                i = R.callExpression(h, [b, c]);
            return i._compact = !0, this.scope.push({
              id: g,
              init: i,
              _blockHoist: 1.9
            }), g;
          }, b.prototype.buildCodeFrameError = function(a, b) {
            var c = arguments.length <= 2 || void 0 === arguments[2] ? SyntaxError : arguments[2],
                d = a && (a.loc || a._loc),
                e = new c(b);
            return d ? e.loc = d.start : (G["default"](a, X, this.scope, e), e.message += " (This is an error on an internal node. Probably an internal error", e.loc && (e.message += ". Location has been estimated."), e.message += ")"), e;
          }, b.prototype.mergeSourceMap = function(a) {
            var b = this.opts.inputSourceMap;
            if (!b)
              return a;
            var c = function() {
              var c = new z["default"].SourceMapConsumer(b),
                  d = new z["default"].SourceMapConsumer(a),
                  e = new z["default"].SourceMapGenerator({
                    file: c.file,
                    sourceRoot: c.sourceRoot
                  }),
                  f = d.sources[0];
              c.eachMapping(function(a) {
                var b = d.generatedPositionFor({
                  line: a.generatedLine,
                  column: a.generatedColumn,
                  source: f
                });
                null != b.column && e.addMapping({
                  source: a.source,
                  original: {
                    line: a.originalLine,
                    column: a.originalColumn
                  },
                  generated: b
                });
              });
              var g = e.toJSON();
              return b.mappings = g.mappings, {v: b};
            }();
            return "object" == typeof c ? c.v : void 0;
          }, b.prototype.parse = function(a) {
            this.log.debug("Parse start");
            var b = L.parse(a, this.parserOpts);
            return this.log.debug("Parse stop"), b;
          }, b.prototype._addAst = function(a) {
            this.path = x.NodePath.get({
              hub: this.hub,
              parentPath: null,
              parent: a,
              container: a,
              key: "program"
            }).setContext(), this.scope = this.path.scope, this.ast = a, this.getMetadata();
          }, b.prototype.addAst = function(a) {
            this.log.debug("Start set AST"), this._addAst(a), this.log.debug("End set AST");
          }, b.prototype.transform = function() {
            var a = this;
            return this.pluginPasses.forEach(function(b, c) {
              a.call("pre", b), a.log.debug("Start transform traverse"), G["default"](a.ast, G["default"].visitors.merge(a.pluginVisitors[c], b), a.scope), a.log.debug("End transform traverse"), a.call("post", b);
            }), this.generate();
          }, b.prototype.wrap = function(a, b) {
            a += "";
            try {
              return this.shouldIgnore() ? this.makeResult({
                code: a,
                ignored: !0
              }) : b();
            } catch (c) {
              if (c._babel)
                throw c;
              c._babel = !0;
              var e = c.message = this.opts.filename + ": " + c.message,
                  f = c.loc;
              if (f && (c.codeFrame = D["default"](a, f.line, f.column + 1, this.opts), e += "\n" + c.codeFrame), d.browser && (c.message = e), c.stack) {
                var g = c.stack.replace(c.message, e);
                c.stack = g;
              }
              throw c;
            }
          }, b.prototype.addCode = function(a) {
            a = (a || "") + "", a = this.parseInputSourceMap(a), this.code = a;
          }, b.prototype.parseCode = function() {
            this.parseShebang();
            var a = this.parse(this.code);
            this.addAst(a);
          }, b.prototype.shouldIgnore = function() {
            var a = this.opts;
            return N.shouldIgnore(a.filename, a.ignore, a.only);
          }, b.prototype.call = function(a, b) {
            for (var c = b,
                d = Array.isArray(c),
                e = 0,
                c = d ? c : i(c); ; ) {
              var f;
              if (d) {
                if (e >= c.length)
                  break;
                f = c[e++];
              } else {
                if (e = c.next(), e.done)
                  break;
                f = e.value;
              }
              var g = f,
                  h = g.plugin,
                  j = h[a];
              j && j.call(g, this);
            }
          }, b.prototype.parseInputSourceMap = function(a) {
            var b = this.opts;
            if (b.inputSourceMap !== !1) {
              var c = q["default"].fromSource(a);
              c && (b.inputSourceMap = c.toObject(), a = q["default"].removeComments(a));
            }
            return a;
          }, b.prototype.parseShebang = function() {
            var a = w["default"].exec(this.code);
            a && (this.shebang = a[0], this.code = this.code.replace(w["default"], ""));
          }, b.prototype.makeResult = function(a) {
            var b = a.code,
                c = a.map,
                d = a.ast,
                e = a.ignored,
                f = {
                  metadata: null,
                  options: this.opts,
                  ignored: !!e,
                  code: null,
                  ast: null,
                  map: c || null
                };
            return this.opts.code && (f.code = b), this.opts.ast && (f.ast = d), this.opts.metadata && (f.metadata = this.metadata), f;
          }, b.prototype.generate = function() {
            var a = this.opts,
                b = this.ast,
                c = {ast: b};
            if (!a.code)
              return this.makeResult(c);
            this.log.debug("Generation start");
            var d = B["default"](b, a, this.code);
            return c.code = d.code, c.map = d.map, this.log.debug("Generation end"), this.shebang && (c.code = this.shebang + "\n" + c.code), c.map && (c.map = this.mergeSourceMap(c.map)), ("inline" === a.sourceMaps || "both" === a.sourceMaps) && (c.code += "\n" + q["default"].fromObject(c.map).toComment()), "inline" === a.sourceMaps && (c.map = null), this.makeResult(c);
          }, b;
        }(K["default"]);
    return b["default"] = Y, b.File = Y, c.exports;
  }), a.registerDynamic("32", ["3"], !0, function(a, b, c) {
    "use strict";
    a("3");
    return c.exports = {
      filename: {
        type: "filename",
        description: "filename to use when reading from stdin - this will be used in source-maps, errors etc",
        "default": "unknown",
        shorthand: "f"
      },
      filenameRelative: {
        hidden: !0,
        type: "string"
      },
      inputSourceMap: {hidden: !0},
      env: {
        hidden: !0,
        "default": {}
      },
      mode: {
        description: "",
        hidden: !0
      },
      retainLines: {
        type: "boolean",
        "default": !1,
        description: "retain line numbers - will result in really ugly code"
      },
      highlightCode: {
        description: "enable/disable ANSI syntax highlighting of code frames (on by default)",
        type: "boolean",
        "default": !0
      },
      suppressDeprecationMessages: {
        type: "boolean",
        "default": !1,
        hidden: !0
      },
      presets: {
        type: "list",
        description: "",
        "default": []
      },
      plugins: {
        type: "list",
        "default": [],
        description: ""
      },
      ignore: {
        type: "list",
        description: "list of glob paths to **not** compile",
        "default": []
      },
      only: {
        type: "list",
        description: "list of glob paths to **only** compile"
      },
      code: {
        hidden: !0,
        "default": !0,
        type: "boolean"
      },
      metadata: {
        hidden: !0,
        "default": !0,
        type: "boolean"
      },
      ast: {
        hidden: !0,
        "default": !0,
        type: "boolean"
      },
      "extends": {
        type: "string",
        hidden: !0
      },
      comments: {
        type: "boolean",
        "default": !0,
        description: "write comments to generated output (true by default)"
      },
      shouldPrintComment: {
        hidden: !0,
        description: "optional callback to control whether a comment should be inserted, when this is used the comments option is ignored"
      },
      compact: {
        type: "booleanString",
        "default": "auto",
        description: "do not include superfluous whitespace characters and line terminators [true|false|auto]"
      },
      minified: {
        type: "boolean",
        "default": !1,
        description: "save as much bytes when printing [true|false]"
      },
      sourceMap: {
        alias: "sourceMaps",
        hidden: !0
      },
      sourceMaps: {
        type: "booleanString",
        description: "[true|false|inline]",
        "default": !1,
        shorthand: "s"
      },
      sourceMapTarget: {
        type: "string",
        description: "set `file` on returned source map"
      },
      sourceFileName: {
        type: "string",
        description: "set `sources[0]` on returned source map"
      },
      sourceRoot: {
        type: "filename",
        description: "the root from which all sources are relative"
      },
      babelrc: {
        description: "Whether or not to look up .babelrc and .babelignore files",
        type: "boolean",
        "default": !0
      },
      sourceType: {
        description: "",
        "default": "module"
      },
      auxiliaryCommentBefore: {
        type: "string",
        description: "print a comment before any injected non-user code"
      },
      auxiliaryCommentAfter: {
        type: "string",
        description: "print a comment after any injected non-user code"
      },
      resolveModuleSource: {hidden: !0},
      getModuleId: {hidden: !0},
      moduleRoot: {
        type: "filename",
        description: "optional prefix for the AMD module formatter that will be prepend to the filename on module definitions"
      },
      moduleIds: {
        type: "boolean",
        "default": !1,
        shorthand: "M",
        description: "insert an explicit id for modules"
      },
      moduleId: {
        description: "specify a custom name for module ids",
        type: "string"
      },
      passPerPreset: {
        description: "Whether to spawn a traversal pass per a preset. By default all presets are merged.",
        type: "boolean",
        "default": !1,
        hidden: !0
      }
    }, c.exports;
  }), a.registerDynamic("80", ["a", "81", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("a")["default"]);
    b.__esModule = !0;
    var e = a("81"),
        f = d(e),
        g = {};
    return b["default"] = g, g["typeof"] = f["default"]('\n  (typeof Symbol === "function" && typeof Symbol.iterator === "symbol")\n    ? function (obj) { return typeof obj; }\n    : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };\n'), g.jsx = f["default"]('\n  (function () {\n    var REACT_ELEMENT_TYPE = (typeof Symbol === "function" && Symbol.for && Symbol.for("react.element")) || 0xeac7;\n\n    return function createRawReactElement (type, props, key, children) {\n      var defaultProps = type && type.defaultProps;\n      var childrenLength = arguments.length - 3;\n\n      if (!props && childrenLength !== 0) {\n        // If we\'re going to assign props.children, we create a new object now\n        // to avoid mutating defaultProps.\n        props = {};\n      }\n      if (props && defaultProps) {\n        for (var propName in defaultProps) {\n          if (props[propName] === void 0) {\n            props[propName] = defaultProps[propName];\n          }\n        }\n      } else if (!props) {\n        props = defaultProps || {};\n      }\n\n      if (childrenLength === 1) {\n        props.children = children;\n      } else if (childrenLength > 1) {\n        var childArray = Array(childrenLength);\n        for (var i = 0; i < childrenLength; i++) {\n          childArray[i] = arguments[i + 3];\n        }\n        props.children = childArray;\n      }\n\n      return {\n        $$typeof: REACT_ELEMENT_TYPE,\n        type: type,\n        key: key === undefined ? null : \'\' + key,\n        ref: null,\n        props: props,\n        _owner: null,\n      };\n    };\n\n  })()\n'), g.asyncToGenerator = f["default"]('\n  (function (fn) {\n    return function () {\n      var gen = fn.apply(this, arguments);\n      return new Promise(function (resolve, reject) {\n        function step(key, arg) {\n          try {\n            var info = gen[key](arg);\n            var value = info.value;\n          } catch (error) {\n            reject(error);\n            return;\n          }\n\n          if (info.done) {\n            resolve(value);\n          } else {\n            return Promise.resolve(value).then(function (value) {\n              return step("next", value);\n            }, function (err) {\n              return step("throw", err);\n            });\n          }\n        }\n\n        return step("next");\n      });\n    };\n  })\n'), g.classCallCheck = f["default"]('\n  (function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError("Cannot call a class as a function");\n    }\n  });\n'), g.createClass = f["default"]('\n  (function() {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i ++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if ("value" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  })()\n'), g.defineEnumerableProperties = f["default"]('\n  (function (obj, descs) {\n    for (var key in descs) {\n      var desc = descs[key];\n      desc.configurable = desc.enumerable = true;\n      if ("value" in desc) desc.writable = true;\n      Object.defineProperty(obj, key, desc);\n    }\n    return obj;\n  })\n'), g.defaults = f["default"]("\n  (function (obj, defaults) {\n    var keys = Object.getOwnPropertyNames(defaults);\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var value = Object.getOwnPropertyDescriptor(defaults, key);\n      if (value && value.configurable && obj[key] === undefined) {\n        Object.defineProperty(obj, key, value);\n      }\n    }\n    return obj;\n  })\n"), g.defineProperty = f["default"]("\n  (function (obj, key, value) {\n    // Shortcircuit the slow defineProperty path when possible.\n    // We are trying to avoid issues where setters defined on the\n    // prototype cause side effects under the fast path of simple\n    // assignment. By checking for existence of the property with\n    // the in operator, we can optimize most of this overhead away.\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  });\n"), g["extends"] = f["default"]("\n  Object.assign || (function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  })\n"), g.get = f["default"]('\n  (function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;\n\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent === null) {\n        return undefined;\n      } else {\n        return get(parent, property, receiver);\n      }\n    } else if ("value" in desc) {\n      return desc.value;\n    } else {\n      var getter = desc.get;\n\n      if (getter === undefined) {\n        return undefined;\n      }\n\n      return getter.call(receiver);\n    }\n  });\n'), g.inherits = f["default"]('\n  (function (subClass, superClass) {\n    if (typeof superClass !== "function" && superClass !== null) {\n      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  })\n'), g["instanceof"] = f["default"]('\n  (function (left, right) {\n    if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) {\n      return right[Symbol.hasInstance](left);\n    } else {\n      return left instanceof right;\n    }\n  });\n'), g.interopRequireDefault = f["default"]("\n  (function (obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n  })\n"), g.interopRequireWildcard = f["default"]("\n  (function (obj) {\n    if (obj && obj.__esModule) {\n      return obj;\n    } else {\n      var newObj = {};\n      if (obj != null) {\n        for (var key in obj) {\n          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n        }\n      }\n      newObj.default = obj;\n      return newObj;\n    }\n  })\n"), g.newArrowCheck = f["default"]('\n  (function (innerThis, boundThis) {\n    if (innerThis !== boundThis) {\n      throw new TypeError("Cannot instantiate an arrow function");\n    }\n  });\n'), g.objectDestructuringEmpty = f["default"]('\n  (function (obj) {\n    if (obj == null) throw new TypeError("Cannot destructure undefined");\n  });\n'), g.objectWithoutProperties = f["default"]("\n  (function (obj, keys) {\n    var target = {};\n    for (var i in obj) {\n      if (keys.indexOf(i) >= 0) continue;\n      if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n      target[i] = obj[i];\n    }\n    return target;\n  })\n"), g.possibleConstructorReturn = f["default"]('\n  (function (self, call) {\n    if (!self) {\n      throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");\n    }\n    return call && (typeof call === "object" || typeof call === "function") ? call : self;\n  });\n'), g.selfGlobal = f["default"]('\n  typeof global === "undefined" ? self : global\n'), g.set = f["default"]('\n  (function set(object, property, value, receiver) {\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent !== null) {\n        set(parent, property, value, receiver);\n      }\n    } else if ("value" in desc && desc.writable) {\n      desc.value = value;\n    } else {\n      var setter = desc.set;\n\n      if (setter !== undefined) {\n        setter.call(receiver, value);\n      }\n    }\n\n    return value;\n  });\n'), g.slicedToArray = f["default"]('\n  (function () {\n    // Broken out into a separate function to avoid deoptimizations due to the try/catch for the\n    // array iterator case.\n    function sliceIterator(arr, i) {\n      // this is an expanded form of `for...of` that properly supports abrupt completions of\n      // iterators etc. variable names have been minimised to reduce the size of this massive\n      // helper. sometimes spec compliancy is annoying :(\n      //\n      // _n = _iteratorNormalCompletion\n      // _d = _didIteratorError\n      // _e = _iteratorError\n      // _i = _iterator\n      // _s = _step\n\n      var _arr = [];\n      var _n = true;\n      var _d = false;\n      var _e = undefined;\n      try {\n        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n          _arr.push(_s.value);\n          if (i && _arr.length === i) break;\n        }\n      } catch (err) {\n        _d = true;\n        _e = err;\n      } finally {\n        try {\n          if (!_n && _i["return"]) _i["return"]();\n        } finally {\n          if (_d) throw _e;\n        }\n      }\n      return _arr;\n    }\n\n    return function (arr, i) {\n      if (Array.isArray(arr)) {\n        return arr;\n      } else if (Symbol.iterator in Object(arr)) {\n        return sliceIterator(arr, i);\n      } else {\n        throw new TypeError("Invalid attempt to destructure non-iterable instance");\n      }\n    };\n  })();\n'), g.slicedToArrayLoose = f["default"]('\n  (function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      var _arr = [];\n      for (var _iterator = arr[Symbol.iterator](), _step; !(_step = _iterator.next()).done;) {\n        _arr.push(_step.value);\n        if (i && _arr.length === i) break;\n      }\n      return _arr;\n    } else {\n      throw new TypeError("Invalid attempt to destructure non-iterable instance");\n    }\n  });\n'), g.taggedTemplateLiteral = f["default"]("\n  (function (strings, raw) {\n    return Object.freeze(Object.defineProperties(strings, {\n        raw: { value: Object.freeze(raw) }\n    }));\n  });\n"), g.taggedTemplateLiteralLoose = f["default"]("\n  (function (strings, raw) {\n    strings.raw = raw;\n    return strings;\n  });\n"), g.temporalRef = f["default"]('\n  (function (val, name, undef) {\n    if (val === undef) {\n      throw new ReferenceError(name + " is not defined - temporal dead zone");\n    } else {\n      return val;\n    }\n  })\n'), g.temporalUndefined = f["default"]("\n  ({})\n"), g.toArray = f["default"]("\n  (function (arr) {\n    return Array.isArray(arr) ? arr : Array.from(arr);\n  });\n"), g.toConsumableArray = f["default"]("\n  (function (arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  });\n"), c.exports = b["default"], c.exports;
  }), a.registerDynamic("7a", ["82", "a", "80", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      var b = h["default"][a];
      if (!b)
        throw new ReferenceError("Unknown helper " + a);
      return b().expression;
    }
    var e = (a("3"), a("82")["default"]),
        f = a("a")["default"];
    b.__esModule = !0, b.get = d;
    var g = a("80"),
        h = f(g),
        i = e(h["default"]).map(function(a) {
          return "_" === a[0] ? a.slice(1) : a;
        }).filter(function(a) {
          return "__esModule" !== a;
        });
    return b.list = i, b["default"] = d, c.exports;
  }), a.registerDynamic("83", ["84", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      var b = 0,
          c = 0,
          d = 0;
      for (var e in a) {
        var f = a[e],
            g = f[0],
            h = f[1];
        (g > c || g === c && h > d) && (c = g, d = h, b = +e);
      }
      return b;
    }
    var e = (a("3"), a("84")),
        f = /^(?:( )+|\t+)/;
    return c.exports = function(a) {
      if ("string" != typeof a)
        throw new TypeError("Expected a string");
      var b,
          c,
          g = 0,
          h = 0,
          i = 0,
          j = {};
      a.split(/\n/g).forEach(function(a) {
        if (a) {
          var d,
              e = a.match(f);
          e ? (d = e[0].length, e[1] ? h++ : g++) : d = 0;
          var k = d - i;
          i = d, k ? (c = k > 0, b = j[c ? k : -k], b ? b[0]++ : b = j[k] = [1, 0]) : b && (b[1] += +c);
        }
      });
      var k,
          l,
          m = d(j);
      return m ? h >= g ? (k = "space", l = e(" ", m)) : (k = "tab", l = e("	", m)) : (k = null, l = ""), {
        amount: m,
        type: k,
        indent: l
      };
    }, c.exports;
  }), a.registerDynamic("85", ["9", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("9")["default"]);
    b.__esModule = !0;
    var e = function() {
      function a(b) {
        d(this, a), this.tokens = b, this.used = {};
      }
      return a.prototype.getNewlinesBefore = function(a) {
        var b = void 0,
            c = void 0,
            d = this.tokens,
            e = this._findToken(function(b) {
              return b.start - a.start;
            }, 0, d.length);
        if (e >= 0) {
          for (; e && a.start === d[e - 1].start; )
            --e;
          b = d[e - 1], c = d[e];
        }
        return this.getNewlinesBetween(b, c);
      }, a.prototype.getNewlinesAfter = function(a) {
        var b = void 0,
            c = void 0,
            d = this.tokens,
            e = this._findToken(function(b) {
              return b.end - a.end;
            }, 0, d.length);
        if (e >= 0) {
          for (; e && a.end === d[e - 1].end; )
            --e;
          b = d[e], c = d[e + 1], "," === c.type.label && (c = d[e + 2]);
        }
        if (c && "eof" === c.type.label)
          return 1;
        var f = this.getNewlinesBetween(b, c);
        return "CommentLine" !== a.type || f ? f : 1;
      }, a.prototype.getNewlinesBetween = function(a, b) {
        if (!b || !b.loc)
          return 0;
        for (var c = a ? a.loc.end.line : 1,
            d = b.loc.start.line,
            e = 0,
            f = c; d > f; f++)
          "undefined" == typeof this.used[f] && (this.used[f] = !0, e++);
        return e;
      }, a.prototype._findToken = function(a, b, c) {
        var d = b + c >>> 1,
            e = a(this.tokens[d]);
        return 0 > e && c > d ? this._findToken(a, d + 1, c) : e > 0 && d > b ? this._findToken(a, b, d) : 0 === e ? d : -1;
      }, a;
    }();
    return b["default"] = e, c.exports = b["default"], c.exports;
  }), a.registerDynamic("86", ["3"], !0, function(a, b, c) {
    function d(a, c, e, f, g, h) {
      var i = Math.floor((c - a) / 2) + a,
          j = g(e, f[i], !0);
      return 0 === j ? i : j > 0 ? c - i > 1 ? d(i, c, e, f, g, h) : h == b.LEAST_UPPER_BOUND ? c < f.length ? c : -1 : i : i - a > 1 ? d(a, i, e, f, g, h) : h == b.LEAST_UPPER_BOUND ? i : 0 > a ? -1 : a;
    }
    a("3");
    return b.GREATEST_LOWER_BOUND = 1, b.LEAST_UPPER_BOUND = 2, b.search = function(a, c, e, f) {
      if (0 === c.length)
        return -1;
      var g = d(-1, c.length, a, c, e, f || b.GREATEST_LOWER_BOUND);
      if (0 > g)
        return -1;
      for (; g - 1 >= 0 && 0 === e(c[g], c[g - 1], !0); )
        --g;
      return g;
    }, c.exports;
  }), a.registerDynamic("87", ["3"], !0, function(a, b, c) {
    function d(a, b, c) {
      var d = a[b];
      a[b] = a[c], a[c] = d;
    }
    function e(a, b) {
      return Math.round(a + Math.random() * (b - a));
    }
    function f(a, b, c, g) {
      if (g > c) {
        var h = e(c, g),
            i = c - 1;
        d(a, h, g);
        for (var j = a[g],
            k = c; g > k; k++)
          b(a[k], j) <= 0 && (i += 1, d(a, i, k));
        d(a, i + 1, k);
        var l = i + 1;
        f(a, b, c, l - 1), f(a, b, l + 1, g);
      }
    }
    a("3");
    return b.quickSort = function(a, b) {
      f(a, b, 0, a.length - 1);
    }, c.exports;
  }), a.registerDynamic("88", ["89", "86", "8a", "8b", "87", "3"], !0, function(a, b, c) {
    function d(a) {
      var b = a;
      return "string" == typeof a && (b = JSON.parse(a.replace(/^\)\]\}'/, ""))), null != b.sections ? new g(b) : new e(b);
    }
    function e(a) {
      var b = a;
      "string" == typeof a && (b = JSON.parse(a.replace(/^\)\]\}'/, "")));
      var c = h.getArg(b, "version"),
          d = h.getArg(b, "sources"),
          e = h.getArg(b, "names", []),
          f = h.getArg(b, "sourceRoot", null),
          g = h.getArg(b, "sourcesContent", null),
          i = h.getArg(b, "mappings"),
          k = h.getArg(b, "file", null);
      if (c != this._version)
        throw new Error("Unsupported version: " + c);
      d = d.map(h.normalize).map(function(a) {
        return f && h.isAbsolute(f) && h.isAbsolute(a) ? h.relative(f, a) : a;
      }), this._names = j.fromArray(e, !0), this._sources = j.fromArray(d, !0), this.sourceRoot = f, this.sourcesContent = g, this._mappings = i, this.file = k;
    }
    function f() {
      this.generatedLine = 0, this.generatedColumn = 0, this.source = null, this.originalLine = null, this.originalColumn = null, this.name = null;
    }
    function g(a) {
      var b = a;
      "string" == typeof a && (b = JSON.parse(a.replace(/^\)\]\}'/, "")));
      var c = h.getArg(b, "version"),
          e = h.getArg(b, "sections");
      if (c != this._version)
        throw new Error("Unsupported version: " + c);
      this._sources = new j, this._names = new j;
      var f = {
        line: -1,
        column: 0
      };
      this._sections = e.map(function(a) {
        if (a.url)
          throw new Error("Support for url field in sections not implemented.");
        var b = h.getArg(a, "offset"),
            c = h.getArg(b, "line"),
            e = h.getArg(b, "column");
        if (c < f.line || c === f.line && e < f.column)
          throw new Error("Section offsets must be ordered and non-overlapping.");
        return f = b, {
          generatedOffset: {
            generatedLine: c + 1,
            generatedColumn: e + 1
          },
          consumer: new d(h.getArg(a, "map"))
        };
      });
    }
    var h = (a("3"), a("89")),
        i = a("86"),
        j = a("8a").ArraySet,
        k = a("8b"),
        l = a("87").quickSort;
    return d.fromSourceMap = function(a) {
      return e.fromSourceMap(a);
    }, d.prototype._version = 3, d.prototype.__generatedMappings = null, Object.defineProperty(d.prototype, "_generatedMappings", {get: function() {
        return this.__generatedMappings || this._parseMappings(this._mappings, this.sourceRoot), this.__generatedMappings;
      }}), d.prototype.__originalMappings = null, Object.defineProperty(d.prototype, "_originalMappings", {get: function() {
        return this.__originalMappings || this._parseMappings(this._mappings, this.sourceRoot), this.__originalMappings;
      }}), d.prototype._charIsMappingSeparator = function(a, b) {
      var c = a.charAt(b);
      return ";" === c || "," === c;
    }, d.prototype._parseMappings = function(a, b) {
      throw new Error("Subclasses must implement _parseMappings");
    }, d.GENERATED_ORDER = 1, d.ORIGINAL_ORDER = 2, d.GREATEST_LOWER_BOUND = 1, d.LEAST_UPPER_BOUND = 2, d.prototype.eachMapping = function(a, b, c) {
      var e,
          f = b || null,
          g = c || d.GENERATED_ORDER;
      switch (g) {
        case d.GENERATED_ORDER:
          e = this._generatedMappings;
          break;
        case d.ORIGINAL_ORDER:
          e = this._originalMappings;
          break;
        default:
          throw new Error("Unknown order of iteration.");
      }
      var i = this.sourceRoot;
      e.map(function(a) {
        var b = null === a.source ? null : this._sources.at(a.source);
        return null != b && null != i && (b = h.join(i, b)), {
          source: b,
          generatedLine: a.generatedLine,
          generatedColumn: a.generatedColumn,
          originalLine: a.originalLine,
          originalColumn: a.originalColumn,
          name: null === a.name ? null : this._names.at(a.name)
        };
      }, this).forEach(a, f);
    }, d.prototype.allGeneratedPositionsFor = function(a) {
      var b = h.getArg(a, "line"),
          c = {
            source: h.getArg(a, "source"),
            originalLine: b,
            originalColumn: h.getArg(a, "column", 0)
          };
      if (null != this.sourceRoot && (c.source = h.relative(this.sourceRoot, c.source)), !this._sources.has(c.source))
        return [];
      c.source = this._sources.indexOf(c.source);
      var d = [],
          e = this._findMapping(c, this._originalMappings, "originalLine", "originalColumn", h.compareByOriginalPositions, i.LEAST_UPPER_BOUND);
      if (e >= 0) {
        var f = this._originalMappings[e];
        if (void 0 === a.column)
          for (var g = f.originalLine; f && f.originalLine === g; )
            d.push({
              line: h.getArg(f, "generatedLine", null),
              column: h.getArg(f, "generatedColumn", null),
              lastColumn: h.getArg(f, "lastGeneratedColumn", null)
            }), f = this._originalMappings[++e];
        else
          for (var j = f.originalColumn; f && f.originalLine === b && f.originalColumn == j; )
            d.push({
              line: h.getArg(f, "generatedLine", null),
              column: h.getArg(f, "generatedColumn", null),
              lastColumn: h.getArg(f, "lastGeneratedColumn", null)
            }), f = this._originalMappings[++e];
      }
      return d;
    }, b.SourceMapConsumer = d, e.prototype = Object.create(d.prototype), e.prototype.consumer = d, e.fromSourceMap = function(a) {
      var b = Object.create(e.prototype),
          c = b._names = j.fromArray(a._names.toArray(), !0),
          d = b._sources = j.fromArray(a._sources.toArray(), !0);
      b.sourceRoot = a._sourceRoot, b.sourcesContent = a._generateSourcesContent(b._sources.toArray(), b.sourceRoot), b.file = a._file;
      for (var g = a._mappings.toArray().slice(),
          i = b.__generatedMappings = [],
          k = b.__originalMappings = [],
          m = 0,
          n = g.length; n > m; m++) {
        var o = g[m],
            p = new f;
        p.generatedLine = o.generatedLine, p.generatedColumn = o.generatedColumn, o.source && (p.source = d.indexOf(o.source), p.originalLine = o.originalLine, p.originalColumn = o.originalColumn, o.name && (p.name = c.indexOf(o.name)), k.push(p)), i.push(p);
      }
      return l(b.__originalMappings, h.compareByOriginalPositions), b;
    }, e.prototype._version = 3, Object.defineProperty(e.prototype, "sources", {get: function() {
        return this._sources.toArray().map(function(a) {
          return null != this.sourceRoot ? h.join(this.sourceRoot, a) : a;
        }, this);
      }}), e.prototype._parseMappings = function(a, b) {
      for (var c,
          d,
          e,
          g,
          i,
          j = 1,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          r = a.length,
          s = 0,
          t = {},
          u = {},
          v = [],
          w = []; r > s; )
        if (";" === a.charAt(s))
          j++, s++, m = 0;
        else if ("," === a.charAt(s))
          s++;
        else {
          for (c = new f, c.generatedLine = j, g = s; r > g && !this._charIsMappingSeparator(a, g); g++)
            ;
          if (d = a.slice(s, g), e = t[d])
            s += d.length;
          else {
            for (e = []; g > s; )
              k.decode(a, s, u), i = u.value, s = u.rest, e.push(i);
            if (2 === e.length)
              throw new Error("Found a source, but no line and column");
            if (3 === e.length)
              throw new Error("Found a source and line, but no column");
            t[d] = e;
          }
          c.generatedColumn = m + e[0], m = c.generatedColumn, e.length > 1 && (c.source = p + e[1], p += e[1], c.originalLine = n + e[2], n = c.originalLine, c.originalLine += 1, c.originalColumn = o + e[3], o = c.originalColumn, e.length > 4 && (c.name = q + e[4], q += e[4])), w.push(c), "number" == typeof c.originalLine && v.push(c);
        }
      l(w, h.compareByGeneratedPositionsDeflated), this.__generatedMappings = w, l(v, h.compareByOriginalPositions), this.__originalMappings = v;
    }, e.prototype._findMapping = function(a, b, c, d, e, f) {
      if (a[c] <= 0)
        throw new TypeError("Line must be greater than or equal to 1, got " + a[c]);
      if (a[d] < 0)
        throw new TypeError("Column must be greater than or equal to 0, got " + a[d]);
      return i.search(a, b, e, f);
    }, e.prototype.computeColumnSpans = function() {
      for (var a = 0; a < this._generatedMappings.length; ++a) {
        var b = this._generatedMappings[a];
        if (a + 1 < this._generatedMappings.length) {
          var c = this._generatedMappings[a + 1];
          if (b.generatedLine === c.generatedLine) {
            b.lastGeneratedColumn = c.generatedColumn - 1;
            continue;
          }
        }
        b.lastGeneratedColumn = 1 / 0;
      }
    }, e.prototype.originalPositionFor = function(a) {
      var b = {
        generatedLine: h.getArg(a, "line"),
        generatedColumn: h.getArg(a, "column")
      },
          c = this._findMapping(b, this._generatedMappings, "generatedLine", "generatedColumn", h.compareByGeneratedPositionsDeflated, h.getArg(a, "bias", d.GREATEST_LOWER_BOUND));
      if (c >= 0) {
        var e = this._generatedMappings[c];
        if (e.generatedLine === b.generatedLine) {
          var f = h.getArg(e, "source", null);
          null !== f && (f = this._sources.at(f), null != this.sourceRoot && (f = h.join(this.sourceRoot, f)));
          var g = h.getArg(e, "name", null);
          return null !== g && (g = this._names.at(g)), {
            source: f,
            line: h.getArg(e, "originalLine", null),
            column: h.getArg(e, "originalColumn", null),
            name: g
          };
        }
      }
      return {
        source: null,
        line: null,
        column: null,
        name: null
      };
    }, e.prototype.hasContentsOfAllSources = function() {
      return this.sourcesContent ? this.sourcesContent.length >= this._sources.size() && !this.sourcesContent.some(function(a) {
        return null == a;
      }) : !1;
    }, e.prototype.sourceContentFor = function(a, b) {
      if (!this.sourcesContent)
        return null;
      if (null != this.sourceRoot && (a = h.relative(this.sourceRoot, a)), this._sources.has(a))
        return this.sourcesContent[this._sources.indexOf(a)];
      var c;
      if (null != this.sourceRoot && (c = h.urlParse(this.sourceRoot))) {
        var d = a.replace(/^file:\/\//, "");
        if ("file" == c.scheme && this._sources.has(d))
          return this.sourcesContent[this._sources.indexOf(d)];
        if ((!c.path || "/" == c.path) && this._sources.has("/" + a))
          return this.sourcesContent[this._sources.indexOf("/" + a)];
      }
      if (b)
        return null;
      throw new Error('"' + a + '" is not in the SourceMap.');
    }, e.prototype.generatedPositionFor = function(a) {
      var b = h.getArg(a, "source");
      if (null != this.sourceRoot && (b = h.relative(this.sourceRoot, b)), !this._sources.has(b))
        return {
          line: null,
          column: null,
          lastColumn: null
        };
      b = this._sources.indexOf(b);
      var c = {
        source: b,
        originalLine: h.getArg(a, "line"),
        originalColumn: h.getArg(a, "column")
      },
          e = this._findMapping(c, this._originalMappings, "originalLine", "originalColumn", h.compareByOriginalPositions, h.getArg(a, "bias", d.GREATEST_LOWER_BOUND));
      if (e >= 0) {
        var f = this._originalMappings[e];
        if (f.source === c.source)
          return {
            line: h.getArg(f, "generatedLine", null),
            column: h.getArg(f, "generatedColumn", null),
            lastColumn: h.getArg(f, "lastGeneratedColumn", null)
          };
      }
      return {
        line: null,
        column: null,
        lastColumn: null
      };
    }, b.BasicSourceMapConsumer = e, g.prototype = Object.create(d.prototype), g.prototype.constructor = d, g.prototype._version = 3, Object.defineProperty(g.prototype, "sources", {get: function() {
        for (var a = [],
            b = 0; b < this._sections.length; b++)
          for (var c = 0; c < this._sections[b].consumer.sources.length; c++)
            a.push(this._sections[b].consumer.sources[c]);
        return a;
      }}), g.prototype.originalPositionFor = function(a) {
      var b = {
        generatedLine: h.getArg(a, "line"),
        generatedColumn: h.getArg(a, "column")
      },
          c = i.search(b, this._sections, function(a, b) {
            var c = a.generatedLine - b.generatedOffset.generatedLine;
            return c ? c : a.generatedColumn - b.generatedOffset.generatedColumn;
          }),
          d = this._sections[c];
      return d ? d.consumer.originalPositionFor({
        line: b.generatedLine - (d.generatedOffset.generatedLine - 1),
        column: b.generatedColumn - (d.generatedOffset.generatedLine === b.generatedLine ? d.generatedOffset.generatedColumn - 1 : 0),
        bias: a.bias
      }) : {
        source: null,
        line: null,
        column: null,
        name: null
      };
    }, g.prototype.hasContentsOfAllSources = function() {
      return this._sections.every(function(a) {
        return a.consumer.hasContentsOfAllSources();
      });
    }, g.prototype.sourceContentFor = function(a, b) {
      for (var c = 0; c < this._sections.length; c++) {
        var d = this._sections[c],
            e = d.consumer.sourceContentFor(a, !0);
        if (e)
          return e;
      }
      if (b)
        return null;
      throw new Error('"' + a + '" is not in the SourceMap.');
    }, g.prototype.generatedPositionFor = function(a) {
      for (var b = 0; b < this._sections.length; b++) {
        var c = this._sections[b];
        if (-1 !== c.consumer.sources.indexOf(h.getArg(a, "source"))) {
          var d = c.consumer.generatedPositionFor(a);
          if (d) {
            var e = {
              line: d.line + (c.generatedOffset.generatedLine - 1),
              column: d.column + (c.generatedOffset.generatedLine === d.line ? c.generatedOffset.generatedColumn - 1 : 0)
            };
            return e;
          }
        }
      }
      return {
        line: null,
        column: null
      };
    }, g.prototype._parseMappings = function(a, b) {
      this.__generatedMappings = [], this.__originalMappings = [];
      for (var c = 0; c < this._sections.length; c++)
        for (var d = this._sections[c],
            e = d.consumer._generatedMappings,
            f = 0; f < e.length; f++) {
          var g = e[f],
              i = d.consumer._sources.at(g.source);
          null !== d.consumer.sourceRoot && (i = h.join(d.consumer.sourceRoot, i)), this._sources.add(i), i = this._sources.indexOf(i);
          var j = d.consumer._names.at(g.name);
          this._names.add(j), j = this._names.indexOf(j);
          var k = {
            source: i,
            generatedLine: g.generatedLine + (d.generatedOffset.generatedLine - 1),
            generatedColumn: g.generatedColumn + (d.generatedOffset.generatedLine === g.generatedLine ? d.generatedOffset.generatedColumn - 1 : 0),
            originalLine: g.originalLine,
            originalColumn: g.originalColumn,
            name: j
          };
          this.__generatedMappings.push(k), "number" == typeof k.originalLine && this.__originalMappings.push(k);
        }
      l(this.__generatedMappings, h.compareByGeneratedPositionsDeflated), l(this.__originalMappings, h.compareByOriginalPositions);
    }, b.IndexedSourceMapConsumer = g, c.exports;
  }), a.registerDynamic("8c", ["3"], !0, function(a, b, c) {
    var d = (a("3"), "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split(""));
    return b.encode = function(a) {
      if (a >= 0 && a < d.length)
        return d[a];
      throw new TypeError("Must be between 0 and 63: " + a);
    }, b.decode = function(a) {
      var b = 65,
          c = 90,
          d = 97,
          e = 122,
          f = 48,
          g = 57,
          h = 43,
          i = 47,
          j = 26,
          k = 52;
      return a >= b && c >= a ? a - b : a >= d && e >= a ? a - d + j : a >= f && g >= a ? a - f + k : a == h ? 62 : a == i ? 63 : -1;
    }, c.exports;
  }), a.registerDynamic("8b", ["8c", "3"], !0, function(a, b, c) {
    function d(a) {
      return 0 > a ? (-a << 1) + 1 : (a << 1) + 0;
    }
    function e(a) {
      var b = 1 === (1 & a),
          c = a >> 1;
      return b ? -c : c;
    }
    var f = (a("3"), a("8c")),
        g = 5,
        h = 1 << g,
        i = h - 1,
        j = h;
    return b.encode = function(a) {
      var b,
          c = "",
          e = d(a);
      do
        b = e & i, e >>>= g, e > 0 && (b |= j), c += f.encode(b);
 while (e > 0);
      return c;
    }, b.decode = function(a, b, c) {
      var d,
          h,
          k = a.length,
          l = 0,
          m = 0;
      do {
        if (b >= k)
          throw new Error("Expected more digits in base 64 VLQ value.");
        if (h = f.decode(a.charCodeAt(b++)), -1 === h)
          throw new Error("Invalid base64 digit: " + a.charAt(b - 1));
        d = !!(h & j), h &= i, l += h << m, m += g;
      } while (d);
      c.value = e(l), c.rest = b;
    }, c.exports;
  }), a.registerDynamic("8a", ["89", "3"], !0, function(a, b, c) {
    function d() {
      this._array = [], this._set = {};
    }
    var e = (a("3"), a("89"));
    return d.fromArray = function(a, b) {
      for (var c = new d,
          e = 0,
          f = a.length; f > e; e++)
        c.add(a[e], b);
      return c;
    }, d.prototype.size = function() {
      return Object.getOwnPropertyNames(this._set).length;
    }, d.prototype.add = function(a, b) {
      var c = e.toSetString(a),
          d = this._set.hasOwnProperty(c),
          f = this._array.length;
      (!d || b) && this._array.push(a), d || (this._set[c] = f);
    }, d.prototype.has = function(a) {
      var b = e.toSetString(a);
      return this._set.hasOwnProperty(b);
    }, d.prototype.indexOf = function(a) {
      var b = e.toSetString(a);
      if (this._set.hasOwnProperty(b))
        return this._set[b];
      throw new Error('"' + a + '" is not in the set.');
    }, d.prototype.at = function(a) {
      if (a >= 0 && a < this._array.length)
        return this._array[a];
      throw new Error("No element indexed by " + a);
    }, d.prototype.toArray = function() {
      return this._array.slice();
    }, b.ArraySet = d, c.exports;
  }), a.registerDynamic("8d", ["89", "3"], !0, function(a, b, c) {
    function d(a, b) {
      var c = a.generatedLine,
          d = b.generatedLine,
          e = a.generatedColumn,
          g = b.generatedColumn;
      return d > c || d == c && g >= e || f.compareByGeneratedPositionsInflated(a, b) <= 0;
    }
    function e() {
      this._array = [], this._sorted = !0, this._last = {
        generatedLine: -1,
        generatedColumn: 0
      };
    }
    var f = (a("3"), a("89"));
    return e.prototype.unsortedForEach = function(a, b) {
      this._array.forEach(a, b);
    }, e.prototype.add = function(a) {
      d(this._last, a) ? (this._last = a, this._array.push(a)) : (this._sorted = !1, this._array.push(a));
    }, e.prototype.toArray = function() {
      return this._sorted || (this._array.sort(f.compareByGeneratedPositionsInflated), this._sorted = !0), this._array;
    }, b.MappingList = e, c.exports;
  }), a.registerDynamic("8e", ["8b", "89", "8a", "8d", "3"], !0, function(a, b, c) {
    function d(a) {
      a || (a = {}), this._file = f.getArg(a, "file", null), this._sourceRoot = f.getArg(a, "sourceRoot", null), this._skipValidation = f.getArg(a, "skipValidation", !1), this._sources = new g, this._names = new g, this._mappings = new h, this._sourcesContents = null;
    }
    var e = (a("3"), a("8b")),
        f = a("89"),
        g = a("8a").ArraySet,
        h = a("8d").MappingList;
    return d.prototype._version = 3, d.fromSourceMap = function(a) {
      var b = a.sourceRoot,
          c = new d({
            file: a.file,
            sourceRoot: b
          });
      return a.eachMapping(function(a) {
        var d = {generated: {
            line: a.generatedLine,
            column: a.generatedColumn
          }};
        null != a.source && (d.source = a.source, null != b && (d.source = f.relative(b, d.source)), d.original = {
          line: a.originalLine,
          column: a.originalColumn
        }, null != a.name && (d.name = a.name)), c.addMapping(d);
      }), a.sources.forEach(function(b) {
        var d = a.sourceContentFor(b);
        null != d && c.setSourceContent(b, d);
      }), c;
    }, d.prototype.addMapping = function(a) {
      var b = f.getArg(a, "generated"),
          c = f.getArg(a, "original", null),
          d = f.getArg(a, "source", null),
          e = f.getArg(a, "name", null);
      this._skipValidation || this._validateMapping(b, c, d, e), null == d || this._sources.has(d) || this._sources.add(d), null == e || this._names.has(e) || this._names.add(e), this._mappings.add({
        generatedLine: b.line,
        generatedColumn: b.column,
        originalLine: null != c && c.line,
        originalColumn: null != c && c.column,
        source: d,
        name: e
      });
    }, d.prototype.setSourceContent = function(a, b) {
      var c = a;
      null != this._sourceRoot && (c = f.relative(this._sourceRoot, c)), null != b ? (this._sourcesContents || (this._sourcesContents = {}), this._sourcesContents[f.toSetString(c)] = b) : this._sourcesContents && (delete this._sourcesContents[f.toSetString(c)], 0 === Object.keys(this._sourcesContents).length && (this._sourcesContents = null));
    }, d.prototype.applySourceMap = function(a, b, c) {
      var d = b;
      if (null == b) {
        if (null == a.file)
          throw new Error('SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, or the source map\'s "file" property. Both were omitted.');
        d = a.file;
      }
      var e = this._sourceRoot;
      null != e && (d = f.relative(e, d));
      var h = new g,
          i = new g;
      this._mappings.unsortedForEach(function(b) {
        if (b.source === d && null != b.originalLine) {
          var g = a.originalPositionFor({
            line: b.originalLine,
            column: b.originalColumn
          });
          null != g.source && (b.source = g.source, null != c && (b.source = f.join(c, b.source)), null != e && (b.source = f.relative(e, b.source)), b.originalLine = g.line, b.originalColumn = g.column, null != g.name && (b.name = g.name));
        }
        var j = b.source;
        null == j || h.has(j) || h.add(j);
        var k = b.name;
        null == k || i.has(k) || i.add(k);
      }, this), this._sources = h, this._names = i, a.sources.forEach(function(b) {
        var d = a.sourceContentFor(b);
        null != d && (null != c && (b = f.join(c, b)), null != e && (b = f.relative(e, b)), this.setSourceContent(b, d));
      }, this);
    }, d.prototype._validateMapping = function(a, b, c, d) {
      if ((!(a && "line" in a && "column" in a && a.line > 0 && a.column >= 0) || b || c || d) && !(a && "line" in a && "column" in a && b && "line" in b && "column" in b && a.line > 0 && a.column >= 0 && b.line > 0 && b.column >= 0 && c))
        throw new Error("Invalid mapping: " + JSON.stringify({
          generated: a,
          source: c,
          original: b,
          name: d
        }));
    }, d.prototype._serializeMappings = function() {
      for (var a,
          b,
          c,
          d = 0,
          g = 1,
          h = 0,
          i = 0,
          j = 0,
          k = 0,
          l = "",
          m = this._mappings.toArray(),
          n = 0,
          o = m.length; o > n; n++) {
        if (a = m[n], a.generatedLine !== g)
          for (d = 0; a.generatedLine !== g; )
            l += ";", g++;
        else if (n > 0) {
          if (!f.compareByGeneratedPositionsInflated(a, m[n - 1]))
            continue;
          l += ",";
        }
        l += e.encode(a.generatedColumn - d), d = a.generatedColumn, null != a.source && (c = this._sources.indexOf(a.source), l += e.encode(c - k), k = c, l += e.encode(a.originalLine - 1 - i), i = a.originalLine - 1, l += e.encode(a.originalColumn - h), h = a.originalColumn, null != a.name && (b = this._names.indexOf(a.name), l += e.encode(b - j), j = b));
      }
      return l;
    }, d.prototype._generateSourcesContent = function(a, b) {
      return a.map(function(a) {
        if (!this._sourcesContents)
          return null;
        null != b && (a = f.relative(b, a));
        var c = f.toSetString(a);
        return Object.prototype.hasOwnProperty.call(this._sourcesContents, c) ? this._sourcesContents[c] : null;
      }, this);
    }, d.prototype.toJSON = function() {
      var a = {
        version: this._version,
        sources: this._sources.toArray(),
        names: this._names.toArray(),
        mappings: this._serializeMappings()
      };
      return null != this._file && (a.file = this._file), null != this._sourceRoot && (a.sourceRoot = this._sourceRoot), this._sourcesContents && (a.sourcesContent = this._generateSourcesContent(a.sources, a.sourceRoot)), a;
    }, d.prototype.toString = function() {
      return JSON.stringify(this.toJSON());
    }, b.SourceMapGenerator = d, c.exports;
  }), a.registerDynamic("89", ["3"], !0, function(a, b, c) {
    function d(a, b, c) {
      if (b in a)
        return a[b];
      if (3 === arguments.length)
        return c;
      throw new Error('"' + b + '" is a required argument.');
    }
    function e(a) {
      var b = a.match(p);
      return b ? {
        scheme: b[1],
        auth: b[2],
        host: b[3],
        port: b[4],
        path: b[5]
      } : null;
    }
    function f(a) {
      var b = "";
      return a.scheme && (b += a.scheme + ":"), b += "//", a.auth && (b += a.auth + "@"), a.host && (b += a.host), a.port && (b += ":" + a.port), a.path && (b += a.path), b;
    }
    function g(a) {
      var c = a,
          d = e(a);
      if (d) {
        if (!d.path)
          return a;
        c = d.path;
      }
      for (var g,
          h = b.isAbsolute(c),
          i = c.split(/\/+/),
          j = 0,
          k = i.length - 1; k >= 0; k--)
        g = i[k], "." === g ? i.splice(k, 1) : ".." === g ? j++ : j > 0 && ("" === g ? (i.splice(k + 1, j), j = 0) : (i.splice(k, 2), j--));
      return c = i.join("/"), "" === c && (c = h ? "/" : "."), d ? (d.path = c, f(d)) : c;
    }
    function h(a, b) {
      "" === a && (a = "."), "" === b && (b = ".");
      var c = e(b),
          d = e(a);
      if (d && (a = d.path || "/"), c && !c.scheme)
        return d && (c.scheme = d.scheme), f(c);
      if (c || b.match(q))
        return b;
      if (d && !d.host && !d.path)
        return d.host = b, f(d);
      var h = "/" === b.charAt(0) ? b : g(a.replace(/\/+$/, "") + "/" + b);
      return d ? (d.path = h, f(d)) : h;
    }
    function i(a, b) {
      "" === a && (a = "."), a = a.replace(/\/$/, "");
      for (var c = 0; 0 !== b.indexOf(a + "/"); ) {
        var d = a.lastIndexOf("/");
        if (0 > d)
          return b;
        if (a = a.slice(0, d), a.match(/^([^\/]+:\/)?\/*$/))
          return b;
        ++c;
      }
      return Array(c + 1).join("../") + b.substr(a.length + 1);
    }
    function j(a) {
      return "$" + a;
    }
    function k(a) {
      return a.substr(1);
    }
    function l(a, b, c) {
      var d = a.source - b.source;
      return 0 !== d ? d : (d = a.originalLine - b.originalLine, 0 !== d ? d : (d = a.originalColumn - b.originalColumn, 0 !== d || c ? d : (d = a.generatedColumn - b.generatedColumn, 0 !== d ? d : (d = a.generatedLine - b.generatedLine, 0 !== d ? d : a.name - b.name))));
    }
    function m(a, b, c) {
      var d = a.generatedLine - b.generatedLine;
      return 0 !== d ? d : (d = a.generatedColumn - b.generatedColumn, 0 !== d || c ? d : (d = a.source - b.source, 0 !== d ? d : (d = a.originalLine - b.originalLine, 0 !== d ? d : (d = a.originalColumn - b.originalColumn, 0 !== d ? d : a.name - b.name))));
    }
    function n(a, b) {
      return a === b ? 0 : a > b ? 1 : -1;
    }
    function o(a, b) {
      var c = a.generatedLine - b.generatedLine;
      return 0 !== c ? c : (c = a.generatedColumn - b.generatedColumn, 0 !== c ? c : (c = n(a.source, b.source), 0 !== c ? c : (c = a.originalLine - b.originalLine, 0 !== c ? c : (c = a.originalColumn - b.originalColumn, 0 !== c ? c : n(a.name, b.name)))));
    }
    a("3");
    b.getArg = d;
    var p = /^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.]*)(?::(\d+))?(\S*)$/,
        q = /^data:.+\,.+$/;
    return b.urlParse = e, b.urlGenerate = f, b.normalize = g, b.join = h, b.isAbsolute = function(a) {
      return "/" === a.charAt(0) || !!a.match(p);
    }, b.relative = i, b.toSetString = j, b.fromSetString = k, b.compareByOriginalPositions = l, b.compareByGeneratedPositionsDeflated = m, b.compareByGeneratedPositionsInflated = o, c.exports;
  }), a.registerDynamic("8f", ["8e", "89", "3"], !0, function(a, b, c) {
    function d(a, b, c, d, e) {
      this.children = [], this.sourceContents = {}, this.line = null == a ? null : a, this.column = null == b ? null : b, this.source = null == c ? null : c, this.name = null == e ? null : e, this[i] = !0, null != d && this.add(d);
    }
    var e = (a("3"), a("8e").SourceMapGenerator),
        f = a("89"),
        g = /(\r?\n)/,
        h = 10,
        i = "$$$isSourceNode$$$";
    return d.fromStringWithSourceMap = function(a, b, c) {
      function e(a, b) {
        if (null === a || void 0 === a.source)
          h.add(b);
        else {
          var e = c ? f.join(c, a.source) : a.source;
          h.add(new d(a.originalLine, a.originalColumn, e, b, a.name));
        }
      }
      var h = new d,
          i = a.split(g),
          j = function() {
            var a = i.shift(),
                b = i.shift() || "";
            return a + b;
          },
          k = 1,
          l = 0,
          m = null;
      return b.eachMapping(function(a) {
        if (null !== m) {
          if (!(k < a.generatedLine)) {
            var b = i[0],
                c = b.substr(0, a.generatedColumn - l);
            return i[0] = b.substr(a.generatedColumn - l), l = a.generatedColumn, e(m, c), void(m = a);
          }
          e(m, j()), k++, l = 0;
        }
        for (; k < a.generatedLine; )
          h.add(j()), k++;
        if (l < a.generatedColumn) {
          var b = i[0];
          h.add(b.substr(0, a.generatedColumn)), i[0] = b.substr(a.generatedColumn), l = a.generatedColumn;
        }
        m = a;
      }, this), i.length > 0 && (m && e(m, j()), h.add(i.join(""))), b.sources.forEach(function(a) {
        var d = b.sourceContentFor(a);
        null != d && (null != c && (a = f.join(c, a)), h.setSourceContent(a, d));
      }), h;
    }, d.prototype.add = function(a) {
      if (Array.isArray(a))
        a.forEach(function(a) {
          this.add(a);
        }, this);
      else {
        if (!a[i] && "string" != typeof a)
          throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + a);
        a && this.children.push(a);
      }
      return this;
    }, d.prototype.prepend = function(a) {
      if (Array.isArray(a))
        for (var b = a.length - 1; b >= 0; b--)
          this.prepend(a[b]);
      else {
        if (!a[i] && "string" != typeof a)
          throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + a);
        this.children.unshift(a);
      }
      return this;
    }, d.prototype.walk = function(a) {
      for (var b,
          c = 0,
          d = this.children.length; d > c; c++)
        b = this.children[c], b[i] ? b.walk(a) : "" !== b && a(b, {
          source: this.source,
          line: this.line,
          column: this.column,
          name: this.name
        });
    }, d.prototype.join = function(a) {
      var b,
          c,
          d = this.children.length;
      if (d > 0) {
        for (b = [], c = 0; d - 1 > c; c++)
          b.push(this.children[c]), b.push(a);
        b.push(this.children[c]), this.children = b;
      }
      return this;
    }, d.prototype.replaceRight = function(a, b) {
      var c = this.children[this.children.length - 1];
      return c[i] ? c.replaceRight(a, b) : "string" == typeof c ? this.children[this.children.length - 1] = c.replace(a, b) : this.children.push("".replace(a, b)), this;
    }, d.prototype.setSourceContent = function(a, b) {
      this.sourceContents[f.toSetString(a)] = b;
    }, d.prototype.walkSourceContents = function(a) {
      for (var b = 0,
          c = this.children.length; c > b; b++)
        this.children[b][i] && this.children[b].walkSourceContents(a);
      for (var d = Object.keys(this.sourceContents),
          b = 0,
          c = d.length; c > b; b++)
        a(f.fromSetString(d[b]), this.sourceContents[d[b]]);
    }, d.prototype.toString = function() {
      var a = "";
      return this.walk(function(b) {
        a += b;
      }), a;
    }, d.prototype.toStringWithSourceMap = function(a) {
      var b = {
        code: "",
        line: 1,
        column: 0
      },
          c = new e(a),
          d = !1,
          f = null,
          g = null,
          i = null,
          j = null;
      return this.walk(function(a, e) {
        b.code += a, null !== e.source && null !== e.line && null !== e.column ? ((f !== e.source || g !== e.line || i !== e.column || j !== e.name) && c.addMapping({
          source: e.source,
          original: {
            line: e.line,
            column: e.column
          },
          generated: {
            line: b.line,
            column: b.column
          },
          name: e.name
        }), f = e.source, g = e.line, i = e.column, j = e.name, d = !0) : d && (c.addMapping({generated: {
            line: b.line,
            column: b.column
          }}), f = null, d = !1);
        for (var k = 0,
            l = a.length; l > k; k++)
          a.charCodeAt(k) === h ? (b.line++, b.column = 0, k + 1 === l ? (f = null, d = !1) : d && c.addMapping({
            source: e.source,
            original: {
              line: e.line,
              column: e.column
            },
            generated: {
              line: b.line,
              column: b.column
            },
            name: e.name
          })) : b.column++;
      }), this.walkSourceContents(function(a, b) {
        c.setSourceContent(a, b);
      }), {
        code: b.code,
        map: c
      };
    }, b.SourceNode = d, c.exports;
  }), a.registerDynamic("7b", ["8e", "88", "8f", "3"], !0, function(a, b, c) {
    a("3");
    return b.SourceMapGenerator = a("8e").SourceMapGenerator, b.SourceMapConsumer = a("88").SourceMapConsumer, b.SourceNode = a("8f").SourceNode, c.exports;
  }), a.registerDynamic("90", ["9", "a", "4", "7b", "5", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a, b) {
      return a.line === b.line && a.column === b.column;
    }
    var e = (a("3"), a("9")["default"]),
        f = a("a")["default"],
        g = a("4")["default"];
    b.__esModule = !0;
    var h = a("7b"),
        i = f(h),
        j = a("5"),
        k = g(j),
        l = function() {
          function a(b, c, d) {
            e(this, a), this.position = b, this.opts = c, this.last = {
              generated: {},
              original: {}
            }, c.sourceMaps ? (this.map = new i["default"].SourceMapGenerator({
              file: c.sourceMapTarget,
              sourceRoot: c.sourceRoot
            }), this.map.setSourceContent(c.sourceFileName, d)) : this.map = null;
          }
          return a.prototype.get = function() {
            var a = this.map;
            return a ? a.toJSON() : a;
          }, a.prototype.mark = function(a) {
            var b = a.loc;
            if (b) {
              var c = this.map;
              if (c && !k.isProgram(a) && !k.isFile(a)) {
                var e = this.position,
                    f = {
                      line: e.line,
                      column: e.column
                    },
                    g = b.start;
                d(g, this.last.original) || d(f, this.last.generated) || (this.last = {
                  source: this.opts.sourceFileName,
                  generated: f,
                  original: g
                }, c.addMapping(this.last));
              }
            }
          }, a;
        }();
    return b["default"] = l, c.exports = b["default"], c.exports;
  }), a.registerDynamic("91", ["9", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("9")["default"]);
    b.__esModule = !0;
    var e = function() {
      function a() {
        d(this, a), this.line = 1, this.column = 0;
      }
      return a.prototype.push = function(a) {
        for (var b = 0; b < a.length; b++)
          "\n" === a[b] ? (this.line++, this.column = 0) : this.column++;
      }, a.prototype.unshift = function(a) {
        for (var b = 0; b < a.length; b++)
          "\n" === a[b] ? this.line-- : this.column--;
      }, a;
    }();
    return b["default"] = e, c.exports = b["default"], c.exports;
  }), a.registerDynamic("92", ["52", "93", "94", "65", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("52")),
        e = a("93"),
        f = a("94");
    return c.exports = a("65")(function() {
      var a = Object.assign,
          b = {},
          c = {},
          d = Symbol(),
          e = "abcdefghijklmnopqrst";
      return b[d] = 7, e.split("").forEach(function(a) {
        c[a] = a;
      }), 7 != a({}, b)[d] || Object.keys(a({}, c)).join("") != e;
    }) ? function(a, b) {
      for (var c = e(a),
          g = arguments,
          h = g.length,
          i = 1,
          j = d.getKeys,
          k = d.getSymbols,
          l = d.isEnum; h > i; )
        for (var m,
            n = f(g[i++]),
            o = k ? j(n).concat(k(n)) : j(n),
            p = o.length,
            q = 0; p > q; )
          l.call(n, m = o[q++]) && (c[m] = n[m]);
      return c;
    } : Object.assign, c.exports;
  }), a.registerDynamic("95", ["64", "92", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("64"));
    return d(d.S + d.F, "Object", {assign: a("92")}), c.exports;
  }), a.registerDynamic("96", ["95", "51", "3"], !0, function(a, b, c) {
    a("3");
    return a("95"), c.exports = a("51").Object.assign, c.exports;
  }), a.registerDynamic("4c", ["96", "3"], !0, function(a, b, c) {
    a("3");
    return c.exports = {
      "default": a("96"),
      __esModule: !0
    }, c.exports;
  }), a.registerDynamic("97", ["3"], !0, function(a, b, c) {
    "use strict";
    a("3");
    return c.exports = function(a) {
      for (var b = a.length; /[\s\uFEFF\u00A0]/.test(a[b - 1]); )
        b--;
      return a.slice(0, b);
    }, c.exports;
  }), a.registerDynamic("98", ["3"], !0, function(a, b, c) {
    a("3");
    return function(a) {
      "use strict";
      function b(a) {
        var b = k[a.charCodeAt(0)];
        return void 0 !== b ? b : -1;
      }
      function c(a) {
        function c(a) {
          i[k++] = a;
        }
        var d,
            e,
            f,
            g,
            h,
            i;
        if (a.length % 4 > 0)
          throw new Error("Invalid string. Length must be a multiple of 4");
        var j = a.length;
        h = "=" === a.charAt(j - 2) ? 2 : "=" === a.charAt(j - 1) ? 1 : 0, i = new l(3 * a.length / 4 - h), f = h > 0 ? a.length - 4 : a.length;
        var k = 0;
        for (d = 0, e = 0; f > d; d += 4, e += 3)
          g = b(a.charAt(d)) << 18 | b(a.charAt(d + 1)) << 12 | b(a.charAt(d + 2)) << 6 | b(a.charAt(d + 3)), c((16711680 & g) >> 16), c((65280 & g) >> 8), c(255 & g);
        return 2 === h ? (g = b(a.charAt(d)) << 2 | b(a.charAt(d + 1)) >> 4, c(255 & g)) : 1 === h && (g = b(a.charAt(d)) << 10 | b(a.charAt(d + 1)) << 4 | b(a.charAt(d + 2)) >> 2, c(g >> 8 & 255), c(255 & g)), i;
      }
      function d(a) {
        return j[a];
      }
      function e(a) {
        return d(a >> 18 & 63) + d(a >> 12 & 63) + d(a >> 6 & 63) + d(63 & a);
      }
      function f(a, b, c) {
        for (var d,
            f = [],
            g = b; c > g; g += 3)
          d = (a[g] << 16) + (a[g + 1] << 8) + a[g + 2], f.push(e(d));
        return f.join("");
      }
      function g(a) {
        var b,
            c,
            e,
            g = a.length % 3,
            h = "",
            i = [],
            j = 16383;
        for (b = 0, e = a.length - g; e > b; b += j)
          i.push(f(a, b, b + j > e ? e : b + j));
        switch (g) {
          case 1:
            c = a[a.length - 1], h += d(c >> 2), h += d(c << 4 & 63), h += "==";
            break;
          case 2:
            c = (a[a.length - 2] << 8) + a[a.length - 1], h += d(c >> 10), h += d(c >> 4 & 63), h += d(c << 2 & 63), h += "=";
        }
        return i.push(h), i.join("");
      }
      var h,
          i = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
          j = [];
      for (h = 0; h < i.length; h++)
        j[h] = i[h];
      var k = [];
      for (h = 0; h < i.length; ++h)
        k[i.charCodeAt(h)] = h;
      k["-".charCodeAt(0)] = 62, k["_".charCodeAt(0)] = 63;
      var l = "undefined" != typeof Uint8Array ? Uint8Array : Array;
      a.toByteArray = c, a.fromByteArray = g;
    }("undefined" == typeof b ? this.base64js = {} : b), c.exports;
  }), a.registerDynamic("99", ["3"], !0, function(a, b, c) {
    a("3");
    return b.read = function(a, b, c, d, e) {
      var f,
          g,
          h = 8 * e - d - 1,
          i = (1 << h) - 1,
          j = i >> 1,
          k = -7,
          l = c ? e - 1 : 0,
          m = c ? -1 : 1,
          n = a[b + l];
      for (l += m, f = n & (1 << -k) - 1, n >>= -k, k += h; k > 0; f = 256 * f + a[b + l], l += m, k -= 8)
        ;
      for (g = f & (1 << -k) - 1, f >>= -k, k += d; k > 0; g = 256 * g + a[b + l], l += m, k -= 8)
        ;
      if (0 === f)
        f = 1 - j;
      else {
        if (f === i)
          return g ? NaN : (n ? -1 : 1) * (1 / 0);
        g += Math.pow(2, d), f -= j;
      }
      return (n ? -1 : 1) * g * Math.pow(2, f - d);
    }, b.write = function(a, b, c, d, e, f) {
      var g,
          h,
          i,
          j = 8 * f - e - 1,
          k = (1 << j) - 1,
          l = k >> 1,
          m = 23 === e ? Math.pow(2, -24) - Math.pow(2, -77) : 0,
          n = d ? 0 : f - 1,
          o = d ? 1 : -1,
          p = 0 > b || 0 === b && 0 > 1 / b ? 1 : 0;
      for (b = Math.abs(b), isNaN(b) || b === 1 / 0 ? (h = isNaN(b) ? 1 : 0, g = k) : (g = Math.floor(Math.log(b) / Math.LN2), b * (i = Math.pow(2, -g)) < 1 && (g--, i *= 2), b += g + l >= 1 ? m / i : m * Math.pow(2, 1 - l), b * i >= 2 && (g++, i /= 2), g + l >= k ? (h = 0, g = k) : g + l >= 1 ? (h = (b * i - 1) * Math.pow(2, e), g += l) : (h = b * Math.pow(2, l - 1) * Math.pow(2, e), g = 0)); e >= 8; a[c + n] = 255 & h, n += o, h /= 256, e -= 8)
        ;
      for (g = g << e | h, j += e; j > 0; a[c + n] = 255 & g, n += o, g /= 256, j -= 8)
        ;
      a[c + n - o] |= 128 * p;
    }, c.exports;
  }), a.registerDynamic("9a", ["3"], !0, function(a, b, c) {
    var d = (a("3"), {}.toString);
    return c.exports = Array.isArray || function(a) {
      return "[object Array]" == d.call(a);
    }, c.exports;
  }), a.registerDynamic("9b", ["98", "99", "9a", "3"], !0, function(a, b, c) {
    "use strict";
    function d() {
      try {
        var a = new Uint8Array(1);
        return a.foo = function() {
          return 42;
        }, 42 === a.foo() && "function" == typeof a.subarray && 0 === a.subarray(1, 1).byteLength;
      } catch (b) {
        return !1;
      }
    }
    function e() {
      return f.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;
    }
    function f(a) {
      return this instanceof f ? (f.TYPED_ARRAY_SUPPORT || (this.length = 0, this.parent = void 0), "number" == typeof a ? g(this, a) : "string" == typeof a ? h(this, a, arguments.length > 1 ? arguments[1] : "utf8") : i(this, a)) : arguments.length > 1 ? new f(a, arguments[1]) : new f(a);
    }
    function g(a, b) {
      if (a = p(a, 0 > b ? 0 : 0 | q(b)), !f.TYPED_ARRAY_SUPPORT)
        for (var c = 0; b > c; c++)
          a[c] = 0;
      return a;
    }
    function h(a, b, c) {
      ("string" != typeof c || "" === c) && (c = "utf8");
      var d = 0 | s(b, c);
      return a = p(a, d), a.write(b, c), a;
    }
    function i(a, b) {
      if (f.isBuffer(b))
        return j(a, b);
      if (Z(b))
        return k(a, b);
      if (null == b)
        throw new TypeError("must start with number, buffer, array or string");
      if ("undefined" != typeof ArrayBuffer) {
        if (b.buffer instanceof ArrayBuffer)
          return l(a, b);
        if (b instanceof ArrayBuffer)
          return m(a, b);
      }
      return b.length ? n(a, b) : o(a, b);
    }
    function j(a, b) {
      var c = 0 | q(b.length);
      return a = p(a, c), b.copy(a, 0, 0, c), a;
    }
    function k(a, b) {
      var c = 0 | q(b.length);
      a = p(a, c);
      for (var d = 0; c > d; d += 1)
        a[d] = 255 & b[d];
      return a;
    }
    function l(a, b) {
      var c = 0 | q(b.length);
      a = p(a, c);
      for (var d = 0; c > d; d += 1)
        a[d] = 255 & b[d];
      return a;
    }
    function m(a, b) {
      return b.byteLength, f.TYPED_ARRAY_SUPPORT ? (a = new Uint8Array(b), a.__proto__ = f.prototype) : a = l(a, new Uint8Array(b)), a;
    }
    function n(a, b) {
      var c = 0 | q(b.length);
      a = p(a, c);
      for (var d = 0; c > d; d += 1)
        a[d] = 255 & b[d];
      return a;
    }
    function o(a, b) {
      var c,
          d = 0;
      "Buffer" === b.type && Z(b.data) && (c = b.data, d = 0 | q(c.length)), a = p(a, d);
      for (var e = 0; d > e; e += 1)
        a[e] = 255 & c[e];
      return a;
    }
    function p(a, b) {
      f.TYPED_ARRAY_SUPPORT ? (a = new Uint8Array(b), a.__proto__ = f.prototype) : a.length = b;
      var c = 0 !== b && b <= f.poolSize >>> 1;
      return c && (a.parent = $), a;
    }
    function q(a) {
      if (a >= e())
        throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + e().toString(16) + " bytes");
      return 0 | a;
    }
    function r(a, b) {
      if (!(this instanceof r))
        return new r(a, b);
      var c = new f(a, b);
      return delete c.parent, c;
    }
    function s(a, b) {
      "string" != typeof a && (a = "" + a);
      var c = a.length;
      if (0 === c)
        return 0;
      for (var d = !1; ; )
        switch (b) {
          case "ascii":
          case "binary":
          case "raw":
          case "raws":
            return c;
          case "utf8":
          case "utf-8":
            return R(a).length;
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return 2 * c;
          case "hex":
            return c >>> 1;
          case "base64":
            return U(a).length;
          default:
            if (d)
              return R(a).length;
            b = ("" + b).toLowerCase(), d = !0;
        }
    }
    function t(a, b, c) {
      var d = !1;
      if (b = 0 | b, c = void 0 === c || c === 1 / 0 ? this.length : 0 | c, a || (a = "utf8"), 0 > b && (b = 0), c > this.length && (c = this.length), b >= c)
        return "";
      for (; ; )
        switch (a) {
          case "hex":
            return F(this, b, c);
          case "utf8":
          case "utf-8":
            return B(this, b, c);
          case "ascii":
            return D(this, b, c);
          case "binary":
            return E(this, b, c);
          case "base64":
            return A(this, b, c);
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return G(this, b, c);
          default:
            if (d)
              throw new TypeError("Unknown encoding: " + a);
            a = (a + "").toLowerCase(), d = !0;
        }
    }
    function u(a, b, c, d) {
      c = Number(c) || 0;
      var e = a.length - c;
      d ? (d = Number(d), d > e && (d = e)) : d = e;
      var f = b.length;
      if (f % 2 !== 0)
        throw new Error("Invalid hex string");
      d > f / 2 && (d = f / 2);
      for (var g = 0; d > g; g++) {
        var h = parseInt(b.substr(2 * g, 2), 16);
        if (isNaN(h))
          throw new Error("Invalid hex string");
        a[c + g] = h;
      }
      return g;
    }
    function v(a, b, c, d) {
      return V(R(b, a.length - c), a, c, d);
    }
    function w(a, b, c, d) {
      return V(S(b), a, c, d);
    }
    function x(a, b, c, d) {
      return w(a, b, c, d);
    }
    function y(a, b, c, d) {
      return V(U(b), a, c, d);
    }
    function z(a, b, c, d) {
      return V(T(b, a.length - c), a, c, d);
    }
    function A(a, b, c) {
      return 0 === b && c === a.length ? X.fromByteArray(a) : X.fromByteArray(a.slice(b, c));
    }
    function B(a, b, c) {
      c = Math.min(a.length, c);
      for (var d = [],
          e = b; c > e; ) {
        var f = a[e],
            g = null,
            h = f > 239 ? 4 : f > 223 ? 3 : f > 191 ? 2 : 1;
        if (c >= e + h) {
          var i,
              j,
              k,
              l;
          switch (h) {
            case 1:
              128 > f && (g = f);
              break;
            case 2:
              i = a[e + 1], 128 === (192 & i) && (l = (31 & f) << 6 | 63 & i, l > 127 && (g = l));
              break;
            case 3:
              i = a[e + 1], j = a[e + 2], 128 === (192 & i) && 128 === (192 & j) && (l = (15 & f) << 12 | (63 & i) << 6 | 63 & j, l > 2047 && (55296 > l || l > 57343) && (g = l));
              break;
            case 4:
              i = a[e + 1], j = a[e + 2], k = a[e + 3], 128 === (192 & i) && 128 === (192 & j) && 128 === (192 & k) && (l = (15 & f) << 18 | (63 & i) << 12 | (63 & j) << 6 | 63 & k, l > 65535 && 1114112 > l && (g = l));
          }
        }
        null === g ? (g = 65533, h = 1) : g > 65535 && (g -= 65536, d.push(g >>> 10 & 1023 | 55296), g = 56320 | 1023 & g), d.push(g), e += h;
      }
      return C(d);
    }
    function C(a) {
      var b = a.length;
      if (_ >= b)
        return String.fromCharCode.apply(String, a);
      for (var c = "",
          d = 0; b > d; )
        c += String.fromCharCode.apply(String, a.slice(d, d += _));
      return c;
    }
    function D(a, b, c) {
      var d = "";
      c = Math.min(a.length, c);
      for (var e = b; c > e; e++)
        d += String.fromCharCode(127 & a[e]);
      return d;
    }
    function E(a, b, c) {
      var d = "";
      c = Math.min(a.length, c);
      for (var e = b; c > e; e++)
        d += String.fromCharCode(a[e]);
      return d;
    }
    function F(a, b, c) {
      var d = a.length;
      (!b || 0 > b) && (b = 0), (!c || 0 > c || c > d) && (c = d);
      for (var e = "",
          f = b; c > f; f++)
        e += Q(a[f]);
      return e;
    }
    function G(a, b, c) {
      for (var d = a.slice(b, c),
          e = "",
          f = 0; f < d.length; f += 2)
        e += String.fromCharCode(d[f] + 256 * d[f + 1]);
      return e;
    }
    function H(a, b, c) {
      if (a % 1 !== 0 || 0 > a)
        throw new RangeError("offset is not uint");
      if (a + b > c)
        throw new RangeError("Trying to access beyond buffer length");
    }
    function I(a, b, c, d, e, g) {
      if (!f.isBuffer(a))
        throw new TypeError("buffer must be a Buffer instance");
      if (b > e || g > b)
        throw new RangeError("value is out of bounds");
      if (c + d > a.length)
        throw new RangeError("index out of range");
    }
    function J(a, b, c, d) {
      0 > b && (b = 65535 + b + 1);
      for (var e = 0,
          f = Math.min(a.length - c, 2); f > e; e++)
        a[c + e] = (b & 255 << 8 * (d ? e : 1 - e)) >>> 8 * (d ? e : 1 - e);
    }
    function K(a, b, c, d) {
      0 > b && (b = 4294967295 + b + 1);
      for (var e = 0,
          f = Math.min(a.length - c, 4); f > e; e++)
        a[c + e] = b >>> 8 * (d ? e : 3 - e) & 255;
    }
    function L(a, b, c, d, e, f) {
      if (c + d > a.length)
        throw new RangeError("index out of range");
      if (0 > c)
        throw new RangeError("index out of range");
    }
    function M(a, b, c, d, e) {
      return e || L(a, b, c, 4, 3.4028234663852886e38, -3.4028234663852886e38), Y.write(a, b, c, d, 23, 4), c + 4;
    }
    function N(a, b, c, d, e) {
      return e || L(a, b, c, 8, 1.7976931348623157e308, -1.7976931348623157e308), Y.write(a, b, c, d, 52, 8), c + 8;
    }
    function O(a) {
      if (a = P(a).replace(aa, ""), a.length < 2)
        return "";
      for (; a.length % 4 !== 0; )
        a += "=";
      return a;
    }
    function P(a) {
      return a.trim ? a.trim() : a.replace(/^\s+|\s+$/g, "");
    }
    function Q(a) {
      return 16 > a ? "0" + a.toString(16) : a.toString(16);
    }
    function R(a, b) {
      b = b || 1 / 0;
      for (var c,
          d = a.length,
          e = null,
          f = [],
          g = 0; d > g; g++) {
        if (c = a.charCodeAt(g), c > 55295 && 57344 > c) {
          if (!e) {
            if (c > 56319) {
              (b -= 3) > -1 && f.push(239, 191, 189);
              continue;
            }
            if (g + 1 === d) {
              (b -= 3) > -1 && f.push(239, 191, 189);
              continue;
            }
            e = c;
            continue;
          }
          if (56320 > c) {
            (b -= 3) > -1 && f.push(239, 191, 189), e = c;
            continue;
          }
          c = (e - 55296 << 10 | c - 56320) + 65536;
        } else
          e && (b -= 3) > -1 && f.push(239, 191, 189);
        if (e = null, 128 > c) {
          if ((b -= 1) < 0)
            break;
          f.push(c);
        } else if (2048 > c) {
          if ((b -= 2) < 0)
            break;
          f.push(c >> 6 | 192, 63 & c | 128);
        } else if (65536 > c) {
          if ((b -= 3) < 0)
            break;
          f.push(c >> 12 | 224, c >> 6 & 63 | 128, 63 & c | 128);
        } else {
          if (!(1114112 > c))
            throw new Error("Invalid code point");
          if ((b -= 4) < 0)
            break;
          f.push(c >> 18 | 240, c >> 12 & 63 | 128, c >> 6 & 63 | 128, 63 & c | 128);
        }
      }
      return f;
    }
    function S(a) {
      for (var b = [],
          c = 0; c < a.length; c++)
        b.push(255 & a.charCodeAt(c));
      return b;
    }
    function T(a, b) {
      for (var c,
          d,
          e,
          f = [],
          g = 0; g < a.length && !((b -= 2) < 0); g++)
        c = a.charCodeAt(g), d = c >> 8, e = c % 256, f.push(e), f.push(d);
      return f;
    }
    function U(a) {
      return X.toByteArray(O(a));
    }
    function V(a, b, c, d) {
      for (var e = 0; d > e && !(e + c >= b.length || e >= a.length); e++)
        b[e + c] = a[e];
      return e;
    }
    var W = (a("3"), this),
        X = a("98"),
        Y = a("99"),
        Z = a("9a");
    b.Buffer = f, b.SlowBuffer = r, b.INSPECT_MAX_BYTES = 50, f.poolSize = 8192;
    var $ = {};
    f.TYPED_ARRAY_SUPPORT = void 0 !== W.TYPED_ARRAY_SUPPORT ? W.TYPED_ARRAY_SUPPORT : d(), f._augment = function(a) {
      return a.__proto__ = f.prototype, a;
    }, f.TYPED_ARRAY_SUPPORT ? (f.prototype.__proto__ = Uint8Array.prototype, f.__proto__ = Uint8Array, "undefined" != typeof Symbol && Symbol.species && f[Symbol.species] === f && Object.defineProperty(f, Symbol.species, {
      value: null,
      configurable: !0
    })) : (f.prototype.length = void 0, f.prototype.parent = void 0), f.isBuffer = function(a) {
      return !(null == a || !a._isBuffer);
    }, f.compare = function(a, b) {
      if (!f.isBuffer(a) || !f.isBuffer(b))
        throw new TypeError("Arguments must be Buffers");
      if (a === b)
        return 0;
      for (var c = a.length,
          d = b.length,
          e = 0,
          g = Math.min(c, d); g > e && a[e] === b[e]; )
        ++e;
      return e !== g && (c = a[e], d = b[e]), d > c ? -1 : c > d ? 1 : 0;
    }, f.isEncoding = function(a) {
      switch (String(a).toLowerCase()) {
        case "hex":
        case "utf8":
        case "utf-8":
        case "ascii":
        case "binary":
        case "base64":
        case "raw":
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return !0;
        default:
          return !1;
      }
    }, f.concat = function(a, b) {
      if (!Z(a))
        throw new TypeError("list argument must be an Array of Buffers.");
      if (0 === a.length)
        return new f(0);
      var c;
      if (void 0 === b)
        for (b = 0, c = 0; c < a.length; c++)
          b += a[c].length;
      var d = new f(b),
          e = 0;
      for (c = 0; c < a.length; c++) {
        var g = a[c];
        g.copy(d, e), e += g.length;
      }
      return d;
    }, f.byteLength = s, f.prototype._isBuffer = !0, f.prototype.toString = function() {
      var a = 0 | this.length;
      return 0 === a ? "" : 0 === arguments.length ? B(this, 0, a) : t.apply(this, arguments);
    }, f.prototype.equals = function(a) {
      if (!f.isBuffer(a))
        throw new TypeError("Argument must be a Buffer");
      return this === a ? !0 : 0 === f.compare(this, a);
    }, f.prototype.inspect = function() {
      var a = "",
          c = b.INSPECT_MAX_BYTES;
      return this.length > 0 && (a = this.toString("hex", 0, c).match(/.{2}/g).join(" "), this.length > c && (a += " ... ")), "<Buffer " + a + ">";
    }, f.prototype.compare = function(a) {
      if (!f.isBuffer(a))
        throw new TypeError("Argument must be a Buffer");
      return this === a ? 0 : f.compare(this, a);
    }, f.prototype.indexOf = function(a, b) {
      function c(a, b, c) {
        for (var d = -1,
            e = 0; c + e < a.length; e++)
          if (a[c + e] === b[-1 === d ? 0 : e - d]) {
            if (-1 === d && (d = e), e - d + 1 === b.length)
              return c + d;
          } else
            d = -1;
        return -1;
      }
      if (b > 2147483647 ? b = 2147483647 : -2147483648 > b && (b = -2147483648), b >>= 0, 0 === this.length)
        return -1;
      if (b >= this.length)
        return -1;
      if (0 > b && (b = Math.max(this.length + b, 0)), "string" == typeof a)
        return 0 === a.length ? -1 : String.prototype.indexOf.call(this, a, b);
      if (f.isBuffer(a))
        return c(this, a, b);
      if ("number" == typeof a)
        return f.TYPED_ARRAY_SUPPORT && "function" === Uint8Array.prototype.indexOf ? Uint8Array.prototype.indexOf.call(this, a, b) : c(this, [a], b);
      throw new TypeError("val must be string, number or Buffer");
    }, f.prototype.write = function(a, b, c, d) {
      if (void 0 === b)
        d = "utf8", c = this.length, b = 0;
      else if (void 0 === c && "string" == typeof b)
        d = b, c = this.length, b = 0;
      else if (isFinite(b))
        b = 0 | b, isFinite(c) ? (c = 0 | c, void 0 === d && (d = "utf8")) : (d = c, c = void 0);
      else {
        var e = d;
        d = b, b = 0 | c, c = e;
      }
      var f = this.length - b;
      if ((void 0 === c || c > f) && (c = f), a.length > 0 && (0 > c || 0 > b) || b > this.length)
        throw new RangeError("attempt to write outside buffer bounds");
      d || (d = "utf8");
      for (var g = !1; ; )
        switch (d) {
          case "hex":
            return u(this, a, b, c);
          case "utf8":
          case "utf-8":
            return v(this, a, b, c);
          case "ascii":
            return w(this, a, b, c);
          case "binary":
            return x(this, a, b, c);
          case "base64":
            return y(this, a, b, c);
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return z(this, a, b, c);
          default:
            if (g)
              throw new TypeError("Unknown encoding: " + d);
            d = ("" + d).toLowerCase(), g = !0;
        }
    }, f.prototype.toJSON = function() {
      return {
        type: "Buffer",
        data: Array.prototype.slice.call(this._arr || this, 0)
      };
    };
    var _ = 4096;
    f.prototype.slice = function(a, b) {
      var c = this.length;
      a = ~~a, b = void 0 === b ? c : ~~b, 0 > a ? (a += c, 0 > a && (a = 0)) : a > c && (a = c), 0 > b ? (b += c, 0 > b && (b = 0)) : b > c && (b = c), a > b && (b = a);
      var d;
      if (f.TYPED_ARRAY_SUPPORT)
        d = this.subarray(a, b), d.__proto__ = f.prototype;
      else {
        var e = b - a;
        d = new f(e, void 0);
        for (var g = 0; e > g; g++)
          d[g] = this[g + a];
      }
      return d.length && (d.parent = this.parent || this), d;
    }, f.prototype.readUIntLE = function(a, b, c) {
      a = 0 | a, b = 0 | b, c || H(a, b, this.length);
      for (var d = this[a],
          e = 1,
          f = 0; ++f < b && (e *= 256); )
        d += this[a + f] * e;
      return d;
    }, f.prototype.readUIntBE = function(a, b, c) {
      a = 0 | a, b = 0 | b, c || H(a, b, this.length);
      for (var d = this[a + --b],
          e = 1; b > 0 && (e *= 256); )
        d += this[a + --b] * e;
      return d;
    }, f.prototype.readUInt8 = function(a, b) {
      return b || H(a, 1, this.length), this[a];
    }, f.prototype.readUInt16LE = function(a, b) {
      return b || H(a, 2, this.length), this[a] | this[a + 1] << 8;
    }, f.prototype.readUInt16BE = function(a, b) {
      return b || H(a, 2, this.length), this[a] << 8 | this[a + 1];
    }, f.prototype.readUInt32LE = function(a, b) {
      return b || H(a, 4, this.length), (this[a] | this[a + 1] << 8 | this[a + 2] << 16) + 16777216 * this[a + 3];
    }, f.prototype.readUInt32BE = function(a, b) {
      return b || H(a, 4, this.length), 16777216 * this[a] + (this[a + 1] << 16 | this[a + 2] << 8 | this[a + 3]);
    }, f.prototype.readIntLE = function(a, b, c) {
      a = 0 | a, b = 0 | b, c || H(a, b, this.length);
      for (var d = this[a],
          e = 1,
          f = 0; ++f < b && (e *= 256); )
        d += this[a + f] * e;
      return e *= 128, d >= e && (d -= Math.pow(2, 8 * b)), d;
    }, f.prototype.readIntBE = function(a, b, c) {
      a = 0 | a, b = 0 | b, c || H(a, b, this.length);
      for (var d = b,
          e = 1,
          f = this[a + --d]; d > 0 && (e *= 256); )
        f += this[a + --d] * e;
      return e *= 128, f >= e && (f -= Math.pow(2, 8 * b)), f;
    }, f.prototype.readInt8 = function(a, b) {
      return b || H(a, 1, this.length), 128 & this[a] ? -1 * (255 - this[a] + 1) : this[a];
    }, f.prototype.readInt16LE = function(a, b) {
      b || H(a, 2, this.length);
      var c = this[a] | this[a + 1] << 8;
      return 32768 & c ? 4294901760 | c : c;
    }, f.prototype.readInt16BE = function(a, b) {
      b || H(a, 2, this.length);
      var c = this[a + 1] | this[a] << 8;
      return 32768 & c ? 4294901760 | c : c;
    }, f.prototype.readInt32LE = function(a, b) {
      return b || H(a, 4, this.length), this[a] | this[a + 1] << 8 | this[a + 2] << 16 | this[a + 3] << 24;
    }, f.prototype.readInt32BE = function(a, b) {
      return b || H(a, 4, this.length), this[a] << 24 | this[a + 1] << 16 | this[a + 2] << 8 | this[a + 3];
    }, f.prototype.readFloatLE = function(a, b) {
      return b || H(a, 4, this.length), Y.read(this, a, !0, 23, 4);
    }, f.prototype.readFloatBE = function(a, b) {
      return b || H(a, 4, this.length), Y.read(this, a, !1, 23, 4);
    }, f.prototype.readDoubleLE = function(a, b) {
      return b || H(a, 8, this.length), Y.read(this, a, !0, 52, 8);
    }, f.prototype.readDoubleBE = function(a, b) {
      return b || H(a, 8, this.length), Y.read(this, a, !1, 52, 8);
    }, f.prototype.writeUIntLE = function(a, b, c, d) {
      a = +a, b = 0 | b, c = 0 | c, d || I(this, a, b, c, Math.pow(2, 8 * c), 0);
      var e = 1,
          f = 0;
      for (this[b] = 255 & a; ++f < c && (e *= 256); )
        this[b + f] = a / e & 255;
      return b + c;
    }, f.prototype.writeUIntBE = function(a, b, c, d) {
      a = +a, b = 0 | b, c = 0 | c, d || I(this, a, b, c, Math.pow(2, 8 * c), 0);
      var e = c - 1,
          f = 1;
      for (this[b + e] = 255 & a; --e >= 0 && (f *= 256); )
        this[b + e] = a / f & 255;
      return b + c;
    }, f.prototype.writeUInt8 = function(a, b, c) {
      return a = +a, b = 0 | b, c || I(this, a, b, 1, 255, 0), f.TYPED_ARRAY_SUPPORT || (a = Math.floor(a)), this[b] = 255 & a, b + 1;
    }, f.prototype.writeUInt16LE = function(a, b, c) {
      return a = +a, b = 0 | b, c || I(this, a, b, 2, 65535, 0), f.TYPED_ARRAY_SUPPORT ? (this[b] = 255 & a, this[b + 1] = a >>> 8) : J(this, a, b, !0), b + 2;
    }, f.prototype.writeUInt16BE = function(a, b, c) {
      return a = +a, b = 0 | b, c || I(this, a, b, 2, 65535, 0), f.TYPED_ARRAY_SUPPORT ? (this[b] = a >>> 8, this[b + 1] = 255 & a) : J(this, a, b, !1), b + 2;
    }, f.prototype.writeUInt32LE = function(a, b, c) {
      return a = +a, b = 0 | b, c || I(this, a, b, 4, 4294967295, 0), f.TYPED_ARRAY_SUPPORT ? (this[b + 3] = a >>> 24, this[b + 2] = a >>> 16, this[b + 1] = a >>> 8, this[b] = 255 & a) : K(this, a, b, !0), b + 4;
    }, f.prototype.writeUInt32BE = function(a, b, c) {
      return a = +a, b = 0 | b, c || I(this, a, b, 4, 4294967295, 0), f.TYPED_ARRAY_SUPPORT ? (this[b] = a >>> 24, this[b + 1] = a >>> 16, this[b + 2] = a >>> 8, this[b + 3] = 255 & a) : K(this, a, b, !1), b + 4;
    }, f.prototype.writeIntLE = function(a, b, c, d) {
      if (a = +a, b = 0 | b, !d) {
        var e = Math.pow(2, 8 * c - 1);
        I(this, a, b, c, e - 1, -e);
      }
      var f = 0,
          g = 1,
          h = 0 > a ? 1 : 0;
      for (this[b] = 255 & a; ++f < c && (g *= 256); )
        this[b + f] = (a / g >> 0) - h & 255;
      return b + c;
    }, f.prototype.writeIntBE = function(a, b, c, d) {
      if (a = +a, b = 0 | b, !d) {
        var e = Math.pow(2, 8 * c - 1);
        I(this, a, b, c, e - 1, -e);
      }
      var f = c - 1,
          g = 1,
          h = 0 > a ? 1 : 0;
      for (this[b + f] = 255 & a; --f >= 0 && (g *= 256); )
        this[b + f] = (a / g >> 0) - h & 255;
      return b + c;
    }, f.prototype.writeInt8 = function(a, b, c) {
      return a = +a, b = 0 | b, c || I(this, a, b, 1, 127, -128), f.TYPED_ARRAY_SUPPORT || (a = Math.floor(a)), 0 > a && (a = 255 + a + 1), this[b] = 255 & a, b + 1;
    }, f.prototype.writeInt16LE = function(a, b, c) {
      return a = +a, b = 0 | b, c || I(this, a, b, 2, 32767, -32768), f.TYPED_ARRAY_SUPPORT ? (this[b] = 255 & a, this[b + 1] = a >>> 8) : J(this, a, b, !0), b + 2;
    }, f.prototype.writeInt16BE = function(a, b, c) {
      return a = +a, b = 0 | b, c || I(this, a, b, 2, 32767, -32768), f.TYPED_ARRAY_SUPPORT ? (this[b] = a >>> 8, this[b + 1] = 255 & a) : J(this, a, b, !1), b + 2;
    }, f.prototype.writeInt32LE = function(a, b, c) {
      return a = +a, b = 0 | b, c || I(this, a, b, 4, 2147483647, -2147483648), f.TYPED_ARRAY_SUPPORT ? (this[b] = 255 & a, this[b + 1] = a >>> 8, this[b + 2] = a >>> 16, this[b + 3] = a >>> 24) : K(this, a, b, !0), b + 4;
    }, f.prototype.writeInt32BE = function(a, b, c) {
      return a = +a, b = 0 | b, c || I(this, a, b, 4, 2147483647, -2147483648), 0 > a && (a = 4294967295 + a + 1), f.TYPED_ARRAY_SUPPORT ? (this[b] = a >>> 24, this[b + 1] = a >>> 16, this[b + 2] = a >>> 8, this[b + 3] = 255 & a) : K(this, a, b, !1), b + 4;
    }, f.prototype.writeFloatLE = function(a, b, c) {
      return M(this, a, b, !0, c);
    }, f.prototype.writeFloatBE = function(a, b, c) {
      return M(this, a, b, !1, c);
    }, f.prototype.writeDoubleLE = function(a, b, c) {
      return N(this, a, b, !0, c);
    }, f.prototype.writeDoubleBE = function(a, b, c) {
      return N(this, a, b, !1, c);
    }, f.prototype.copy = function(a, b, c, d) {
      if (c || (c = 0), d || 0 === d || (d = this.length), b >= a.length && (b = a.length), b || (b = 0), d > 0 && c > d && (d = c), d === c)
        return 0;
      if (0 === a.length || 0 === this.length)
        return 0;
      if (0 > b)
        throw new RangeError("targetStart out of bounds");
      if (0 > c || c >= this.length)
        throw new RangeError("sourceStart out of bounds");
      if (0 > d)
        throw new RangeError("sourceEnd out of bounds");
      d > this.length && (d = this.length), a.length - b < d - c && (d = a.length - b + c);
      var e,
          g = d - c;
      if (this === a && b > c && d > b)
        for (e = g - 1; e >= 0; e--)
          a[e + b] = this[e + c];
      else if (1e3 > g || !f.TYPED_ARRAY_SUPPORT)
        for (e = 0; g > e; e++)
          a[e + b] = this[e + c];
      else
        Uint8Array.prototype.set.call(a, this.subarray(c, c + g), b);
      return g;
    }, f.prototype.fill = function(a, b, c) {
      if (a || (a = 0), b || (b = 0), c || (c = this.length), b > c)
        throw new RangeError("end < start");
      if (c !== b && 0 !== this.length) {
        if (0 > b || b >= this.length)
          throw new RangeError("start out of bounds");
        if (0 > c || c > this.length)
          throw new RangeError("end out of bounds");
        var d;
        if ("number" == typeof a)
          for (d = b; c > d; d++)
            this[d] = a;
        else {
          var e = R(a.toString()),
              f = e.length;
          for (d = b; c > d; d++)
            this[d] = e[d % f];
        }
        return this;
      }
    };
    var aa = /[^+\/0-9A-Za-z-_]/g;
    return c.exports;
  }), a.registerDynamic("10", ["9b"], !0, function(a, b, c) {
    return c.exports = a("9b").Buffer, c.exports;
  }), a.registerDynamic("9c", ["9", "a", "84", "97", "3", "10"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("10")),
        e = a("9")["default"],
        f = a("a")["default"];
    b.__esModule = !0;
    var g = a("84"),
        h = f(g),
        i = a("97"),
        j = f(i),
        d = function() {
          function a(b, c) {
            e(this, a), this.printedCommentStarts = {}, this.parenPushNewlineState = null, this.position = b, this._indent = c.indent.base, this.format = c, this.buf = "", this.last = "";
          }
          return a.prototype.catchUp = function(a) {
            if (a.loc && this.format.retainLines && this.buf)
              for (; this.position.line < a.loc.start.line; )
                this._push("\n");
          }, a.prototype.get = function() {
            return j["default"](this.buf);
          }, a.prototype.getIndent = function() {
            return this.format.compact || this.format.concise ? "" : h["default"](this.format.indent.style, this._indent);
          }, a.prototype.indentSize = function() {
            return this.getIndent().length;
          }, a.prototype.indent = function() {
            this._indent++;
          }, a.prototype.dedent = function() {
            this._indent--;
          }, a.prototype.semicolon = function() {
            this.push(";");
          }, a.prototype.ensureSemicolon = function() {
            this.isLast(";") || this.semicolon();
          }, a.prototype.rightBrace = function() {
            this.newline(!0), this.format.minified && !this._lastPrintedIsEmptyStatement && this._removeLast(";"), this.push("}");
          }, a.prototype.keyword = function(a) {
            this.push(a), this.space();
          }, a.prototype.space = function(a) {
            (a || !this.format.compact) && (a || this.buf && !this.isLast(" ") && !this.isLast("\n")) && this.push(" ");
          }, a.prototype.removeLast = function(a) {
            return this.format.compact ? void 0 : this._removeLast(a);
          }, a.prototype._removeLast = function(a) {
            this._isLast(a) && (this.buf = this.buf.slice(0, -1), this.last = this.buf[this.buf.length - 1], this.position.unshift(a));
          }, a.prototype.startTerminatorless = function() {
            return this.parenPushNewlineState = {printed: !1};
          }, a.prototype.endTerminatorless = function(a) {
            a.printed && (this.dedent(), this.newline(), this.push(")"));
          }, a.prototype.newline = function(a, b) {
            return this.format.retainLines || this.format.compact ? void 0 : this.format.concise ? void this.space() : void(this.endsWith("\n\n") || ("boolean" == typeof a && (b = a), "number" != typeof a && (a = 1), a = Math.min(2, a), (this.endsWith("{\n") || this.endsWith(":\n")) && a--, 0 >= a || (b && this.removeLast("\n"), this.removeLast(" "), this._removeSpacesAfterLastNewline(), this._push(h["default"]("\n", a)))));
          }, a.prototype._removeSpacesAfterLastNewline = function() {
            var a = this.buf.lastIndexOf("\n");
            a >= 0 && this.get().length <= a && (this.buf = this.buf.substring(0, a + 1), this.last = "\n");
          }, a.prototype.push = function(a, b) {
            if (!this.format.compact && this._indent && !b && "\n" !== a) {
              var c = this.getIndent();
              a = a.replace(/\n/g, "\n" + c), this.isLast("\n") && this._push(c);
            }
            this._push(a);
          }, a.prototype._push = function(a) {
            var b = this.parenPushNewlineState;
            if (b)
              for (var c = 0; c < a.length; c++) {
                var d = a[c];
                if (" " !== d) {
                  this.parenPushNewlineState = null, ("\n" === d || "/" === d) && (this._push("("), this.indent(), b.printed = !0);
                  break;
                }
              }
            this.position.push(a), this.buf += a, this.last = a[a.length - 1];
          }, a.prototype.endsWith = function(a) {
            return 1 === a.length ? this.last === a : this.buf.slice(-a.length) === a;
          }, a.prototype.isLast = function(a) {
            return this.format.compact ? !1 : this._isLast(a);
          }, a.prototype._isLast = function(a) {
            var b = this.last;
            return Array.isArray(a) ? a.indexOf(b) >= 0 : a === b;
          }, a;
        }();
    return b["default"] = d, c.exports = b["default"], c.exports;
  }), a.registerDynamic("9d", ["3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      this.print(a.tag, a), this.print(a.quasi, a);
    }
    function e(a) {
      this._push(a.value.raw);
    }
    function f(a) {
      this.push("`");
      for (var b = a.quasis,
          c = 0; c < b.length; c++)
        this.print(b[c], a), c + 1 < b.length && (this._push("${ "), this.print(a.expressions[c], a), this.push(" }"));
      this._push("`");
    }
    a("3");
    return b.__esModule = !0, b.TaggedTemplateExpression = d, b.TemplateElement = e, b.TemplateLiteral = f, c.exports;
  }), a.registerDynamic("9e", ["9f", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("9f"));
    return c.exports = Number.isInteger || function(a) {
      return "number" == typeof a && d(a) && Math.floor(a) === a;
    }, c.exports;
  }), a.registerDynamic("2d", ["45", "3"], !0, function(a, b, c) {
    function d(a) {
      return a === !0 || a === !1 || e(a) && h.call(a) == f;
    }
    var e = (a("3"), a("45")),
        f = "[object Boolean]",
        g = Object.prototype,
        h = g.toString;
    return c.exports = d, c.exports;
  }), a.registerDynamic("a0", ["3"], !0, function(a, b, c) {
    function d(a, b) {
      for (var c = -1,
          d = a.length,
          e = Array(d); ++c < d; )
        e[c] = b(a[c], c, a);
      return e;
    }
    a("3");
    return c.exports = d, c.exports;
  }), a.registerDynamic("1d", ["a1", "3f", "3"], !0, function(a, b, c) {
    function d(a, b) {
      var c = -1,
          d = f(a) ? Array(a.length) : [];
      return e(a, function(a, e, f) {
        d[++c] = b(a, e, f);
      }), d;
    }
    var e = (a("3"), a("a1")),
        f = a("3f");
    return c.exports = d, c.exports;
  }), a.registerDynamic("a2", ["a0", "1c", "1d", "3e", "3"], !0, function(a, b, c) {
    function d(a, b, c) {
      var d = h(a) ? e : g;
      return b = f(b, c, 3), d(a, b);
    }
    var e = (a("3"), a("a0")),
        f = a("1c"),
        g = a("1d"),
        h = a("3e");
    return c.exports = d, c.exports;
  }), a.registerDynamic("a3", ["a", "4", "2d", "a4", "a2", "5", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      var b = arguments.length <= 1 || void 0 === arguments[1] ? {} : arguments[1];
      return p.isMemberExpression(a) ? (d(a.object, b), a.computed && d(a.property, b)) : p.isBinary(a) || p.isAssignmentExpression(a) ? (d(a.left, b), d(a.right, b)) : p.isCallExpression(a) ? (b.hasCall = !0, d(a.callee, b)) : p.isFunction(a) ? b.hasFunction = !0 : p.isIdentifier(a) && (b.hasHelper = b.hasHelper || e(a.callee)), b;
    }
    function e(a) {
      return p.isMemberExpression(a) ? e(a.object) || e(a.property) : p.isIdentifier(a) ? "require" === a.name || "_" === a.name[0] : p.isCallExpression(a) ? e(a.callee) : p.isBinary(a) || p.isAssignmentExpression(a) ? p.isIdentifier(a.left) && e(a.left) || e(a.right) : !1;
    }
    function f(a) {
      return p.isLiteral(a) || p.isObjectExpression(a) || p.isArrayExpression(a) || p.isIdentifier(a) || p.isMemberExpression(a);
    }
    var g = (a("3"), a("a")["default"]),
        h = a("4")["default"],
        i = a("2d"),
        j = g(i),
        k = a("a4"),
        l = g(k),
        m = a("a2"),
        n = g(m),
        o = a("5"),
        p = h(o);
    return b.nodes = {
      AssignmentExpression: function(a) {
        var b = d(a.right);
        return b.hasCall && b.hasHelper || b.hasFunction ? {
          before: b.hasFunction,
          after: !0
        } : void 0;
      },
      SwitchCase: function(a, b) {
        return {before: a.consequent.length || b.cases[0] === a};
      },
      LogicalExpression: function(a) {
        return p.isFunction(a.left) || p.isFunction(a.right) ? {after: !0} : void 0;
      },
      Literal: function(a) {
        return "use strict" === a.value ? {after: !0} : void 0;
      },
      CallExpression: function(a) {
        return p.isFunction(a.callee) || e(a) ? {
          before: !0,
          after: !0
        } : void 0;
      },
      VariableDeclaration: function(a) {
        for (var b = 0; b < a.declarations.length; b++) {
          var c = a.declarations[b],
              g = e(c.id) && !f(c.init);
          if (!g) {
            var h = d(c.init);
            g = e(c.init) && h.hasCall || h.hasFunction;
          }
          if (g)
            return {
              before: !0,
              after: !0
            };
        }
      },
      IfStatement: function(a) {
        return p.isBlockStatement(a.consequent) ? {
          before: !0,
          after: !0
        } : void 0;
      }
    }, b.nodes.ObjectProperty = b.nodes.ObjectMethod = b.nodes.SpreadProperty = function(a, b) {
      return b.properties[0] === a ? {before: !0} : void 0;
    }, b.list = {
      VariableDeclaration: function(a) {
        return n["default"](a.declarations, "init");
      },
      ArrayExpression: function(a) {
        return a.elements;
      },
      ObjectExpression: function(a) {
        return a.properties;
      }
    }, l["default"]({
      Function: !0,
      Class: !0,
      Loop: !0,
      LabeledStatement: !0,
      SwitchStatement: !0,
      TryStatement: !0
    }, function(a, c) {
      j["default"](a) && (a = {
        after: a,
        before: a
      }), l["default"]([c].concat(p.FLIPPED_ALIAS_KEYS[c] || []), function(c) {
        b.nodes[c] = function() {
          return a;
        };
      });
    }), c.exports;
  }), a.registerDynamic("a5", ["4", "5", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a, b) {
      return t.isArrayTypeAnnotation(b);
    }
    function e(a, b) {
      return t.isMemberExpression(b) && b.object === a ? !0 : !1;
    }
    function f(a, b, c) {
      return t.isExpressionStatement(b) ? !0 : q(c, !0);
    }
    function g(a, b) {
      if ((t.isCallExpression(b) || t.isNewExpression(b)) && b.callee === a)
        return !0;
      if (t.isUnaryLike(b))
        return !0;
      if (t.isMemberExpression(b) && b.object === a)
        return !0;
      if (t.isBinary(b)) {
        var c = b.operator,
            d = u[c],
            e = a.operator,
            f = u[e];
        if (d > f)
          return !0;
        if (d === f && b.right === a && !t.isLogicalExpression(b))
          return !0;
      }
      return !1;
    }
    function h(a, b) {
      if ("in" === a.operator) {
        if (t.isVariableDeclarator(b))
          return !0;
        if (t.isFor(b))
          return !0;
      }
      return !1;
    }
    function i(a, b) {
      return t.isForStatement(b) ? !1 : t.isExpressionStatement(b) && b.expression === a ? !1 : t.isReturnStatement(b) ? !1 : t.isThrowStatement(b) ? !1 : t.isSwitchStatement(b) && b.discriminant === a ? !1 : t.isWhileStatement(b) && b.test === a ? !1 : t.isIfStatement(b) && b.test === a ? !1 : t.isForInStatement(b) && b.right === a ? !1 : !0;
    }
    function j(a, b) {
      return t.isBinary(b) || t.isUnaryLike(b) || t.isCallExpression(b) || t.isMemberExpression(b) || t.isNewExpression(b);
    }
    function k(a, b) {
      return t.isExpressionStatement(b) ? !0 : t.isExportDeclaration(b) ? !0 : !1;
    }
    function l(a, b) {
      return t.isMemberExpression(b, {object: a}) ? !0 : t.isCallExpression(b, {callee: a}) || t.isNewExpression(b, {callee: a}) ? !0 : !1;
    }
    function m(a, b, c) {
      return t.isExpressionStatement(b) ? !0 : t.isExportDeclaration(b) ? !0 : q(c);
    }
    function n(a, b) {
      return t.isExportDeclaration(b) ? !0 : t.isBinaryExpression(b) || t.isLogicalExpression(b) ? !0 : l(a, b);
    }
    function o(a, b) {
      return t.isUnaryLike(b) ? !0 : t.isBinary(b) ? !0 : t.isConditionalExpression(b, {test: a}) ? !0 : l(a, b);
    }
    function p(a) {
      return t.isObjectPattern(a.left) ? !0 : o.apply(void 0, arguments);
    }
    function q(a) {
      var b = arguments.length <= 1 || void 0 === arguments[1] ? !1 : arguments[1],
          c = a.length - 1,
          d = a[c];
      c--;
      for (var e = a[c]; c > 0; ) {
        if (t.isExpressionStatement(e, {expression: d}))
          return !0;
        if (b && t.isArrowFunctionExpression(e, {body: d}))
          return !0;
        if (!(t.isCallExpression(e, {callee: d}) || t.isSequenceExpression(e) && e.expressions[0] === d || t.isMemberExpression(e, {object: d}) || t.isConditional(e, {test: d}) || t.isBinary(e, {left: d}) || t.isAssignmentExpression(e, {left: d})))
          return !1;
        d = e, c--, e = a[c];
      }
      return !1;
    }
    var r = (a("3"), a("4")["default"]);
    b.__esModule = !0, b.NullableTypeAnnotation = d, b.UpdateExpression = e, b.ObjectExpression = f, b.Binary = g, b.BinaryExpression = h, b.SequenceExpression = i, b.YieldExpression = j, b.ClassExpression = k, b.UnaryLike = l, b.FunctionExpression = m, b.ArrowFunctionExpression = n, b.ConditionalExpression = o, b.AssignmentExpression = p;
    var s = a("5"),
        t = r(s),
        u = {
          "||": 0,
          "&&": 1,
          "|": 2,
          "^": 3,
          "&": 4,
          "==": 5,
          "===": 5,
          "!=": 5,
          "!==": 5,
          "<": 6,
          ">": 6,
          "<=": 6,
          ">=": 6,
          "in": 6,
          "instanceof": 6,
          ">>": 7,
          "<<": 7,
          ">>>": 7,
          "+": 8,
          "-": 8,
          "*": 9,
          "/": 9,
          "%": 9,
          "**": 10
        };
    return b.FunctionTypeAnnotation = d, b.AwaitExpression = j, c.exports;
  }), a.registerDynamic("a6", ["82", "a", "4", "a3", "a5", "5", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a, b, c, d) {
      if (a) {
        for (var e = void 0,
            f = k(a),
            g = 0; g < f.length; g++) {
          var h = f[g];
          if (s.is(h, b)) {
            var i = a[h];
            if (e = i(b, c, d), null != e)
              break;
          }
        }
        return e;
      }
    }
    function e(a) {
      return s.isCallExpression(a) ? !0 : s.isMemberExpression(a) ? e(a.object) || !a.computed && e(a.property) : !1;
    }
    function f(a) {
      return s.isUserWhitespacable(a);
    }
    function g(a, b, c) {
      if (!a)
        return 0;
      s.isExpressionStatement(a) && (a = a.expression);
      var e = d(o["default"].nodes, a, b);
      if (!e) {
        var f = d(o["default"].list, a, b);
        if (f)
          for (var h = 0; h < f.length && !(e = g(f[h], a, c)); h++)
            ;
      }
      return e && e[c] || 0;
    }
    function h(a, b) {
      return g(a, b, "before");
    }
    function i(a, b) {
      return g(a, b, "after");
    }
    function j(a, b, c) {
      return b ? s.isNewExpression(b) && b.callee === a && e(a) ? !0 : d(q, a, b, c) : !1;
    }
    var k = (a("3"), a("82")["default"]),
        l = a("a")["default"],
        m = a("4")["default"];
    b.__esModule = !0, b.isUserWhitespacable = f, b.needsWhitespace = g, b.needsWhitespaceBefore = h, b.needsWhitespaceAfter = i, b.needsParens = j;
    var n = a("a3"),
        o = l(n),
        p = a("a5"),
        q = m(p),
        r = a("5"),
        s = m(r);
    return c.exports;
  }), a.registerDynamic("a7", ["a", "4", "9e", "a8", "5", "a6", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      var b = /[a-z]$/.test(a.operator),
          c = a.argument;
      (E.isUpdateExpression(c) || E.isUnaryExpression(c)) && (b = !0), E.isUnaryExpression(c) && "!" === c.operator && (b = !1), this.push(a.operator), b && this.push(" "), this.print(a.argument, a);
    }
    function e(a) {
      this.push("do"), this.space(), this.print(a.body, a);
    }
    function f(a) {
      this.push("("), this.print(a.expression, a), this.push(")");
    }
    function g(a) {
      a.prefix ? (this.push(a.operator), this.print(a.argument, a)) : (this.print(a.argument, a), this.push(a.operator));
    }
    function h(a) {
      this.print(a.test, a), this.space(), this.push("?"), this.space(), this.print(a.consequent, a), this.space(), this.push(":"), this.space(), this.print(a.alternate, a);
    }
    function i(a, b) {
      this.push("new "), this.print(a.callee, a), (0 !== a.arguments.length || !this.format.minified || E.isCallExpression(b, {callee: a}) || E.isMemberExpression(b) || E.isNewExpression(b)) && (this.push("("), this.printList(a.arguments, a), this.push(")"));
    }
    function j(a) {
      this.printList(a.expressions, a);
    }
    function k() {
      this.push("this");
    }
    function l() {
      this.push("super");
    }
    function m(a) {
      this.push("@"), this.print(a.expression, a), this.newline();
    }
    function n(a) {
      this.print(a.callee, a), a.loc && this.printAuxAfterComment(), this.push("(");
      var b = a._prettyCall && !this.format.retainLines && !this.format.compact,
          c = void 0;
      b && (c = ",\n", this.newline(), this.indent()), this.printList(a.arguments, a, {separator: c}), b && (this.newline(), this.dedent()), this.push(")");
    }
    function o(a) {
      return function(b) {
        if (this.push(a), b.delegate && this.push("*"), b.argument) {
          this.push(" ");
          var c = this.startTerminatorless();
          this.print(b.argument, b), this.endTerminatorless(c);
        }
      };
    }
    function p() {
      this._lastPrintedIsEmptyStatement = !0, this.semicolon();
    }
    function q(a) {
      this.print(a.expression, a), this.semicolon();
    }
    function r(a) {
      this.print(a.left, a), this.space(), this.push("="), this.space(), this.print(a.right, a);
    }
    function s(a, b) {
      var c = this._inForStatementInitCounter && "in" === a.operator && !G.needsParens(a, b);
      c && this.push("("), this.print(a.left, a);
      var d = !this.format.compact || "in" === a.operator || "instanceof" === a.operator;
      if (d && this.push(" "), this.push(a.operator), !d && (d = "<" === a.operator && E.isUnaryExpression(a.right, {
        prefix: !0,
        operator: "!"
      }) && E.isUnaryExpression(a.right.argument, {
        prefix: !0,
        operator: "--"
      }), !d)) {
        var e = w(a.right);
        d = E.isUnaryExpression(e, {
          prefix: !0,
          operator: a.operator
        }) || E.isUpdateExpression(e, {
          prefix: !0,
          operator: a.operator + a.operator
        });
      }
      d && this.push(" "), this.print(a.right, a), c && this.push(")");
    }
    function t(a) {
      this.print(a.object, a), this.push("::"), this.print(a.callee, a);
    }
    function u(a) {
      if (this.print(a.object, a), !a.computed && E.isMemberExpression(a.property))
        throw new TypeError("Got a MemberExpression for MemberExpression property");
      var b = a.computed;
      if (E.isLiteral(a.property) && C["default"](a.property.value) && (b = !0), b)
        this.push("["), this.print(a.property, a), this.push("]");
      else {
        if (E.isNumericLiteral(a.object)) {
          var c = this.getPossibleRaw(a.object) || a.object.value;
          !A["default"](+c) || H.test(c) || I.test(c) || this.endsWith(".") || this.push(".");
        }
        this.push("."), this.print(a.property, a);
      }
    }
    function v(a) {
      this.print(a.meta, a), this.push("."), this.print(a.property, a);
    }
    function w(a) {
      return E.isBinaryExpression(a) ? w(a.left) : a;
    }
    var x = (a("3"), a("a")["default"]),
        y = a("4")["default"];
    b.__esModule = !0, b.UnaryExpression = d, b.DoExpression = e, b.ParenthesizedExpression = f, b.UpdateExpression = g, b.ConditionalExpression = h, b.NewExpression = i, b.SequenceExpression = j, b.ThisExpression = k, b.Super = l, b.Decorator = m, b.CallExpression = n, b.EmptyStatement = p, b.ExpressionStatement = q, b.AssignmentPattern = r, b.AssignmentExpression = s, b.BindExpression = t, b.MemberExpression = u, b.MetaProperty = v;
    var z = a("9e"),
        A = x(z),
        B = a("a8"),
        C = x(B),
        D = a("5"),
        E = y(D),
        F = a("a6"),
        G = y(F),
        H = /e/i,
        I = /\.0+$/,
        J = o("yield");
    b.YieldExpression = J;
    var K = o("await");
    return b.AwaitExpression = K, b.BinaryExpression = s, b.LogicalExpression = s, c.exports;
  }), a.registerDynamic("a9", ["c", "a", "4", "84", "5", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      this.keyword("with"), this.push("("), this.print(a.object, a), this.push(")"), this.printBlock(a);
    }
    function e(a) {
      this.keyword("if"), this.push("("), this.print(a.test, a), this.push(")"), this.space();
      var b = a.alternate && y.isIfStatement(f(a.consequent));
      b && (this.push("{"), this.newline(), this.indent()), this.printAndIndentOnComments(a.consequent, a), b && (this.dedent(), this.newline(), this.push("}")), a.alternate && (this.isLast("}") && this.space(), this.push("else "), this.printAndIndentOnComments(a.alternate, a));
    }
    function f(a) {
      return y.isStatement(a.body) ? f(a.body) : a;
    }
    function g(a) {
      this.keyword("for"), this.push("("), this._inForStatementInitCounter++, this.print(a.init, a), this._inForStatementInitCounter--, this.push(";"), a.test && (this.space(), this.print(a.test, a)), this.push(";"), a.update && (this.space(), this.print(a.update, a)), this.push(")"), this.printBlock(a);
    }
    function h(a) {
      this.keyword("while"), this.push("("), this.print(a.test, a), this.push(")"), this.printBlock(a);
    }
    function i(a) {
      this.push("do "), this.print(a.body, a), this.space(), this.keyword("while"), this.push("("), this.print(a.test, a), this.push(");");
    }
    function j(a) {
      var b = arguments.length <= 1 || void 0 === arguments[1] ? "label" : arguments[1];
      return function(c) {
        this.push(a);
        var d = c[b];
        if (d) {
          this.format.minified && (y.isUnaryExpression(d, {prefix: !0}) || y.isUpdateExpression(d, {prefix: !0})) && z.indexOf(d.operator) > -1 || this.push(" ");
          var e = this.startTerminatorless();
          this.print(d, c), this.endTerminatorless(e);
        }
        this.semicolon();
      };
    }
    function k(a) {
      this.print(a.label, a), this.push(": "), this.print(a.body, a);
    }
    function l(a) {
      this.keyword("try"), this.print(a.block, a), this.space(), a.handlers ? this.print(a.handlers[0], a) : this.print(a.handler, a), a.finalizer && (this.space(), this.push("finally "), this.print(a.finalizer, a));
    }
    function m(a) {
      this.keyword("catch"), this.push("("), this.print(a.param, a), this.push(")"), this.space(), this.print(a.body, a);
    }
    function n(a) {
      this.keyword("switch"), this.push("("), this.print(a.discriminant, a), this.push(")"), this.space(), this.push("{"), this.printSequence(a.cases, a, {
        indent: !0,
        addNewlines: function(b, c) {
          return b || a.cases[a.cases.length - 1] !== c ? void 0 : -1;
        }
      }), this.push("}");
    }
    function o(a) {
      a.test ? (this.push("case "), this.print(a.test, a), this.push(":")) : this.push("default:"), a.consequent.length && (this.newline(), this.printSequence(a.consequent, a, {indent: !0}));
    }
    function p() {
      this.push("debugger;");
    }
    function q(a, b) {
      this.push(a.kind + " ");
      var c = !1;
      if (!y.isFor(b))
        for (var d = a.declarations,
            e = Array.isArray(d),
            f = 0,
            d = e ? d : s(d); ; ) {
          var g;
          if (e) {
            if (f >= d.length)
              break;
            g = d[f++];
          } else {
            if (f = d.next(), f.done)
              break;
            g = f.value;
          }
          var h = g;
          h.init && (c = !0);
        }
      var i = void 0;
      this.format.compact || this.format.concise || !c || this.format.retainLines || (i = ",\n" + w["default"](" ", a.kind.length + 1)), this.printList(a.declarations, a, {separator: i}), (!y.isFor(b) || b.left !== a && b.init !== a) && this.semicolon();
    }
    function r(a) {
      this.print(a.id, a), this.print(a.id.typeAnnotation, a), a.init && (this.space(), this.push("="), this.space(), this.print(a.init, a));
    }
    var s = (a("3"), a("c")["default"]),
        t = a("a")["default"],
        u = a("4")["default"];
    b.__esModule = !0, b.WithStatement = d, b.IfStatement = e, b.ForStatement = g, b.WhileStatement = h, b.DoWhileStatement = i, b.LabeledStatement = k, b.TryStatement = l, b.CatchClause = m, b.SwitchStatement = n, b.SwitchCase = o, b.DebuggerStatement = p, b.VariableDeclaration = q, b.VariableDeclarator = r;
    var v = a("84"),
        w = t(v),
        x = a("5"),
        y = u(x),
        z = y.UPDATE_OPERATORS.concat(y.NUMBER_UNARY_OPERATORS).concat(["!"]),
        A = function(a) {
          return function(b) {
            this.keyword("for"), this.push("("), this.print(b.left, b), this.push(" " + a + " "), this.print(b.right, b), this.push(")"), this.printBlock(b);
          };
        },
        B = A("in");
    b.ForInStatement = B;
    var C = A("of");
    b.ForOfStatement = C;
    var D = j("continue");
    b.ContinueStatement = D;
    var E = j("return", "argument");
    b.ReturnStatement = E;
    var F = j("break");
    b.BreakStatement = F;
    var G = j("throw", "argument");
    return b.ThrowStatement = G, c.exports;
  }), a.registerDynamic("aa", ["3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      this.printJoin(a.decorators, a, {separator: ""}), this.push("class"), a.id && (this.push(" "), this.print(a.id, a)), this.print(a.typeParameters, a), a.superClass && (this.push(" extends "), this.print(a.superClass, a), this.print(a.superTypeParameters, a)), a["implements"] && (this.push(" implements "), this.printJoin(a["implements"], a, {separator: ", "})), this.space(), this.print(a.body, a);
    }
    function e(a) {
      this.push("{"), this.printInnerComments(a), 0 === a.body.length ? this.push("}") : (this.newline(), this.indent(), this.printSequence(a.body, a), this.dedent(), this.rightBrace());
    }
    function f(a) {
      this.printJoin(a.decorators, a, {separator: ""}), a["static"] && this.push("static "), this.print(a.key, a), this.print(a.typeAnnotation, a), a.value && (this.space(), this.push("="), this.space(), this.print(a.value, a)), this.semicolon();
    }
    function g(a) {
      this.printJoin(a.decorators, a, {separator: ""}), a["static"] && this.push("static "), "constructorCall" === a.kind && this.push("call "), this._method(a);
    }
    a("3");
    return b.__esModule = !0, b.ClassDeclaration = d, b.ClassBody = e, b.ClassProperty = f, b.ClassMethod = g, b.ClassExpression = d, c.exports;
  }), a.registerDynamic("ab", ["4", "5", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      var b = this;
      this.print(a.typeParameters, a), this.push("("), this.printList(a.params, a, {iterator: function(a) {
          a.optional && b.push("?"), b.print(a.typeAnnotation, a);
        }}), this.push(")"), a.returnType && this.print(a.returnType, a);
    }
    function e(a) {
      var b = a.kind,
          c = a.key;
      ("method" === b || "init" === b) && a.generator && this.push("*"), ("get" === b || "set" === b) && this.push(b + " "), a.async && this.push("async "), a.computed ? (this.push("["), this.print(c, a), this.push("]")) : this.print(c, a), this._params(a), this.space(), this.print(a.body, a);
    }
    function f(a) {
      a.async && this.push("async "), this.push("function"), a.generator && this.push("*"), a.id ? (this.push(" "), this.print(a.id, a)) : this.space(), this._params(a), this.space(), this.print(a.body, a);
    }
    function g(a) {
      a.async && this.push("async "), 1 === a.params.length && j.isIdentifier(a.params[0]) ? this.print(a.params[0], a) : this._params(a), this.push(" => "), this.print(a.body, a);
    }
    var h = (a("3"), a("4")["default"]);
    b.__esModule = !0, b._params = d, b._method = e, b.FunctionExpression = f, b.ArrowFunctionExpression = g;
    var i = a("5"),
        j = h(i);
    return b.FunctionDeclaration = f, c.exports;
  }), a.registerDynamic("ac", ["4", "5", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      this.print(a.imported, a), a.local && a.local.name !== a.imported.name && (this.push(" as "), this.print(a.local, a));
    }
    function e(a) {
      this.print(a.local, a);
    }
    function f(a) {
      this.print(a.exported, a);
    }
    function g(a) {
      this.print(a.local, a), a.exported && a.local.name !== a.exported.name && (this.push(" as "), this.print(a.exported, a));
    }
    function h(a) {
      this.push("* as "), this.print(a.exported, a);
    }
    function i(a) {
      this.push("export *"), a.exported && (this.push(" as "), this.print(a.exported, a)), this.push(" from "), this.print(a.source, a), this.semicolon();
    }
    function j() {
      this.push("export "), l.apply(this, arguments);
    }
    function k() {
      this.push("export default "), l.apply(this, arguments);
    }
    function l(a) {
      if (a.declaration) {
        var b = a.declaration;
        if (this.print(b, a), q.isStatement(b) || q.isFunction(b) || q.isClass(b))
          return;
      } else {
        "type" === a.exportKind && this.push("type ");
        for (var c = a.specifiers.slice(0),
            d = !1; ; ) {
          var e = c[0];
          if (!q.isExportDefaultSpecifier(e) && !q.isExportNamespaceSpecifier(e))
            break;
          d = !0, this.print(c.shift(), a), c.length && this.push(", ");
        }
        (c.length || !c.length && !d) && (this.push("{"), c.length && (this.space(), this.printJoin(c, a, {separator: ", "}), this.space()), this.push("}")), a.source && (this.push(" from "), this.print(a.source, a));
      }
      this.ensureSemicolon();
    }
    function m(a) {
      this.push("import "), ("type" === a.importKind || "typeof" === a.importKind) && this.push(a.importKind + " ");
      var b = a.specifiers.slice(0);
      if (b && b.length) {
        for (; ; ) {
          var c = b[0];
          if (!q.isImportDefaultSpecifier(c) && !q.isImportNamespaceSpecifier(c))
            break;
          this.print(b.shift(), a), b.length && this.push(", ");
        }
        b.length && (this.push("{"), this.space(), this.printJoin(b, a, {separator: ", "}), this.space(), this.push("}")), this.push(" from ");
      }
      this.print(a.source, a), this.semicolon();
    }
    function n(a) {
      this.push("* as "), this.print(a.local, a);
    }
    var o = (a("3"), a("4")["default"]);
    b.__esModule = !0, b.ImportSpecifier = d, b.ImportDefaultSpecifier = e, b.ExportDefaultSpecifier = f, b.ExportSpecifier = g, b.ExportNamespaceSpecifier = h, b.ExportAllDeclaration = i, b.ExportNamedDeclaration = j, b.ExportDefaultDeclaration = k, b.ImportDeclaration = m, b.ImportNamespaceSpecifier = n;
    var p = a("5"),
        q = o(p);
    return c.exports;
  }), a.registerDynamic("ad", ["4", "5", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      this.push(a.name);
    }
    function e(a) {
      this.push("..."), this.print(a.argument, a);
    }
    function f(a) {
      var b = a.properties;
      this.push("{"), this.printInnerComments(a), b.length && (this.space(), this.printList(b, a, {indent: !0}), this.space()), this.push("}");
    }
    function g(a) {
      this.printJoin(a.decorators, a, {separator: ""}), this._method(a);
    }
    function h(a) {
      if (this.printJoin(a.decorators, a, {separator: ""}), a.computed)
        this.push("["), this.print(a.key, a), this.push("]");
      else {
        if (r.isAssignmentPattern(a.value) && r.isIdentifier(a.key) && a.key.name === a.value.left.name)
          return void this.print(a.value, a);
        if (this.print(a.key, a), a.shorthand && r.isIdentifier(a.key) && r.isIdentifier(a.value) && a.key.name === a.value.name)
          return;
      }
      this.push(":"), this.space(), this.print(a.value, a);
    }
    function i(a) {
      var b = a.elements,
          c = b.length;
      this.push("["), this.printInnerComments(a);
      for (var d = 0; d < b.length; d++) {
        var e = b[d];
        e ? (d > 0 && this.space(), this.print(e, a), c - 1 > d && this.push(",")) : this.push(",");
      }
      this.push("]");
    }
    function j(a) {
      this.push("/" + a.pattern + "/" + a.flags);
    }
    function k(a) {
      this.push(a.value ? "true" : "false");
    }
    function l() {
      this.push("null");
    }
    function m(a) {
      this.push(a.value + "");
    }
    function n(a, b) {
      this.push(this._stringLiteral(a.value, b));
    }
    function o(a, b) {
      return a = JSON.stringify(a), a = a.replace(/[\u000A\u000D\u2028\u2029]/g, function(a) {
        return "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4);
      }), "single" !== this.format.quotes || r.isJSX(b) || (a = a.slice(1, -1), a = a.replace(/\\"/g, '"'), a = a.replace(/'/g, "\\'"), a = "'" + a + "'"), a;
    }
    var p = (a("3"), a("4")["default"]);
    b.__esModule = !0, b.Identifier = d, b.RestElement = e, b.ObjectExpression = f, b.ObjectMethod = g, b.ObjectProperty = h, b.ArrayExpression = i, b.RegExpLiteral = j, b.BooleanLiteral = k, b.NullLiteral = l, b.NumericLiteral = m, b.StringLiteral = n, b._stringLiteral = o;
    var q = a("5"),
        r = p(q);
    return b.SpreadElement = e, b.SpreadProperty = e, b.RestProperty = e, b.ObjectPattern = f, b.ArrayPattern = i, c.exports;
  }), a.registerDynamic("ae", ["4", "5", "ad", "3"], !0, function(a, b, c) {
    "use strict";
    function d() {
      this.push("any");
    }
    function e(a) {
      this.print(a.elementType, a), this.push("["), this.push("]");
    }
    function f() {
      this.push("bool");
    }
    function g(a) {
      this.push(a.value ? "true" : "false");
    }
    function h() {
      this.push("null");
    }
    function i(a) {
      this.push("declare class "), this._interfaceish(a);
    }
    function j(a) {
      this.push("declare function "), this.print(a.id, a), this.print(a.id.typeAnnotation.typeAnnotation, a), this.semicolon();
    }
    function k(a) {
      this.push("declare "), this.InterfaceDeclaration(a);
    }
    function l(a) {
      this.push("declare module "), this.print(a.id, a), this.space(), this.print(a.body, a);
    }
    function m(a) {
      this.push("declare "), this.TypeAlias(a);
    }
    function n(a) {
      this.push("declare var "), this.print(a.id, a), this.print(a.id.typeAnnotation, a), this.semicolon();
    }
    function o() {
      this.push("*");
    }
    function p(a, b) {
      this.print(a.typeParameters, a), this.push("("), this.printList(a.params, a), a.rest && (a.params.length && (this.push(","), this.space()), this.push("..."), this.print(a.rest, a)), this.push(")"), "ObjectTypeProperty" === b.type || "ObjectTypeCallProperty" === b.type || "DeclareFunction" === b.type ? this.push(":") : (this.space(), this.push("=>")), this.space(), this.print(a.returnType, a);
    }
    function q(a) {
      this.print(a.name, a), a.optional && this.push("?"), this.push(":"), this.space(), this.print(a.typeAnnotation, a);
    }
    function r(a) {
      this.print(a.id, a), this.print(a.typeParameters, a);
    }
    function s(a) {
      this.print(a.id, a), this.print(a.typeParameters, a), a["extends"].length && (this.push(" extends "), this.printJoin(a["extends"], a, {separator: ", "})), a.mixins && a.mixins.length && (this.push(" mixins "), this.printJoin(a.mixins, a, {separator: ", "})), this.space(), this.print(a.body, a);
    }
    function t(a) {
      this.push("interface "), this._interfaceish(a);
    }
    function u(a) {
      this.printJoin(a.types, a, {separator: " & "});
    }
    function v() {
      this.push("mixed");
    }
    function w(a) {
      this.push("?"), this.print(a.typeAnnotation, a);
    }
    function x() {
      this.push("number");
    }
    function y(a) {
      this.push(this._stringLiteral(a.value));
    }
    function z() {
      this.push("string");
    }
    function A() {
      this.push("this");
    }
    function B(a) {
      this.push("["), this.printJoin(a.types, a, {separator: ", "}), this.push("]");
    }
    function C(a) {
      this.push("typeof "), this.print(a.argument, a);
    }
    function D(a) {
      this.push("type "), this.print(a.id, a), this.print(a.typeParameters, a), this.space(), this.push("="), this.space(), this.print(a.right, a), this.semicolon();
    }
    function E(a) {
      this.push(":"), this.space(), a.optional && this.push("?"), this.print(a.typeAnnotation, a);
    }
    function F(a) {
      var b = this;
      this.push("<"), this.printJoin(a.params, a, {
        separator: ", ",
        iterator: function(a) {
          b.print(a.typeAnnotation, a);
        }
      }), this.push(">");
    }
    function G(a) {
      var b = this;
      this.push("{");
      var c = a.properties.concat(a.callProperties, a.indexers);
      c.length && (this.space(), this.printJoin(c, a, {
        separator: !1,
        indent: !0,
        iterator: function() {
          1 !== c.length && (b.semicolon(), b.space());
        }
      }), this.space()), this.push("}");
    }
    function H(a) {
      a["static"] && this.push("static "), this.print(a.value, a);
    }
    function I(a) {
      a["static"] && this.push("static "), this.push("["), this.print(a.id, a), this.push(":"), this.space(), this.print(a.key, a), this.push("]"), this.push(":"), this.space(), this.print(a.value, a);
    }
    function J(a) {
      a["static"] && this.push("static "), this.print(a.key, a), a.optional && this.push("?"), Q.isFunctionTypeAnnotation(a.value) || (this.push(":"), this.space()), this.print(a.value, a);
    }
    function K(a) {
      this.print(a.qualification, a), this.push("."), this.print(a.id, a);
    }
    function L(a) {
      this.printJoin(a.types, a, {separator: " | "});
    }
    function M(a) {
      this.push("("), this.print(a.expression, a), this.print(a.typeAnnotation, a), this.push(")");
    }
    function N() {
      this.push("void");
    }
    var O = (a("3"), a("4")["default"]);
    b.__esModule = !0, b.AnyTypeAnnotation = d, b.ArrayTypeAnnotation = e, b.BooleanTypeAnnotation = f, b.BooleanLiteralTypeAnnotation = g, b.NullLiteralTypeAnnotation = h, b.DeclareClass = i, b.DeclareFunction = j, b.DeclareInterface = k, b.DeclareModule = l, b.DeclareTypeAlias = m, b.DeclareVariable = n, b.ExistentialTypeParam = o, b.FunctionTypeAnnotation = p, b.FunctionTypeParam = q, b.InterfaceExtends = r, b._interfaceish = s, b.InterfaceDeclaration = t, b.IntersectionTypeAnnotation = u, b.MixedTypeAnnotation = v, b.NullableTypeAnnotation = w, b.NumberTypeAnnotation = x, b.StringLiteralTypeAnnotation = y, b.StringTypeAnnotation = z, b.ThisTypeAnnotation = A, b.TupleTypeAnnotation = B, b.TypeofTypeAnnotation = C, b.TypeAlias = D, b.TypeAnnotation = E, b.TypeParameterInstantiation = F, b.ObjectTypeAnnotation = G, b.ObjectTypeCallProperty = H, b.ObjectTypeIndexer = I, b.ObjectTypeProperty = J, b.QualifiedTypeIdentifier = K, b.UnionTypeAnnotation = L, b.TypeCastExpression = M, b.VoidTypeAnnotation = N;
    var P = a("5"),
        Q = O(P);
    b.ClassImplements = r, b.GenericTypeAnnotation = r;
    var R = a("ad");
    return b.NumericLiteralTypeAnnotation = R.NumericLiteral, b.TypeParameterDeclaration = F, c.exports;
  }), a.registerDynamic("af", ["3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      this.print(a.program, a);
    }
    function e(a) {
      this.printInnerComments(a, !1), this.printSequence(a.directives, a), a.directives && a.directives.length && this.newline(), this.printSequence(a.body, a);
    }
    function f(a) {
      this.push("{"), this.printInnerComments(a), a.body.length ? (this.newline(), this.printSequence(a.directives, a, {indent: !0}), a.directives && a.directives.length && this.newline(), this.printSequence(a.body, a, {indent: !0}), this.format.retainLines || this.removeLast("\n"), this.rightBrace()) : this.push("}");
    }
    function g() {}
    function h(a) {
      this.print(a.value, a), this.semicolon();
    }
    function i(a) {
      this.push(this._stringLiteral(a.value));
    }
    a("3");
    return b.__esModule = !0, b.File = d, b.Program = e, b.BlockStatement = f, b.Noop = g, b.Directive = h, b.DirectiveLiteral = i, c.exports;
  }), a.registerDynamic("b0", ["c", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      this.print(a.name, a), a.value && (this.push("="), this.print(a.value, a));
    }
    function e(a) {
      this.push(a.name);
    }
    function f(a) {
      this.print(a.namespace, a), this.push(":"), this.print(a.name, a);
    }
    function g(a) {
      this.print(a.object, a), this.push("."), this.print(a.property, a);
    }
    function h(a) {
      this.push("{..."), this.print(a.argument, a), this.push("}");
    }
    function i(a) {
      this.push("{"), this.print(a.expression, a), this.push("}");
    }
    function j(a) {
      this.push(a.value, !0);
    }
    function k(a) {
      var b = a.openingElement;
      if (this.print(b, a), !b.selfClosing) {
        this.indent();
        for (var c = a.children,
            d = Array.isArray(c),
            e = 0,
            c = d ? c : o(c); ; ) {
          var f;
          if (d) {
            if (e >= c.length)
              break;
            f = c[e++];
          } else {
            if (e = c.next(), e.done)
              break;
            f = e.value;
          }
          var g = f;
          this.print(g, a);
        }
        this.dedent(), this.print(a.closingElement, a);
      }
    }
    function l(a) {
      this.push("<"), this.print(a.name, a), a.attributes.length > 0 && (this.push(" "), this.printJoin(a.attributes, a, {separator: " "})), this.push(a.selfClosing ? " />" : ">");
    }
    function m(a) {
      this.push("</"), this.print(a.name, a), this.push(">");
    }
    function n() {}
    var o = (a("3"), a("c")["default"]);
    return b.__esModule = !0, b.JSXAttribute = d, b.JSXIdentifier = e, b.JSXNamespacedName = f, b.JSXMemberExpression = g, b.JSXSpreadAttribute = h, b.JSXExpressionContainer = i, b.JSXText = j, b.JSXElement = k, b.JSXOpeningElement = l, b.JSXClosingElement = m, b.JSXEmptyExpression = n, c.exports;
  }), a.registerDynamic("b1", ["13", "9", "c", "4c", "a", "4", "84", "9c", "a6", "5", "9d", "a7", "a9", "aa", "ab", "ac", "ad", "ae", "af", "b0", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("13")["default"]),
        e = a("9")["default"],
        f = a("c")["default"],
        g = a("4c")["default"],
        h = a("a")["default"],
        i = a("4")["default"];
    b.__esModule = !0;
    var j = a("84"),
        k = h(j),
        l = a("9c"),
        m = h(l),
        n = a("a6"),
        o = i(n),
        p = a("5"),
        q = i(p),
        r = function(a) {
          function b() {
            e(this, b);
            for (var c = arguments.length,
                d = Array(c),
                f = 0; c > f; f++)
              d[f] = arguments[f];
            a.call.apply(a, [this].concat(d)), this.insideAux = !1, this.printAuxAfterOnNextUserNode = !1, this._printStack = [];
          }
          return d(b, a), b.prototype.print = function(a, b) {
            var c = arguments.length <= 2 || void 0 === arguments[2] ? {} : arguments[2];
            if (a) {
              this._lastPrintedIsEmptyStatement = !1, b && b._compact && (a._compact = !0);
              var d = this.insideAux;
              this.insideAux = !a.loc;
              var e = this.format.concise;
              a._compact && (this.format.concise = !0);
              var f = this[a.type];
              if (!f)
                throw new ReferenceError("unknown node of type " + JSON.stringify(a.type) + " with constructor " + JSON.stringify(a && a.constructor.name));
              this._printStack.push(a), a.loc && this.printAuxAfterComment(), this.printAuxBeforeComment(d);
              var g = o.needsParens(a, b, this._printStack);
              g && this.push("("), this.printLeadingComments(a, b), this.catchUp(a), this._printNewline(!0, a, b, c), c.before && c.before(), this.map.mark(a), this._print(a, b), a.loc && this.printAuxAfterComment(), this.printTrailingComments(a, b), g && this.push(")"), this._printStack.pop(), b && this.map.mark(b), c.after && c.after(), this.format.concise = e, this.insideAux = d, this._printNewline(!1, a, b, c);
            }
          }, b.prototype.printAuxBeforeComment = function(a) {
            var b = this.format.auxiliaryCommentBefore;
            a || !this.insideAux || this.printAuxAfterOnNextUserNode || (this.printAuxAfterOnNextUserNode = !0, b && this.printComment({
              type: "CommentBlock",
              value: b
            }));
          }, b.prototype.printAuxAfterComment = function() {
            if (this.printAuxAfterOnNextUserNode) {
              this.printAuxAfterOnNextUserNode = !1;
              var a = this.format.auxiliaryCommentAfter;
              a && this.printComment({
                type: "CommentBlock",
                value: a
              });
            }
          }, b.prototype.getPossibleRaw = function(a) {
            var b = a.extra;
            return b && null != b.raw && null != b.rawValue && a.value === b.rawValue ? b.raw : void 0;
          }, b.prototype._print = function(a, b) {
            if (!this.format.minified) {
              var c = this.getPossibleRaw(a);
              if (c)
                return this.push(""), void this._push(c);
            }
            var d = this[a.type];
            d.call(this, a, b);
          }, b.prototype.printJoin = function(a, b) {
            var c = this,
                d = arguments.length <= 2 || void 0 === arguments[2] ? {} : arguments[2];
            if (a && a.length) {
              var e = a.length,
                  f = void 0,
                  g = void 0;
              d.indent && this.indent();
              var h = {
                statement: d.statement,
                addNewlines: d.addNewlines,
                after: function() {
                  d.iterator && d.iterator(f, g), d.separator && b.loc && c.printAuxAfterComment(), d.separator && e - 1 > g && c.push(d.separator);
                }
              };
              for (g = 0; g < a.length; g++)
                f = a[g], this.print(f, b, h);
              d.indent && this.dedent();
            }
          }, b.prototype.printAndIndentOnComments = function(a, b) {
            var c = !!a.leadingComments;
            c && this.indent(), this.print(a, b), c && this.dedent();
          }, b.prototype.printBlock = function(a) {
            var b = a.body;
            q.isEmptyStatement(b) || this.space(), this.print(b, a);
          }, b.prototype.generateComment = function(a) {
            var b = a.value;
            return b = "CommentLine" === a.type ? "//" + b : "/*" + b + "*/";
          }, b.prototype.printTrailingComments = function(a, b) {
            this.printComments(this.getComments("trailingComments", a, b));
          }, b.prototype.printLeadingComments = function(a, b) {
            this.printComments(this.getComments("leadingComments", a, b));
          }, b.prototype.printInnerComments = function(a) {
            var b = arguments.length <= 1 || void 0 === arguments[1] ? !0 : arguments[1];
            a.innerComments && (b && this.indent(), this.printComments(a.innerComments), b && this.dedent());
          }, b.prototype.printSequence = function(a, b) {
            var c = arguments.length <= 2 || void 0 === arguments[2] ? {} : arguments[2];
            return c.statement = !0, this.printJoin(a, b, c);
          }, b.prototype.printList = function(a, b) {
            var c = arguments.length <= 2 || void 0 === arguments[2] ? {} : arguments[2];
            return null == c.separator && (c.separator = ",", this.format.compact || (c.separator += " ")), this.printJoin(a, b, c);
          }, b.prototype._printNewline = function(a, b, c, d) {
            if (d.statement || o.isUserWhitespacable(b, c)) {
              var e = 0;
              if (null != b.start && !b._ignoreUserWhitespace && this.tokens.length)
                e = a ? this.whitespace.getNewlinesBefore(b) : this.whitespace.getNewlinesAfter(b);
              else {
                a || e++, d.addNewlines && (e += d.addNewlines(a, b) || 0);
                var f = o.needsWhitespaceAfter;
                a && (f = o.needsWhitespaceBefore), f(b, c) && e++, this.buf || (e = 0);
              }
              this.newline(e);
            }
          }, b.prototype.getComments = function(a, b) {
            return b && b[a] || [];
          }, b.prototype.shouldPrintComment = function(a) {
            return this.format.shouldPrintComment ? this.format.shouldPrintComment(a.value) : !this.format.minified && (a.value.indexOf("@license") >= 0 || a.value.indexOf("@preserve") >= 0) ? !0 : this.format.comments;
          }, b.prototype.printComment = function(a) {
            if (this.shouldPrintComment(a) && !a.ignore) {
              if (a.ignore = !0, null != a.start) {
                if (this.printedCommentStarts[a.start])
                  return;
                this.printedCommentStarts[a.start] = !0;
              }
              this.catchUp(a), this.newline(this.whitespace.getNewlinesBefore(a));
              var b = this.position.column,
                  c = this.generateComment(a);
              if (b && !this.isLast(["\n", " ", "[", "{"]) && (this._push(" "), b++), "CommentBlock" === a.type && this.format.indent.adjustMultilineComment) {
                var d = a.loc && a.loc.start.column;
                if (d) {
                  var e = new RegExp("\\n\\s{1," + d + "}", "g");
                  c = c.replace(e, "\n");
                }
                var f = Math.max(this.indentSize(), b);
                c = c.replace(/\n/g, "\n" + k["default"](" ", f));
              }
              0 === b && (c = this.getIndent() + c), (this.format.compact || this.format.retainLines) && "CommentLine" === a.type && (c += "\n"), this._push(c), this.newline(this.whitespace.getNewlinesAfter(a));
            }
          }, b.prototype.printComments = function(a) {
            if (a && a.length)
              for (var b = a,
                  c = Array.isArray(b),
                  d = 0,
                  b = c ? b : f(b); ; ) {
                var e;
                if (c) {
                  if (d >= b.length)
                    break;
                  e = b[d++];
                } else {
                  if (d = b.next(), d.done)
                    break;
                  e = d.value;
                }
                var g = e;
                this.printComment(g);
              }
          }, b;
        }(m["default"]);
    b["default"] = r;
    for (var s = [a("9d"), a("a7"), a("a9"), a("aa"), a("ab"), a("ac"), a("ad"), a("ae"), a("af"), a("b0")],
        t = 0; t < s.length; t++) {
      var u = s[t];
      g(r.prototype, u);
    }
    return c.exports = b["default"], c.exports;
  }), a.registerDynamic("7c", ["13", "9", "a", "4", "83", "85", "90", "91", "4d", "b1", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("13")["default"]),
        e = a("9")["default"],
        f = a("a")["default"],
        g = a("4")["default"];
    b.__esModule = !0;
    var h = a("83"),
        i = f(h),
        j = a("85"),
        k = f(j),
        l = a("90"),
        m = f(l),
        n = a("91"),
        o = f(n),
        p = a("4d"),
        q = g(p),
        r = a("b1"),
        s = f(r),
        t = function(a) {
          function b(c, d, f) {
            e(this, b), d = d || {};
            var g = c.comments || [],
                h = c.tokens || [],
                i = b.normalizeOptions(f, d, h),
                j = new o["default"];
            a.call(this, j, i), this.comments = g, this.position = j, this.tokens = h, this.format = i, this.opts = d, this.ast = c, this._inForStatementInitCounter = 0, this.whitespace = new k["default"](h), this.map = new m["default"](j, d, f);
          }
          return d(b, a), b.normalizeOptions = function(a, c, d) {
            var e = "  ";
            if (a) {
              var f = i["default"](a).indent;
              f && " " !== f && (e = f);
            }
            var g = {
              auxiliaryCommentBefore: c.auxiliaryCommentBefore,
              auxiliaryCommentAfter: c.auxiliaryCommentAfter,
              shouldPrintComment: c.shouldPrintComment,
              retainLines: c.retainLines,
              comments: null == c.comments || c.comments,
              compact: c.compact,
              minified: c.minified,
              concise: c.concise,
              quotes: c.quotes || b.findCommonStringDelimiter(a, d),
              indent: {
                adjustMultilineComment: !0,
                style: e,
                base: 0
              }
            };
            return g.minified && (g.compact = !0), "auto" === g.compact && (g.compact = a.length > 1e5, g.compact && console.error("[BABEL] " + q.get("codeGeneratorDeopt", c.filename, "100KB"))), g.compact && (g.indent.adjustMultilineComment = !1), g;
          }, b.findCommonStringDelimiter = function(a, b) {
            for (var c = {
              single: 0,
              "double": 0
            },
                d = 0,
                e = 0; e < b.length; e++) {
              var f = b[e];
              if ("string" === f.type.label) {
                var g = a.slice(f.start, f.end);
                if ("'" === g[0] ? c.single++ : c["double"]++, d++, d >= 3)
                  break;
              }
            }
            return c.single > c["double"] ? "single" : "double";
          }, b.prototype.generate = function() {
            return this.print(this.ast), this.printAuxAfterComment(), {
              map: this.map.get(),
              code: this.get()
            };
          }, b;
        }(s["default"]);
    return b.CodeGenerator = t, b["default"] = function(a, b, c) {
      var d = new t(a, b, c);
      return d.generate();
    }, c.exports;
  }), a.registerDynamic("b2", ["4", "a", "7a", "7c", "4d", "81", "a4", "5", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a, b) {
      var c = [],
          d = u.functionExpression(null, [u.identifier("global")], u.blockStatement(c)),
          e = u.program([u.expressionStatement(u.callExpression(d, [k.get("selfGlobal")]))]);
      return c.push(u.variableDeclaration("var", [u.variableDeclarator(a, u.assignmentExpression("=", u.memberExpression(u.identifier("global"), a), u.objectExpression([])))])), b(c), e;
    }
    function e(a, b) {
      var c = [];
      return c.push(u.variableDeclaration("var", [u.variableDeclarator(a, u.identifier("global"))])), b(c), u.program([v({
        FACTORY_PARAMETERS: u.identifier("global"),
        BROWSER_ARGUMENTS: u.assignmentExpression("=", u.memberExpression(u.identifier("root"), a), u.objectExpression([])),
        COMMON_ARGUMENTS: u.identifier("exports"),
        AMD_ARGUMENTS: u.arrayExpression([u.stringLiteral("exports")]),
        FACTORY_BODY: c,
        UMD_ROOT: u.identifier("this")
      })]);
    }
    function f(a, b) {
      var c = [];
      return c.push(u.variableDeclaration("var", [u.variableDeclarator(a, u.objectExpression([]))])), b(c), c.push(u.expressionStatement(a)), u.program(c);
    }
    function g(a, b, c) {
      s["default"](k.list, function(d) {
        if (!(c && c.indexOf(d) < 0)) {
          var e = u.identifier(d);
          a.push(u.expressionStatement(u.assignmentExpression("=", u.memberExpression(b, e), k.get(d))));
        }
      });
    }
    var h = (a("3"), a("4")["default"]),
        i = a("a")["default"];
    b.__esModule = !0;
    var j = a("7a"),
        k = h(j),
        l = a("7c"),
        m = i(l),
        n = a("4d"),
        o = h(n),
        p = a("81"),
        q = i(p),
        r = a("a4"),
        s = i(r),
        t = a("5"),
        u = h(t),
        v = q["default"]('\n  (function (root, factory) {\n    if (typeof define === "function" && define.amd) {\n      define(AMD_ARGUMENTS, factory);\n    } else if (typeof exports === "object") {\n      factory(COMMON_ARGUMENTS);\n    } else {\n      factory(BROWSER_ARGUMENTS);\n    }\n  })(UMD_ROOT, function (FACTORY_PARAMETERS) {\n    FACTORY_BODY\n  });\n');
    return b["default"] = function(a) {
      var b = arguments.length <= 1 || void 0 === arguments[1] ? "global" : arguments[1],
          c = u.identifier("babelHelpers"),
          h = function(b) {
            return g(b, c, a);
          },
          i = void 0,
          j = {
            global: d,
            umd: e,
            "var": f
          }[b];
      if (!j)
        throw new Error(o.get("unsupportedOutputType", b));
      return i = j(c, h), m["default"](i).code;
    }, c.exports = b["default"], c.exports;
  }), a.registerDynamic("b3", [], !1, function() {
    return {
      name: "babel-core",
      version: "6.5.2",
      description: "Babel compiler core.",
      author: "Sebastian McKenzie <sebmck@gmail.com>",
      homepage: "https://babeljs.io/",
      license: "MIT",
      repository: "https://github.com/babel/babel/tree/master/packages/babel-core",
      keywords: ["6to5", "babel", "classes", "const", "es6", "harmony", "let", "modules", "transpile", "transpiler", "var"],
      scripts: {
        bench: "make bench",
        test: "make test"
      },
      dependencies: {
        "babel-code-frame": "^6.3.13",
        "babel-generator": "^6.4.5",
        "babel-helpers": "^6.4.5",
        "babel-messages": "^6.3.13",
        "babel-template": "^6.3.13",
        "babel-runtime": "^5.0.0",
        "babel-register": "^6.5.2",
        "babel-traverse": "^6.4.5",
        "babel-types": "^6.5.2",
        babylon: "^6.5.2",
        "convert-source-map": "^1.1.0",
        debug: "^2.1.1",
        json5: "^0.4.0",
        lodash: "^3.10.0",
        minimatch: "^2.0.3",
        "path-exists": "^1.0.0",
        "path-is-absolute": "^1.0.0",
        "private": "^0.1.6",
        "shebang-regex": "^1.0.0",
        slash: "^1.0.0",
        "source-map": "^0.5.0"
      },
      devDependencies: {
        "babel-helper-fixtures": "^6.3.13",
        "babel-helper-transform-fixture-test-runner": "^6.3.13",
        "babel-polyfill": "^6.3.13"
      }
    };
  }), a.registerDynamic("4b", ["a", "4", "b4", "b5", "e", "2b", "4d", "5", "14", "4a", "6", "8", "32", "b2", "81", "b3", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a, b, c) {
      j["default"](b) && (c = b, b = {}), b.filename = a, l["default"].readFile(a, function(a, d) {
        var e = void 0;
        if (!a)
          try {
            e = F(d, b);
          } catch (f) {
            a = f;
          }
        a ? c(a) : c(null, e);
      });
    }
    function e(a) {
      var b = arguments.length <= 1 || void 0 === arguments[1] ? {} : arguments[1];
      return b.filename = a, F(l["default"].readFileSync(a, "utf8"), b);
    }
    var f = (a("3"), a("a")["default"]),
        g = a("4")["default"],
        h = a("b4")["default"];
    b.__esModule = !0, b.transformFile = d, b.transformFileSync = e;
    var i = a("b5"),
        j = f(i),
        k = a("e"),
        l = f(k),
        m = a("2b"),
        n = g(m),
        o = a("4d"),
        p = g(o),
        q = a("5"),
        r = g(q),
        s = a("14"),
        t = f(s),
        u = a("4a"),
        v = f(u),
        w = a("6"),
        x = f(w),
        y = a("8");
    b.File = h(y);
    var z = a("32");
    b.options = h(z);
    var A = a("b2");
    b.buildExternalHelpers = h(A);
    var B = a("81");
    b.template = h(B);
    var C = a("b3");
    b.version = C.version, b.util = n, b.messages = p, b.types = r, b.traverse = t["default"], b.OptionManager = v["default"], b.Pipeline = x["default"];
    var D = new x["default"],
        E = D.analyse.bind(D);
    b.analyse = E;
    var F = D.transform.bind(D);
    b.transform = F;
    var G = D.transformFromAst.bind(D);
    return b.transformFromAst = G, c.exports;
  }), a.registerDynamic("b6", ["4b", "3"], !0, function(a, b, c) {
    a("3");
    return c.exports = a("4b"), c.exports;
  }), a.registerDynamic("b7", ["c", "4", "5", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("c")["default"]),
        e = a("4")["default"];
    b.__esModule = !0;
    var f = a("5"),
        g = e(f);
    return b["default"] = function() {
      return {visitor: {Program: function(a, b) {
            if (b.opts.strict !== !1) {
              for (var c = a.node,
                  e = c.directives,
                  f = Array.isArray(e),
                  h = 0,
                  e = f ? e : d(e); ; ) {
                var i;
                if (f) {
                  if (h >= e.length)
                    break;
                  i = e[h++];
                } else {
                  if (h = e.next(), h.done)
                    break;
                  i = h.value;
                }
                var j = i;
                if ("use strict" === j.value.value)
                  return;
              }
              a.unshiftContainer("directives", g.directive(g.directiveLiteral("use strict")));
            }
          }}};
    }, c.exports = b["default"], c.exports;
  }), a.registerDynamic("b8", ["b9", "c", "79", "a", "ba", "81", "b7", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("b9")["default"]),
        e = a("c")["default"],
        f = a("79")["default"],
        g = a("a")["default"];
    b.__esModule = !0;
    var h = a("ba"),
        i = g(h),
        j = a("81"),
        k = g(j),
        l = k["default"]("\n  System.register(MODULE_NAME, [SOURCES], function (EXPORT_IDENTIFIER, CONTEXT_IDENTIFIER) {\n    BEFORE_BODY;\n    return {\n      setters: [SETTERS],\n      execute: function () {\n        BODY;\n      }\n    };\n  });\n"),
        m = k["default"]('\n  for (var KEY in TARGET) {\n    if (KEY !== "default") EXPORT_OBJ[KEY] = TARGET[KEY];\n  }\n');
    return b["default"] = function(b) {
      var c = b.types,
          g = d(),
          h = {"AssignmentExpression|UpdateExpression": function(a) {
              if (!a.node[g]) {
                a.node[g] = !0;
                var b = a.get(a.isAssignmentExpression() ? "left" : "argument");
                if (b.isIdentifier()) {
                  var c = b.node.name;
                  if (this.scope.getBinding(c) === a.scope.getBinding(c)) {
                    var d = this.exports[c];
                    if (d) {
                      for (var f = a.node,
                          h = d,
                          i = Array.isArray(h),
                          j = 0,
                          h = i ? h : e(h); ; ) {
                        var k;
                        if (i) {
                          if (j >= h.length)
                            break;
                          k = h[j++];
                        } else {
                          if (j = h.next(), j.done)
                            break;
                          k = j.value;
                        }
                        var l = k;
                        f = this.buildCall(l, f).expression;
                      }
                      a.replaceWith(f);
                    }
                  }
                }
              }
            }};
      return {
        inherits: a("b7"),
        visitor: {
          ReferencedIdentifier: function(a, b) {
            "__moduleName" != a.node.name || a.scope.hasBinding("__moduleName") || a.replaceWith(c.memberExpression(b.contextIdent, c.identifier("id")));
          },
          Program: {
            enter: function(a, b) {
              b.contextIdent = a.scope.generateUidIdentifier("context");
            },
            exit: function(a, b) {
              function d(a, b) {
                o[a] = o[a] || [], o[a].push(b);
              }
              function g(a, b, c) {
                var d = p[a] = p[a] || {
                  imports: [],
                  exports: []
                };
                d[b] = d[b].concat(c);
              }
              function j(a, b) {
                return c.expressionStatement(c.callExpression(k, [c.stringLiteral(a), b]));
              }
              for (var k = a.scope.generateUidIdentifier("export"),
                  n = b.contextIdent,
                  o = f(null),
                  p = f(null),
                  q = [],
                  r = [],
                  s = [],
                  t = [],
                  u = a.get("body"),
                  v = !0,
                  w = u,
                  x = Array.isArray(w),
                  y = 0,
                  w = x ? w : e(w); ; ) {
                var z;
                if (x) {
                  if (y >= w.length)
                    break;
                  z = w[y++];
                } else {
                  if (y = w.next(), y.done)
                    break;
                  z = y.value;
                }
                var A = z;
                if (A.isExportDeclaration() && (A = A.get("declaration")), A.isVariableDeclaration() && "var" !== A.node.kind) {
                  v = !1;
                  break;
                }
              }
              for (var B = u,
                  C = Array.isArray(B),
                  D = 0,
                  B = C ? B : e(B); ; ) {
                var E;
                if (C) {
                  if (D >= B.length)
                    break;
                  E = B[D++];
                } else {
                  if (D = B.next(), D.done)
                    break;
                  E = D.value;
                }
                var F = E;
                if (v && F.isFunctionDeclaration())
                  q.push(F.node), F.remove();
                else if (F.isImportDeclaration()) {
                  var G = F.node.source.value;
                  g(G, "imports", F.node.specifiers);
                  for (var H in F.getBindingIdentifiers())
                    F.scope.removeBinding(H), t.push(c.identifier(H));
                  F.remove();
                } else if (F.isExportAllDeclaration())
                  g(F.node.source.value, "exports", F.node), F.remove();
                else if (F.isExportDefaultDeclaration()) {
                  var I = F.get("declaration");
                  if (I.isClassDeclaration() || I.isFunctionDeclaration()) {
                    var J = I.node.id,
                        K = [];
                    J ? (K.push(I.node), K.push(j("default", J)), d(J.name, "default")) : K.push(j("default", c.toExpression(I.node))), !v || I.isClassDeclaration() ? F.replaceWithMultiple(K) : (q = q.concat(K), F.remove());
                  } else
                    F.replaceWith(j("default", I.node));
                } else if (F.isExportNamedDeclaration()) {
                  var I = F.get("declaration");
                  if (I.node) {
                    F.replaceWith(I);
                    var K = [],
                        L = void 0;
                    if (F.isFunction()) {
                      var M;
                      M = {}, M[I.node.id.name] = I.node.id, L = M;
                    } else
                      L = I.getBindingIdentifiers();
                    for (var N in L)
                      d(N, N), K.push(j(N, c.identifier(N)));
                    F.insertAfter(K);
                  }
                  var O = F.node.specifiers;
                  if (O && O.length)
                    if (F.node.source)
                      g(F.node.source.value, "exports", O), F.remove();
                    else {
                      for (var K = [],
                          P = O,
                          Q = Array.isArray(P),
                          R = 0,
                          P = Q ? P : e(P); ; ) {
                        var S;
                        if (Q) {
                          if (R >= P.length)
                            break;
                          S = P[R++];
                        } else {
                          if (R = P.next(), R.done)
                            break;
                          S = R.value;
                        }
                        var T = S;
                        K.push(j(T.exported.name, T.local)), d(T.local.name, T.exported.name);
                      }
                      F.replaceWithMultiple(K);
                    }
                }
              }
              for (var G in p) {
                for (var O = p[G],
                    U = [],
                    V = a.scope.generateUidIdentifier(G),
                    W = O.imports,
                    X = Array.isArray(W),
                    Y = 0,
                    W = X ? W : e(W); ; ) {
                  var Z;
                  if (X) {
                    if (Y >= W.length)
                      break;
                    Z = W[Y++];
                  } else {
                    if (Y = W.next(), Y.done)
                      break;
                    Z = Y.value;
                  }
                  var T = Z;
                  c.isImportNamespaceSpecifier(T) ? U.push(c.expressionStatement(c.assignmentExpression("=", T.local, V))) : c.isImportDefaultSpecifier(T) && (T = c.importSpecifier(T.local, c.identifier("default"))), c.isImportSpecifier(T) && U.push(c.expressionStatement(c.assignmentExpression("=", T.local, c.memberExpression(V, T.imported))));
                }
                if (O.exports.length) {
                  var $ = a.scope.generateUidIdentifier("exportObj");
                  U.push(c.variableDeclaration("var", [c.variableDeclarator($, c.objectExpression([]))]));
                  for (var _ = O.exports,
                      aa = Array.isArray(_),
                      ba = 0,
                      _ = aa ? _ : e(_); ; ) {
                    var ca;
                    if (aa) {
                      if (ba >= _.length)
                        break;
                      ca = _[ba++];
                    } else {
                      if (ba = _.next(), ba.done)
                        break;
                      ca = ba.value;
                    }
                    var da = ca;
                    c.isExportAllDeclaration(da) ? U.push(m({
                      KEY: a.scope.generateUidIdentifier("key"),
                      EXPORT_OBJ: $,
                      TARGET: V
                    })) : c.isExportSpecifier(da) && U.push(c.expressionStatement(c.assignmentExpression("=", c.memberExpression($, da.exported), c.memberExpression(V, da.local))));
                  }
                  U.push(c.expressionStatement(c.callExpression(k, [$])));
                }
                s.push(c.stringLiteral(G)), r.push(c.functionExpression(null, [V], c.blockStatement(U)));
              }
              var ea = this.getModuleName();
              ea && (ea = c.stringLiteral(ea)), v && i["default"](a, function(a) {
                return t.push(a);
              }), t.length && q.unshift(c.variableDeclaration("var", t.map(function(a) {
                return c.variableDeclarator(a);
              }))), a.traverse(h, {
                exports: o,
                buildCall: j,
                scope: a.scope
              }), a.node.body = [l({
                BEFORE_BODY: q,
                MODULE_NAME: ea,
                SETTERS: r,
                SOURCES: s,
                BODY: a.node.body,
                EXPORT_IDENTIFIER: k,
                CONTEXT_IDENTIFIER: n
              })];
            }
          }
        }
      };
    }, c.exports = b["default"], c.exports;
  }), a.registerDynamic("bb", ["3"], !0, function(a, b, c) {
    "use strict";
    a("3");
    return b.__esModule = !0, b["default"] = function(a) {
      var b = a.types;
      return {pre: function(a) {
          a.set("helpersNamespace", b.identifier("babelHelpers"));
        }};
    }, c.exports = b["default"], c.exports;
  }), a.registerDynamic("bc", ["3"], !0, function(a, b, c) {
    "use strict";
    a("3");
    return c.exports = {
      builtins: {
        Symbol: "symbol",
        Promise: "promise",
        Map: "map",
        WeakMap: "weak-map",
        Set: "set",
        WeakSet: "weak-set",
        setImmediate: "set-immediate",
        clearImmediate: "clear-immediate"
      },
      methods: {
        Array: {
          concat: "array/concat",
          copyWithin: "array/copy-within",
          entries: "array/entries",
          every: "array/every",
          fill: "array/fill",
          filter: "array/filter",
          findIndex: "array/find-index",
          find: "array/find",
          forEach: "array/for-each",
          from: "array/from",
          includes: "array/includes",
          indexOf: "array/index-of",
          join: "array/join",
          keys: "array/keys",
          lastIndexOf: "array/last-index-of",
          map: "array/map",
          of: "array/of",
          pop: "array/pop",
          push: "array/push",
          reduceRight: "array/reduce-right",
          reduce: "array/reduce",
          reverse: "array/reverse",
          shift: "array/shift",
          slice: "array/slice",
          some: "array/some",
          sort: "array/sort",
          splice: "array/splice",
          unshift: "array/unshift",
          values: "array/values"
        },
        JSON: {stringify: "json/stringify"},
        Object: {
          assign: "object/assign",
          create: "object/create",
          defineProperties: "object/define-properties",
          defineProperty: "object/define-property",
          entries: "object/entries",
          freeze: "object/freeze",
          getOwnPropertyDescriptor: "object/get-own-property-descriptor",
          getOwnPropertyDescriptors: "object/get-own-property-descriptors",
          getOwnPropertyNames: "object/get-own-property-names",
          getOwnPropertySymbols: "object/get-own-property-symbols",
          getPrototypeOf: "object/get-prototype-of",
          isExtensible: "object/is-extensible",
          isFrozen: "object/is-frozen",
          isSealed: "object/is-sealed",
          is: "object/is",
          keys: "object/keys",
          preventExtensions: "object/prevent-extensions",
          seal: "object/seal",
          setPrototypeOf: "object/set-prototype-of",
          values: "object/values"
        },
        RegExp: {escape: "regexp/escape"},
        Math: {
          acosh: "math/acosh",
          asinh: "math/asinh",
          atanh: "math/atanh",
          cbrt: "math/cbrt",
          clz32: "math/clz32",
          cosh: "math/cosh",
          expm1: "math/expm1",
          fround: "math/fround",
          hypot: "math/hypot",
          imul: "math/imul",
          log10: "math/log10",
          log1p: "math/log1p",
          log2: "math/log2",
          sign: "math/sign",
          sinh: "math/sinh",
          tanh: "math/tanh",
          trunc: "math/trunc"
        },
        Symbol: {
          "for": "symbol/for",
          hasInstance: "symbol/has-instance",
          isConcatSpreadable: "symbol/is-concat-spreadable",
          iterator: "symbol/iterator",
          keyFor: "symbol/key-for",
          match: "symbol/match",
          replace: "symbol/replace",
          search: "symbol/search",
          species: "symbol/species",
          split: "symbol/split",
          toPrimitive: "symbol/to-primitive",
          toStringTag: "symbol/to-string-tag",
          unscopables: "symbol/unscopables"
        },
        String: {
          at: "string/at",
          codePointAt: "string/code-point-at",
          endsWith: "string/ends-with",
          fromCodePoint: "string/from-code-point",
          includes: "string/includes",
          padLeft: "string/pad-left",
          padRight: "string/pad-right",
          raw: "string/raw",
          repeat: "string/repeat",
          startsWith: "string/starts-with",
          trim: "string/trim",
          trimLeft: "string/trim-left",
          trimRight: "string/trim-right"
        },
        Number: {
          EPSILON: "number/epsilon",
          isFinite: "number/is-finite",
          isInteger: "number/is-integer",
          isNaN: "number/is-nan",
          isSafeInteger: "number/is-safe-integer",
          MAX_SAFE_INTEGER: "number/max-safe-integer",
          MIN_SAFE_INTEGER: "number/min-safe-integer",
          parseFloat: "number/parse-float",
          parseInt: "number/parse-int"
        },
        Reflect: {
          apply: "reflect/apply",
          construct: "reflect/construct",
          defineProperty: "reflect/define-property",
          deleteProperty: "reflect/delete-property",
          enumerate: "reflect/enumerate",
          getOwnPropertyDescriptor: "reflect/get-own-property-descriptor",
          getPrototypeOf: "reflect/get-prototype-of",
          get: "reflect/get",
          has: "reflect/has",
          isExtensible: "reflect/is-extensible",
          ownKeys: "reflect/own-keys",
          preventExtensions: "reflect/prevent-extensions",
          setPrototypeOf: "reflect/set-prototype-of",
          set: "reflect/set"
        }
      }
    }, c.exports;
  }), a.registerDynamic("bd", ["a", "bc", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("a")["default"]);
    b.__esModule = !0;
    var e = a("bc"),
        f = d(e);
    return b["default"] = function(a) {
      function b(a, b) {
        return Object.prototype.hasOwnProperty.call(a, b);
      }
      var c = a.types,
          d = "babel-runtime",
          e = ["interopRequireWildcard", "interopRequireDefault"];
      return {
        pre: function(a) {
          a.set("helperGenerator", function(b) {
            return e.indexOf(b) < 0 ? a.addImport(d + "/helpers/" + b, "default", b) : void 0;
          }), this.setDynamic("regeneratorIdentifier", function() {
            return a.addImport(d + "/regenerator", "default", "regeneratorRuntime");
          });
        },
        visitor: {
          ReferencedIdentifier: function(a, e) {
            var g = a.node,
                h = a.parent,
                i = a.scope;
            return "regeneratorRuntime" === g.name && e.opts.regenerator !== !1 ? void a.replaceWith(e.get("regeneratorIdentifier")) : void(e.opts.polyfill !== !1 && (c.isMemberExpression(h) || b(f["default"].builtins, g.name) && (i.getBindingIdentifier(g.name) || a.replaceWith(e.addImport(d + "/core-js/" + f["default"].builtins[g.name], "default", g.name)))));
          },
          CallExpression: function(a, b) {
            if (b.opts.polyfill !== !1 && !a.node.arguments.length) {
              var e = a.node.callee;
              c.isMemberExpression(e) && e.computed && a.get("callee.property").matchesPattern("Symbol.iterator") && a.replaceWith(c.callExpression(b.addImport(d + "/core-js/get-iterator", "default", "getIterator"), [e.object]));
            }
          },
          BinaryExpression: function(a, b) {
            b.opts.polyfill !== !1 && "in" === a.node.operator && a.get("left").matchesPattern("Symbol.iterator") && a.replaceWith(c.callExpression(b.addImport(d + "/core-js/is-iterable", "default", "isIterable"), [a.node.right]));
          },
          MemberExpression: {
            enter: function(a, e) {
              if (e.opts.polyfill !== !1 && a.isReferenced()) {
                var g = a.node,
                    h = g.object,
                    i = g.property;
                if (c.isReferenced(h, g) && !g.computed && b(f["default"].methods, h.name)) {
                  var j = f["default"].methods[h.name];
                  if (b(j, i.name) && !a.scope.getBindingIdentifier(h.name)) {
                    if ("Object" === h.name && "defineProperty" === i.name && a.parentPath.isCallExpression()) {
                      var k = a.parentPath.node;
                      if (3 === k.arguments.length && c.isLiteral(k.arguments[1]))
                        return;
                    }
                    a.replaceWith(e.addImport(d + "/core-js/" + j[i.name], "default", h.name + "$" + i.name));
                  }
                }
              }
            },
            exit: function(a, e) {
              if (e.opts.polyfill !== !1 && a.isReferenced()) {
                var g = a.node,
                    h = g.object;
                b(f["default"].builtins, h.name) && (a.scope.getBindingIdentifier(h.name) || a.replaceWith(c.memberExpression(e.addImport(d + "/core-js/" + f["default"].builtins[h.name], "default", h.name), g.property, g.computed)));
              }
            }
          }
        }
      };
    }, b.definitions = f["default"], c.exports;
  }), a.registerDynamic("be", ["a", "4", "bf", "81", "5", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a, b) {
      var c = a.node,
          d = c.body;
      c.async = !1;
      var e = m.functionExpression(null, [], m.blockStatement(d.body), !0);
      e.shadow = !0, d.body = [m.returnStatement(m.callExpression(m.callExpression(b, [e]), []))];
    }
    function e(a, b) {
      var c = a.node,
          d = n;
      a.isArrowFunctionExpression() && (a.arrowFunctionToShadowed(), d = o), c.async = !1, c.generator = !0;
      var e = c.id;
      c.id = null;
      var f = a.isFunctionDeclaration();
      f && (c.type = "FunctionExpression");
      var g = m.callExpression(b, [c]),
          h = d({
            FUNCTION: g,
            PARAMS: c.params.map(function() {
              return a.scope.generateUidIdentifier("x");
            })
          }).expression,
          j = h.body.body[1].argument;
      if (f) {
        var k = m.variableDeclaration("let", [m.variableDeclarator(m.identifier(e.name), m.callExpression(h, []))]);
        k._blockHoist = !0, j.id = e, a.replaceWith(k);
      } else
        e && e.name ? j.id = e : i["default"]({
          node: j,
          parent: a.parent,
          scope: a.scope
        }), j.id || c.params.length ? a.replaceWith(m.callExpression(h, [])) : a.replaceWith(g);
    }
    var f = (a("3"), a("a")["default"]),
        g = a("4")["default"];
    b.__esModule = !0;
    var h = a("bf"),
        i = f(h),
        j = a("81"),
        k = f(j),
        l = a("5"),
        m = g(l),
        n = k["default"]("\n  (function () {\n    var ref = FUNCTION;\n    return function (PARAMS) {\n      return ref.apply(this, arguments);\n    };\n  })\n"),
        o = k["default"]("\n  (() => {\n    var ref = FUNCTION, _this = this;\n    return function(PARAMS) {\n      return ref.apply(_this, arguments);\n    };\n  })\n"),
        p = {
          ArrowFunctionExpression: function(a) {
            a.node.async || a.arrowFunctionToShadowed();
          },
          AwaitExpression: function(a) {
            var b = a.node;
            b.type = "YieldExpression";
          }
        };
    return b["default"] = function(a, b) {
      var c = a.node;
      if (!c.generator)
        return a.traverse(p), a.isClassMethod() || a.isObjectMethod() ? d(a, b) : e(a, b);
    }, c.exports = b["default"], c.exports;
  }), a.registerDynamic("c0", ["3"], !0, function(a, b, c) {
    "use strict";
    a("3");
    return b.__esModule = !0, b["default"] = function() {
      return {manipulateOptions: function(a, b) {
          b.plugins.push("asyncFunctions");
        }};
    }, c.exports = b["default"], c.exports;
  }), a.registerDynamic("c1", ["a", "be", "c0", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("a")["default"]);
    b.__esModule = !0;
    var e = a("be"),
        f = d(e);
    return b["default"] = function() {
      return {
        inherits: a("c0"),
        visitor: {Function: function(a, b) {
            a.node.async && !a.node.generator && f["default"](a, b.addHelper("asyncToGenerator"));
          }}
      };
    }, c.exports = b["default"], c.exports;
  }), a.registerDynamic("c2", ["4", "5", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a, b, c, d) {
      var e = void 0;
      if (h.isIdentifier(a)) {
        if (d.hasBinding(a.name))
          return a;
        e = a;
      } else {
        if (!h.isMemberExpression(a))
          throw new Error("We can't explode this node type " + a.type);
        if (e = a.object, h.isIdentifier(e) && d.hasBinding(e.name))
          return e;
      }
      var f = d.generateUidIdentifierBasedOnNode(e);
      return b.push(h.variableDeclaration("var", [h.variableDeclarator(f, e)])), f;
    }
    function e(a, b, c, d) {
      var e = a.property,
          f = h.toComputedKey(a, e);
      if (h.isLiteral(f))
        return f;
      var g = d.generateUidIdentifierBasedOnNode(e);
      return b.push(h.variableDeclaration("var", [h.variableDeclarator(g, e)])), g;
    }
    var f = (a("3"), a("4")["default"]);
    b.__esModule = !0;
    var g = a("5"),
        h = f(g);
    return b["default"] = function(a, b, c, f, g) {
      var i = void 0;
      i = h.isIdentifier(a) && g ? a : d(a, b, c, f);
      var j = void 0,
          k = void 0;
      if (h.isIdentifier(a))
        j = a, k = i;
      else {
        var l = e(a, b, c, f),
            m = a.computed || h.isLiteral(l);
        k = j = h.memberExpression(i, l, m);
      }
      return {
        uid: k,
        ref: j
      };
    }, c.exports = b["default"], c.exports;
  }), a.registerDynamic("c3", ["a", "4", "c2", "5", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("a")["default"]),
        e = a("4")["default"];
    b.__esModule = !0;
    var f = a("c2"),
        g = d(f),
        h = a("5"),
        i = e(h);
    return b["default"] = function(a) {
      function b(b) {
        return b.operator === a.operator + "=";
      }
      function c(a, b) {
        return i.assignmentExpression("=", a, b);
      }
      var d = {};
      return d.ExpressionStatement = function(d, e) {
        if (!d.isCompletionRecord()) {
          var f = d.node.expression;
          if (b(f)) {
            var h = [],
                j = g["default"](f.left, h, e, d.scope, !0);
            h.push(i.expressionStatement(c(j.ref, a.build(j.uid, f.right)))), d.replaceWithMultiple(h);
          }
        }
      }, d.AssignmentExpression = function(d, e) {
        var f = d.node,
            h = d.scope;
        if (b(f)) {
          var i = [],
              j = g["default"](f.left, i, e, h);
          i.push(c(j.ref, a.build(j.uid, f.right))), d.replaceWithMultiple(i);
        }
      }, d.BinaryExpression = function(b) {
        var c = b.node;
        c.operator === a.operator && b.replaceWith(a.build(c.left, c.right));
      }, d;
    }, c.exports = b["default"], c.exports;
  }), a.registerDynamic("c4", ["3"], !0, function(a, b, c) {
    "use strict";
    a("3");
    return b.__esModule = !0, b["default"] = function() {
      return {manipulateOptions: function(a, b) {
          b.plugins.push("exponentiationOperator");
        }};
    }, c.exports = b["default"], c.exports;
  }), a.registerDynamic("c5", ["a", "c3", "c4", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("a")["default"]);
    b.__esModule = !0;
    var e = a("c3"),
        f = d(e);
    return b["default"] = function(b) {
      var c = b.types;
      return {
        inherits: a("c4"),
        visitor: f["default"]({
          operator: "**",
          build: function(a, b) {
            return c.callExpression(c.memberExpression(c.identifier("Math"), c.identifier("pow")), [a, b]);
          }
        })
      };
    }, c.exports = b["default"], c.exports;
  }), a.registerDynamic("c6", ["c1", "c5", "3"], !0, function(a, b, c) {
    a("3");
    return c.exports = {plugins: [a("c1"), a("c5")]}, c.exports;
  }), a.registerDynamic("c7", ["3"], !0, function(a, b, c) {
    "use strict";
    a("3");
    return b.__esModule = !0, b["default"] = function() {
      return {manipulateOptions: function(a, b) {
          b.plugins.push("trailingFunctionCommas");
        }};
    }, c.exports = b["default"], c.exports;
  }), a.registerDynamic("c8", ["3"], !0, function(a, b, c) {
    "use strict";
    a("3");
    return b.__esModule = !0, b["default"] = function() {
      return {manipulateOptions: function(a, b) {
          b.plugins.push("objectRestSpread");
        }};
    }, c.exports = b["default"], c.exports;
  }), a.registerDynamic("c9", ["c", "c8", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("c")["default"]);
    return b.__esModule = !0, b["default"] = function(b) {
      function c(a) {
        for (var b = a.properties,
            c = Array.isArray(b),
            f = 0,
            b = c ? b : d(b); ; ) {
          var g;
          if (c) {
            if (f >= b.length)
              break;
            g = b[f++];
          } else {
            if (f = b.next(), f.done)
              break;
            g = f.value;
          }
          var h = g;
          if (e.isSpreadProperty(h))
            return !0;
        }
        return !1;
      }
      var e = b.types;
      return {
        inherits: a("c8"),
        visitor: {ObjectExpression: function(a, b) {
            function f() {
              h.length && (g.push(e.objectExpression(h)), h = []);
            }
            if (c(a.node)) {
              for (var g = [],
                  h = [],
                  i = a.node.properties,
                  j = Array.isArray(i),
                  k = 0,
                  i = j ? i : d(i); ; ) {
                var l;
                if (j) {
                  if (k >= i.length)
                    break;
                  l = i[k++];
                } else {
                  if (k = i.next(), k.done)
                    break;
                  l = k.value;
                }
                var m = l;
                e.isSpreadProperty(m) ? (f(), g.push(m.argument)) : h.push(m);
              }
              f(), e.isObjectExpression(g[0]) || g.unshift(e.objectExpression([])), a.replaceWith(e.callExpression(b.addHelper("extends"), g));
            }
          }}
      };
    }, c.exports = b["default"], c.exports;
  }), a.registerDynamic("ca", ["c6", "c7", "c9", "3"], !0, function(a, b, c) {
    a("3");
    return c.exports = {
      presets: [a("c6")],
      plugins: [a("c7"), a("c9")]
    }, c.exports;
  }), a.registerDynamic("cb", ["c", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("c")["default"]);
    return b.__esModule = !0, b["default"] = function(a) {
      function b(a) {
        return e.isLiteral(a) && "string" == typeof a.value;
      }
      function c(a, b) {
        return e.binaryExpression("+", a, b);
      }
      var e = a.types;
      return {visitor: {
          TaggedTemplateExpression: function(a, b) {
            for (var c = a.node,
                f = c.quasi,
                g = [],
                h = [],
                i = [],
                j = f.quasis,
                k = Array.isArray(j),
                l = 0,
                j = k ? j : d(j); ; ) {
              var m;
              if (k) {
                if (l >= j.length)
                  break;
                m = j[l++];
              } else {
                if (l = j.next(), l.done)
                  break;
                m = l.value;
              }
              var n = m;
              h.push(e.stringLiteral(n.value.cooked)), i.push(e.stringLiteral(n.value.raw));
            }
            h = e.arrayExpression(h), i = e.arrayExpression(i);
            var o = "taggedTemplateLiteral";
            b.opts.loose && (o += "Loose");
            var p = b.file.addTemplateObject(o, h, i);
            g.push(p), g = g.concat(f.expressions), a.replaceWith(e.callExpression(c.tag, g));
          },
          TemplateLiteral: function(a, f) {
            for (var g = [],
                h = a.get("expressions"),
                i = a.node.quasis,
                j = Array.isArray(i),
                k = 0,
                i = j ? i : d(i); ; ) {
              var l;
              if (j) {
                if (k >= i.length)
                  break;
                l = i[k++];
              } else {
                if (k = i.next(), k.done)
                  break;
                l = k.value;
              }
              var m = l;
              g.push(e.stringLiteral(m.value.cooked));
              var n = h.shift();
              n && (!f.opts.spec || n.isBaseType("string") || n.isBaseType("number") ? g.push(n.node) : g.push(e.callExpression(e.identifier("String"), [n.node])));
            }
            if (g = g.filter(function(a) {
              return !e.isLiteral(a, {value: ""});
            }), b(g[0]) || b(g[1]) || g.unshift(e.stringLiteral("")), g.length > 1) {
              for (var o = c(g.shift(), g.shift()),
                  p = g,
                  q = Array.isArray(p),
                  r = 0,
                  p = q ? p : d(p); ; ) {
                var s;
                if (q) {
                  if (r >= p.length)
                    break;
                  s = p[r++];
                } else {
                  if (r = p.next(), r.done)
                    break;
                  s = r.value;
                }
                var t = s;
                o = c(o, t);
              }
              a.replaceWith(o);
            } else
              a.replaceWith(g[0]);
          }
        }};
    }, c.exports = b["default"], c.exports;
  }), a.registerDynamic("cc", ["3"], !0, function(a, b, c) {
    "use strict";
    a("3");
    return b.__esModule = !0, b["default"] = function() {
      return {visitor: {
          NumericLiteral: function(a) {
            var b = a.node;
            b.extra && /^0[ob]/i.test(b.extra.raw) && (b.extra = void 0);
          },
          StringLiteral: function(a) {
            var b = a.node;
            b.extra && /\\[u]/gi.test(b.extra.raw) && (b.extra = void 0);
          }
        }};
    }, c.exports = b["default"], c.exports;
  }), a.registerDynamic("cd", ["a", "bf", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("a")["default"]);
    b.__esModule = !0;
    var e = a("bf"),
        f = d(e);
    return b["default"] = function() {
      return {visitor: {
          "ArrowFunctionExpression|FunctionExpression": {exit: function(a) {
              if ("value" !== a.key && !a.parentPath.isObjectProperty()) {
                var b = f["default"](a);
                b && a.replaceWith(b);
              }
            }},
          ObjectProperty: function(a) {
            var b = a.get("value");
            if (b.isFunction()) {
              var c = f["default"](b);
              c && b.replaceWith(c);
            }
          }
        }};
    }, c.exports = b["default"], c.exports;
  }), a.registerDynamic("ce", ["3"], !0, function(a, b, c) {
    "use strict";
    a("3");
    return b.__esModule = !0, b["default"] = function(a) {
      var b = a.types;
      return {visitor: {ArrowFunctionExpression: function(a, c) {
            if (c.opts.spec) {
              var d = a.node;
              if (d.shadow)
                return;
              d.shadow = {"this": !1}, d.type = "FunctionExpression";
              var e = b.thisExpression();
              e._forceShadow = a, a.ensureBlock(), a.get("body").unshiftContainer("body", b.expressionStatement(b.callExpression(c.addHelper("newArrowCheck"), [b.thisExpression(), e]))), a.replaceWith(b.callExpression(b.memberExpression(d, b.identifier("bind")), [b.thisExpression()]));
            } else
              a.arrowFunctionToShadowed();
          }}};
    }, c.exports = b["default"], c.exports;
  }), a.registerDynamic("cf", ["c", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("c")["default"]);
    return b.__esModule = !0, b["default"] = function(a) {
      function b(a, b) {
        for (var e = b.get(a),
            f = e,
            g = Array.isArray(f),
            h = 0,
            f = g ? f : d(f); ; ) {
          var i;
          if (g) {
            if (h >= f.length)
              break;
            i = f[h++];
          } else {
            if (h = f.next(), h.done)
              break;
            i = h.value;
          }
          var j = i,
              k = j.node;
          if (j.isFunctionDeclaration()) {
            var l = c.variableDeclaration("let", [c.variableDeclarator(k.id, c.toExpression(k))]);
            l._blockHoist = 2, k.id = null, j.replaceWith(l);
          }
        }
      }
      var c = a.types;
      return {visitor: {
          BlockStatement: function(a) {
            var d = a.node,
                e = a.parent;
            c.isFunction(e, {body: d}) || c.isExportDeclaration(e) || b("body", a);
          },
          SwitchCase: function(a) {
            b("consequent", a);
          }
        }};
    }, c.exports = b["default"], c.exports;
  }), a.registerDynamic("d0", ["52", "60", "69", "58", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("52").getDesc),
        e = a("60"),
        f = a("69"),
        g = function(a, b) {
          if (f(a), !e(b) && null !== b)
            throw TypeError(b + ": can't set as prototype!");
        };
    return c.exports = {
      set: Object.setPrototypeOf || ("__proto__" in {} ? function(b, c, e) {
        try {
          e = a("58")(Function.call, d(Object.prototype, "__proto__").set, 2), e(b, []), c = !(b instanceof Array);
        } catch (f) {
          c = !0;
        }
        return function(a, b) {
          return g(a, b), c ? a.__proto__ = b : e(a, b), a;
        };
      }({}, !1) : void 0),
      check: g
    }, c.exports;
  }), a.registerDynamic("d1", ["64", "d0", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("64"));
    return d(d.S, "Object", {setPrototypeOf: a("d0").set}), c.exports;
  }), a.registerDynamic("d2", ["d1", "51", "3"], !0, function(a, b, c) {
    a("3");
    return a("d1"), c.exports = a("51").Object.setPrototypeOf, c.exports;
  }), a.registerDynamic("d3", ["d2", "3"], !0, function(a, b, c) {
    a("3");
    return c.exports = {
      "default": a("d2"),
      __esModule: !0
    }, c.exports;
  }), a.registerDynamic("13", ["79", "d3", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("79")["default"]),
        e = a("d3")["default"];
    return b["default"] = function(a, b) {
      if ("function" != typeof b && null !== b)
        throw new TypeError("Super expression must either be null or a function, not " + typeof b);
      a.prototype = d(b && b.prototype, {constructor: {
          value: a,
          enumerable: !1,
          writable: !0,
          configurable: !0
        }}), b && (e ? e(a, b) : a.__proto__ = b);
    }, b.__esModule = !0, c.exports;
  }), a.registerDynamic("d4", ["13", "9", "a", "4", "bf", "d5", "5", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("13")["default"]),
        e = a("9")["default"],
        f = a("a")["default"],
        g = a("4")["default"];
    b.__esModule = !0;
    var h = a("bf"),
        i = f(h),
        j = a("d5"),
        k = f(j),
        l = a("5"),
        m = g(l),
        n = function(a) {
          function b() {
            e(this, b), a.apply(this, arguments), this.isLoose = !0;
          }
          return d(b, a), b.prototype._processMethod = function(a, b) {
            if (!a.decorators) {
              var c = this.classRef;
              a["static"] || (c = m.memberExpression(c, m.identifier("prototype")));
              var d = m.memberExpression(c, a.key, a.computed || m.isLiteral(a.key)),
                  e = m.functionExpression(null, a.params, a.body, a.generator, a.async),
                  f = m.toComputedKey(a, a.key);
              m.isStringLiteral(f) && (e = i["default"]({
                node: e,
                id: f,
                scope: b
              }));
              var g = m.expressionStatement(m.assignmentExpression("=", d, e));
              return m.inheritsComments(g, a), this.body.push(g), !0;
            }
          }, b;
        }(k["default"]);
    return b["default"] = n, c.exports = b["default"], c.exports;
  }), a.registerDynamic("d6", ["a", "4", "bf", "a4", "d7", "5", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return !s.isClassMethod(a) && !s.isObjectMethod(a) || "get" !== a.kind && "set" !== a.kind ? "value" : a.kind;
    }
    function e(a, b, c, e, f) {
      var g = s.toKeyAlias(b),
          h = {};
      if (q["default"](a, g) && (h = a[g]), a[g] = h, h._inherits = h._inherits || [], h._inherits.push(b), h._key = b.key, b.computed && (h._computed = !0), b.decorators) {
        var i = h.decorators = h.decorators || s.arrayExpression([]);
        i.elements = i.elements.concat(b.decorators.map(function(a) {
          return a.expression;
        }).reverse());
      }
      if (h.value || h.initializer)
        throw e.buildCodeFrameError(b, "Key conflict with sibling node");
      var j = void 0,
          k = void 0;
      (s.isObjectProperty(b) || s.isObjectMethod(b) || s.isClassMethod(b)) && (j = s.toComputedKey(b, b.key)), s.isObjectProperty(b) || s.isClassProperty(b) ? k = b.value : (s.isObjectMethod(b) || s.isClassMethod(b)) && (k = s.functionExpression(null, b.params, b.body, b.generator, b.async));
      var l = d(b);
      return c && "value" === l || (c = l), f && s.isStringLiteral(j) && ("value" === c || "initializer" === c) && s.isFunctionExpression(k) && (k = m["default"]({
        id: j,
        node: k,
        scope: f
      })), k && (s.inheritsComments(k, b), h[c] = k), h;
    }
    function f(a) {
      for (var b in a)
        if (a[b]._computed)
          return !0;
      return !1;
    }
    function g(a) {
      for (var b = s.arrayExpression([]),
          c = 0; c < a.properties.length; c++) {
        var d = a.properties[c],
            e = d.value;
        e.properties.unshift(s.objectProperty(s.identifier("key"), s.toComputedKey(d))), b.elements.push(e);
      }
      return b;
    }
    function h(a) {
      var b = s.objectExpression([]);
      return o["default"](a, function(a) {
        var c = s.objectExpression([]),
            d = s.objectProperty(a._key, c, a._computed);
        o["default"](a, function(a, b) {
          if ("_" !== b[0]) {
            var d = a;
            (s.isClassMethod(a) || s.isClassProperty(a)) && (a = a.value);
            var e = s.objectProperty(s.identifier(b), a);
            s.inheritsComments(e, d), s.removeComments(d), c.properties.push(e);
          }
        }), b.properties.push(d);
      }), b;
    }
    function i(a) {
      return o["default"](a, function(a) {
        a.value && (a.writable = s.booleanLiteral(!0)), a.configurable = s.booleanLiteral(!0), a.enumerable = s.booleanLiteral(!0);
      }), h(a);
    }
    var j = (a("3"), a("a")["default"]),
        k = a("4")["default"];
    b.__esModule = !0, b.push = e, b.hasComputed = f, b.toComputedObjectFromClass = g, b.toClassObject = h, b.toDefineObject = i;
    var l = a("bf"),
        m = j(l),
        n = a("a4"),
        o = j(n),
        p = a("d7"),
        q = j(p),
        r = a("5"),
        s = k(r);
    return c.exports;
  }), a.registerDynamic("d5", ["9", "c", "a", "4", "14", "d8", "d9", "d6", "81", "5", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("9")["default"]),
        e = a("c")["default"],
        f = a("a")["default"],
        g = a("4")["default"];
    b.__esModule = !0;
    var h = a("14"),
        i = a("d8"),
        j = f(i),
        k = a("d9"),
        l = f(k),
        m = a("d6"),
        n = g(m),
        o = a("81"),
        p = f(o),
        q = a("5"),
        r = g(q),
        s = p["default"]("\n  (function () {\n    super(...arguments);\n  })\n"),
        t = {
          "FunctionExpression|FunctionDeclaration": function(a) {
            a.is("shadow") || a.skip();
          },
          Method: function(a) {
            a.skip();
          }
        },
        u = h.visitors.merge([t, {
          Super: function(a) {
            if (this.isDerived && !this.hasBareSuper && !a.parentPath.isCallExpression({callee: a.node}))
              throw a.buildCodeFrameError("'super.*' is not allowed before super()");
          },
          CallExpression: {exit: function(a) {
              if (a.get("callee").isSuper() && (this.hasBareSuper = !0, !this.isDerived))
                throw a.buildCodeFrameError("super() is only allowed in a derived constructor");
            }},
          ThisExpression: function(a) {
            if (this.isDerived && !this.hasBareSuper && !a.inShadow("this"))
              throw a.buildCodeFrameError("'this' is not allowed before super()");
          }
        }]),
        v = h.visitors.merge([t, {ThisExpression: function(a) {
            this.superThises.push(a);
          }}]),
        w = function() {
          function a(b, c) {
            d(this, a), this.parent = b.parent, this.scope = b.scope, this.node = b.node, this.path = b, this.file = c, this.clearDescriptors(), this.instancePropBody = [], this.instancePropRefs = {}, this.staticPropBody = [], this.body = [], this.bareSuperAfter = [], this.bareSupers = [], this.pushedConstructor = !1, this.pushedInherits = !1, this.isLoose = !1, this.superThises = [], this.classId = this.node.id, this.classRef = this.node.id || this.scope.generateUidIdentifier("class"), this.superName = this.node.superClass || r.identifier("Function"), this.isDerived = !!this.node.superClass;
          }
          return a.prototype.run = function() {
            var a = this,
                b = this.superName,
                c = this.file,
                d = this.body,
                e = this.constructorBody = r.blockStatement([]);
            this.constructor = this.buildConstructor();
            var f = [],
                g = [];
            if (this.isDerived && (g.push(b), b = this.scope.generateUidIdentifierBasedOnNode(b), f.push(b), this.superName = b), this.buildBody(), e.body.unshift(r.expressionStatement(r.callExpression(c.addHelper("classCallCheck"), [r.thisExpression(), this.classRef]))), d = d.concat(this.staticPropBody.map(function(b) {
              return b(a.classRef);
            })), this.classId && 1 === d.length)
              return r.toExpression(d[0]);
            d.push(r.returnStatement(this.classRef));
            var h = r.functionExpression(null, f, r.blockStatement(d));
            return h.shadow = !0, r.callExpression(h, g);
          }, a.prototype.buildConstructor = function() {
            var a = r.functionDeclaration(this.classRef, [], this.constructorBody);
            return r.inherits(a, this.node), a;
          }, a.prototype.pushToMap = function(a, b, c, d) {
            void 0 === c && (c = "value");
            var e = void 0;
            a["static"] ? (this.hasStaticDescriptors = !0, e = this.staticMutatorMap) : (this.hasInstanceDescriptors = !0, e = this.instanceMutatorMap);
            var f = n.push(e, a, c, this.file, d);
            return b && (f.enumerable = r.booleanLiteral(!0)), f;
          }, a.prototype.constructorMeMaybe = function() {
            for (var a = !1,
                b = this.path.get("body.body"),
                c = b,
                d = Array.isArray(c),
                f = 0,
                c = d ? c : e(c); ; ) {
              var g;
              if (d) {
                if (f >= c.length)
                  break;
                g = c[f++];
              } else {
                if (f = c.next(), f.done)
                  break;
                g = f.value;
              }
              var h = g;
              if (a = h.equals("kind", "constructor"))
                break;
            }
            if (!a) {
              var i = void 0,
                  j = void 0;
              if (this.isDerived) {
                var k = s().expression;
                i = k.params, j = k.body;
              } else
                i = [], j = r.blockStatement([]);
              this.path.get("body").unshiftContainer("body", r.classMethod("constructor", r.identifier("constructor"), i, j));
            }
          }, a.prototype.buildBody = function() {
            if (this.constructorMeMaybe(), this.pushBody(), this.verifyConstructor(), this.userConstructor) {
              var a = this.constructorBody;
              a.body = a.body.concat(this.userConstructor.body.body), r.inherits(this.constructor, this.userConstructor), r.inherits(a, this.userConstructor.body);
            }
            this.pushDescriptors();
          }, a.prototype.pushBody = function() {
            for (var a = this.path.get("body.body"),
                b = a,
                c = Array.isArray(b),
                d = 0,
                b = c ? b : e(b); ; ) {
              var f;
              if (c) {
                if (d >= b.length)
                  break;
                f = b[d++];
              } else {
                if (d = b.next(), d.done)
                  break;
                f = d.value;
              }
              var g = f,
                  h = g.node;
              if (g.isClassProperty())
                throw g.buildCodeFrameError("Missing class properties transform.");
              if (h.decorators)
                throw g.buildCodeFrameError("Method has decorators, put the decorator plugin before the classes one.");
              if (r.isClassMethod(h)) {
                var i = "constructor" === h.kind;
                if (i && (g.traverse(u, this), !this.hasBareSuper && this.isDerived))
                  throw g.buildCodeFrameError("missing super() call in constructor");
                var k = new j["default"]({
                  forceSuperMemoisation: i,
                  methodPath: g,
                  methodNode: h,
                  objectRef: this.classRef,
                  superRef: this.superName,
                  isStatic: h["static"],
                  isLoose: this.isLoose,
                  scope: this.scope,
                  file: this.file
                }, !0);
                k.replace(), i ? this.pushConstructor(k, h, g) : this.pushMethod(h, g);
              }
            }
          }, a.prototype.clearDescriptors = function() {
            this.hasInstanceDescriptors = !1, this.hasStaticDescriptors = !1, this.instanceMutatorMap = {}, this.staticMutatorMap = {};
          }, a.prototype.pushDescriptors = function() {
            this.pushInherits();
            var a = this.body,
                b = void 0,
                c = void 0;
            if (this.hasInstanceDescriptors && (b = n.toClassObject(this.instanceMutatorMap)), this.hasStaticDescriptors && (c = n.toClassObject(this.staticMutatorMap)), b || c) {
              b && (b = n.toComputedObjectFromClass(b)), c && (c = n.toComputedObjectFromClass(c));
              var d = r.nullLiteral(),
                  e = [this.classRef, d, d, d, d];
              b && (e[1] = b), c && (e[2] = c), this.instanceInitializersId && (e[3] = this.instanceInitializersId, a.unshift(this.buildObjectAssignment(this.instanceInitializersId))), this.staticInitializersId && (e[4] = this.staticInitializersId, a.unshift(this.buildObjectAssignment(this.staticInitializersId)));
              for (var f = 0,
                  g = 0; g < e.length; g++)
                e[g] !== d && (f = g);
              e = e.slice(0, f + 1), a.push(r.expressionStatement(r.callExpression(this.file.addHelper("createClass"), e)));
            }
            this.clearDescriptors();
          }, a.prototype.buildObjectAssignment = function(a) {
            return r.variableDeclaration("var", [r.variableDeclarator(a, r.objectExpression([]))]);
          }, a.prototype.wrapSuperCall = function(a, b, c, d) {
            var e = a.node;
            this.isLoose ? (e.arguments.unshift(r.thisExpression()), 2 === e.arguments.length && r.isSpreadElement(e.arguments[1]) && r.isIdentifier(e.arguments[1].argument, {name: "arguments"}) ? (e.arguments[1] = e.arguments[1].argument, e.callee = r.memberExpression(b, r.identifier("apply"))) : e.callee = r.memberExpression(b, r.identifier("call"))) : e = l["default"](r.callExpression(r.memberExpression(r.identifier("Object"), r.identifier("getPrototypeOf")), [this.classRef]), r.thisExpression(), e.arguments);
            var f = r.callExpression(this.file.addHelper("possibleConstructorReturn"), [r.thisExpression(), e]),
                g = this.bareSuperAfter.map(function(a) {
                  return a(c);
                });
            a.parentPath.isExpressionStatement() && a.parentPath.container === d.node.body && d.node.body.length - 1 === a.parentPath.key ? ((this.superThises.length || g.length) && (a.scope.push({id: c}), f = r.assignmentExpression("=", c, f)), g.length && (f = r.toSequenceExpression([f].concat(g, [c]))), a.parentPath.replaceWith(r.returnStatement(f))) : a.replaceWithMultiple([r.variableDeclaration("var", [r.variableDeclarator(c, f)])].concat(g, [r.expressionStatement(c)]));
          }, a.prototype.verifyConstructor = function() {
            var a = this;
            if (this.isDerived) {
              var b = this.userConstructorPath,
                  c = b.get("body");
              b.traverse(v, this);
              for (var d = !!this.bareSupers.length,
                  f = this.superName || r.identifier("Function"),
                  g = b.scope.generateUidIdentifier("this"),
                  h = this.bareSupers,
                  i = Array.isArray(h),
                  j = 0,
                  h = i ? h : e(h); ; ) {
                var k;
                if (i) {
                  if (j >= h.length)
                    break;
                  k = h[j++];
                } else {
                  if (j = h.next(), j.done)
                    break;
                  k = j.value;
                }
                var l = k;
                this.wrapSuperCall(l, f, g, c), d && l.find(function(a) {
                  return a === b ? !0 : a.isLoop() || a.isConditional() ? (d = !1, !0) : void 0;
                });
              }
              for (var m = this.superThises,
                  n = Array.isArray(m),
                  o = 0,
                  m = n ? m : e(m); ; ) {
                var p;
                if (n) {
                  if (o >= m.length)
                    break;
                  p = m[o++];
                } else {
                  if (o = m.next(), o.done)
                    break;
                  p = o.value;
                }
                var q = p;
                q.replaceWith(g);
              }
              var s = function(b) {
                return r.callExpression(a.file.addHelper("possibleConstructorReturn"), [g].concat(b || []));
              },
                  t = c.get("body");
              t.length && !t.pop().isReturnStatement() && c.pushContainer("body", r.returnStatement(d ? g : s()));
              for (var u = this.superReturns,
                  w = Array.isArray(u),
                  x = 0,
                  u = w ? u : e(u); ; ) {
                var y;
                if (w) {
                  if (x >= u.length)
                    break;
                  y = u[x++];
                } else {
                  if (x = u.next(), x.done)
                    break;
                  y = x.value;
                }
                var z = y;
                if (z.node.argument) {
                  var A = z.scope.generateDeclaredUidIdentifier("ret");
                  z.get("argument").replaceWithMultiple([r.assignmentExpression("=", A, z.node.argument), s(A)]);
                } else
                  z.get("argument").replaceWith(s());
              }
            }
          }, a.prototype.pushMethod = function(a, b) {
            var c = b ? b.scope : this.scope;
            "method" === a.kind && this._processMethod(a, c) || this.pushToMap(a, !1, null, c);
          }, a.prototype._processMethod = function() {
            return !1;
          }, a.prototype.pushConstructor = function(a, b, c) {
            this.bareSupers = a.bareSupers, this.superReturns = a.returns, c.scope.hasOwnBinding(this.classRef.name) && c.scope.rename(this.classRef.name);
            var d = this.constructor;
            this.userConstructorPath = c, this.userConstructor = b, this.hasConstructor = !0, r.inheritsComments(d, b), d._ignoreUserWhitespace = !0, d.params = b.params, r.inherits(d.body, b.body), d.body.directives = b.body.directives, this._pushConstructor();
          }, a.prototype._pushConstructor = function() {
            this.pushedConstructor || (this.pushedConstructor = !0, (this.hasInstanceDescriptors || this.hasStaticDescriptors) && this.pushDescriptors(), this.body.push(this.constructor), this.pushInherits());
          }, a.prototype.pushInherits = function() {
            this.isDerived && !this.pushedInherits && (this.pushedInherits = !0, this.body.unshift(r.expressionStatement(r.callExpression(this.file.addHelper("inherits"), [this.classRef, this.superName]))));
          }, a;
        }();
    return b["default"] = w, c.exports = b["default"], c.exports;
  }), a.registerDynamic("bf", ["a", "4", "da", "81", "5", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a, b, c, d) {
      if (a.selfReference) {
        if (!d.hasBinding(c.name) || d.hasGlobal(c.name)) {
          if (!m.isFunction(b))
            return;
          var e = n;
          b.generator && (e = o);
          var f = e({
            FUNCTION: b,
            FUNCTION_ID: c,
            FUNCTION_KEY: d.generateUidIdentifier(c.name)
          }).expression;
          f.callee._skipModulesRemap = !0;
          for (var g = f.callee.body.body[0].params,
              h = 0,
              j = i["default"](b); j > h; h++)
            g.push(d.generateUidIdentifier("x"));
          return f;
        }
        d.rename(c.name);
      }
      b.id = c, d.getProgramParent().references[c.name] = !0;
    }
    function e(a, b, c) {
      var d = {
        selfAssignment: !1,
        selfReference: !1,
        outerDeclar: c.getBindingIdentifier(b),
        references: [],
        name: b
      },
          e = c.getOwnBinding(b);
      return e ? "param" === e.kind && (d.selfReference = !0) : (d.outerDeclar || c.hasGlobal(b)) && c.traverse(a, p, d), d;
    }
    var f = (a("3"), a("a")["default"]),
        g = a("4")["default"];
    b.__esModule = !0;
    var h = a("da"),
        i = f(h),
        j = a("81"),
        k = f(j),
        l = a("5"),
        m = g(l),
        n = k["default"]("\n  (function (FUNCTION_KEY) {\n    function FUNCTION_ID() {\n      return FUNCTION_KEY.apply(this, arguments);\n    }\n\n    FUNCTION_ID.toString = function () {\n      return FUNCTION_KEY.toString();\n    }\n\n    return FUNCTION_ID;\n  })(FUNCTION)\n"),
        o = k["default"]("\n  (function (FUNCTION_KEY) {\n    function* FUNCTION_ID() {\n      return yield* FUNCTION_KEY.apply(this, arguments);\n    }\n\n    FUNCTION_ID.toString = function () {\n      return FUNCTION_KEY.toString();\n    };\n\n    return FUNCTION_ID;\n  })(FUNCTION)\n"),
        p = {"ReferencedIdentifier|BindingIdentifier": function(a, b) {
            if (a.node.name === b.name) {
              var c = a.scope.getBindingIdentifier(b.name);
              c === b.outerDeclar && (b.selfReference = !0, a.stop());
            }
          }};
    return b["default"] = function(a) {
      var b = a.node,
          c = a.parent,
          f = a.scope,
          g = a.id;
      if (!b.id) {
        if (!m.isObjectProperty(c) && !m.isObjectMethod(c, {kind: "method"}) || c.computed && !m.isLiteral(c.key)) {
          if (m.isVariableDeclarator(c)) {
            if (g = c.id, m.isIdentifier(g)) {
              var h = f.parent.getBinding(g.name);
              if (h && h.constant && f.getBinding(g.name) === h)
                return b.id = g, void(b.id[m.NOT_LOCAL_BINDING] = !0);
            }
          } else if (m.isAssignmentExpression(c))
            g = c.left;
          else if (!g)
            return;
        } else
          g = c.key;
        var i = void 0;
        if (g && m.isLiteral(g))
          i = g.value;
        else {
          if (!g || !m.isIdentifier(g))
            return;
          i = g.name;
        }
        i = m.toBindingIdentifierName(i), g = m.identifier(i), g[m.NOT_LOCAL_BINDING] = !0;
        var j = e(b, i, f);
        return d(j, b, g, f) || b;
      }
    }, c.exports = b["default"], c.exports;
  }), a.registerDynamic("db", ["b9", "a", "d4", "d5", "bf", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("b9")["default"]),
        e = a("a")["default"];
    b.__esModule = !0;
    var f = a("d4"),
        g = e(f),
        h = a("d5"),
        i = e(h),
        j = a("bf"),
        k = e(j);
    return b["default"] = function(a) {
      var b = a.types,
          c = d();
      return {visitor: {
          ExportDefaultDeclaration: function(a) {
            if (a.get("declaration").isClassDeclaration()) {
              var c = a.node,
                  d = c.declaration.id || a.scope.generateUidIdentifier("class");
              c.declaration.id = d, a.replaceWith(c.declaration), a.insertAfter(b.exportDefaultDeclaration(d));
            }
          },
          ClassDeclaration: function(a) {
            var c = a.node,
                d = c.id || a.scope.generateUidIdentifier("class");
            a.replaceWith(b.variableDeclaration("let", [b.variableDeclarator(d, b.toExpression(c))]));
          },
          ClassExpression: function(a, b) {
            var d = a.node;
            if (!d[c]) {
              var e = k["default"](a);
              if (e && e !== d)
                return a.replaceWith(e);
              d[c] = !0;
              var f = i["default"];
              b.opts.loose && (f = g["default"]), a.replaceWith(new f(a, b.file).run());
            }
          }
        }};
    }, c.exports = b["default"], c.exports;
  }), a.registerDynamic("d9", ["4", "5", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("4")["default"]);
    b.__esModule = !0;
    var e = a("5"),
        f = d(e);
    return b["default"] = function(a, b, c) {
      return 1 === c.length && f.isSpreadElement(c[0]) && f.isIdentifier(c[0].argument, {name: "arguments"}) ? f.callExpression(f.memberExpression(a, f.identifier("apply")), [b, c[0].argument]) : f.callExpression(f.memberExpression(a, f.identifier("call")), [b].concat(c));
    }, c.exports = b["default"], c.exports;
  }), a.registerDynamic("d8", ["9", "b9", "a", "4", "d9", "4d", "5", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a, b) {
      return o.isSuper(a) ? o.isMemberExpression(b, {computed: !1}) ? !1 : o.isCallExpression(b, {callee: a}) ? !1 : !0 : !1;
    }
    function e(a) {
      return o.isMemberExpression(a) && o.isSuper(a.object);
    }
    var f = (a("3"), a("9")["default"]),
        g = a("b9")["default"],
        h = a("a")["default"],
        i = a("4")["default"];
    b.__esModule = !0;
    var j = a("d9"),
        k = h(j),
        l = a("4d"),
        m = i(l),
        n = a("5"),
        o = i(n),
        p = g(),
        q = {
          "ObjectMethod|ClassMethod": function(a) {
            a.skip();
          },
          "FunctionDeclaration|FunctionExpression": function(a) {
            a.inShadow("this") || a.skip();
          },
          ReturnStatement: function(a, b) {
            a.inShadow("this") || b.returns.push(a);
          },
          ThisExpression: function(a, b) {
            a.node[p] || b.thises.push(a);
          },
          enter: function(a, b) {
            var c = b.specHandle;
            b.isLoose && (c = b.looseHandle);
            var d = a.isCallExpression() && a.get("callee").isSuper(),
                e = c.call(b, a);
            e && (b.hasSuper = !0), d && b.bareSupers.push(a), e === !0 && a.requeue(), e !== !0 && e && (Array.isArray(e) ? a.replaceWithMultiple(e) : a.replaceWith(e));
          }
        },
        r = function() {
          function a(b) {
            var c = arguments.length <= 1 || void 0 === arguments[1] ? !1 : arguments[1];
            f(this, a), this.forceSuperMemoisation = b.forceSuperMemoisation, this.methodPath = b.methodPath, this.methodNode = b.methodNode, this.superRef = b.superRef, this.isStatic = b.isStatic, this.hasSuper = !1, this.inClass = c, this.isLoose = b.isLoose, this.scope = this.methodPath.scope, this.file = b.file, this.opts = b, this.bareSupers = [], this.returns = [], this.thises = [];
          }
          return a.prototype.getObjectRef = function() {
            return this.opts.objectRef || this.opts.getObjectRef();
          }, a.prototype.setSuperProperty = function(a, b, c) {
            return o.callExpression(this.file.addHelper("set"), [o.callExpression(o.memberExpression(o.identifier("Object"), o.identifier("getPrototypeOf")), [this.isStatic ? this.getObjectRef() : o.memberExpression(this.getObjectRef(), o.identifier("prototype"))]), c ? a : o.stringLiteral(a.name), b, o.thisExpression()]);
          }, a.prototype.getSuperProperty = function(a, b) {
            return o.callExpression(this.file.addHelper("get"), [o.callExpression(o.memberExpression(o.identifier("Object"), o.identifier("getPrototypeOf")), [this.isStatic ? this.getObjectRef() : o.memberExpression(this.getObjectRef(), o.identifier("prototype"))]), b ? a : o.stringLiteral(a.name), o.thisExpression()]);
          }, a.prototype.replace = function() {
            this.methodPath.traverse(q, this);
          }, a.prototype.getLooseSuperProperty = function(a, b) {
            var c = this.methodNode,
                d = this.superRef || o.identifier("Function");
            return b.property === a ? void 0 : o.isCallExpression(b, {callee: a}) ? void 0 : o.isMemberExpression(b) && !c["static"] ? o.memberExpression(d, o.identifier("prototype")) : d;
          }, a.prototype.looseHandle = function(a) {
            var b = a.node;
            if (a.isSuper())
              return this.getLooseSuperProperty(b, a.parent);
            if (a.isCallExpression()) {
              var c = b.callee;
              if (!o.isMemberExpression(c))
                return;
              if (!o.isSuper(c.object))
                return;
              return o.appendToMemberExpression(c, o.identifier("call")), b.arguments.unshift(o.thisExpression()), !0;
            }
          }, a.prototype.specHandleAssignmentExpression = function(a, b, c) {
            return "=" === c.operator ? this.setSuperProperty(c.left.property, c.right, c.left.computed) : (a = a || b.scope.generateUidIdentifier("ref"), [o.variableDeclaration("var", [o.variableDeclarator(a, c.left)]), o.expressionStatement(o.assignmentExpression("=", c.left, o.binaryExpression(c.operator[0], a, c.right)))]);
          }, a.prototype.specHandle = function(a) {
            var b = void 0,
                c = void 0,
                f = void 0,
                g = void 0,
                h = a.parent,
                i = a.node;
            if (d(i, h))
              throw a.buildCodeFrameError(m.get("classesIllegalBareSuper"));
            if (o.isCallExpression(i)) {
              var j = i.callee;
              if (o.isSuper(j))
                return;
              e(j) && (b = j.property, c = j.computed, f = i.arguments);
            } else if (o.isMemberExpression(i) && o.isSuper(i.object))
              b = i.property, c = i.computed;
            else {
              if (o.isUpdateExpression(i) && e(i.argument)) {
                var k = o.binaryExpression(i.operator[0], i.argument, o.numericLiteral(1));
                if (i.prefix)
                  return this.specHandleAssignmentExpression(null, a, k);
                var l = a.scope.generateUidIdentifier("ref");
                return this.specHandleAssignmentExpression(l, a, k).concat(o.expressionStatement(l));
              }
              if (o.isAssignmentExpression(i) && e(i.left))
                return this.specHandleAssignmentExpression(null, a, i);
            }
            if (b) {
              var n = this.getSuperProperty(b, c, g);
              return f ? this.optimiseCall(n, f) : n;
            }
          }, a.prototype.optimiseCall = function(a, b) {
            var c = o.thisExpression();
            return c[p] = !0, k["default"](a, c, b);
          }, a;
        }();
    return b["default"] = r, c.exports = b["default"], c.exports;
  }), a.registerDynamic("dc", ["b9", "c", "a", "d8", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("b9")["default"]),
        e = a("c")["default"],
        f = a("a")["default"];
    b.__esModule = !0;
    var g = a("d8"),
        h = f(g);
    return b["default"] = function(a) {
      function b(a, b, c, d, e) {
        var f = new h["default"]({
          getObjectRef: d,
          methodNode: b,
          methodPath: a,
          isStatic: !0,
          scope: c,
          file: e
        });
        f.replace();
      }
      var c = a.types,
          f = d();
      return {visitor: {
          Super: function(a) {
            var b = a.findParent(function(a) {
              return a.isObjectExpression();
            });
            b && (b.node[f] = !0);
          },
          ObjectExpression: {exit: function(a, d) {
              if (a.node[f]) {
                for (var g = void 0,
                    h = function() {
                      return g = g || a.scope.generateUidIdentifier("obj");
                    },
                    i = a.get("properties"),
                    j = i,
                    k = Array.isArray(j),
                    l = 0,
                    j = k ? j : e(j); ; ) {
                  var m;
                  if (k) {
                    if (l >= j.length)
                      break;
                    m = j[l++];
                  } else {
                    if (l = j.next(), l.done)
                      break;
                    m = l.value;
                  }
                  var n = m;
                  n.isObjectProperty() && (n = n.get("value")), b(n, n.node, a.scope, h, d);
                }
                g && (a.scope.push({id: g}), a.replaceWith(c.assignmentExpression("=", g, a.node)));
              }
            }}
        }};
    }, c.exports = b["default"], c.exports;
  }), a.registerDynamic("dd", ["4", "5", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("4")["default"]);
    b.__esModule = !0;
    var e = a("5"),
        f = d(e);
    return b["default"] = function() {
      return {visitor: {
          ObjectMethod: function(a) {
            var b = a.node;
            "method" === b.kind && a.replaceWith(f.objectProperty(b.key, f.functionExpression(null, b.params, b.body, b.generator, b.async), b.computed));
          },
          ObjectProperty: function(a) {
            var b = a.node;
            b.shorthand && (b.shorthand = !1);
          }
        }};
    }, c.exports = b["default"], c.exports;
  }), a.registerDynamic("de", ["c", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("c")["default"]);
    return b.__esModule = !0, b["default"] = function(a) {
      function b(a) {
        return h.isObjectProperty(a) ? a.value : h.isObjectMethod(a) ? h.functionExpression(null, a.params, a.body, a.generator, a.async) : void 0;
      }
      function c(a, c, d) {
        "get" === c.kind && "set" === c.kind ? e(a, c, d) : d.push(h.expressionStatement(h.assignmentExpression("=", h.memberExpression(a, c.key, c.computed || h.isLiteral(c.key)), b(c))));
      }
      function e(a, c) {
        var d = (a.objId, a.body),
            e = a.getMutatorId,
            f = a.scope,
            g = c.key,
            i = f.maybeGenerateMemoised(c.key);
        i && (d.push(h.expressionStatement(h.assignmentExpression("=", i, g))), g = i), d.push.apply(d, j({
          MUTATOR_MAP_REF: e(),
          KEY: g,
          VALUE: b(c),
          KIND: h.identifier(c.kind)
        }));
      }
      function f(a) {
        for (var b = a.computedProps,
            f = Array.isArray(b),
            g = 0,
            b = f ? b : d(b); ; ) {
          var h;
          if (f) {
            if (g >= b.length)
              break;
            h = b[g++];
          } else {
            if (g = b.next(), g.done)
              break;
            h = g.value;
          }
          var i = h;
          "get" === i.kind || "set" === i.kind ? e(a, i) : c(a.objId, i, a.body);
        }
      }
      function g(a) {
        for (var f = a.objId,
            g = a.body,
            i = a.computedProps,
            j = a.state,
            k = i,
            l = Array.isArray(k),
            m = 0,
            k = l ? k : d(k); ; ) {
          var n;
          if (l) {
            if (m >= k.length)
              break;
            n = k[m++];
          } else {
            if (m = k.next(), m.done)
              break;
            n = m.value;
          }
          var o = n,
              p = h.toComputedKey(o);
          if ("get" === o.kind || "set" === o.kind)
            e(a, o);
          else if (h.isStringLiteral(p, {value: "__proto__"}))
            c(f, o, g);
          else {
            if (1 === i.length)
              return h.callExpression(j.addHelper("defineProperty"), [a.initPropExpression, p, b(o)]);
            g.push(h.expressionStatement(h.callExpression(j.addHelper("defineProperty"), [f, p, b(o)])));
          }
        }
      }
      var h = a.types,
          i = a.template,
          j = i("\n    MUTATOR_MAP_REF[KEY] = MUTATOR_MAP_REF[KEY] || {};\n    MUTATOR_MAP_REF[KEY].KIND = VALUE;\n  ");
      return {visitor: {ObjectExpression: {exit: function(a, b) {
              for (var c = a.node,
                  e = a.parent,
                  i = a.scope,
                  j = !1,
                  k = c.properties,
                  l = Array.isArray(k),
                  m = 0,
                  k = l ? k : d(k); ; ) {
                var n;
                if (l) {
                  if (m >= k.length)
                    break;
                  n = k[m++];
                } else {
                  if (m = k.next(), m.done)
                    break;
                  n = m.value;
                }
                var o = n;
                if (j = o.computed === !0)
                  break;
              }
              if (j) {
                for (var p = [],
                    q = [],
                    r = !1,
                    s = c.properties,
                    t = Array.isArray(s),
                    u = 0,
                    s = t ? s : d(s); ; ) {
                  var v;
                  if (t) {
                    if (u >= s.length)
                      break;
                    v = s[u++];
                  } else {
                    if (u = s.next(), u.done)
                      break;
                    v = u.value;
                  }
                  var o = v;
                  o.computed && (r = !0), r ? q.push(o) : p.push(o);
                }
                var w = i.generateUidIdentifierBasedOnNode(e),
                    x = h.objectExpression(p),
                    y = [];
                y.push(h.variableDeclaration("var", [h.variableDeclarator(w, x)]));
                var z = g;
                b.opts.loose && (z = f);
                var A = void 0,
                    B = function() {
                      return A || (A = i.generateUidIdentifier("mutatorMap"), y.push(h.variableDeclaration("var", [h.variableDeclarator(A, h.objectExpression([]))]))), A;
                    },
                    C = z({
                      scope: i,
                      objId: w,
                      body: y,
                      computedProps: q,
                      initPropExpression: x,
                      getMutatorId: B,
                      state: b
                    });
                A && y.push(h.expressionStatement(h.callExpression(b.addHelper("defineEnumerableProperties"), [w, A]))), C ? a.replaceWith(C) : (y.push(h.expressionStatement(w)), a.replaceWithMultiple(y));
              }
            }}}};
    }, c.exports = b["default"], c.exports;
  }), a.registerDynamic("df", ["3"], !0, function(a, b, c) {
    "use strict";
    a("3");
    return b.__esModule = !0, b["default"] = function(a) {
      function b(a) {
        var b = a.node,
            c = a.scope,
            d = [],
            e = b.right;
        if (!g.isIdentifier(e) || !c.hasBinding(e.name)) {
          var f = c.generateUidIdentifier("arr");
          d.push(g.variableDeclaration("var", [g.variableDeclarator(f, e)])), e = f;
        }
        var i = c.generateUidIdentifier("i"),
            j = h({
              BODY: b.body,
              KEY: i,
              ARR: e
            });
        g.inherits(j, b), g.ensureBlock(j);
        var k = g.memberExpression(e, i, !0),
            l = b.left;
        return g.isVariableDeclaration(l) ? (l.declarations[0].init = k, j.body.body.unshift(l)) : j.body.body.unshift(g.expressionStatement(g.assignmentExpression("=", l, k))), a.parentPath.isLabeledStatement() && (j = g.labeledStatement(a.parentPath.node.label, j)), d.push(j), d;
      }
      function c(a, b) {
        var c = a.node,
            d = a.scope,
            f = c.left,
            h = void 0,
            j = void 0;
        if (g.isIdentifier(f) || g.isPattern(f) || g.isMemberExpression(f))
          j = f;
        else {
          if (!g.isVariableDeclaration(f))
            throw b.buildCodeFrameError(f, e.get("unknownForHead", f.type));
          j = d.generateUidIdentifier("ref"), h = g.variableDeclaration(f.kind, [g.variableDeclarator(f.declarations[0].id, j)]);
        }
        var k = d.generateUidIdentifier("iterator"),
            l = d.generateUidIdentifier("isArray"),
            m = i({
              LOOP_OBJECT: k,
              IS_ARRAY: l,
              OBJECT: c.right,
              INDEX: d.generateUidIdentifier("i"),
              ID: j
            });
        return h || m.body.body.shift(), {
          declar: h,
          node: m,
          loop: m
        };
      }
      function d(a, b) {
        var c = a.node,
            d = a.scope,
            f = a.parent,
            h = c.left,
            i = void 0,
            k = d.generateUidIdentifier("step"),
            l = g.memberExpression(k, g.identifier("value"));
        if (g.isIdentifier(h) || g.isPattern(h) || g.isMemberExpression(h))
          i = g.expressionStatement(g.assignmentExpression("=", h, l));
        else {
          if (!g.isVariableDeclaration(h))
            throw b.buildCodeFrameError(h, e.get("unknownForHead", h.type));
          i = g.variableDeclaration(h.kind, [g.variableDeclarator(h.declarations[0].id, l)]);
        }
        var m = d.generateUidIdentifier("iterator"),
            n = j({
              ITERATOR_HAD_ERROR_KEY: d.generateUidIdentifier("didIteratorError"),
              ITERATOR_COMPLETION: d.generateUidIdentifier("iteratorNormalCompletion"),
              ITERATOR_ERROR_KEY: d.generateUidIdentifier("iteratorError"),
              ITERATOR_KEY: m,
              STEP_KEY: k,
              OBJECT: c.right,
              BODY: null
            }),
            o = g.isLabeledStatement(f),
            p = n[3].block.body,
            q = p[0];
        return o && (p[0] = g.labeledStatement(f.label, q)), {
          replaceParent: o,
          declar: i,
          loop: q,
          node: n
        };
      }
      var e = a.messages,
          f = a.template,
          g = a.types,
          h = f("\n    for (var KEY = 0; KEY < ARR.length; KEY++) BODY;\n  "),
          i = f("\n    for (var LOOP_OBJECT = OBJECT,\n             IS_ARRAY = Array.isArray(LOOP_OBJECT),\n             INDEX = 0,\n             LOOP_OBJECT = IS_ARRAY ? LOOP_OBJECT : LOOP_OBJECT[Symbol.iterator]();;) {\n      var ID;\n      if (IS_ARRAY) {\n        if (INDEX >= LOOP_OBJECT.length) break;\n        ID = LOOP_OBJECT[INDEX++];\n      } else {\n        INDEX = LOOP_OBJECT.next();\n        if (INDEX.done) break;\n        ID = INDEX.value;\n      }\n    }\n  "),
          j = f("\n    var ITERATOR_COMPLETION = true;\n    var ITERATOR_HAD_ERROR_KEY = false;\n    var ITERATOR_ERROR_KEY = undefined;\n    try {\n      for (var ITERATOR_KEY = OBJECT[Symbol.iterator](), STEP_KEY; !(ITERATOR_COMPLETION = (STEP_KEY = ITERATOR_KEY.next()).done); ITERATOR_COMPLETION = true) {\n      }\n    } catch (err) {\n      ITERATOR_HAD_ERROR_KEY = true;\n      ITERATOR_ERROR_KEY = err;\n    } finally {\n      try {\n        if (!ITERATOR_COMPLETION && ITERATOR_KEY.return) {\n          ITERATOR_KEY.return();\n        }\n      } finally {\n        if (ITERATOR_HAD_ERROR_KEY) {\n          throw ITERATOR_ERROR_KEY;\n        }\n      }\n    }\n  ");
      return {visitor: {ForOfStatement: function(a, e) {
            if (a.get("right").isArrayExpression())
              return a.replaceWithMultiple(b.call(this, a, e));
            var f = d;
            e.opts.loose && (f = c);
            var h = a.node,
                i = f(a, e),
                j = i.declar,
                k = i.loop,
                l = k.body;
            a.ensureBlock(), j && l.body.push(j), l.body = l.body.concat(h.body.body), g.inherits(k, h), g.inherits(k.body, h.body), i.replaceParent ? (a.parentPath.replaceWithMultiple(i.node), a.remove()) : a.replaceWithMultiple(i.node);
          }}};
    }, c.exports = b["default"], c.exports;
  }), a.registerDynamic("e0", ["4", "e1", "5", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("4")["default"]);
    b.__esModule = !0;
    var e = a("e1"),
        f = d(e),
        g = a("5"),
        h = d(g);
    return b["default"] = function() {
      return {visitor: {RegExpLiteral: function(a) {
            var b = a.node;
            f.is(b, "y") && a.replaceWith(h.newExpression(h.identifier("RegExp"), [h.stringLiteral(b.pattern), h.stringLiteral(b.flags)]));
          }}};
    }, c.exports = b["default"], c.exports;
  }), function() {
    var b = a.amdDefine;
    (function() {
      "use strict";
      function a() {
        var a,
            b,
            c = 16384,
            d = [],
            e = -1,
            f = arguments.length;
        if (!f)
          return "";
        for (var g = ""; ++e < f; ) {
          var h = Number(arguments[e]);
          if (!isFinite(h) || 0 > h || h > 1114111 || y(h) != h)
            throw RangeError("Invalid code point: " + h);
          65535 >= h ? d.push(h) : (h -= 65536, a = (h >> 10) + 55296, b = h % 1024 + 56320, d.push(a, b)), (e + 1 == f || d.length > c) && (g += x.apply(null, d), d.length = 0);
        }
        return g;
      }
      function c(a, b) {
        if (-1 == b.indexOf("|")) {
          if (a == b)
            return;
          throw Error("Invalid node type: " + a);
        }
        if (b = c.hasOwnProperty(b) ? c[b] : c[b] = RegExp("^(?:" + b + ")$"), !b.test(a))
          throw Error("Invalid node type: " + a);
      }
      function d(a) {
        var b = a.type;
        if (d.hasOwnProperty(b) && "function" == typeof d[b])
          return d[b](a);
        throw Error("Invalid node type: " + b);
      }
      function e(a) {
        c(a.type, "alternative");
        var b = a.body,
            d = b ? b.length : 0;
        if (1 == d)
          return q(b[0]);
        for (var e = -1,
            f = ""; ++e < d; )
          f += q(b[e]);
        return f;
      }
      function f(a) {
        switch (c(a.type, "anchor"), a.kind) {
          case "start":
            return "^";
          case "end":
            return "$";
          case "boundary":
            return "\\b";
          case "not-boundary":
            return "\\B";
          default:
            throw Error("Invalid assertion");
        }
      }
      function g(a) {
        return c(a.type, "anchor|characterClass|characterClassEscape|dot|group|reference|value"), d(a);
      }
      function h(a) {
        c(a.type, "characterClass");
        var b = a.body,
            d = b ? b.length : 0,
            e = -1,
            f = "[";
        for (a.negative && (f += "^"); ++e < d; )
          f += k(b[e]);
        return f += "]";
      }
      function i(a) {
        return c(a.type, "characterClassEscape"), "\\" + a.value;
      }
      function j(a) {
        c(a.type, "characterClassRange");
        var b = a.min,
            d = a.max;
        if ("characterClassRange" == b.type || "characterClassRange" == d.type)
          throw Error("Invalid character class range");
        return k(b) + "-" + k(d);
      }
      function k(a) {
        return c(a.type, "anchor|characterClassEscape|characterClassRange|dot|value"), d(a);
      }
      function l(a) {
        c(a.type, "disjunction");
        var b = a.body,
            e = b ? b.length : 0;
        if (0 == e)
          throw Error("No body");
        if (1 == e)
          return d(b[0]);
        for (var f = -1,
            g = ""; ++f < e; )
          0 != f && (g += "|"), g += d(b[f]);
        return g;
      }
      function m(a) {
        return c(a.type, "dot"), ".";
      }
      function n(a) {
        c(a.type, "group");
        var b = "(";
        switch (a.behavior) {
          case "normal":
            break;
          case "ignore":
            b += "?:";
            break;
          case "lookahead":
            b += "?=";
            break;
          case "negativeLookahead":
            b += "?!";
            break;
          default:
            throw Error("Invalid behaviour: " + a.behaviour);
        }
        var e = a.body,
            f = e ? e.length : 0;
        if (1 == f)
          b += d(e[0]);
        else
          for (var g = -1; ++g < f; )
            b += d(e[g]);
        return b += ")";
      }
      function o(a) {
        c(a.type, "quantifier");
        var b = "",
            d = a.min,
            e = a.max;
        switch (e) {
          case void 0:
          case null:
            switch (d) {
              case 0:
                b = "*";
                break;
              case 1:
                b = "+";
                break;
              default:
                b = "{" + d + ",}";
            }
            break;
          default:
            b = d == e ? "{" + d + "}" : 0 == d && 1 == e ? "?" : "{" + d + "," + e + "}";
        }
        return a.greedy || (b += "?"), g(a.body[0]) + b;
      }
      function p(a) {
        return c(a.type, "reference"), "\\" + a.matchIndex;
      }
      function q(a) {
        return c(a.type, "anchor|characterClass|characterClassEscape|empty|group|quantifier|reference|value"), d(a);
      }
      function r(b) {
        c(b.type, "value");
        var d = b.kind,
            e = b.codePoint;
        switch (d) {
          case "controlLetter":
            return "\\c" + a(e + 64);
          case "hexadecimalEscape":
            return "\\x" + ("00" + e.toString(16).toUpperCase()).slice(-2);
          case "identifier":
            return "\\" + a(e);
          case "null":
            return "\\" + e;
          case "octal":
            return "\\" + e.toString(8);
          case "singleEscape":
            switch (e) {
              case 8:
                return "\\b";
              case 9:
                return "\\t";
              case 10:
                return "\\n";
              case 11:
                return "\\v";
              case 12:
                return "\\f";
              case 13:
                return "\\r";
              default:
                throw Error("Invalid codepoint: " + e);
            }
          case "symbol":
            return a(e);
          case "unicodeEscape":
            return "\\u" + ("0000" + e.toString(16).toUpperCase()).slice(-4);
          case "unicodeCodePointEscape":
            return "\\u{" + e.toString(16).toUpperCase() + "}";
          default:
            throw Error("Unsupported node kind: " + d);
        }
      }
      var s = {
        "function": !0,
        object: !0
      },
          t = s[typeof window] && window || this,
          u = s[typeof exports] && exports,
          v = s[typeof module] && module && !module.nodeType && module,
          w = u && v && "object" == typeof global && global;
      !w || w.global !== w && w.window !== w && w.self !== w || (t = w);
      var x = String.fromCharCode,
          y = Math.floor;
      d.alternative = e, d.anchor = f, d.characterClass = h, d.characterClassEscape = i, d.characterClassRange = j, d.disjunction = l, d.dot = m, d.group = n, d.quantifier = o, d.reference = p, d.value = r, "function" == typeof b && "object" == typeof b.amd && b.amd ? b("e2", [], function() {
        return {generate: d};
      }) : u && v ? u.generate = d : t.regjsgen = {generate: d};
    }).call(this);
  }(), a.registerDynamic("e3", ["3"], !0, function(a, b, c) {
    a("3");
    return function() {
      function a(a, b) {
        function c(b) {
          return b.raw = a.substring(b.range[0], b.range[1]), b;
        }
        function d(a, b) {
          return a.range[0] = b, c(a);
        }
        function e(a, b) {
          return c({
            type: "anchor",
            kind: a,
            range: [Z - b, Z]
          });
        }
        function f(a, b, d, e) {
          return c({
            type: "value",
            kind: a,
            codePoint: b,
            range: [d, e]
          });
        }
        function g(a, b, c, d) {
          return d = d || 0, f(a, b, Z - (c.length + d), Z);
        }
        function h(a) {
          var b = a[0],
              c = b.charCodeAt(0);
          if (Y) {
            var d;
            if (1 === b.length && c >= 55296 && 56319 >= c && (d = v().charCodeAt(0), d >= 56320 && 57343 >= d))
              return Z++, f("symbol", 1024 * (c - 55296) + d - 56320 + 65536, Z - 2, Z);
          }
          return f("symbol", c, Z - 1, Z);
        }
        function i(a, b, d) {
          return c({
            type: "disjunction",
            body: a,
            range: [b, d]
          });
        }
        function j() {
          return c({
            type: "dot",
            range: [Z - 1, Z]
          });
        }
        function k(a) {
          return c({
            type: "characterClassEscape",
            value: a,
            range: [Z - 2, Z]
          });
        }
        function l(a) {
          return c({
            type: "reference",
            matchIndex: parseInt(a, 10),
            range: [Z - 1 - a.length, Z]
          });
        }
        function m(a, b, d, e) {
          return c({
            type: "group",
            behavior: a,
            body: b,
            range: [d, e]
          });
        }
        function n(a, b, d, e) {
          return null == e && (d = Z - 1, e = Z), c({
            type: "quantifier",
            min: a,
            max: b,
            greedy: !0,
            body: null,
            range: [d, e]
          });
        }
        function o(a, b, d) {
          return c({
            type: "alternative",
            body: a,
            range: [b, d]
          });
        }
        function p(a, b, d, e) {
          return c({
            type: "characterClass",
            body: a,
            negative: b,
            range: [d, e]
          });
        }
        function q(a, b, d, e) {
          return a.codePoint > b.codePoint && U("invalid range in character class", a.raw + "-" + b.raw, d, e), c({
            type: "characterClassRange",
            min: a,
            max: b,
            range: [d, e]
          });
        }
        function r(a) {
          return "alternative" === a.type ? a.body : [a];
        }
        function s(b) {
          b = b || 1;
          var c = a.substring(Z, Z + b);
          return Z += b || 1, c;
        }
        function t(a) {
          u(a) || U("character", a);
        }
        function u(b) {
          return a.indexOf(b, Z) === Z ? s(b.length) : void 0;
        }
        function v() {
          return a[Z];
        }
        function w(b) {
          return a.indexOf(b, Z) === Z;
        }
        function x(b) {
          return a[Z + 1] === b;
        }
        function y(b) {
          var c = a.substring(Z),
              d = c.match(b);
          return d && (d.range = [], d.range[0] = Z, s(d[0].length), d.range[1] = Z), d;
        }
        function z() {
          var a = [],
              b = Z;
          for (a.push(A()); u("|"); )
            a.push(A());
          return 1 === a.length ? a[0] : i(a, b, Z);
        }
        function A() {
          for (var a,
              b = [],
              c = Z; a = B(); )
            b.push(a);
          return 1 === b.length ? b[0] : o(b, c, Z);
        }
        function B() {
          if (Z >= a.length || w("|") || w(")"))
            return null;
          var b = D();
          if (b)
            return b;
          var c = F();
          c || U("Expected atom");
          var e = E() || !1;
          return e ? (e.body = r(c), d(e, c.range[0]), e) : c;
        }
        function C(a, b, c, d) {
          var e = null,
              f = Z;
          if (u(a))
            e = b;
          else {
            if (!u(c))
              return !1;
            e = d;
          }
          var g = z();
          g || U("Expected disjunction"), t(")");
          var h = m(e, r(g), f, Z);
          return "normal" == e && X && W++, h;
        }
        function D() {
          return u("^") ? e("start", 1) : u("$") ? e("end", 1) : u("\\b") ? e("boundary", 2) : u("\\B") ? e("not-boundary", 2) : C("(?=", "lookahead", "(?!", "negativeLookahead");
        }
        function E() {
          var a,
              b,
              c,
              d,
              e = Z;
          return u("*") ? b = n(0) : u("+") ? b = n(1) : u("?") ? b = n(0, 1) : (a = y(/^\{([0-9]+)\}/)) ? (c = parseInt(a[1], 10), b = n(c, c, a.range[0], a.range[1])) : (a = y(/^\{([0-9]+),\}/)) ? (c = parseInt(a[1], 10), b = n(c, void 0, a.range[0], a.range[1])) : (a = y(/^\{([0-9]+),([0-9]+)\}/)) && (c = parseInt(a[1], 10), d = parseInt(a[2], 10), c > d && U("numbers out of order in {} quantifier", "", e, Z), b = n(c, d, a.range[0], a.range[1])), b && u("?") && (b.greedy = !1, b.range[1] += 1), b;
        }
        function F() {
          var a;
          return (a = y(/^[^^$\\.*+?(){[|]/)) ? h(a) : u(".") ? j() : u("\\") ? (a = I(), a || U("atomEscape"), a) : (a = N()) ? a : C("(?:", "ignore", "(", "normal");
        }
        function G(a) {
          if (Y) {
            var b,
                d;
            if ("unicodeEscape" == a.kind && (b = a.codePoint) >= 55296 && 56319 >= b && w("\\") && x("u")) {
              var e = Z;
              Z++;
              var f = H();
              "unicodeEscape" == f.kind && (d = f.codePoint) >= 56320 && 57343 >= d ? (a.range[1] = f.range[1], a.codePoint = 1024 * (b - 55296) + d - 56320 + 65536, a.type = "value", a.kind = "unicodeCodePointEscape", c(a)) : Z = e;
            }
          }
          return a;
        }
        function H() {
          return I(!0);
        }
        function I(a) {
          var b,
              c = Z;
          if (b = J())
            return b;
          if (a) {
            if (u("b"))
              return g("singleEscape", 8, "\\b");
            u("B") && U("\\B not possible inside of CharacterClass", "", c);
          }
          return b = K();
        }
        function J() {
          var a,
              b;
          if (a = y(/^(?!0)\d+/)) {
            b = a[0];
            var c = parseInt(a[0], 10);
            return W >= c ? l(a[0]) : (V.push(c), s(-a[0].length), (a = y(/^[0-7]{1,3}/)) ? g("octal", parseInt(a[0], 8), a[0], 1) : (a = h(y(/^[89]/)), d(a, a.range[0] - 1)));
          }
          return (a = y(/^[0-7]{1,3}/)) ? (b = a[0], /^0{1,3}$/.test(b) ? g("null", 0, "0", b.length + 1) : g("octal", parseInt(b, 8), b, 1)) : (a = y(/^[dDsSwW]/)) ? k(a[0]) : !1;
        }
        function K() {
          var a;
          if (a = y(/^[fnrtv]/)) {
            var b = 0;
            switch (a[0]) {
              case "t":
                b = 9;
                break;
              case "n":
                b = 10;
                break;
              case "v":
                b = 11;
                break;
              case "f":
                b = 12;
                break;
              case "r":
                b = 13;
            }
            return g("singleEscape", b, "\\" + a[0]);
          }
          return (a = y(/^c([a-zA-Z])/)) ? g("controlLetter", a[1].charCodeAt(0) % 32, a[1], 2) : (a = y(/^x([0-9a-fA-F]{2})/)) ? g("hexadecimalEscape", parseInt(a[1], 16), a[1], 2) : (a = y(/^u([0-9a-fA-F]{4})/)) ? G(g("unicodeEscape", parseInt(a[1], 16), a[1], 2)) : Y && (a = y(/^u\{([0-9a-fA-F]+)\}/)) ? g("unicodeCodePointEscape", parseInt(a[1], 16), a[1], 4) : M();
        }
        function L(a) {
          var b = new RegExp("[ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮ̀-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁ҃-҇Ҋ-ԯԱ-Ֆՙա-և֑-ׇֽֿׁׂׅׄא-תװ-ײؐ-ؚؠ-٩ٮ-ۓە-ۜ۟-۪ۨ-ۼۿܐ-݊ݍ-ޱ߀-ߵߺࠀ-࠭ࡀ-࡛ࢠ-ࢲࣤ-ॣ०-९ॱ-ঃঅ-ঌএঐও-নপ-রলশ-হ়-ৄেৈো-ৎৗড়ঢ়য়-ৣ০-ৱਁ-ਃਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹ਼ਾ-ੂੇੈੋ-੍ੑਖ਼-ੜਫ਼੦-ੵઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૯ଁ-ଃଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହ଼-ୄେୈୋ-୍ୖୗଡ଼ଢ଼ୟ-ୣ୦-୯ୱஂஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௯ఀ-ఃఅ-ఌఎ-ఐఒ-నప-హఽ-ౄె-ైొ-్ౕౖౘౙౠ-ౣ౦-౯ಁ-ಃಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕೖೞೠ-ೣ೦-೯ೱೲഁ-ഃഅ-ഌഎ-ഐഒ-ഺഽ-ൄെ-ൈൊ-ൎൗൠ-ൣ൦-൯ൺ-ൿංඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟ෦-෯ෲෳก-ฺเ-๎๐-๙ກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ູົ-ຽເ-ໄໆ່-ໍ໐-໙ໜ-ໟༀ༘༙༠-༩༹༵༷༾-ཇཉ-ཬཱ-྄྆-ྗྙ-ྼ࿆က-၉ၐ-ႝႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፟ᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-᜔ᜠ-᜴ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲᝳក-៓ៗៜ៝០-៩᠋-᠍᠐-᠙ᠠ-ᡷᢀ-ᢪᢰ-ᣵᤀ-ᤞᤠ-ᤫᤰ-᤻᥆-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧙ᨀ-ᨛᨠ-ᩞ᩠-᩿᩼-᪉᪐-᪙ᪧ᪰-᪽ᬀ-ᭋ᭐-᭙᭫-᭳ᮀ-᯳ᰀ-᰷᱀-᱉ᱍ-ᱽ᳐-᳔᳒-ᳶ᳸᳹ᴀ-᷵᷼-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼ‌‍‿⁀⁔ⁱⁿₐ-ₜ⃐-⃥⃜⃡-⃰ℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯ⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-ⷿⸯ々-〇〡-〯〱-〵〸-〼ぁ-ゖ゙゚ゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿌ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘫꙀ-꙯ꙴ-꙽ꙿ-ꚝꚟ-꛱ꜗ-ꜟꜢ-ꞈꞋ-ꞎꞐ-ꞭꞰꞱꟷ-ꠧꡀ-ꡳꢀ-꣄꣐-꣙꣠-ꣷꣻ꤀-꤭ꤰ-꥓ꥠ-ꥼꦀ-꧀ꧏ-꧙ꧠ-ꧾꨀ-ꨶꩀ-ꩍ꩐-꩙ꩠ-ꩶꩺ-ꫂꫛ-ꫝꫠ-ꫯꫲ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭟꭤꭥꯀ-ꯪ꯬꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻ︀-️︠-︭︳︴﹍-﹏ﹰ-ﹴﹶ-ﻼ０-９Ａ-Ｚ＿ａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ]");
          return 36 === a || 95 === a || a >= 65 && 90 >= a || a >= 97 && 122 >= a || a >= 48 && 57 >= a || 92 === a || a >= 128 && b.test(String.fromCharCode(a));
        }
        function M() {
          var a,
              b = "‌",
              c = "‍";
          return L(v()) ? u(b) ? g("identifier", 8204, b) : u(c) ? g("identifier", 8205, c) : null : (a = s(), g("identifier", a.charCodeAt(0), a, 1));
        }
        function N() {
          var a,
              b = Z;
          return (a = y(/^\[\^/)) ? (a = O(), t("]"), p(a, !0, b, Z)) : u("[") ? (a = O(), t("]"), p(a, !1, b, Z)) : null;
        }
        function O() {
          var a;
          return w("]") ? [] : (a = Q(), a || U("nonEmptyClassRanges"), a);
        }
        function P(a) {
          var b,
              c,
              d;
          if (w("-") && !x("]")) {
            t("-"), d = S(), d || U("classAtom"), c = Z;
            var e = O();
            return e || U("classRanges"), b = a.range[0], "empty" === e.type ? [q(a, d, b, c)] : [q(a, d, b, c)].concat(e);
          }
          return d = R(), d || U("nonEmptyClassRangesNoDash"), [a].concat(d);
        }
        function Q() {
          var a = S();
          return a || U("classAtom"), w("]") ? [a] : P(a);
        }
        function R() {
          var a = S();
          return a || U("classAtom"), w("]") ? a : P(a);
        }
        function S() {
          return u("-") ? h("-") : T();
        }
        function T() {
          var a;
          return (a = y(/^[^\\\]-]/)) ? h(a[0]) : u("\\") ? (a = H(), a || U("classEscape"), G(a)) : void 0;
        }
        function U(b, c, d, e) {
          d = null == d ? Z : d, e = null == e ? d : e;
          var f = Math.max(0, d - 10),
              g = Math.min(e + 10, a.length),
              h = "    " + a.substring(f, g),
              i = "    " + new Array(d - f + 1).join(" ") + "^";
          throw SyntaxError(b + " at position " + d + (c ? ": " + c : "") + "\n" + h + "\n" + i);
        }
        var V = [],
            W = 0,
            X = !0,
            Y = -1 !== (b || "").indexOf("u"),
            Z = 0;
        a = String(a), "" === a && (a = "(?:)");
        var $ = z();
        $.range[1] !== a.length && U("Could not parse entire input - got stuck", "", $.range[1]);
        for (var _ = 0; _ < V.length; _++)
          if (V[_] <= W)
            return Z = 0, X = !1, z();
        return $;
      }
      var b = {parse: a};
      "undefined" != typeof c && c.exports ? c.exports = b : window.regjsparser = b;
    }(), c.exports;
  }), a.registerDynamic("e4", [], !1, function() {
    return {
      75: 8490,
      83: 383,
      107: 8490,
      115: 383,
      181: 924,
      197: 8491,
      383: 83,
      452: 453,
      453: 452,
      455: 456,
      456: 455,
      458: 459,
      459: 458,
      497: 498,
      498: 497,
      837: 8126,
      914: 976,
      917: 1013,
      920: 1012,
      921: 8126,
      922: 1008,
      924: 181,
      928: 982,
      929: 1009,
      931: 962,
      934: 981,
      937: 8486,
      962: 931,
      976: 914,
      977: 1012,
      981: 934,
      982: 928,
      1008: 922,
      1009: 929,
      1012: [920, 977],
      1013: 917,
      7776: 7835,
      7835: 7776,
      8126: [837, 921],
      8486: 937,
      8490: 75,
      8491: 197,
      66560: 66600,
      66561: 66601,
      66562: 66602,
      66563: 66603,
      66564: 66604,
      66565: 66605,
      66566: 66606,
      66567: 66607,
      66568: 66608,
      66569: 66609,
      66570: 66610,
      66571: 66611,
      66572: 66612,
      66573: 66613,
      66574: 66614,
      66575: 66615,
      66576: 66616,
      66577: 66617,
      66578: 66618,
      66579: 66619,
      66580: 66620,
      66581: 66621,
      66582: 66622,
      66583: 66623,
      66584: 66624,
      66585: 66625,
      66586: 66626,
      66587: 66627,
      66588: 66628,
      66589: 66629,
      66590: 66630,
      66591: 66631,
      66592: 66632,
      66593: 66633,
      66594: 66634,
      66595: 66635,
      66596: 66636,
      66597: 66637,
      66598: 66638,
      66599: 66639,
      66600: 66560,
      66601: 66561,
      66602: 66562,
      66603: 66563,
      66604: 66564,
      66605: 66565,
      66606: 66566,
      66607: 66567,
      66608: 66568,
      66609: 66569,
      66610: 66570,
      66611: 66571,
      66612: 66572,
      66613: 66573,
      66614: 66574,
      66615: 66575,
      66616: 66576,
      66617: 66577,
      66618: 66578,
      66619: 66579,
      66620: 66580,
      66621: 66581,
      66622: 66582,
      66623: 66583,
      66624: 66584,
      66625: 66585,
      66626: 66586,
      66627: 66587,
      66628: 66588,
      66629: 66589,
      66630: 66590,
      66631: 66591,
      66632: 66592,
      66633: 66593,
      66634: 66594,
      66635: 66595,
      66636: 66596,
      66637: 66597,
      66638: 66598,
      66639: 66599,
      68736: 68800,
      68737: 68801,
      68738: 68802,
      68739: 68803,
      68740: 68804,
      68741: 68805,
      68742: 68806,
      68743: 68807,
      68744: 68808,
      68745: 68809,
      68746: 68810,
      68747: 68811,
      68748: 68812,
      68749: 68813,
      68750: 68814,
      68751: 68815,
      68752: 68816,
      68753: 68817,
      68754: 68818,
      68755: 68819,
      68756: 68820,
      68757: 68821,
      68758: 68822,
      68759: 68823,
      68760: 68824,
      68761: 68825,
      68762: 68826,
      68763: 68827,
      68764: 68828,
      68765: 68829,
      68766: 68830,
      68767: 68831,
      68768: 68832,
      68769: 68833,
      68770: 68834,
      68771: 68835,
      68772: 68836,
      68773: 68837,
      68774: 68838,
      68775: 68839,
      68776: 68840,
      68777: 68841,
      68778: 68842,
      68779: 68843,
      68780: 68844,
      68781: 68845,
      68782: 68846,
      68783: 68847,
      68784: 68848,
      68785: 68849,
      68786: 68850,
      68800: 68736,
      68801: 68737,
      68802: 68738,
      68803: 68739,
      68804: 68740,
      68805: 68741,
      68806: 68742,
      68807: 68743,
      68808: 68744,
      68809: 68745,
      68810: 68746,
      68811: 68747,
      68812: 68748,
      68813: 68749,
      68814: 68750,
      68815: 68751,
      68816: 68752,
      68817: 68753,
      68818: 68754,
      68819: 68755,
      68820: 68756,
      68821: 68757,
      68822: 68758,
      68823: 68759,
      68824: 68760,
      68825: 68761,
      68826: 68762,
      68827: 68763,
      68828: 68764,
      68829: 68765,
      68830: 68766,
      68831: 68767,
      68832: 68768,
      68833: 68769,
      68834: 68770,
      68835: 68771,
      68836: 68772,
      68837: 68773,
      68838: 68774,
      68839: 68775,
      68840: 68776,
      68841: 68777,
      68842: 68778,
      68843: 68779,
      68844: 68780,
      68845: 68781,
      68846: 68782,
      68847: 68783,
      68848: 68784,
      68849: 68785,
      68850: 68786,
      71840: 71872,
      71841: 71873,
      71842: 71874,
      71843: 71875,
      71844: 71876,
      71845: 71877,
      71846: 71878,
      71847: 71879,
      71848: 71880,
      71849: 71881,
      71850: 71882,
      71851: 71883,
      71852: 71884,
      71853: 71885,
      71854: 71886,
      71855: 71887,
      71856: 71888,
      71857: 71889,
      71858: 71890,
      71859: 71891,
      71860: 71892,
      71861: 71893,
      71862: 71894,
      71863: 71895,
      71864: 71896,
      71865: 71897,
      71866: 71898,
      71867: 71899,
      71868: 71900,
      71869: 71901,
      71870: 71902,
      71871: 71903,
      71872: 71840,
      71873: 71841,
      71874: 71842,
      71875: 71843,
      71876: 71844,
      71877: 71845,
      71878: 71846,
      71879: 71847,
      71880: 71848,
      71881: 71849,
      71882: 71850,
      71883: 71851,
      71884: 71852,
      71885: 71853,
      71886: 71854,
      71887: 71855,
      71888: 71856,
      71889: 71857,
      71890: 71858,
      71891: 71859,
      71892: 71860,
      71893: 71861,
      71894: 71862,
      71895: 71863,
      71896: 71864,
      71897: 71865,
      71898: 71866,
      71899: 71867,
      71900: 71868,
      71901: 71869,
      71902: 71870,
      71903: 71871
    };
  }), a.registerDynamic("e5", ["3"], !0, function(a, b, c) {
    var d,
        e = (a("3"), this);
    return function(a) {
      var f = "object" == typeof b && b,
          g = "object" == typeof c && c && c.exports == f && c,
          h = "object" == typeof e && e;
      (h.global === h || h.window === h) && (a = h);
      var i = {
        rangeOrder: "A range’s `stop` value must be greater than or equal to the `start` value.",
        codePointRange: "Invalid code point value. Code points range from U+000000 to U+10FFFF."
      },
          j = 55296,
          k = 56319,
          l = 56320,
          m = 57343,
          n = /\\x00([^0123456789]|$)/g,
          o = {},
          p = o.hasOwnProperty,
          q = function(a, b) {
            var c;
            for (c in b)
              p.call(b, c) && (a[c] = b[c]);
            return a;
          },
          r = function(a, b) {
            for (var c = -1,
                d = a.length; ++c < d; )
              b(a[c], c);
          },
          s = o.toString,
          t = function(a) {
            return "[object Array]" == s.call(a);
          },
          u = function(a) {
            return "number" == typeof a || "[object Number]" == s.call(a);
          },
          v = "0000",
          w = function(a, b) {
            var c = String(a);
            return c.length < b ? (v + c).slice(-b) : c;
          },
          x = function(a) {
            return Number(a).toString(16).toUpperCase();
          },
          y = [].slice,
          z = function(a) {
            for (var b,
                c = -1,
                d = a.length,
                e = d - 1,
                f = [],
                g = !0,
                h = 0; ++c < d; )
              if (b = a[c], g)
                f.push(b), h = b, g = !1;
              else if (b == h + 1) {
                if (c != e) {
                  h = b;
                  continue;
                }
                g = !0, f.push(b + 1);
              } else
                f.push(h + 1, b), h = b;
            return g || f.push(b + 1), f;
          },
          A = function(a, b) {
            for (var c,
                d,
                e = 0,
                f = a.length; f > e; ) {
              if (c = a[e], d = a[e + 1], b >= c && d > b)
                return b == c ? d == c + 1 ? (a.splice(e, 2), a) : (a[e] = b + 1, a) : b == d - 1 ? (a[e + 1] = b, a) : (a.splice(e, 2, c, b, b + 1, d), a);
              e += 2;
            }
            return a;
          },
          B = function(a, b, c) {
            if (b > c)
              throw Error(i.rangeOrder);
            for (var d,
                e,
                f = 0; f < a.length; ) {
              if (d = a[f], e = a[f + 1] - 1, d > c)
                return a;
              if (d >= b && c >= e)
                a.splice(f, 2);
              else {
                if (b >= d && e > c)
                  return b == d ? (a[f] = c + 1, a[f + 1] = e + 1, a) : (a.splice(f, 2, d, b, c + 1, e + 1), a);
                if (b >= d && e >= b)
                  a[f + 1] = b;
                else if (c >= d && e >= c)
                  return a[f] = c + 1, a;
                f += 2;
              }
            }
            return a;
          },
          C = function(a, b) {
            var c,
                d,
                e = 0,
                f = null,
                g = a.length;
            if (0 > b || b > 1114111)
              throw RangeError(i.codePointRange);
            for (; g > e; ) {
              if (c = a[e], d = a[e + 1], b >= c && d > b)
                return a;
              if (b == c - 1)
                return a[e] = b, a;
              if (c > b)
                return a.splice(null != f ? f + 2 : 0, 0, b, b + 1), a;
              if (b == d)
                return b + 1 == a[e + 2] ? (a.splice(e, 4, c, a[e + 3]), a) : (a[e + 1] = b + 1, a);
              f = e, e += 2;
            }
            return a.push(b, b + 1), a;
          },
          D = function(a, b) {
            for (var c,
                d,
                e = 0,
                f = a.slice(),
                g = b.length; g > e; )
              c = b[e], d = b[e + 1] - 1, f = c == d ? C(f, c) : F(f, c, d), e += 2;
            return f;
          },
          E = function(a, b) {
            for (var c,
                d,
                e = 0,
                f = a.slice(),
                g = b.length; g > e; )
              c = b[e], d = b[e + 1] - 1, f = c == d ? A(f, c) : B(f, c, d), e += 2;
            return f;
          },
          F = function(a, b, c) {
            if (b > c)
              throw Error(i.rangeOrder);
            if (0 > b || b > 1114111 || 0 > c || c > 1114111)
              throw RangeError(i.codePointRange);
            for (var d,
                e,
                f = 0,
                g = !1,
                h = a.length; h > f; ) {
              if (d = a[f], e = a[f + 1], g) {
                if (d == c + 1)
                  return a.splice(f - 1, 2), a;
                if (d > c)
                  return a;
                d >= b && c >= d && (e > b && c >= e - 1 ? (a.splice(f, 2), f -= 2) : (a.splice(f - 1, 2), f -= 2));
              } else {
                if (d == c + 1)
                  return a[f] = b, a;
                if (d > c)
                  return a.splice(f, 0, b, c + 1), a;
                if (b >= d && e > b && e >= c + 1)
                  return a;
                b >= d && e > b || e == b ? (a[f + 1] = c + 1, g = !0) : d >= b && c + 1 >= e && (a[f] = b, a[f + 1] = c + 1, g = !0);
              }
              f += 2;
            }
            return g || a.push(b, c + 1), a;
          },
          G = function(a, b) {
            var c = 0,
                d = a.length,
                e = a[c],
                f = a[d - 1];
            if (d >= 2 && (e > b || b > f))
              return !1;
            for (; d > c; ) {
              if (e = a[c], f = a[c + 1], b >= e && f > b)
                return !0;
              c += 2;
            }
            return !1;
          },
          H = function(a, b) {
            for (var c,
                d = 0,
                e = b.length,
                f = []; e > d; )
              c = b[d], G(a, c) && f.push(c), ++d;
            return z(f);
          },
          I = function(a) {
            return !a.length;
          },
          J = function(a) {
            return 2 == a.length && a[0] + 1 == a[1];
          },
          K = function(a) {
            for (var b,
                c,
                d = 0,
                e = [],
                f = a.length; f > d; ) {
              for (b = a[d], c = a[d + 1]; c > b; )
                e.push(b), ++b;
              d += 2;
            }
            return e;
          },
          L = Math.floor,
          M = function(a) {
            return parseInt(L((a - 65536) / 1024) + j, 10);
          },
          N = function(a) {
            return parseInt((a - 65536) % 1024 + l, 10);
          },
          O = String.fromCharCode,
          P = function(a) {
            var b;
            return b = 9 == a ? "\\t" : 10 == a ? "\\n" : 12 == a ? "\\f" : 13 == a ? "\\r" : 92 == a ? "\\\\" : 36 == a || a >= 40 && 43 >= a || 45 == a || 46 == a || 63 == a || a >= 91 && 94 >= a || a >= 123 && 125 >= a ? "\\" + O(a) : a >= 32 && 126 >= a ? O(a) : 255 >= a ? "\\x" + w(x(a), 2) : "\\u" + w(x(a), 4);
          },
          Q = function(a) {
            var b,
                c = a.length,
                d = a.charCodeAt(0);
            return d >= j && k >= d && c > 1 ? (b = a.charCodeAt(1), 1024 * (d - j) + b - l + 65536) : d;
          },
          R = function(a) {
            var b,
                c,
                d = "",
                e = 0,
                f = a.length;
            if (J(a))
              return P(a[0]);
            for (; f > e; )
              b = a[e], c = a[e + 1] - 1, d += b == c ? P(b) : b + 1 == c ? P(b) + P(c) : P(b) + "-" + P(c), e += 2;
            return "[" + d + "]";
          },
          S = function(a) {
            for (var b,
                c,
                d = [],
                e = [],
                f = [],
                g = [],
                h = 0,
                i = a.length; i > h; )
              b = a[h], c = a[h + 1] - 1, j > b ? (j > c && f.push(b, c + 1), c >= j && k >= c && (f.push(b, j), d.push(j, c + 1)), c >= l && m >= c && (f.push(b, j), d.push(j, k + 1), e.push(l, c + 1)), c > m && (f.push(b, j), d.push(j, k + 1), e.push(l, m + 1), 65535 >= c ? f.push(m + 1, c + 1) : (f.push(m + 1, 65536), g.push(65536, c + 1)))) : b >= j && k >= b ? (c >= j && k >= c && d.push(b, c + 1), c >= l && m >= c && (d.push(b, k + 1), e.push(l, c + 1)), c > m && (d.push(b, k + 1), e.push(l, m + 1), 65535 >= c ? f.push(m + 1, c + 1) : (f.push(m + 1, 65536), g.push(65536, c + 1)))) : b >= l && m >= b ? (c >= l && m >= c && e.push(b, c + 1), c > m && (e.push(b, m + 1), 65535 >= c ? f.push(m + 1, c + 1) : (f.push(m + 1, 65536), g.push(65536, c + 1)))) : b > m && 65535 >= b ? 65535 >= c ? f.push(b, c + 1) : (f.push(b, 65536), g.push(65536, c + 1)) : g.push(b, c + 1), h += 2;
            return {
              loneHighSurrogates: d,
              loneLowSurrogates: e,
              bmp: f,
              astral: g
            };
          },
          T = function(a) {
            for (var b,
                c,
                d,
                e,
                f,
                g,
                h = [],
                i = [],
                j = !1,
                k = -1,
                l = a.length; ++k < l; )
              if (b = a[k], c = a[k + 1]) {
                for (d = b[0], e = b[1], f = c[0], g = c[1], i = e; f && d[0] == f[0] && d[1] == f[1]; )
                  i = J(g) ? C(i, g[0]) : F(i, g[0], g[1] - 1), ++k, b = a[k], d = b[0], e = b[1], c = a[k + 1], f = c && c[0], g = c && c[1], j = !0;
                h.push([d, j ? i : e]), j = !1;
              } else
                h.push(b);
            return U(h);
          },
          U = function(a) {
            if (1 == a.length)
              return a;
            for (var b = -1,
                c = -1; ++b < a.length; ) {
              var d = a[b],
                  e = d[1],
                  f = e[0],
                  g = e[1];
              for (c = b; ++c < a.length; ) {
                var h = a[c],
                    i = h[1],
                    j = i[0],
                    k = i[1];
                f == j && g == k && (J(h[0]) ? d[0] = C(d[0], h[0][0]) : d[0] = F(d[0], h[0][0], h[0][1] - 1), a.splice(c, 1), --c);
              }
            }
            return a;
          },
          V = function(a) {
            if (!a.length)
              return [];
            for (var b,
                c,
                d,
                e,
                f,
                g,
                h = 0,
                i = 0,
                j = 0,
                k = [],
                n = a.length; n > h; ) {
              b = a[h], c = a[h + 1] - 1, d = M(b), e = N(b), f = M(c), g = N(c);
              var o = e == l,
                  p = g == m,
                  q = !1;
              d == f || o && p ? (k.push([[d, f + 1], [e, g + 1]]), q = !0) : k.push([[d, d + 1], [e, m + 1]]), !q && f > d + 1 && (p ? (k.push([[d + 1, f + 1], [l, g + 1]]), q = !0) : k.push([[d + 1, f], [l, m + 1]])), q || k.push([[f, f + 1], [l, g + 1]]), i = d, j = f, h += 2;
            }
            return T(k);
          },
          W = function(a) {
            var b = [];
            return r(a, function(a) {
              var c = a[0],
                  d = a[1];
              b.push(R(c) + R(d));
            }), b.join("|");
          },
          X = function(a, b) {
            var c = [],
                d = S(a),
                e = d.loneHighSurrogates,
                f = d.loneLowSurrogates,
                g = d.bmp,
                h = d.astral,
                i = (!I(d.astral), !I(e)),
                j = !I(f),
                k = V(h);
            return b && (g = D(g, e), i = !1, g = D(g, f), j = !1), I(g) || c.push(R(g)), k.length && c.push(W(k)), i && c.push(R(e) + "(?![\\uDC00-\\uDFFF])"), j && c.push("(?:[^\\uD800-\\uDBFF]|^)" + R(f)), c.join("|");
          },
          Y = function(a) {
            return arguments.length > 1 && (a = y.call(arguments)), this instanceof Y ? (this.data = [], a ? this.add(a) : this) : (new Y).add(a);
          };
      Y.version = "1.2.0";
      var Z = Y.prototype;
      q(Z, {
        add: function(a) {
          var b = this;
          return null == a ? b : a instanceof Y ? (b.data = D(b.data, a.data), b) : (arguments.length > 1 && (a = y.call(arguments)), t(a) ? (r(a, function(a) {
            b.add(a);
          }), b) : (b.data = C(b.data, u(a) ? a : Q(a)), b));
        },
        remove: function(a) {
          var b = this;
          return null == a ? b : a instanceof Y ? (b.data = E(b.data, a.data), b) : (arguments.length > 1 && (a = y.call(arguments)), t(a) ? (r(a, function(a) {
            b.remove(a);
          }), b) : (b.data = A(b.data, u(a) ? a : Q(a)), b));
        },
        addRange: function(a, b) {
          var c = this;
          return c.data = F(c.data, u(a) ? a : Q(a), u(b) ? b : Q(b)), c;
        },
        removeRange: function(a, b) {
          var c = this,
              d = u(a) ? a : Q(a),
              e = u(b) ? b : Q(b);
          return c.data = B(c.data, d, e), c;
        },
        intersection: function(a) {
          var b = this,
              c = a instanceof Y ? K(a.data) : a;
          return b.data = H(b.data, c), b;
        },
        contains: function(a) {
          return G(this.data, u(a) ? a : Q(a));
        },
        clone: function() {
          var a = new Y;
          return a.data = this.data.slice(0), a;
        },
        toString: function(a) {
          var b = X(this.data, a ? a.bmpOnly : !1);
          return b.replace(n, "\\0$1");
        },
        toRegExp: function(a) {
          return RegExp(this.toString(), a || "");
        },
        valueOf: function() {
          return K(this.data);
        }
      }), Z.toArray = Z.valueOf, "function" == typeof d && "object" == typeof d.amd && d.amd ? d(function() {
        return Y;
      }) : f && !f.nodeType ? g ? g.exports = Y : f.regenerate = Y : a.regenerate = Y;
    }(this), c.exports;
  }), a.registerDynamic("e6", ["e5", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("e5"));
    return b.REGULAR = {
      d: d().addRange(48, 57),
      D: d().addRange(0, 47).addRange(58, 65535),
      s: d(32, 160, 5760, 6158, 8239, 8287, 12288, 65279).addRange(9, 13).addRange(8192, 8202).addRange(8232, 8233),
      S: d().addRange(0, 8).addRange(14, 31).addRange(33, 159).addRange(161, 5759).addRange(5761, 6157).addRange(6159, 8191).addRange(8203, 8231).addRange(8234, 8238).addRange(8240, 8286).addRange(8288, 12287).addRange(12289, 65278).addRange(65280, 65535),
      w: d(95).addRange(48, 57).addRange(65, 90).addRange(97, 122),
      W: d(96).addRange(0, 47).addRange(58, 64).addRange(91, 94).addRange(123, 65535)
    }, b.UNICODE = {
      d: d().addRange(48, 57),
      D: d().addRange(0, 47).addRange(58, 1114111),
      s: d(32, 160, 5760, 6158, 8239, 8287, 12288, 65279).addRange(9, 13).addRange(8192, 8202).addRange(8232, 8233),
      S: d().addRange(0, 8).addRange(14, 31).addRange(33, 159).addRange(161, 5759).addRange(5761, 6157).addRange(6159, 8191).addRange(8203, 8231).addRange(8234, 8238).addRange(8240, 8286).addRange(8288, 12287).addRange(12289, 65278).addRange(65280, 1114111),
      w: d(95).addRange(48, 57).addRange(65, 90).addRange(97, 122),
      W: d(96).addRange(0, 47).addRange(58, 64).addRange(91, 94).addRange(123, 1114111)
    }, b.UNICODE_IGNORE_CASE = {
      d: d().addRange(48, 57),
      D: d().addRange(0, 47).addRange(58, 1114111),
      s: d(32, 160, 5760, 6158, 8239, 8287, 12288, 65279).addRange(9, 13).addRange(8192, 8202).addRange(8232, 8233),
      S: d().addRange(0, 8).addRange(14, 31).addRange(33, 159).addRange(161, 5759).addRange(5761, 6157).addRange(6159, 8191).addRange(8203, 8231).addRange(8234, 8238).addRange(8240, 8286).addRange(8288, 12287).addRange(12289, 65278).addRange(65280, 1114111),
      w: d(95, 383, 8490).addRange(48, 57).addRange(65, 90).addRange(97, 122),
      W: d(75, 83, 96).addRange(0, 47).addRange(58, 64).addRange(91, 94).addRange(123, 1114111)
    }, c.exports;
  }), a.registerDynamic("e7", ["e2", "e3", "e5", "e4", "e6", "3"], !0, function(a, b, c) {
    function d(a) {
      return x ? w ? p.UNICODE_IGNORE_CASE[a] : p.UNICODE[a] : p.REGULAR[a];
    }
    function e(a, b) {
      return r.call(a, b);
    }
    function f(a, b) {
      for (var c in b)
        a[c] = b[c];
    }
    function g(a, b) {
      if (b) {
        var c = m(b, "");
        switch (c.type) {
          case "characterClass":
          case "group":
          case "value":
            break;
          default:
            c = h(c, b);
        }
        f(a, c);
      }
    }
    function h(a, b) {
      return {
        type: "group",
        behavior: "ignore",
        body: [a],
        raw: "(?:" + b + ")"
      };
    }
    function i(a) {
      return e(o, a) ? o[a] : !1;
    }
    function j(a) {
      var b = n();
      a.body.forEach(function(a) {
        switch (a.type) {
          case "value":
            if (b.add(a.codePoint), w && x) {
              var c = i(a.codePoint);
              c && b.add(c);
            }
            break;
          case "characterClassRange":
            var e = a.min.codePoint,
                f = a.max.codePoint;
            b.addRange(e, f), w && x && b.iuAddRange(e, f);
            break;
          case "characterClassEscape":
            b.add(d(a.value));
            break;
          default:
            throw Error("Unknown term type: " + a.type);
        }
      });
      return a.negative && (b = (x ? s : t).clone().remove(b)), g(a, b.toString()), a;
    }
    function k(a) {
      switch (a.type) {
        case "dot":
          g(a, (x ? u : v).toString());
          break;
        case "characterClass":
          a = j(a);
          break;
        case "characterClassEscape":
          g(a, d(a.value).toString());
          break;
        case "alternative":
        case "disjunction":
        case "group":
        case "quantifier":
          a.body = a.body.map(k);
          break;
        case "value":
          var b = a.codePoint,
              c = n(b);
          if (w && x) {
            var e = i(b);
            e && c.add(e);
          }
          g(a, c.toString());
          break;
        case "anchor":
        case "empty":
        case "group":
        case "reference":
          break;
        default:
          throw Error("Unknown term type: " + a.type);
      }
      return a;
    }
    var l = (a("3"), a("e2").generate),
        m = a("e3").parse,
        n = a("e5"),
        o = a("e4"),
        p = a("e6"),
        q = {},
        r = q.hasOwnProperty,
        s = n().addRange(0, 1114111),
        t = n().addRange(0, 65535),
        u = s.clone().remove(10, 13, 8232, 8233),
        v = u.clone().intersection(t);
    n.prototype.iuAddRange = function(a, b) {
      var c = this;
      do {
        var d = i(a);
        d && c.add(d);
      } while (++a <= b);
      return c;
    };
    var w = !1,
        x = !1;
    return c.exports = function(a, b) {
      var c = m(a, b);
      return w = b ? b.indexOf("i") > -1 : !1, x = b ? b.indexOf("u") > -1 : !1, f(c, k(c)), l(c);
    }, c.exports;
  }), a.registerDynamic("e8", ["e9", "3"], !0, function(a, b, c) {
    function d() {
      var a = arguments,
          b = a[0];
      if (!b || !b.length)
        return b;
      for (var c = 0,
          d = e,
          f = a.length; ++c < f; )
        for (var h = 0,
            i = a[c]; (h = d(b, i, h)) > -1; )
          g.call(b, h, 1);
      return b;
    }
    var e = (a("3"), a("e9")),
        f = Array.prototype,
        g = f.splice;
    return c.exports = d, c.exports;
  }), a.registerDynamic("e1", ["a", "4", "e8", "5", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a, b) {
      return k.isRegExpLiteral(a) && a.flags.indexOf(b) >= 0;
    }
    function e(a, b) {
      var c = a.flags.split("");
      a.flags.indexOf(b) < 0 || (i["default"](c, b), a.flags = c.join(""));
    }
    var f = (a("3"), a("a")["default"]),
        g = a("4")["default"];
    b.__esModule = !0, b.is = d, b.pullFlag = e;
    var h = a("e8"),
        i = f(h),
        j = a("5"),
        k = g(j);
    return c.exports;
  }), a.registerDynamic("ea", ["a", "4", "e7", "e1", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("a")["default"]),
        e = a("4")["default"];
    b.__esModule = !0;
    var f = a("e7"),
        g = d(f),
        h = a("e1"),
        i = e(h);
    return b["default"] = function() {
      return {visitor: {RegExpLiteral: function(a) {
            var b = a.node;
            i.is(b, "u") && (b.pattern = g["default"](b.pattern, b.flags), i.pullFlag(b, "u"));
          }}};
    }, c.exports = b["default"], c.exports;
  }), a.registerDynamic("eb", ["c", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("c")["default"]);
    return b.__esModule = !0, b["default"] = function(a) {
      var b = a.messages;
      return {visitor: {Scope: function(a) {
            var c = a.scope;
            for (var e in c.bindings) {
              var f = c.bindings[e];
              if ("const" === f.kind || "module" === f.kind)
                for (var g = f.constantViolations,
                    h = Array.isArray(g),
                    i = 0,
                    g = h ? g : d(g); ; ) {
                  var j;
                  if (h) {
                    if (i >= g.length)
                      break;
                    j = g[i++];
                  } else {
                    if (i = g.next(), i.done)
                      break;
                    j = i.value;
                  }
                  var k = j;
                  throw k.buildCodeFrameError(b.get("readOnly", e));
                }
            }
          }}};
    }, c.exports = b["default"], c.exports;
  }), a.registerDynamic("ec", ["c", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("c")["default"]);
    return b.__esModule = !0, b["default"] = function(a) {
      function b(a, b, c) {
        return c.opts.loose && !f.isIdentifier(a.argument, {name: "arguments"}) ? a.argument : b.toArray(a.argument, !0);
      }
      function c(a) {
        for (var b = 0; b < a.length; b++)
          if (f.isSpreadElement(a[b]))
            return !0;
        return !1;
      }
      function e(a, c, e) {
        function g() {
          i.length && (h.push(f.arrayExpression(i)), i = []);
        }
        for (var h = [],
            i = [],
            j = a,
            k = Array.isArray(j),
            l = 0,
            j = k ? j : d(j); ; ) {
          var m;
          if (k) {
            if (l >= j.length)
              break;
            m = j[l++];
          } else {
            if (l = j.next(), l.done)
              break;
            m = l.value;
          }
          var n = m;
          f.isSpreadElement(n) ? (g(), h.push(b(n, c, e))) : i.push(n);
        }
        return g(), h;
      }
      var f = a.types;
      return {visitor: {
          ArrayExpression: function(a, b) {
            var d = a.node,
                g = a.scope,
                h = d.elements;
            if (c(h)) {
              var i = e(h, g, b),
                  j = i.shift();
              f.isArrayExpression(j) || (i.unshift(j), j = f.arrayExpression([])), a.replaceWith(f.callExpression(f.memberExpression(j, f.identifier("concat")), i));
            }
          },
          CallExpression: function(a, b) {
            var d = a.node,
                g = a.scope,
                h = d.arguments;
            if (c(h)) {
              var i = a.get("callee");
              if (!i.isSuper()) {
                var j = f.identifier("undefined");
                d.arguments = [];
                var k = void 0;
                k = 1 === h.length && "arguments" === h[0].argument.name ? [h[0].argument] : e(h, g, b);
                var l = k.shift();
                k.length ? d.arguments.push(f.callExpression(f.memberExpression(l, f.identifier("concat")), k)) : d.arguments.push(l);
                var m = d.callee;
                if (i.isMemberExpression()) {
                  var n = g.maybeGenerateMemoised(m.object);
                  n ? (m.object = f.assignmentExpression("=", n, m.object), j = n) : j = m.object, f.appendToMemberExpression(m, f.identifier("apply"));
                } else
                  d.callee = f.memberExpression(d.callee, f.identifier("apply"));
                f.isSuper(j) && (j = f.thisExpression()), d.arguments.unshift(j);
              }
            }
          },
          NewExpression: function(a, b) {
            var d = a.node,
                g = a.scope,
                h = d.arguments;
            if (c(h)) {
              var i = e(h, g, b),
                  j = f.arrayExpression([f.nullLiteral()]);
              h = f.callExpression(f.memberExpression(j, f.identifier("concat")), i), a.replaceWith(f.newExpression(f.callExpression(f.memberExpression(f.memberExpression(f.memberExpression(f.identifier("Function"), f.identifier("prototype")), f.identifier("bind")), f.identifier("apply")), [d.callee, h]), []));
            }
          }
        }};
    }, c.exports = b["default"], c.exports;
  }), a.registerDynamic("ed", ["4", "5", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("4")["default"]);
    b.__esModule = !0;
    var e = a("5"),
        f = d(e),
        g = {Function: function(a) {
            for (var b = a.get("params"),
                c = f.isRestElement(b[b.length - 1]) ? 1 : 0,
                d = b.length - c,
                e = 0; d > e; e++) {
              var g = b[e];
              if (g.isArrayPattern() || g.isObjectPattern()) {
                var h = a.scope.generateUidIdentifier("ref"),
                    i = f.variableDeclaration("let", [f.variableDeclarator(g.node, h)]);
                i._blockHoist = d - e, a.ensureBlock(), a.get("body").unshiftContainer("body", i), g.replaceWith(h);
              }
            }
          }};
    return b.visitor = g, c.exports;
  }), a.registerDynamic("da", ["4", "5", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("4")["default"]);
    b.__esModule = !0;
    var e = a("5"),
        f = d(e);
    return b["default"] = function(a) {
      for (var b = a.params,
          c = 0; c < b.length; c++) {
        var d = b[c];
        if (f.isAssignmentPattern(d) || f.isRestElement(d))
          return c;
      }
      return b.length;
    }, c.exports = b["default"], c.exports;
  }), a.registerDynamic("ba", ["c", "4", "5", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("c")["default"]),
        e = a("4")["default"];
    b.__esModule = !0;
    var f = a("5"),
        g = e(f),
        h = {
          Scope: function(a, b) {
            "let" === b.kind && a.skip();
          },
          Function: function(a) {
            a.skip();
          },
          VariableDeclaration: function(a, b) {
            if (!b.kind || a.node.kind === b.kind) {
              for (var c = [],
                  e = a.get("declarations"),
                  f = void 0,
                  h = e,
                  i = Array.isArray(h),
                  j = 0,
                  h = i ? h : d(h); ; ) {
                var k;
                if (i) {
                  if (j >= h.length)
                    break;
                  k = h[j++];
                } else {
                  if (j = h.next(), j.done)
                    break;
                  k = j.value;
                }
                var l = k;
                f = l.node.id, l.node.init && c.push(g.expressionStatement(g.assignmentExpression("=", l.node.id, l.node.init)));
                for (var m in l.getBindingIdentifiers())
                  b.emit(g.identifier(m), m);
              }
              a.parentPath.isFor({left: a.node}) ? a.replaceWith(f) : a.replaceWithMultiple(c);
            }
          }
        };
    return b["default"] = function(a, b) {
      var c = arguments.length <= 2 || void 0 === arguments[2] ? "var" : arguments[2];
      a.traverse(h, {
        kind: c,
        emit: b
      });
    }, c.exports = b["default"], c.exports;
  }), a.registerDynamic("ee", ["a", "4", "ba", "5", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("a")["default"]),
        e = a("4")["default"];
    b.__esModule = !0;
    var f = a("ba"),
        g = d(f),
        h = a("5"),
        i = e(h),
        j = {
          enter: function(a, b) {
            a.isThisExpression() && (b.foundThis = !0), a.isReferencedIdentifier({name: "arguments"}) && (b.foundArguments = !0);
          },
          Function: function(a) {
            a.skip();
          }
        };
    return b["default"] = function(a) {
      var b = arguments.length <= 1 || void 0 === arguments[1] ? a.scope : arguments[1];
      return function() {
        var c = a.node,
            d = i.functionExpression(null, [], c.body, c.generator, c.async),
            e = d,
            f = [];
        g["default"](a, function(a) {
          return b.push({id: a});
        });
        var h = {
          foundThis: !1,
          foundArguments: !1
        };
        a.traverse(j, h), h.foundArguments && (e = i.memberExpression(d, i.identifier("apply")), f = [], h.foundThis && f.push(i.thisExpression()), h.foundArguments && (h.foundThis || f.push(i.nullLiteral()), f.push(i.identifier("arguments"))));
        var k = i.callExpression(e, f);
        return c.generator && (k = i.yieldExpression(k, !0)), i.returnStatement(k);
      }();
    }, c.exports = b["default"], c.exports;
  }), a.registerDynamic("ef", ["c", "a", "4", "da", "ee", "81", "5", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      for (var b = a.params,
          c = Array.isArray(b),
          d = 0,
          b = c ? b : e(b); ; ) {
        var f;
        if (c) {
          if (d >= b.length)
            break;
          f = b[d++];
        } else {
          if (d = b.next(), d.done)
            break;
          f = d.value;
        }
        var g = f;
        if (!o.isIdentifier(g))
          return !0;
      }
      return !1;
    }
    var e = (a("3"), a("c")["default"]),
        f = a("a")["default"],
        g = a("4")["default"];
    b.__esModule = !0;
    var h = a("da"),
        i = f(h),
        j = a("ee"),
        k = f(j),
        l = a("81"),
        m = f(l),
        n = a("5"),
        o = g(n),
        p = m["default"]("\n  let VARIABLE_NAME =\n    ARGUMENTS.length <= ARGUMENT_KEY || ARGUMENTS[ARGUMENT_KEY] === undefined ?\n      DEFAULT_VALUE\n    :\n      ARGUMENTS[ARGUMENT_KEY];\n"),
        q = m["default"]("\n  if (VARIABLE_NAME === undefined) VARIABLE_NAME = DEFAULT_VALUE;\n"),
        r = m["default"]("\n  let $0 = $1[$2];\n"),
        s = {
          ReferencedIdentifier: function(a, b) {
            var c = a.node.name;
            ("eval" === c || a.scope.hasOwnBinding(c) && "param" !== a.scope.getOwnBinding(c).kind) && (b.iife = !0, a.stop());
          },
          Scope: function(a) {
            a.skip();
          }
        },
        t = {Function: function(a) {
            function b(a, b, d) {
              var f = void 0;
              f = c(d) || o.isPattern(a) ? p({
                VARIABLE_NAME: a,
                DEFAULT_VALUE: b,
                ARGUMENT_KEY: o.numericLiteral(d),
                ARGUMENTS: j
              }) : q({
                VARIABLE_NAME: a,
                DEFAULT_VALUE: b
              }), f._blockHoist = e.params.length - d, h.push(f);
            }
            function c(a) {
              return a + 1 > l;
            }
            var e = a.node,
                f = a.scope;
            if (d(e)) {
              a.ensureBlock();
              var g = {
                iife: !1,
                scope: f
              },
                  h = [],
                  j = o.identifier("arguments");
              j._shadowedFunctionLiteral = a;
              for (var l = i["default"](e),
                  m = a.get("params"),
                  n = 0; n < m.length; n++) {
                var t = m[n];
                if (t.isAssignmentPattern()) {
                  var u = t.get("left"),
                      v = t.get("right");
                  if (c(n) || u.isPattern()) {
                    var w = f.generateUidIdentifier("x");
                    w._isDefaultPlaceholder = !0, e.params[n] = w;
                  } else
                    e.params[n] = u.node;
                  g.iife || (v.isIdentifier() && f.hasOwnBinding(v.node.name) && "param" !== f.getOwnBinding(v.node.name).kind ? g.iife = !0 : v.traverse(s, g)), b(u.node, v.node, n);
                } else
                  t.isIdentifier() || t.traverse(s, g);
              }
              for (var n = l + 1; n < e.params.length; n++) {
                var t = e.params[n];
                if (!t._isDefaultPlaceholder) {
                  var x = r(t, j, o.numericLiteral(n));
                  x._blockHoist = e.params.length - n, h.push(x);
                }
              }
              e.params = e.params.slice(0, l), g.iife ? (h.push(k["default"](a, f)), a.set("body", o.blockStatement(h))) : a.get("body").unshiftContainer("body", h);
            }
          }};
    return b.visitor = t, c.exports;
  }), a.registerDynamic("f0", ["c", "a", "4", "81", "5", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return m.isRestElement(a.params[a.params.length - 1]);
    }
    function e(a, b, c) {
      var d = void 0;
      d = m.isNumericLiteral(a.parent.property) ? m.numericLiteral(a.parent.property.value + c) : m.binaryExpression("+", a.parent.property, m.numericLiteral(c)), a.parentPath.replaceWith(o({
        ARGUMENTS: b,
        INDEX: d
      }));
    }
    function f(a, b, c, d) {
      d ? a.parentPath.replaceWith(m.binaryExpression("-", b, m.numericLiteral(d))) : a.replaceWith(c);
    }
    var g = (a("3"), a("c")["default"]),
        h = a("a")["default"],
        i = a("4")["default"];
    b.__esModule = !0;
    var j = a("81"),
        k = h(j),
        l = a("5"),
        m = i(l),
        n = k["default"]("\n  for (var LEN = ARGUMENTS.length,\n           ARRAY = Array(ARRAY_LEN),\n           KEY = START;\n       KEY < LEN;\n       KEY++) {\n    ARRAY[ARRAY_KEY] = ARGUMENTS[KEY];\n  }\n"),
        o = k["default"]("\n  ARGUMENTS.length <= INDEX ? undefined : ARGUMENTS[INDEX]\n"),
        p = {
          Scope: function(a, b) {
            a.scope.bindingIdentifierEquals(b.name, b.outerBinding) || a.skip();
          },
          Flow: function(a) {
            a.skip();
          },
          Function: function(a, b) {
            var c = b.noOptimise;
            b.noOptimise = !0, a.traverse(p, b), b.noOptimise = c, a.skip();
          },
          ReferencedIdentifier: function(a, b) {
            var c = a.node;
            if ("arguments" === c.name && (b.deopted = !0), c.name === b.name)
              if (b.noOptimise)
                b.deopted = !0;
              else {
                var d = a.parentPath;
                if (d.isMemberExpression({
                  computed: !0,
                  object: c
                })) {
                  var e = d.get("property");
                  if (e.isBaseType("number"))
                    return void b.candidates.push({
                      cause: "indexGetter",
                      path: a
                    });
                }
                if (d.isMemberExpression({
                  computed: !1,
                  object: c
                })) {
                  var e = d.get("property");
                  if ("length" === e.node.name)
                    return void b.candidates.push({
                      cause: "lengthGetter",
                      path: a
                    });
                }
                if (0 === b.offset && d.isSpreadElement()) {
                  var f = d.parentPath;
                  if (f.isCallExpression() && 1 === f.node.arguments.length)
                    return void b.candidates.push({
                      cause: "argSpread",
                      path: a
                    });
                }
                b.references.push(a);
              }
          },
          BindingIdentifier: function(a, b) {
            var c = a.node;
            c.name === b.name && (b.deopted = !0);
          }
        },
        q = {Function: function(a) {
            var b = a.node,
                c = a.scope;
            if (d(b)) {
              var h = b.params.pop().argument,
                  i = m.identifier("arguments"),
                  j = m.memberExpression(i, m.identifier("length"));
              i._shadowedFunctionLiteral = a;
              var k = {
                references: [],
                offset: b.params.length,
                argumentsNode: i,
                outerBinding: c.getBindingIdentifier(h.name),
                candidates: [],
                name: h.name,
                deopted: !1
              };
              if (a.traverse(p, k), k.deopted || k.references.length) {
                k.references = k.references.concat(k.candidates.map(function(a) {
                  var b = a.path;
                  return b;
                })), k.deopted = k.deopted || !!b.shadow;
                var l = m.numericLiteral(b.params.length),
                    o = c.generateUidIdentifier("key"),
                    q = c.generateUidIdentifier("len"),
                    r = o,
                    s = q;
                b.params.length && (r = m.binaryExpression("-", o, l), s = m.conditionalExpression(m.binaryExpression(">", q, l), m.binaryExpression("-", q, l), m.numericLiteral(0)));
                var t = n({
                  ARGUMENTS: i,
                  ARRAY_KEY: r,
                  ARRAY_LEN: s,
                  START: l,
                  ARRAY: h,
                  KEY: o,
                  LEN: q
                });
                if (k.deopted)
                  t._blockHoist = b.params.length + 1, b.body.body.unshift(t);
                else {
                  t._blockHoist = 1;
                  var u = a.getEarliestCommonAncestorFrom(k.references).getStatementParent();
                  u.findParent(function(a) {
                    return a.isLoop() ? void(u = a) : a.isFunction();
                  }), u.insertBefore(t);
                }
              } else
                for (var v = k.candidates,
                    w = Array.isArray(v),
                    x = 0,
                    v = w ? v : g(v); ; ) {
                  var y;
                  if (w) {
                    if (x >= v.length)
                      break;
                    y = v[x++];
                  } else {
                    if (x = v.next(), x.done)
                      break;
                    y = x.value;
                  }
                  var z = y.path,
                      A = y.cause;
                  switch (A) {
                    case "indexGetter":
                      e(z, i, k.offset);
                      break;
                    case "lengthGetter":
                      f(z, j, i, k.offset);
                      break;
                    default:
                      z.replaceWith(i);
                  }
                }
            }
          }};
    return b.visitor = q, c.exports;
  }), a.registerDynamic("f1", ["c", "4", "14", "ed", "ef", "f0", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("c")["default"]),
        e = a("4")["default"];
    b.__esModule = !0;
    var f = a("14"),
        g = a("ed"),
        h = e(g),
        i = a("ef"),
        j = e(i),
        k = a("f0"),
        l = e(k);
    return b["default"] = function() {
      return {visitor: f.visitors.merge([{ArrowFunctionExpression: function(a) {
            for (var b = a.get("params"),
                c = b,
                e = Array.isArray(c),
                f = 0,
                c = e ? c : d(c); ; ) {
              var g;
              if (e) {
                if (f >= c.length)
                  break;
                g = c[f++];
              } else {
                if (f = c.next(), f.done)
                  break;
                g = f.value;
              }
              var h = g;
              if (h.isRestElement() || h.isAssignmentPattern()) {
                a.arrowFunctionToShadowed();
                break;
              }
            }
          }}, h.visitor, l.visitor, j.visitor])};
    }, c.exports = b["default"], c.exports;
  }), a.registerDynamic("f2", ["9", "c", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("9")["default"]),
        e = a("c")["default"];
    return b.__esModule = !0, b["default"] = function(a) {
      function b(a) {
        for (var b = a.declarations,
            c = Array.isArray(b),
            d = 0,
            b = c ? b : e(b); ; ) {
          var g;
          if (c) {
            if (d >= b.length)
              break;
            g = b[d++];
          } else {
            if (d = b.next(), d.done)
              break;
            g = d.value;
          }
          var h = g;
          if (f.isPattern(h.id))
            return !0;
        }
        return !1;
      }
      function c(a) {
        for (var b = a.elements,
            c = Array.isArray(b),
            d = 0,
            b = c ? b : e(b); ; ) {
          var g;
          if (c) {
            if (d >= b.length)
              break;
            g = b[d++];
          } else {
            if (d = b.next(), d.done)
              break;
            g = d.value;
          }
          var h = g;
          if (f.isRestElement(h))
            return !0;
        }
        return !1;
      }
      var f = a.types,
          g = {ReferencedIdentifier: function(a, b) {
              b.bindings[a.node.name] && (b.deopt = !0, a.stop());
            }},
          h = function() {
            function a(b) {
              d(this, a), this.blockHoist = b.blockHoist, this.operator = b.operator, this.arrays = {}, this.nodes = b.nodes || [], this.scope = b.scope, this.file = b.file, this.kind = b.kind;
            }
            return a.prototype.buildVariableAssignment = function(a, b) {
              var c = this.operator;
              f.isMemberExpression(a) && (c = "=");
              var d = void 0;
              return d = c ? f.expressionStatement(f.assignmentExpression(c, a, b)) : f.variableDeclaration(this.kind, [f.variableDeclarator(a, b)]), d._blockHoist = this.blockHoist, d;
            }, a.prototype.buildVariableDeclaration = function(a, b) {
              var c = f.variableDeclaration("var", [f.variableDeclarator(a, b)]);
              return c._blockHoist = this.blockHoist, c;
            }, a.prototype.push = function(a, b) {
              f.isObjectPattern(a) ? this.pushObjectPattern(a, b) : f.isArrayPattern(a) ? this.pushArrayPattern(a, b) : f.isAssignmentPattern(a) ? this.pushAssignmentPattern(a, b) : this.nodes.push(this.buildVariableAssignment(a, b));
            }, a.prototype.toArray = function(a, b) {
              return this.file.opts.loose || f.isIdentifier(a) && this.arrays[a.name] ? a : this.scope.toArray(a, b);
            }, a.prototype.pushAssignmentPattern = function(a, b) {
              var c = this.scope.generateUidIdentifierBasedOnNode(b),
                  d = f.variableDeclaration("var", [f.variableDeclarator(c, b)]);
              d._blockHoist = this.blockHoist, this.nodes.push(d);
              var e = f.conditionalExpression(f.binaryExpression("===", c, f.identifier("undefined")), a.right, c),
                  g = a.left;
              if (f.isPattern(g)) {
                var h = f.expressionStatement(f.assignmentExpression("=", c, e));
                h._blockHoist = this.blockHoist, this.nodes.push(h), this.push(g, c);
              } else
                this.nodes.push(this.buildVariableAssignment(g, e));
            }, a.prototype.pushObjectRest = function(a, b, c, d) {
              for (var e = [],
                  g = 0; g < a.properties.length; g++) {
                var h = a.properties[g];
                if (g >= d)
                  break;
                if (!f.isRestProperty(h)) {
                  var i = h.key;
                  f.isIdentifier(i) && !h.computed && (i = f.stringLiteral(h.key.name)), e.push(i);
                }
              }
              e = f.arrayExpression(e);
              var j = f.callExpression(this.file.addHelper("objectWithoutProperties"), [b, e]);
              this.nodes.push(this.buildVariableAssignment(c.argument, j));
            }, a.prototype.pushObjectProperty = function(a, b) {
              f.isLiteral(a.key) && (a.computed = !0);
              var c = a.value,
                  d = f.memberExpression(b, a.key, a.computed);
              f.isPattern(c) ? this.push(c, d) : this.nodes.push(this.buildVariableAssignment(c, d));
            }, a.prototype.pushObjectPattern = function(a, b) {
              if (a.properties.length || this.nodes.push(f.expressionStatement(f.callExpression(this.file.addHelper("objectDestructuringEmpty"), [b]))), a.properties.length > 1 && !this.scope.isStatic(b)) {
                var c = this.scope.generateUidIdentifierBasedOnNode(b);
                this.nodes.push(this.buildVariableDeclaration(c, b)), b = c;
              }
              for (var d = 0; d < a.properties.length; d++) {
                var e = a.properties[d];
                f.isRestProperty(e) ? this.pushObjectRest(a, b, e, d) : this.pushObjectProperty(e, b);
              }
            }, a.prototype.canUnpackArrayPattern = function(a, b) {
              if (!f.isArrayExpression(b))
                return !1;
              if (!(a.elements.length > b.elements.length)) {
                if (a.elements.length < b.elements.length && !c(a))
                  return !1;
                for (var d = a.elements,
                    h = Array.isArray(d),
                    i = 0,
                    d = h ? d : e(d); ; ) {
                  var j;
                  if (h) {
                    if (i >= d.length)
                      break;
                    j = d[i++];
                  } else {
                    if (i = d.next(), i.done)
                      break;
                    j = i.value;
                  }
                  var k = j;
                  if (!k)
                    return !1;
                  if (f.isMemberExpression(k))
                    return !1;
                }
                for (var l = b.elements,
                    m = Array.isArray(l),
                    n = 0,
                    l = m ? l : e(l); ; ) {
                  var o;
                  if (m) {
                    if (n >= l.length)
                      break;
                    o = l[n++];
                  } else {
                    if (n = l.next(), n.done)
                      break;
                    o = n.value;
                  }
                  var k = o;
                  if (f.isSpreadElement(k))
                    return !1;
                }
                var p = f.getBindingIdentifiers(a),
                    q = {
                      deopt: !1,
                      bindings: p
                    };
                return this.scope.traverse(b, g, q), !q.deopt;
              }
            }, a.prototype.pushUnpackedArrayPattern = function(a, b) {
              for (var c = 0; c < a.elements.length; c++) {
                var d = a.elements[c];
                f.isRestElement(d) ? this.push(d.argument, f.arrayExpression(b.elements.slice(c))) : this.push(d, b.elements[c]);
              }
            }, a.prototype.pushArrayPattern = function(a, b) {
              if (a.elements) {
                if (this.canUnpackArrayPattern(a, b))
                  return this.pushUnpackedArrayPattern(a, b);
                var d = !c(a) && a.elements.length,
                    e = this.toArray(b, d);
                f.isIdentifier(e) ? b = e : (b = this.scope.generateUidIdentifierBasedOnNode(b), this.arrays[b.name] = !0, this.nodes.push(this.buildVariableDeclaration(b, e)));
                for (var g = 0; g < a.elements.length; g++) {
                  var h = a.elements[g];
                  if (h) {
                    var i = void 0;
                    f.isRestElement(h) ? (i = this.toArray(b), g > 0 && (i = f.callExpression(f.memberExpression(i, f.identifier("slice")), [f.numericLiteral(g)])), h = h.argument) : i = f.memberExpression(b, f.numericLiteral(g), !0), this.push(h, i);
                  }
                }
              }
            }, a.prototype.init = function(a, b) {
              if (!f.isArrayExpression(b) && !f.isMemberExpression(b)) {
                var c = this.scope.maybeGenerateMemoised(b, !0);
                c && (this.nodes.push(this.buildVariableDeclaration(c, b)), b = c);
              }
              return this.push(a, b), this.nodes;
            }, a;
          }();
      return {visitor: {
          ExportNamedDeclaration: function(a) {
            var c = a.get("declaration");
            if (c.isVariableDeclaration() && b(c.node)) {
              var d = [];
              for (var e in a.getOuterBindingIdentifiers(a)) {
                var g = f.identifier(e);
                d.push(f.exportSpecifier(g, g));
              }
              a.replaceWith(c.node), a.insertAfter(f.exportNamedDeclaration(null, d));
            }
          },
          ForXStatement: function(a, b) {
            var c = a.node,
                d = a.scope,
                e = c.left;
            if (f.isPattern(e)) {
              var g = d.generateUidIdentifier("ref");
              return c.left = f.variableDeclaration("var", [f.variableDeclarator(g)]), a.ensureBlock(), void c.body.body.unshift(f.variableDeclaration("var", [f.variableDeclarator(e, g)]));
            }
            if (f.isVariableDeclaration(e)) {
              var i = e.declarations[0].id;
              if (f.isPattern(i)) {
                var j = d.generateUidIdentifier("ref");
                c.left = f.variableDeclaration(e.kind, [f.variableDeclarator(j, null)]);
                var k = [],
                    l = new h({
                      kind: e.kind,
                      file: b,
                      scope: d,
                      nodes: k
                    });
                l.init(i, j), a.ensureBlock();
                var m = c.body;
                m.body = k.concat(m.body);
              }
            }
          },
          CatchClause: function(a, b) {
            var c = a.node,
                d = a.scope,
                e = c.param;
            if (f.isPattern(e)) {
              var g = d.generateUidIdentifier("ref");
              c.param = g;
              var i = [],
                  j = new h({
                    kind: "let",
                    file: b,
                    scope: d,
                    nodes: i
                  });
              j.init(e, g), c.body.body = i.concat(c.body.body);
            }
          },
          AssignmentExpression: function(a, b) {
            var c = a.node,
                d = a.scope;
            if (f.isPattern(c.left)) {
              var e = [],
                  g = new h({
                    operator: c.operator,
                    file: b,
                    scope: d,
                    nodes: e
                  }),
                  i = void 0;
              (a.isCompletionRecord() || !a.parentPath.isExpressionStatement()) && (i = d.generateUidIdentifierBasedOnNode(c.right, "ref"), e.push(f.variableDeclaration("var", [f.variableDeclarator(i, c.right)])), f.isArrayExpression(c.right) && (g.arrays[i.name] = !0)), g.init(c.left, i || c.right), i && e.push(f.expressionStatement(i)), a.replaceWithMultiple(e);
            }
          },
          VariableDeclaration: function(a, c) {
            var d = a.node,
                e = a.scope,
                g = a.parent;
            if (!f.isForXStatement(g) && g && a.container && b(d)) {
              for (var i = [],
                  j = void 0,
                  k = 0; k < d.declarations.length; k++) {
                j = d.declarations[k];
                var l = j.init,
                    m = j.id,
                    n = new h({
                      blockHoist: d._blockHoist,
                      nodes: i,
                      scope: e,
                      kind: d.kind,
                      file: c
                    });
                f.isPattern(m) ? (n.init(m, l), +k !== d.declarations.length - 1 && f.inherits(i[i.length - 1], j)) : i.push(f.inherits(n.buildVariableAssignment(j.id, j.init), j));
              }
              a.replaceWithMultiple(i);
            }
          }
        }};
    }, c.exports = b["default"], c.exports;
  }), a.registerDynamic("f3", ["4", "5", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a, b) {
      var c = b._guessExecutionStatusRelativeTo(a);
      return "before" === c ? "inside" : "after" === c ? "outside" : "maybe";
    }
    function e(a, b) {
      return i.callExpression(b.addHelper("temporalRef"), [a, i.stringLiteral(a.name), b.addHelper("temporalUndefined")]);
    }
    function f(a, b, c) {
      var d = c.letReferences[a.name];
      return d ? b.getBindingIdentifier(a.name) === d : !1;
    }
    var g = (a("3"), a("4")["default"]);
    b.__esModule = !0;
    var h = a("5"),
        i = g(h),
        j = {
          ReferencedIdentifier: function(a, b) {
            if (this.file.opts.tdz) {
              var c = a.node,
                  g = a.parent,
                  h = a.scope;
              if (!a.parentPath.isFor({left: c}) && f(c, h, b)) {
                var j = h.getBinding(c.name).path,
                    k = d(a, j);
                if ("inside" !== k)
                  if ("maybe" === k) {
                    var l = e(c, b.file);
                    if (j.parent._tdzThis = !0, a.skip(), a.parentPath.isUpdateExpression()) {
                      if (g._ignoreBlockScopingTDZ)
                        return;
                      a.parentPath.replaceWith(i.sequenceExpression([l, g]));
                    } else
                      a.replaceWith(l);
                  } else
                    "outside" === k && a.replaceWith(i.throwStatement(i.inherits(i.newExpression(i.identifier("ReferenceError"), [i.stringLiteral(c.name + " is not defined - temporal dead zone")]), c)));
              }
            }
          },
          AssignmentExpression: {exit: function(a, b) {
              if (this.file.opts.tdz) {
                var c = a.node;
                if (!c._ignoreBlockScopingTDZ) {
                  var d = [],
                      g = a.getBindingIdentifiers();
                  for (var h in g) {
                    var j = g[h];
                    f(j, a.scope, b) && d.push(e(j, b.file));
                  }
                  d.length && (c._ignoreBlockScopingTDZ = !0, d.push(c), a.replaceWithMultiple(d.map(i.expressionStatement)));
                }
              }
            }}
        };
    return b.visitor = j, c.exports;
  }), a.registerDynamic("f4", ["77", "3"], !0, function(a, b, c) {
    a("3");
    return c.exports = a("77"), c.exports;
  }), a.registerDynamic("4e", ["f5", "f6", "3"], !0, function(a, b, c) {
    function d(a, b, c) {
      return "function" == typeof b ? e(a, !0, f(b, c, 3)) : e(a, !0);
    }
    var e = (a("3"), a("f5")),
        f = a("f6");
    return c.exports = d, c.exports;
  }), a.registerDynamic("d7", ["f7", "f8", "3d", "3e", "f9", "fa", "fb", "fc", "fd", "3"], !0, function(a, b, c) {
    function d(a, b) {
      if (null == a)
        return !1;
      var c = o.call(a, b);
      if (!c && !j(b)) {
        if (b = m(b), a = 1 == b.length ? a : e(a, f(b, 0, -1)), null == a)
          return !1;
        b = l(b), c = o.call(a, b);
      }
      return c || k(a.length) && i(b, a.length) && (h(a) || g(a));
    }
    var e = (a("3"), a("f7")),
        f = a("f8"),
        g = a("3d"),
        h = a("3e"),
        i = a("f9"),
        j = a("fa"),
        k = a("fb"),
        l = a("fc"),
        m = a("fd"),
        n = Object.prototype,
        o = n.hasOwnProperty;
    return c.exports = d, c.exports;
  }), a.registerDynamic("81", ["b9", "a", "4", "4e", "77", "d7", "14", "7f", "5", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a, b) {
      a = i["default"](a);
      var c = a,
          d = c.program;
      return b.length && o["default"](a, v, null, b), d.body.length > 1 ? d.body : d.body[0];
    }
    var e = (a("3"), a("b9")["default"]),
        f = a("a")["default"],
        g = a("4")["default"];
    b.__esModule = !0;
    var h = a("4e"),
        i = f(h),
        j = a("77"),
        k = f(j),
        l = a("d7"),
        m = f(l),
        n = a("14"),
        o = f(n),
        p = a("7f"),
        q = g(p),
        r = a("5"),
        s = g(r),
        t = "_fromTemplate",
        u = e();
    b["default"] = function(a, b) {
      var c = void 0;
      try {
        throw new Error;
      } catch (e) {
        c = e.stack.split("\n").slice(1).join("\n");
      }
      var f = function() {
        var d = void 0;
        try {
          d = q.parse(a, k["default"]({
            allowReturnOutsideFunction: !0,
            allowSuperOutsideMethod: !0
          }, b)), d = o["default"].removeProperties(d), o["default"].cheap(d, function(a) {
            a[t] = !0;
          });
        } catch (e) {
          throw e.stack = e.stack + "from\n" + c, e;
        }
        return f = function() {
          return d;
        }, d;
      };
      return function() {
        for (var a = arguments.length,
            b = Array(a),
            c = 0; a > c; c++)
          b[c] = arguments[c];
        return d(f(), b);
      };
    };
    var v = {
      noScope: !0,
      enter: function(a, b) {
        var c = a.node;
        if (c[u])
          return a.skip();
        s.isExpressionStatement(c) && (c = c.expression);
        var d = void 0;
        if (s.isIdentifier(c) && c[t])
          if (m["default"](b[0], c.name))
            d = b[0][c.name];
          else if ("$" === c.name[0]) {
            var e = +c.name.slice(1);
            b[e] && (d = b[e]);
          }
        null === d && a.remove(), d && (d[u] = !0, a.replaceInline(d));
      },
      exit: function(a) {
        var b = a.node;
        b.loc || o["default"].clearNode(b);
      }
    };
    return c.exports = b["default"], c.exports;
  }), a.registerDynamic("fe", ["9", "79", "b9", "a", "4", "14", "f3", "5", "ff", "f4", "81", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return s.isVariableDeclaration(a) ? a[s.BLOCK_SCOPED_SYMBOL] ? !0 : "let" !== a.kind && "const" !== a.kind ? !1 : !0 : !1;
    }
    function e(a, b, c) {
      if (!s.isFor(b))
        for (var d = 0; d < a.declarations.length; d++) {
          var e = a.declarations[d];
          e.init = e.init || c.buildUndefinedNode();
        }
      a[s.BLOCK_SCOPED_SYMBOL] = !0, a.kind = "var";
    }
    function f(a) {
      return s.isVariableDeclaration(a, {kind: "var"}) && !d(a);
    }
    function g(a, b, c, d) {
      var e = d[b.name];
      if (e) {
        var f = c.getBindingIdentifier(b.name);
        f === e.binding ? b.name = e.uid : a && a.skip();
      }
    }
    function h(a, b, c, d) {
      if (s.isIdentifier(a) && g(a, b, c, d), s.isAssignmentExpression(a)) {
        var e = s.getBindingIdentifiers(a);
        for (var f in e)
          g(e[f], b, c, d);
      }
      c.traverse(a, A, d);
    }
    function i(a) {
      return s.isBreakStatement(a) ? "break" : s.isContinueStatement(a) ? "continue" : void 0;
    }
    var j = (a("3"), a("9")["default"]),
        k = a("79")["default"],
        l = a("b9")["default"],
        m = a("a")["default"],
        n = a("4")["default"];
    b.__esModule = !0;
    var o = a("14"),
        p = m(o),
        q = a("f3"),
        r = a("5"),
        s = n(r),
        t = a("ff"),
        u = m(t),
        v = a("f4"),
        w = m(v),
        x = a("81"),
        y = m(x);
    b["default"] = function() {
      return {visitor: {
          VariableDeclaration: function(a, b) {
            var c = a.node,
                f = a.parent,
                g = a.scope;
            if (d(c) && (e(c, f, g), c._tdzThis)) {
              for (var h = [c],
                  i = 0; i < c.declarations.length; i++) {
                var j = c.declarations[i];
                if (j.init) {
                  var k = s.assignmentExpression("=", j.id, j.init);
                  k._ignoreBlockScopingTDZ = !0, h.push(s.expressionStatement(k));
                }
                j.init = b.addHelper("temporalUndefined");
              }
              c._blockHoist = 2, a.isCompletionRecord() && h.push(s.expressionStatement(g.buildUndefinedNode())), a.replaceWithMultiple(h);
            }
          },
          Loop: function(a, b) {
            var c = a.node,
                d = a.parent,
                e = a.scope;
            s.ensureBlock(c);
            var f = new H(a, a.get("body"), d, e, b),
                g = f.run();
            g && a.replaceWith(g);
          },
          "BlockStatement|Program": function(a, b) {
            if (!s.isLoop(a.parent)) {
              var c = new H(null, a, a.parent, a.scope, b);
              c.run();
            }
          }
        }};
    };
    var z = y["default"]('\n  if (typeof RETURN === "object") return RETURN.v;\n'),
        A = {
          ReferencedIdentifier: function(a, b) {
            g(a, a.node, a.scope, b);
          },
          AssignmentExpression: function(a, b) {
            var c = a.getBindingIdentifiers();
            for (var d in c)
              g(null, c[d], a.scope, b);
          }
        },
        B = p["default"].visitors.merge([{Function: function(a, b) {
            return a.traverse(C, b), a.skip();
          }}, q.visitor]),
        C = p["default"].visitors.merge([{ReferencedIdentifier: function(a, b) {
            var c = b.letReferences[a.node.name];
            if (c) {
              var d = a.scope.getBindingIdentifier(a.node.name);
              d && d !== c || (b.closurify = !0);
            }
          }}, q.visitor]),
        D = {enter: function(a, b) {
            var c = a.node,
                d = a.parent;
            if (a.isForStatement()) {
              if (f(c.init, c)) {
                var e = b.pushDeclar(c.init);
                1 === e.length ? c.init = e[0] : c.init = s.sequenceExpression(e);
              }
            } else if (a.isFor())
              f(c.left, c) && (b.pushDeclar(c.left), c.left = c.left.declarations[0].id);
            else if (f(c, d))
              a.replaceWithMultiple(b.pushDeclar(c).map(function(a) {
                return s.expressionStatement(a);
              }));
            else if (a.isFunction())
              return a.skip();
          }},
        E = {LabeledStatement: function(a, b) {
            var c = a.node;
            b.innerLabels.push(c.label.name);
          }},
        F = {enter: function(a, b) {
            if (a.isAssignmentExpression() || a.isUpdateExpression()) {
              var c = a.getBindingIdentifiers();
              for (var d in c)
                b.outsideReferences[d] === a.scope.getBindingIdentifier(d) && (b.reassignments[d] = !0);
            }
          }},
        G = {
          Loop: function(a, b) {
            var c = b.ignoreLabeless;
            b.ignoreLabeless = !0, a.traverse(G, b), b.ignoreLabeless = c, a.skip();
          },
          Function: function(a) {
            a.skip();
          },
          SwitchCase: function(a, b) {
            var c = b.inSwitchCase;
            b.inSwitchCase = !0, a.traverse(G, b), b.inSwitchCase = c, a.skip();
          },
          "BreakStatement|ContinueStatement|ReturnStatement": function(a, b) {
            var c = a.node,
                d = a.parent,
                e = a.scope;
            if (!c[this.LOOP_IGNORE]) {
              var f = void 0,
                  g = i(c);
              if (g) {
                if (c.label) {
                  if (b.innerLabels.indexOf(c.label.name) >= 0)
                    return;
                  g = g + "|" + c.label.name;
                } else {
                  if (b.ignoreLabeless)
                    return;
                  if (b.inSwitchCase)
                    return;
                  if (s.isBreakStatement(c) && s.isSwitchCase(d))
                    return;
                }
                b.hasBreakContinue = !0, b.map[g] = c, f = s.stringLiteral(g);
              }
              a.isReturnStatement() && (b.hasReturn = !0, f = s.objectExpression([s.objectProperty(s.identifier("v"), c.argument || e.buildUndefinedNode())])), f && (f = s.returnStatement(f), f[this.LOOP_IGNORE] = !0, a.skip(), a.replaceWith(s.inherits(f, c)));
            }
          }
        },
        H = function() {
          function a(b, c, d, e, f) {
            j(this, a), this.parent = d, this.scope = e, this.file = f, this.blockPath = c, this.block = c.node, this.outsideLetReferences = k(null), this.hasLetReferences = !1, this.letReferences = k(null), this.body = [], b && (this.loopParent = b.parent, this.loopLabel = s.isLabeledStatement(this.loopParent) && this.loopParent.label, this.loopPath = b, this.loop = b.node);
          }
          return a.prototype.run = function() {
            var a = this.block;
            if (!a._letDone) {
              a._letDone = !0;
              var b = this.getLetReferences();
              if (!s.isFunction(this.parent) && !s.isProgram(this.block) && this.hasLetReferences)
                return b ? this.wrapClosure() : this.remap(), this.loopLabel && !s.isLabeledStatement(this.loopParent) ? s.labeledStatement(this.loopLabel, this.loop) : void 0;
            }
          }, a.prototype.remap = function() {
            var a = !1,
                b = this.letReferences,
                c = this.scope,
                d = k(null);
            for (var e in b) {
              var f = b[e];
              if (c.parentHasBinding(e) || c.hasGlobal(e)) {
                var g = c.generateUidIdentifier(f.name).name;
                f.name = g, a = !0, d[e] = d[g] = {
                  binding: f,
                  uid: g
                };
              }
            }
            if (a) {
              var i = this.loop;
              i && (h(i.right, i, c, d), h(i.test, i, c, d), h(i.update, i, c, d)), this.blockPath.traverse(A, d);
            }
          }, a.prototype.wrapClosure = function() {
            var a = this.block,
                b = this.outsideLetReferences;
            if (this.loop)
              for (var c in b) {
                var d = b[c];
                (this.scope.hasGlobal(d.name) || this.scope.parentHasBinding(d.name)) && (delete b[d.name], delete this.letReferences[d.name], this.scope.rename(d.name), this.letReferences[d.name] = d, b[d.name] = d);
              }
            this.has = this.checkLoop(), this.hoistVarDeclarations();
            var e = u["default"](b),
                f = u["default"](b),
                g = s.functionExpression(null, e, s.blockStatement(a.body));
            g.shadow = !0, this.addContinuations(g), a.body = this.body;
            var h = g;
            this.loop && (h = this.scope.generateUidIdentifier("loop"), this.loopPath.insertBefore(s.variableDeclaration("var", [s.variableDeclarator(h, g)])));
            var i = s.callExpression(h, f),
                j = this.scope.generateUidIdentifier("ret"),
                k = p["default"].hasType(g.body, this.scope, "YieldExpression", s.FUNCTION_TYPES);
            k && (g.generator = !0, i = s.yieldExpression(i, !0));
            var l = p["default"].hasType(g.body, this.scope, "AwaitExpression", s.FUNCTION_TYPES);
            l && (g.async = !0, i = s.awaitExpression(i)), this.buildClosure(j, i);
          }, a.prototype.buildClosure = function(a, b) {
            var c = this.has;
            c.hasReturn || c.hasBreakContinue ? this.buildHas(a, b) : this.body.push(s.expressionStatement(b));
          }, a.prototype.addContinuations = function(a) {
            var b = {
              reassignments: {},
              outsideReferences: this.outsideLetReferences
            };
            this.scope.traverse(a, F, b);
            for (var c = 0; c < a.params.length; c++) {
              var d = a.params[c];
              if (b.reassignments[d.name]) {
                var e = this.scope.generateUidIdentifier(d.name);
                a.params[c] = e, this.scope.rename(d.name, e.name, a), a.body.body.push(s.expressionStatement(s.assignmentExpression("=", d, e)));
              }
            }
          }, a.prototype.getLetReferences = function() {
            var a = this.block,
                b = [];
            if (this.loop) {
              var c = this.loop.left || this.loop.init;
              d(c) && (b.push(c), w["default"](this.outsideLetReferences, s.getBindingIdentifiers(c)));
            }
            if (a.body)
              for (var f = 0; f < a.body.length; f++) {
                var g = a.body[f];
                (s.isClassDeclaration(g) || s.isFunctionDeclaration(g) || d(g)) && (d(g) && e(g, a, this.scope), b = b.concat(g.declarations || g));
              }
            for (var f = 0; f < b.length; f++) {
              var g = b[f],
                  h = s.getBindingIdentifiers(g);
              w["default"](this.letReferences, h), this.hasLetReferences = !0;
            }
            if (this.hasLetReferences) {
              var i = {
                letReferences: this.letReferences,
                closurify: !1,
                file: this.file
              };
              return this.blockPath.traverse(B, i), i.closurify;
            }
          }, a.prototype.checkLoop = function() {
            var a = {
              hasBreakContinue: !1,
              ignoreLabeless: !1,
              inSwitchCase: !1,
              innerLabels: [],
              hasReturn: !1,
              isLoop: !!this.loop,
              map: {},
              LOOP_IGNORE: l()
            };
            return this.blockPath.traverse(E, a), this.blockPath.traverse(G, a), a;
          }, a.prototype.hoistVarDeclarations = function() {
            this.blockPath.traverse(D, this);
          }, a.prototype.pushDeclar = function(a) {
            var b = [],
                c = s.getBindingIdentifiers(a);
            for (var d in c)
              b.push(s.variableDeclarator(c[d]));
            this.body.push(s.variableDeclaration(a.kind, b));
            for (var e = [],
                f = 0; f < a.declarations.length; f++) {
              var g = a.declarations[f];
              if (g.init) {
                var h = s.assignmentExpression("=", g.id, g.init);
                e.push(s.inherits(h, g));
              }
            }
            return e;
          }, a.prototype.buildHas = function(a, b) {
            var c = this.body;
            c.push(s.variableDeclaration("var", [s.variableDeclarator(a, b)]));
            var d = void 0,
                e = this.has,
                f = [];
            if (e.hasReturn && (d = z({RETURN: a})), e.hasBreakContinue) {
              for (var g in e.map)
                f.push(s.switchCase(s.stringLiteral(g), [e.map[g]]));
              if (e.hasReturn && f.push(s.switchCase(null, [d])), 1 === f.length) {
                var h = f[0];
                c.push(s.ifStatement(s.binaryExpression("===", a, h.test), h.consequent[0]));
              } else {
                for (var i = 0; i < f.length; i++) {
                  var j = f[i].consequent[0];
                  s.isBreakStatement(j) && !j.label && (j.label = this.loopLabel = this.loopLabel || this.scope.generateUidIdentifier("loop"));
                }
                c.push(s.switchStatement(a, f));
              }
            } else
              e.hasReturn && c.push(d);
          }, a;
        }();
    return c.exports = b["default"], c.exports;
  }), a.registerDynamic("100", ["82", "4", "5", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("82")["default"]),
        e = a("4")["default"],
        f = a("5"),
        g = e(f),
        h = Object.prototype.hasOwnProperty;
    return b.hoist = function(a) {
      function b(a, b) {
        g.assertVariableDeclaration(a);
        var d = [];
        return a.declarations.forEach(function(a) {
          c[a.id.name] = a.id, a.init ? d.push(g.assignmentExpression("=", a.id, a.init)) : b && d.push(a.id);
        }), 0 === d.length ? null : 1 === d.length ? d[0] : g.sequenceExpression(d);
      }
      g.assertFunction(a.node);
      var c = {};
      a.get("body").traverse({
        VariableDeclaration: {exit: function(a) {
            var c = b(a.node, !1);
            null === c ? a.remove() : a.replaceWith(g.expressionStatement(c)), a.skip();
          }},
        ForStatement: function(a) {
          var c = a.node.init;
          g.isVariableDeclaration(c) && a.get("init").replaceWith(b(c, !1));
        },
        ForXStatement: function(a) {
          var c = a.get("left");
          c.isVariableDeclaration() && c.replaceWith(b(c.node, !0));
        },
        FunctionDeclaration: function(a) {
          var b = a.node;
          c[b.id.name] = b.id;
          var d = g.expressionStatement(g.assignmentExpression("=", b.id, g.functionExpression(b.id, b.params, b.body, b.generator, b.expression)));
          a.parentPath.isBlockStatement() ? (a.parentPath.unshiftContainer("body", d), a.remove()) : a.replaceWith(d), a.skip();
        },
        FunctionExpression: function(a) {
          a.skip();
        }
      });
      var e = {};
      a.get("params").forEach(function(a) {
        var b = a.node;
        g.isIdentifier(b) && (e[b.name] = b);
      });
      var f = [];
      return d(c).forEach(function(a) {
        h.call(e, a) || f.push(g.variableDeclarator(c[a], null));
      }), 0 === f.length ? null : g.variableDeclaration("var", f);
    }, c.exports;
  }), a.registerDynamic("101", ["a", "4", "102", "5", "2c", "103", "3"], !0, function(a, b, c) {
    "use strict";
    function d() {
      p["default"].ok(this instanceof d);
    }
    function e(a) {
      d.call(this), r.assertLiteral(a), this.returnLoc = a;
    }
    function f(a, b, c) {
      d.call(this), r.assertLiteral(a), r.assertLiteral(b), c ? r.assertIdentifier(c) : c = null, this.breakLoc = a, this.continueLoc = b, this.label = c;
    }
    function g(a) {
      d.call(this), r.assertLiteral(a), this.breakLoc = a;
    }
    function h(a, b, c) {
      d.call(this), r.assertLiteral(a), b ? p["default"].ok(b instanceof i) : b = null, c ? p["default"].ok(c instanceof j) : c = null, p["default"].ok(b || c), this.firstLoc = a, this.catchEntry = b, this.finallyEntry = c;
    }
    function i(a, b) {
      d.call(this), r.assertLiteral(a), r.assertIdentifier(b), this.firstLoc = a, this.paramId = b;
    }
    function j(a, b) {
      d.call(this), r.assertLiteral(a), r.assertLiteral(b), this.firstLoc = a, this.afterLoc = b;
    }
    function k(a, b) {
      d.call(this), r.assertLiteral(a), r.assertIdentifier(b), this.breakLoc = a, this.label = b;
    }
    function l(b) {
      p["default"].ok(this instanceof l);
      var c = a("103").Emitter;
      p["default"].ok(b instanceof c), this.emitter = b, this.entryStack = [new e(b.finalLoc)];
    }
    var m = (a("3"), a("a")["default"]),
        n = a("4")["default"],
        o = a("102"),
        p = m(o),
        q = a("5"),
        r = n(q),
        s = a("2c");
    s.inherits(e, d), b.FunctionEntry = e, s.inherits(f, d), b.LoopEntry = f, s.inherits(g, d), b.SwitchEntry = g, s.inherits(h, d), b.TryEntry = h, s.inherits(i, d), b.CatchEntry = i, s.inherits(j, d), b.FinallyEntry = j, s.inherits(k, d), b.LabeledEntry = k;
    var t = l.prototype;
    return b.LeapManager = l, t.withEntry = function(a, b) {
      p["default"].ok(a instanceof d), this.entryStack.push(a);
      try {
        b.call(this.emitter);
      } finally {
        var c = this.entryStack.pop();
        p["default"].strictEqual(c, a);
      }
    }, t._findLeapLocation = function(a, b) {
      for (var c = this.entryStack.length - 1; c >= 0; --c) {
        var d = this.entryStack[c],
            e = d[a];
        if (e)
          if (b) {
            if (d.label && d.label.name === b.name)
              return e;
          } else if (!(d instanceof k))
            return e;
      }
      return null;
    }, t.getBreakLoc = function(a) {
      return this._findLeapLocation("breakLoc", a);
    }, t.getContinueLoc = function(a) {
      return this._findLeapLocation("continueLoc", a);
    }, c.exports;
  }), a.registerDynamic("102", ["2c"], !0, function(a, b, c) {
    function d(a, b) {
      return n.isUndefined(b) ? "" + b : n.isNumber(b) && !isFinite(b) ? b.toString() : n.isFunction(b) || n.isRegExp(b) ? b.toString() : b;
    }
    function e(a, b) {
      return n.isString(a) ? a.length < b ? a : a.slice(0, b) : a;
    }
    function f(a) {
      return e(JSON.stringify(a.actual, d), 128) + " " + a.operator + " " + e(JSON.stringify(a.expected, d), 128);
    }
    function g(a, b, c, d, e) {
      throw new q.AssertionError({
        message: c,
        actual: a,
        expected: b,
        operator: d,
        stackStartFunction: e
      });
    }
    function h(a, b) {
      a || g(a, !0, b, "==", q.ok);
    }
    function i(a, b) {
      if (a === b)
        return !0;
      if (n.isBuffer(a) && n.isBuffer(b)) {
        if (a.length != b.length)
          return !1;
        for (var c = 0; c < a.length; c++)
          if (a[c] !== b[c])
            return !1;
        return !0;
      }
      return n.isDate(a) && n.isDate(b) ? a.getTime() === b.getTime() : n.isRegExp(a) && n.isRegExp(b) ? a.source === b.source && a.global === b.global && a.multiline === b.multiline && a.lastIndex === b.lastIndex && a.ignoreCase === b.ignoreCase : n.isObject(a) || n.isObject(b) ? k(a, b) : a == b;
    }
    function j(a) {
      return "[object Arguments]" == Object.prototype.toString.call(a);
    }
    function k(a, b) {
      if (n.isNullOrUndefined(a) || n.isNullOrUndefined(b))
        return !1;
      if (a.prototype !== b.prototype)
        return !1;
      if (n.isPrimitive(a) || n.isPrimitive(b))
        return a === b;
      var c = j(a),
          d = j(b);
      if (c && !d || !c && d)
        return !1;
      if (c)
        return a = o.call(a), b = o.call(b), i(a, b);
      var e,
          f,
          g = r(a),
          h = r(b);
      if (g.length != h.length)
        return !1;
      for (g.sort(), h.sort(), f = g.length - 1; f >= 0; f--)
        if (g[f] != h[f])
          return !1;
      for (f = g.length - 1; f >= 0; f--)
        if (e = g[f], !i(a[e], b[e]))
          return !1;
      return !0;
    }
    function l(a, b) {
      return a && b ? "[object RegExp]" == Object.prototype.toString.call(b) ? b.test(a) : a instanceof b ? !0 : b.call({}, a) === !0 ? !0 : !1 : !1;
    }
    function m(a, b, c, d) {
      var e;
      n.isString(c) && (d = c, c = null);
      try {
        b();
      } catch (f) {
        e = f;
      }
      if (d = (c && c.name ? " (" + c.name + ")." : ".") + (d ? " " + d : "."), a && !e && g(e, c, "Missing expected exception" + d), !a && l(e, c) && g(e, c, "Got unwanted exception" + d), a && e && c && !l(e, c) || !a && e)
        throw e;
    }
    var n = a("2c"),
        o = Array.prototype.slice,
        p = Object.prototype.hasOwnProperty,
        q = c.exports = h;
    q.AssertionError = function(a) {
      this.name = "AssertionError", this.actual = a.actual, this.expected = a.expected, this.operator = a.operator, a.message ? (this.message = a.message, this.generatedMessage = !1) : (this.message = f(this), this.generatedMessage = !0);
      var b = a.stackStartFunction || g;
      if (Error.captureStackTrace)
        Error.captureStackTrace(this, b);
      else {
        var c = new Error;
        if (c.stack) {
          var d = c.stack,
              e = b.name,
              h = d.indexOf("\n" + e);
          if (h >= 0) {
            var i = d.indexOf("\n", h + 1);
            d = d.substring(i + 1);
          }
          this.stack = d;
        }
      }
    }, n.inherits(q.AssertionError, Error), q.fail = g, q.ok = h, q.equal = function(a, b, c) {
      a != b && g(a, b, c, "==", q.equal);
    }, q.notEqual = function(a, b, c) {
      a == b && g(a, b, c, "!=", q.notEqual);
    }, q.deepEqual = function(a, b, c) {
      i(a, b) || g(a, b, c, "deepEqual", q.deepEqual);
    }, q.notDeepEqual = function(a, b, c) {
      i(a, b) && g(a, b, c, "notDeepEqual", q.notDeepEqual);
    }, q.strictEqual = function(a, b, c) {
      a !== b && g(a, b, c, "===", q.strictEqual);
    }, q.notStrictEqual = function(a, b, c) {
      a === b && g(a, b, c, "!==", q.notStrictEqual);
    }, q["throws"] = function(a, b, c) {
      m.apply(this, [!0].concat(o.call(arguments)));
    }, q.doesNotThrow = function(a, b) {
      m.apply(this, [!1].concat(o.call(arguments)));
    }, q.ifError = function(a) {
      if (a)
        throw a;
    };
    var r = Object.keys || function(a) {
      var b = [];
      for (var c in a)
        p.call(a, c) && b.push(c);
      return b;
    };
    return c.exports;
  }), a.registerDynamic("104", ["a", "4", "102", "5", "105", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a, b) {
      function c(a) {
        function b(a) {
          return c || (Array.isArray(a) ? a.some(b) : j.isNode(a) && (h["default"].strictEqual(c, !1), c = d(a))), c;
        }
        j.assertNode(a);
        var c = !1,
            e = j.VISITOR_KEYS[a.type];
        if (e)
          for (var f = 0; f < e.length; f++) {
            var g = e[f],
                i = a[g];
            b(i);
          }
        return c;
      }
      function d(d) {
        j.assertNode(d);
        var e = k(d);
        return l.call(e, a) ? e[a] : l.call(m, d.type) ? e[a] = !1 : l.call(b, d.type) ? e[a] = !0 : e[a] = c(d);
      }
      return d.onlyChildren = c, d;
    }
    var e = (a("3"), a("a")["default"]),
        f = a("4")["default"],
        g = a("102"),
        h = e(g),
        i = a("5"),
        j = f(i),
        k = a("105").makeAccessor(),
        l = Object.prototype.hasOwnProperty,
        m = {FunctionExpression: !0},
        n = {
          CallExpression: !0,
          ForInStatement: !0,
          UnaryExpression: !0,
          BinaryExpression: !0,
          AssignmentExpression: !0,
          UpdateExpression: !0,
          NewExpression: !0
        },
        o = {
          YieldExpression: !0,
          BreakStatement: !0,
          ContinueStatement: !0,
          ReturnStatement: !0,
          ThrowStatement: !0
        };
    for (var p in o)
      l.call(o, p) && (n[p] = o[p]);
    return b.hasSideEffects = d("hasSideEffects", n), b.containsLeap = d("containsLeap", o), c.exports;
  }), a.registerDynamic("103", ["a", "4", "102", "5", "101", "104", "106", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      k["default"].ok(this instanceof d), m.assertIdentifier(a), this.nextTempId = 0, this.contextId = a, this.listing = [], this.marked = [!0], this.finalLoc = e(), this.tryEntries = [], this.leapManager = new o.LeapManager(this);
    }
    function e() {
      return m.numericLiteral(-1);
    }
    function f(a) {
      return new Error("all declarations should have been transformed into assignments before the Exploder began its work: " + JSON.stringify(a));
    }
    function g(a) {
      var b = a.type;
      return "normal" === b ? !t.call(a, "target") : "break" === b || "continue" === b ? !t.call(a, "value") && m.isLiteral(a.target) : "return" === b || "throw" === b ? t.call(a, "value") && !t.call(a, "target") : !1;
    }
    var h = (a("3"), a("a")["default"]),
        i = a("4")["default"],
        j = a("102"),
        k = h(j),
        l = a("5"),
        m = i(l),
        n = a("101"),
        o = i(n),
        p = a("104"),
        q = i(p),
        r = a("106"),
        s = i(r),
        t = Object.prototype.hasOwnProperty,
        u = d.prototype;
    b.Emitter = d, u.mark = function(a) {
      m.assertLiteral(a);
      var b = this.listing.length;
      return -1 === a.value ? a.value = b : k["default"].strictEqual(a.value, b), this.marked[b] = !0, a;
    }, u.emit = function(a) {
      m.isExpression(a) && (a = m.expressionStatement(a)), m.assertStatement(a), this.listing.push(a);
    }, u.emitAssign = function(a, b) {
      return this.emit(this.assign(a, b)), a;
    }, u.assign = function(a, b) {
      return m.expressionStatement(m.assignmentExpression("=", a, b));
    }, u.contextProperty = function(a, b) {
      return m.memberExpression(this.contextId, b ? m.stringLiteral(a) : m.identifier(a), !!b);
    }, u.stop = function(a) {
      a && this.setReturnValue(a), this.jump(this.finalLoc);
    }, u.setReturnValue = function(a) {
      m.assertExpression(a.value), this.emitAssign(this.contextProperty("rval"), this.explodeExpression(a));
    }, u.clearPendingException = function(a, b) {
      m.assertLiteral(a);
      var c = m.callExpression(this.contextProperty("catch", !0), [a]);
      b ? this.emitAssign(b, c) : this.emit(c);
    }, u.jump = function(a) {
      this.emitAssign(this.contextProperty("next"), a), this.emit(m.breakStatement());
    }, u.jumpIf = function(a, b) {
      m.assertExpression(a), m.assertLiteral(b), this.emit(m.ifStatement(a, m.blockStatement([this.assign(this.contextProperty("next"), b), m.breakStatement()])));
    }, u.jumpIfNot = function(a, b) {
      m.assertExpression(a), m.assertLiteral(b);
      var c = void 0;
      c = m.isUnaryExpression(a) && "!" === a.operator ? a.argument : m.unaryExpression("!", a), this.emit(m.ifStatement(c, m.blockStatement([this.assign(this.contextProperty("next"), b), m.breakStatement()])));
    }, u.makeTempVar = function() {
      return this.contextProperty("t" + this.nextTempId++);
    }, u.getContextFunction = function(a) {
      return m.functionExpression(a || null, [this.contextId], m.blockStatement([this.getDispatchLoop()]), !1, !1);
    }, u.getDispatchLoop = function() {
      var a = this,
          b = [],
          c = void 0,
          d = !1;
      return a.listing.forEach(function(e, f) {
        a.marked.hasOwnProperty(f) && (b.push(m.switchCase(m.numericLiteral(f), c = [])), d = !1), d || (c.push(e), m.isCompletionStatement(e) && (d = !0));
      }), this.finalLoc.value = this.listing.length, b.push(m.switchCase(this.finalLoc, []), m.switchCase(m.stringLiteral("end"), [m.returnStatement(m.callExpression(this.contextProperty("stop"), []))])), m.whileStatement(m.numericLiteral(1), m.switchStatement(m.assignmentExpression("=", this.contextProperty("prev"), this.contextProperty("next")), b));
    }, u.getTryLocsList = function() {
      if (0 === this.tryEntries.length)
        return null;
      var a = 0;
      return m.arrayExpression(this.tryEntries.map(function(b) {
        var c = b.firstLoc.value;
        k["default"].ok(c >= a, "try entries out of order"), a = c;
        var d = b.catchEntry,
            e = b.finallyEntry,
            f = [b.firstLoc, d ? d.firstLoc : null];
        return e && (f[2] = e.firstLoc, f[3] = e.afterLoc), m.arrayExpression(f);
      }));
    }, u.explode = function(a, b) {
      var c = a.node,
          d = this;
      if (m.assertNode(c), m.isDeclaration(c))
        throw f(c);
      if (m.isStatement(c))
        return d.explodeStatement(a);
      if (m.isExpression(c))
        return d.explodeExpression(a, b);
      switch (c.type) {
        case "Program":
          return a.get("body").map(d.explodeStatement, d);
        case "VariableDeclarator":
          throw f(c);
        case "Property":
        case "SwitchCase":
        case "CatchClause":
          throw new Error(c.type + " nodes should be handled by their parents");
        default:
          throw new Error("unknown Node of type " + JSON.stringify(c.type));
      }
    }, u.explodeStatement = function(a, b) {
      var c = a.node,
          d = this,
          f = void 0,
          g = void 0,
          h = void 0;
      if (m.assertStatement(c), b ? m.assertIdentifier(b) : b = null, m.isBlockStatement(c))
        return void a.get("body").forEach(function(a) {
          d.explodeStatement(a);
        });
      if (!q.containsLeap(c))
        return void d.emit(c);
      switch (c.type) {
        case "ExpressionStatement":
          d.explodeExpression(a.get("expression"), !0);
          break;
        case "LabeledStatement":
          g = e(), d.leapManager.withEntry(new o.LabeledEntry(g, c.label), function() {
            d.explodeStatement(a.get("body"), c.label);
          }), d.mark(g);
          break;
        case "WhileStatement":
          f = e(), g = e(), d.mark(f), d.jumpIfNot(d.explodeExpression(a.get("test")), g), d.leapManager.withEntry(new o.LoopEntry(g, f, b), function() {
            d.explodeStatement(a.get("body"));
          }), d.jump(f), d.mark(g);
          break;
        case "DoWhileStatement":
          var i = e(),
              j = e();
          g = e(), d.mark(i), d.leapManager.withEntry(new o.LoopEntry(g, j, b), function() {
            d.explode(a.get("body"));
          }), d.mark(j), d.jumpIf(d.explodeExpression(a.get("test")), i), d.mark(g);
          break;
        case "ForStatement":
          h = e();
          var l = e();
          g = e(), c.init && d.explode(a.get("init"), !0), d.mark(h), c.test && d.jumpIfNot(d.explodeExpression(a.get("test")), g), d.leapManager.withEntry(new o.LoopEntry(g, l, b), function() {
            d.explodeStatement(a.get("body"));
          }), d.mark(l), c.update && d.explode(a.get("update"), !0), d.jump(h), d.mark(g);
          break;
        case "TypeCastExpression":
          return d.explodeExpression(a.get("expression"));
        case "ForInStatement":
          h = e(), g = e();
          var n = d.makeTempVar();
          d.emitAssign(n, m.callExpression(s.runtimeProperty("keys"), [d.explodeExpression(a.get("right"))])), d.mark(h);
          var p = d.makeTempVar();
          d.jumpIf(m.memberExpression(m.assignmentExpression("=", p, m.callExpression(n, [])), m.identifier("done"), !1), g), d.emitAssign(c.left, m.memberExpression(p, m.identifier("value"), !1)), d.leapManager.withEntry(new o.LoopEntry(g, h, b), function() {
            d.explodeStatement(a.get("body"));
          }), d.jump(h), d.mark(g);
          break;
        case "BreakStatement":
          d.emitAbruptCompletion({
            type: "break",
            target: d.leapManager.getBreakLoc(c.label)
          });
          break;
        case "ContinueStatement":
          d.emitAbruptCompletion({
            type: "continue",
            target: d.leapManager.getContinueLoc(c.label)
          });
          break;
        case "SwitchStatement":
          var r = d.emitAssign(d.makeTempVar(), d.explodeExpression(a.get("discriminant")));
          g = e();
          for (var t = e(),
              u = t,
              w = [],
              x = c.cases || [],
              y = x.length - 1; y >= 0; --y) {
            var z = x[y];
            m.assertSwitchCase(z), z.test ? u = m.conditionalExpression(m.binaryExpression("===", r, z.test), w[y] = e(), u) : w[y] = t;
          }
          var A = a.get("discriminant");
          A.replaceWith(u), d.jump(d.explodeExpression(A)), d.leapManager.withEntry(new o.SwitchEntry(g), function() {
            a.get("cases").forEach(function(a) {
              var b = a.key;
              d.mark(w[b]), a.get("consequent").forEach(function(a) {
                d.explodeStatement(a);
              });
            });
          }), d.mark(g), -1 === t.value && (d.mark(t), k["default"].strictEqual(g.value, t.value));
          break;
        case "IfStatement":
          var B = c.alternate && e();
          g = e(), d.jumpIfNot(d.explodeExpression(a.get("test")), B || g), d.explodeStatement(a.get("consequent")), B && (d.jump(g), d.mark(B), d.explodeStatement(a.get("alternate"))), d.mark(g);
          break;
        case "ReturnStatement":
          d.emitAbruptCompletion({
            type: "return",
            value: d.explodeExpression(a.get("argument"))
          });
          break;
        case "WithStatement":
          throw new Error("WithStatement not supported in generator functions.");
        case "TryStatement":
          g = e();
          var C = c.handler,
              D = C && e(),
              E = D && new o.CatchEntry(D, C.param),
              F = c.finalizer && e(),
              G = F && new o.FinallyEntry(F, g),
              H = new o.TryEntry(d.getUnmarkedCurrentLoc(), E, G);
          d.tryEntries.push(H), d.updateContextPrevLoc(H.firstLoc), d.leapManager.withEntry(H, function() {
            d.explodeStatement(a.get("block")), D && !function() {
              F ? d.jump(F) : d.jump(g), d.updateContextPrevLoc(d.mark(D));
              var b = a.get("handler.body"),
                  c = d.makeTempVar();
              d.clearPendingException(H.firstLoc, c), b.traverse(v, {
                safeParam: c,
                catchParamName: C.param.name
              }), d.leapManager.withEntry(E, function() {
                d.explodeStatement(b);
              });
            }(), F && (d.updateContextPrevLoc(d.mark(F)), d.leapManager.withEntry(G, function() {
              d.explodeStatement(a.get("finalizer"));
            }), d.emit(m.returnStatement(m.callExpression(d.contextProperty("finish"), [G.firstLoc]))));
          }), d.mark(g);
          break;
        case "ThrowStatement":
          d.emit(m.throwStatement(d.explodeExpression(a.get("argument"))));
          break;
        default:
          throw new Error("unknown Statement of type " + JSON.stringify(c.type));
      }
    };
    var v = {
      Identifier: function(a, b) {
        a.node.name === b.catchParamName && s.isReference(a) && a.replaceWith(b.safeParam);
      },
      Scope: function(a, b) {
        a.scope.hasOwnBinding(b.catchParamName) && a.skip();
      }
    };
    return u.emitAbruptCompletion = function(a) {
      g(a) || k["default"].ok(!1, "invalid completion record: " + JSON.stringify(a)), k["default"].notStrictEqual(a.type, "normal", "normal completions are not abrupt");
      var b = [m.stringLiteral(a.type)];
      "break" === a.type || "continue" === a.type ? (m.assertLiteral(a.target), b[1] = a.target) : ("return" === a.type || "throw" === a.type) && a.value && (m.assertExpression(a.value), b[1] = a.value), this.emit(m.returnStatement(m.callExpression(this.contextProperty("abrupt"), b)));
    }, u.getUnmarkedCurrentLoc = function() {
      return m.numericLiteral(this.listing.length);
    }, u.updateContextPrevLoc = function(a) {
      a ? (m.assertLiteral(a), -1 === a.value ? a.value = this.listing.length : k["default"].strictEqual(a.value, this.listing.length)) : a = this.getUnmarkedCurrentLoc(), this.emitAssign(this.contextProperty("prev"), a);
    }, u.explodeExpression = function(a, b) {
      function c(a) {
        return m.assertExpression(a), b ? void g.emit(a) : a;
      }
      function d(a, b, c) {
        k["default"].ok(!c || !a, "Ignoring the result of a child expression but forcing it to be assigned to a temporary variable?");
        var d = g.explodeExpression(b, c);
        return c || (a || j && !m.isLiteral(d)) && (d = g.emitAssign(a || g.makeTempVar(), d)), d;
      }
      var f = a.node;
      if (!f)
        return f;
      m.assertExpression(f);
      var g = this,
          h = void 0,
          i = void 0;
      if (!q.containsLeap(f))
        return c(f);
      var j = q.containsLeap.onlyChildren(f);
      switch (f.type) {
        case "MemberExpression":
          return c(m.memberExpression(g.explodeExpression(a.get("object")), f.computed ? d(null, a.get("property")) : f.property, f.computed));
        case "CallExpression":
          var l = a.get("callee"),
              n = a.get("arguments"),
              o = void 0,
              p = [],
              r = !1;
          if (n.forEach(function(a) {
            r = r || q.containsLeap(a.node);
          }), m.isMemberExpression(l.node))
            if (r) {
              var s = d(g.makeTempVar(), l.get("object")),
                  t = l.node.computed ? d(null, l.get("property")) : l.node.property;
              p.unshift(s), o = m.memberExpression(m.memberExpression(s, t, l.node.computed), m.identifier("call"), !1);
            } else
              o = g.explodeExpression(l);
          else
            o = g.explodeExpression(l), m.isMemberExpression(o) && (o = m.sequenceExpression([m.numericLiteral(0), o]));
          return n.forEach(function(a) {
            p.push(d(null, a));
          }), c(m.callExpression(o, p));
        case "NewExpression":
          return c(m.newExpression(d(null, a.get("callee")), a.get("arguments").map(function(a) {
            return d(null, a);
          })));
        case "ObjectExpression":
          return c(m.objectExpression(a.get("properties").map(function(a) {
            return a.isObjectProperty() ? m.objectProperty(a.node.key, d(null, a.get("value")), a.node.computed) : a.node;
          })));
        case "ArrayExpression":
          return c(m.arrayExpression(a.get("elements").map(function(a) {
            return d(null, a);
          })));
        case "SequenceExpression":
          var u = f.expressions.length - 1;
          return a.get("expressions").forEach(function(a) {
            a.key === u ? h = g.explodeExpression(a, b) : g.explodeExpression(a, !0);
          }), h;
        case "LogicalExpression":
          i = e(), b || (h = g.makeTempVar());
          var v = d(h, a.get("left"));
          return "&&" === f.operator ? g.jumpIfNot(v, i) : (k["default"].strictEqual(f.operator, "||"), g.jumpIf(v, i)), d(h, a.get("right"), b), g.mark(i), h;
        case "ConditionalExpression":
          var w = e();
          i = e();
          var x = g.explodeExpression(a.get("test"));
          return g.jumpIfNot(x, w), b || (h = g.makeTempVar()), d(h, a.get("consequent"), b), g.jump(i), g.mark(w), d(h, a.get("alternate"), b), g.mark(i), h;
        case "UnaryExpression":
          return c(m.unaryExpression(f.operator, g.explodeExpression(a.get("argument")), !!f.prefix));
        case "BinaryExpression":
          return c(m.binaryExpression(f.operator, d(null, a.get("left")), d(null, a.get("right"))));
        case "AssignmentExpression":
          return c(m.assignmentExpression(f.operator, g.explodeExpression(a.get("left")), g.explodeExpression(a.get("right"))));
        case "UpdateExpression":
          return c(m.updateExpression(f.operator, g.explodeExpression(a.get("argument")), f.prefix));
        case "YieldExpression":
          i = e();
          var y = f.argument && g.explodeExpression(a.get("argument"));
          if (y && f.delegate) {
            var z = g.makeTempVar();
            return g.emit(m.returnStatement(m.callExpression(g.contextProperty("delegateYield"), [y, m.stringLiteral(z.property.name), i]))), g.mark(i), z;
          }
          return g.emitAssign(g.contextProperty("next"), i), g.emit(m.returnStatement(y || null)), g.mark(i), g.contextProperty("sent");
        default:
          throw new Error("unknown Expression of type " + JSON.stringify(f.type));
      }
    }, c.exports;
  }), a.registerDynamic("107", ["108", "109", "3"], !0, function(a, b, c) {
    a("3");
    return a("108")("getOwnPropertyNames", function() {
      return a("109").get;
    }), c.exports;
  }), a.registerDynamic("10a", ["52", "107", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("52"));
    return a("107"), c.exports = function(a) {
      return d.getNames(a);
    }, c.exports;
  }), a.registerDynamic("10b", ["10a", "3"], !0, function(a, b, c) {
    a("3");
    return c.exports = {
      "default": a("10a"),
      __esModule: !0
    }, c.exports;
  }), a.registerDynamic("10c", ["10d", "108", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("10d"));
    return a("108")("getOwnPropertyDescriptor", function(a) {
      return function(b, c) {
        return a(d(b), c);
      };
    }), c.exports;
  }), a.registerDynamic("10e", ["52", "10c", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("52"));
    return a("10c"), c.exports = function(a, b) {
      return d.getDesc(a, b);
    }, c.exports;
  }), a.registerDynamic("10f", ["10e", "3"], !0, function(a, b, c) {
    a("3");
    return c.exports = {
      "default": a("10e"),
      __esModule: !0
    }, c.exports;
  }), a.registerDynamic("110", ["52", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("52"));
    return c.exports = function(a, b, c) {
      return d.setDesc(a, b, c);
    }, c.exports;
  }), a.registerDynamic("111", ["110", "3"], !0, function(a, b, c) {
    a("3");
    return c.exports = {
      "default": a("110"),
      __esModule: !0
    }, c.exports;
  }), a.registerDynamic("112", ["10b", "10f", "111", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("10b")["default"]),
        e = a("10f")["default"],
        f = a("111")["default"];
    return b["default"] = function(a, b) {
      for (var c = d(b),
          g = 0; g < c.length; g++) {
        var h = c[g],
            i = e(b, h);
        i && i.configurable && void 0 === a[h] && f(a, h, i);
      }
      return a;
    }, b.__esModule = !0, c.exports;
  }), a.registerDynamic("113", ["3"], !0, function(a, b, c) {
    "use strict";
    a("3");
    return b["default"] = function(a, b) {
      var c = b({}, a);
      return delete c["default"], c;
    }, b.__esModule = !0, c.exports;
  }), a.registerDynamic("114", ["3"], !0, function(a, b, c) {
    "use strict";
    var d = a("3"),
        e,
        f = this,
        g = this;
    return c.exports = function h(a) {
      function b() {}
      b.prototype = a, new b;
    }, c.exports;
  }), a.registerDynamic("115", ["3"], !0, function(a, b, c) {
    function d(a) {
      for (var b = -1,
          c = a ? a.length : 0,
          d = -1,
          e = []; ++b < c; ) {
        var f = a[b];
        f && (e[++d] = f);
      }
      return e;
    }
    a("3");
    return c.exports = d, c.exports;
  }), a.registerDynamic("116", ["117", "fb", "118", "3"], !0, function(a, b, c) {
    function d(a, b) {
      return function(c, d) {
        var h = c ? e(c) : 0;
        if (!f(h))
          return a(c, d);
        for (var i = b ? h : -1,
            j = g(c); (b ? i-- : ++i < h) && d(j[i], i, j) !== !1; )
          ;
        return c;
      };
    }
    var e = (a("3"), a("117")),
        f = a("fb"),
        g = a("118");
    return c.exports = d, c.exports;
  }), a.registerDynamic("a1", ["119", "116", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("119")),
        e = a("116"),
        f = e(d);
    return c.exports = f, c.exports;
  }), a.registerDynamic("11a", ["f6", "3e", "3"], !0, function(a, b, c) {
    function d(a, b) {
      return function(c, d, g) {
        return "function" == typeof d && void 0 === g && f(c) ? a(c, d) : b(c, e(d, g, 3));
      };
    }
    var e = (a("3"), a("f6")),
        f = a("3e");
    return c.exports = d, c.exports;
  }), a.registerDynamic("11b", ["43", "a1", "11a", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("43")),
        e = a("a1"),
        f = a("11a"),
        g = f(d, e);
    return c.exports = g, c.exports;
  }), a.registerDynamic("a4", ["11b", "3"], !0, function(a, b, c) {
    a("3");
    return c.exports = a("11b"), c.exports;
  }), a.registerDynamic("11c", ["11d", "118", "3"], !0, function(a, b, c) {
    function d(a, b, c) {
      var d = b.length,
          g = d,
          h = !c;
      if (null == a)
        return !g;
      for (a = f(a); d--; ) {
        var i = b[d];
        if (h && i[2] ? i[1] !== a[i[0]] : !(i[0] in a))
          return !1;
      }
      for (; ++d < g; ) {
        i = b[d];
        var j = i[0],
            k = a[j],
            l = i[1];
        if (h && i[2]) {
          if (void 0 === k && !(j in a))
            return !1;
        } else {
          var m = c ? c(k, l, j) : void 0;
          if (!(void 0 === m ? e(l, k, c, !0) : m))
            return !1;
        }
      }
      return !0;
    }
    var e = (a("3"), a("11d")),
        f = a("118");
    return c.exports = d, c.exports;
  }), a.registerDynamic("11e", ["46", "118", "3"], !0, function(a, b, c) {
    function d(a) {
      a = f(a);
      for (var b = -1,
          c = e(a),
          d = c.length,
          g = Array(d); ++b < d; ) {
        var h = c[b];
        g[b] = [h, a[h]];
      }
      return g;
    }
    var e = (a("3"), a("46")),
        f = a("118");
    return c.exports = d, c.exports;
  }), a.registerDynamic("11f", ["120", "11e", "3"], !0, function(a, b, c) {
    function d(a) {
      for (var b = f(a),
          c = b.length; c--; )
        b[c][2] = e(b[c][1]);
      return b;
    }
    var e = (a("3"), a("120")),
        f = a("11e");
    return c.exports = d, c.exports;
  }), a.registerDynamic("121", ["11c", "11f", "118", "3"], !0, function(a, b, c) {
    function d(a) {
      var b = f(a);
      if (1 == b.length && b[0][2]) {
        var c = b[0][0],
            d = b[0][1];
        return function(a) {
          return null == a ? !1 : a[c] === d && (void 0 !== d || c in g(a));
        };
      }
      return function(a) {
        return e(a, b);
      };
    }
    var e = (a("3"), a("11c")),
        f = a("11f"),
        g = a("118");
    return c.exports = d, c.exports;
  }), a.registerDynamic("122", ["3"], !0, function(a, b, c) {
    function d(a, b) {
      for (var c = -1,
          d = a.length; ++c < d; )
        if (b(a[c], c, a))
          return !0;
      return !1;
    }
    a("3");
    return c.exports = d, c.exports;
  }), a.registerDynamic("123", ["122", "3"], !0, function(a, b, c) {
    function d(a, b, c, d, f, g, h) {
      var i = -1,
          j = a.length,
          k = b.length;
      if (j != k && !(f && k > j))
        return !1;
      for (; ++i < j; ) {
        var l = a[i],
            m = b[i],
            n = d ? d(f ? m : l, f ? l : m, i) : void 0;
        if (void 0 !== n) {
          if (n)
            continue;
          return !1;
        }
        if (f) {
          if (!e(b, function(a) {
            return l === a || c(l, a, d, f, g, h);
          }))
            return !1;
        } else if (l !== m && !c(l, m, d, f, g, h))
          return !1;
      }
      return !0;
    }
    var e = (a("3"), a("122"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("124", ["3"], !0, function(a, b, c) {
    function d(a, b, c) {
      switch (c) {
        case e:
        case f:
          return +a == +b;
        case g:
          return a.name == b.name && a.message == b.message;
        case h:
          return a != +a ? b != +b : a == +b;
        case i:
        case j:
          return a == b + "";
      }
      return !1;
    }
    var e = (a("3"), "[object Boolean]"),
        f = "[object Date]",
        g = "[object Error]",
        h = "[object Number]",
        i = "[object RegExp]",
        j = "[object String]";
    return c.exports = d, c.exports;
  }), a.registerDynamic("125", ["46", "3"], !0, function(a, b, c) {
    function d(a, b, c, d, f, h, i) {
      var j = e(a),
          k = j.length,
          l = e(b),
          m = l.length;
      if (k != m && !f)
        return !1;
      for (var n = k; n--; ) {
        var o = j[n];
        if (!(f ? o in b : g.call(b, o)))
          return !1;
      }
      for (var p = f; ++n < k; ) {
        o = j[n];
        var q = a[o],
            r = b[o],
            s = d ? d(f ? r : q, f ? q : r, o) : void 0;
        if (!(void 0 === s ? c(q, r, d, f, h, i) : s))
          return !1;
        p || (p = "constructor" == o);
      }
      if (!p) {
        var t = a.constructor,
            u = b.constructor;
        if (t != u && "constructor" in a && "constructor" in b && !("function" == typeof t && t instanceof t && "function" == typeof u && u instanceof u))
          return !1;
      }
      return !0;
    }
    var e = (a("3"), a("46")),
        f = Object.prototype,
        g = f.hasOwnProperty;
    return c.exports = d, c.exports;
  }), a.registerDynamic("41", ["fb", "45", "3"], !0, function(a, b, c) {
    function d(a) {
      return f(a) && e(a.length) && !!D[F.call(a)];
    }
    var e = (a("3"), a("fb")),
        f = a("45"),
        g = "[object Arguments]",
        h = "[object Array]",
        i = "[object Boolean]",
        j = "[object Date]",
        k = "[object Error]",
        l = "[object Function]",
        m = "[object Map]",
        n = "[object Number]",
        o = "[object Object]",
        p = "[object RegExp]",
        q = "[object Set]",
        r = "[object String]",
        s = "[object WeakMap]",
        t = "[object ArrayBuffer]",
        u = "[object Float32Array]",
        v = "[object Float64Array]",
        w = "[object Int8Array]",
        x = "[object Int16Array]",
        y = "[object Int32Array]",
        z = "[object Uint8Array]",
        A = "[object Uint8ClampedArray]",
        B = "[object Uint16Array]",
        C = "[object Uint32Array]",
        D = {};
    D[u] = D[v] = D[w] = D[x] = D[y] = D[z] = D[A] = D[B] = D[C] = !0, D[g] = D[h] = D[t] = D[i] = D[j] = D[k] = D[l] = D[m] = D[n] = D[o] = D[p] = D[q] = D[r] = D[s] = !1;
    var E = Object.prototype,
        F = E.toString;
    return c.exports = d, c.exports;
  }), a.registerDynamic("126", ["123", "124", "125", "3e", "41", "3"], !0, function(a, b, c) {
    function d(a, b, c, d, m, p, q) {
      var r = h(a),
          s = h(b),
          t = k,
          u = k;
      r || (t = o.call(a), t == j ? t = l : t != l && (r = i(a))), s || (u = o.call(b), u == j ? u = l : u != l && (s = i(b)));
      var v = t == l,
          w = u == l,
          x = t == u;
      if (x && !r && !v)
        return f(a, b, t);
      if (!m) {
        var y = v && n.call(a, "__wrapped__"),
            z = w && n.call(b, "__wrapped__");
        if (y || z)
          return c(y ? a.value() : a, z ? b.value() : b, d, m, p, q);
      }
      if (!x)
        return !1;
      p || (p = []), q || (q = []);
      for (var A = p.length; A--; )
        if (p[A] == a)
          return q[A] == b;
      p.push(a), q.push(b);
      var B = (r ? e : g)(a, b, c, d, m, p, q);
      return p.pop(), q.pop(), B;
    }
    var e = (a("3"), a("123")),
        f = a("124"),
        g = a("125"),
        h = a("3e"),
        i = a("41"),
        j = "[object Arguments]",
        k = "[object Array]",
        l = "[object Object]",
        m = Object.prototype,
        n = m.hasOwnProperty,
        o = m.toString;
    return c.exports = d, c.exports;
  }), a.registerDynamic("11d", ["126", "44", "45", "3"], !0, function(a, b, c) {
    function d(a, b, c, h, i, j) {
      return a === b ? !0 : null == a || null == b || !f(a) && !g(b) ? a !== a && b !== b : e(a, b, d, c, h, i, j);
    }
    var e = (a("3"), a("126")),
        f = a("44"),
        g = a("45");
    return c.exports = d, c.exports;
  }), a.registerDynamic("f8", ["3"], !0, function(a, b, c) {
    function d(a, b, c) {
      var d = -1,
          e = a.length;
      b = null == b ? 0 : +b || 0, 0 > b && (b = -b > e ? 0 : e + b), c = void 0 === c || c > e ? e : +c || 0, 0 > c && (c += e), e = b > c ? 0 : c - b >>> 0, b >>>= 0;
      for (var f = Array(e); ++d < e; )
        f[d] = a[d + b];
      return f;
    }
    a("3");
    return c.exports = d, c.exports;
  }), a.registerDynamic("120", ["44", "3"], !0, function(a, b, c) {
    function d(a) {
      return a === a && !e(a);
    }
    var e = (a("3"), a("44"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("fc", ["3"], !0, function(a, b, c) {
    function d(a) {
      var b = a ? a.length : 0;
      return b ? a[b - 1] : void 0;
    }
    a("3");
    return c.exports = d, c.exports;
  }), a.registerDynamic("127", ["f7", "11d", "f8", "3e", "fa", "120", "fc", "118", "fd", "3"], !0, function(a, b, c) {
    function d(a, b) {
      var c = h(a),
          d = i(a) && j(b),
          n = a + "";
      return a = m(a), function(h) {
        if (null == h)
          return !1;
        var i = n;
        if (h = l(h), (c || !d) && !(i in h)) {
          if (h = 1 == a.length ? h : e(h, g(a, 0, -1)), null == h)
            return !1;
          i = k(a), h = l(h);
        }
        return h[i] === b ? void 0 !== b || i in h : f(b, h[i], void 0, !0);
      };
    }
    var e = (a("3"), a("f7")),
        f = a("11d"),
        g = a("f8"),
        h = a("3e"),
        i = a("fa"),
        j = a("120"),
        k = a("fc"),
        l = a("118"),
        m = a("fd");
    return c.exports = d, c.exports;
  }), a.registerDynamic("f7", ["118", "3"], !0, function(a, b, c) {
    function d(a, b, c) {
      if (null != a) {
        void 0 !== c && c in e(a) && (b = [c]);
        for (var d = 0,
            f = b.length; null != a && f > d; )
          a = a[b[d++]];
        return d && d == f ? a : void 0;
      }
    }
    var e = (a("3"), a("118"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("22", ["3"], !0, function(a, b, c) {
    function d(a) {
      return null == a ? "" : a + "";
    }
    a("3");
    return c.exports = d, c.exports;
  }), a.registerDynamic("fd", ["22", "3e", "3"], !0, function(a, b, c) {
    function d(a) {
      if (f(a))
        return a;
      var b = [];
      return e(a).replace(g, function(a, c, d, e) {
        b.push(d ? e.replace(h, "$1") : c || a);
      }), b;
    }
    var e = (a("3"), a("22")),
        f = a("3e"),
        g = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\n\\]|\\.)*?)\2)\]/g,
        h = /\\(\\)?/g;
    return c.exports = d, c.exports;
  }), a.registerDynamic("128", ["f7", "fd", "3"], !0, function(a, b, c) {
    function d(a) {
      var b = a + "";
      return a = f(a), function(c) {
        return e(c, a, b);
      };
    }
    var e = (a("3"), a("f7")),
        f = a("fd");
    return c.exports = d, c.exports;
  }), a.registerDynamic("fa", ["3e", "118", "3"], !0, function(a, b, c) {
    function d(a, b) {
      var c = typeof a;
      if ("string" == c && h.test(a) || "number" == c)
        return !0;
      if (e(a))
        return !1;
      var d = !g.test(a);
      return d || null != b && a in f(b);
    }
    var e = (a("3"), a("3e")),
        f = a("118"),
        g = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\n\\]|\\.)*?\1)\]/,
        h = /^\w*$/;
    return c.exports = d, c.exports;
  }), a.registerDynamic("129", ["12a", "128", "fa", "3"], !0, function(a, b, c) {
    function d(a) {
      return g(a) ? e(a) : f(a);
    }
    var e = (a("3"), a("12a")),
        f = a("128"),
        g = a("fa");
    return c.exports = d, c.exports;
  }), a.registerDynamic("1c", ["121", "127", "f6", "12b", "129", "3"], !0, function(a, b, c) {
    function d(a, b, c) {
      var d = typeof a;
      return "function" == d ? void 0 === b ? a : g(a, b, c) : null == a ? h : "object" == d ? e(a) : void 0 === b ? i(a) : f(a, b);
    }
    var e = (a("3"), a("121")),
        f = a("127"),
        g = a("f6"),
        h = a("12b"),
        i = a("129");
    return c.exports = d, c.exports;
  }), a.registerDynamic("12c", ["44", "3"], !0, function(a, b, c) {
    function d(a, b) {
      var c = a.data,
          d = "string" == typeof b || e(b) ? c.set.has(b) : c.hash[b];
      return d ? 0 : -1;
    }
    var e = (a("3"), a("44"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("12d", ["44", "3"], !0, function(a, b, c) {
    function d(a) {
      var b = this.data;
      "string" == typeof a || e(a) ? b.set.add(a) : b.hash[a] = !0;
    }
    var e = (a("3"), a("44"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("12e", ["12d", "12f", "3"], !0, function(a, b, c) {
    function d(a) {
      var b = a ? a.length : 0;
      for (this.data = {
        hash: i(null),
        set: new h
      }; b--; )
        this.push(a[b]);
    }
    var e = (a("3"), this),
        f = a("12d"),
        g = a("12f"),
        h = g(e, "Set"),
        i = g(Object, "create");
    return d.prototype.push = f, c.exports = d, c.exports;
  }), a.registerDynamic("130", ["12e", "12f", "3"], !0, function(a, b, c) {
    function d(a) {
      return i && h ? new f(a) : null;
    }
    var e = (a("3"), this),
        f = a("12e"),
        g = a("12f"),
        h = g(e, "Set"),
        i = g(Object, "create");
    return c.exports = d, c.exports;
  }), a.registerDynamic("131", ["e9", "12c", "130", "3"], !0, function(a, b, c) {
    function d(a, b) {
      var c = -1,
          d = e,
          i = a.length,
          j = !0,
          k = j && i >= h,
          l = k ? g() : null,
          m = [];
      l ? (d = f, j = !1) : (k = !1, l = b ? [] : m);
      a: for (; ++c < i; ) {
        var n = a[c],
            o = b ? b(n, c, a) : n;
        if (j && n === n) {
          for (var p = l.length; p--; )
            if (l[p] === o)
              continue a;
          b && l.push(o), m.push(n);
        } else
          d(l, o, 0) < 0 && ((b || k) && l.push(o), m.push(n));
      }
      return m;
    }
    var e = (a("3"), a("e9")),
        f = a("12c"),
        g = a("130"),
        h = 200;
    return c.exports = d, c.exports;
  }), a.registerDynamic("132", ["3"], !0, function(a, b, c) {
    function d(a, b) {
      for (var c,
          d = -1,
          e = a.length,
          f = -1,
          g = []; ++d < e; ) {
        var h = a[d],
            i = b ? b(h, d, a) : h;
        d && c === i || (c = i, g[++f] = h);
      }
      return g;
    }
    a("3");
    return c.exports = d, c.exports;
  }), a.registerDynamic("133", ["1c", "131", "1e", "132", "3"], !0, function(a, b, c) {
    function d(a, b, c, d) {
      var i = a ? a.length : 0;
      return i ? (null != b && "boolean" != typeof b && (d = c, c = g(a, b, d) ? void 0 : b, b = !1), c = null == c ? c : e(c, d, 3), b ? h(a, c) : f(a, c)) : [];
    }
    var e = (a("3"), a("1c")),
        f = a("131"),
        g = a("1e"),
        h = a("132");
    return c.exports = d, c.exports;
  }), a.registerDynamic("134", ["4", "a", "5", "135", "136", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("4")["default"]),
        e = a("a")["default"],
        f = a("5"),
        g = d(f),
        h = a("135"),
        i = a("136"),
        j = e(i);
    return j["default"]("ArrayExpression", {
      fields: {elements: {
          validate: i.chain(i.assertValueType("array"), i.assertEach(i.assertNodeOrValueType("null", "Expression", "SpreadElement"))),
          "default": []
        }},
      visitor: ["elements"],
      aliases: ["Expression"]
    }), j["default"]("AssignmentExpression", {
      fields: {
        operator: {validate: i.assertValueType("string")},
        left: {validate: i.assertNodeType("LVal")},
        right: {validate: i.assertNodeType("Expression")}
      },
      builder: ["operator", "left", "right"],
      visitor: ["left", "right"],
      aliases: ["Expression"]
    }), j["default"]("BinaryExpression", {
      builder: ["operator", "left", "right"],
      fields: {
        operator: {validate: i.assertOneOf.apply(void 0, h.BINARY_OPERATORS)},
        left: {validate: i.assertNodeType("Expression")},
        right: {validate: i.assertNodeType("Expression")}
      },
      visitor: ["left", "right"],
      aliases: ["Binary", "Expression"]
    }), j["default"]("Directive", {
      visitor: ["value"],
      fields: {value: {validate: i.assertNodeType("DirectiveLiteral")}}
    }), j["default"]("DirectiveLiteral", {
      builder: ["value"],
      fields: {value: {validate: i.assertValueType("string")}}
    }), j["default"]("BlockStatement", {
      builder: ["body", "directives"],
      visitor: ["directives", "body"],
      fields: {
        directives: {
          validate: i.chain(i.assertValueType("array"), i.assertEach(i.assertNodeType("Directive"))),
          "default": []
        },
        body: {validate: i.chain(i.assertValueType("array"), i.assertEach(i.assertNodeType("Statement")))}
      },
      aliases: ["Scopable", "BlockParent", "Block", "Statement"]
    }), j["default"]("BreakStatement", {
      visitor: ["label"],
      fields: {label: {
          validate: i.assertNodeType("Identifier"),
          optional: !0
        }},
      aliases: ["Statement", "Terminatorless", "CompletionStatement"]
    }), j["default"]("CallExpression", {
      visitor: ["callee", "arguments"],
      fields: {
        callee: {validate: i.assertNodeType("Expression")},
        arguments: {validate: i.chain(i.assertValueType("array"), i.assertEach(i.assertNodeType("Expression", "SpreadElement")))}
      },
      aliases: ["Expression"]
    }), j["default"]("CatchClause", {
      visitor: ["param", "body"],
      fields: {
        param: {validate: i.assertNodeType("Identifier")},
        body: {validate: i.assertNodeType("BlockStatement")}
      },
      aliases: ["Scopable"]
    }), j["default"]("ConditionalExpression", {
      visitor: ["test", "consequent", "alternate"],
      fields: {
        test: {validate: i.assertNodeType("Expression")},
        consequent: {validate: i.assertNodeType("Expression")},
        alternate: {validate: i.assertNodeType("Expression")}
      },
      aliases: ["Expression", "Conditional"]
    }), j["default"]("ContinueStatement", {
      visitor: ["label"],
      fields: {label: {
          validate: i.assertNodeType("Identifier"),
          optional: !0
        }},
      aliases: ["Statement", "Terminatorless", "CompletionStatement"]
    }), j["default"]("DebuggerStatement", {aliases: ["Statement"]}), j["default"]("DoWhileStatement", {
      visitor: ["test", "body"],
      fields: {
        test: {validate: i.assertNodeType("Expression")},
        body: {validate: i.assertNodeType("Statement")}
      },
      aliases: ["Statement", "BlockParent", "Loop", "While", "Scopable"]
    }), j["default"]("EmptyStatement", {aliases: ["Statement"]}), j["default"]("ExpressionStatement", {
      visitor: ["expression"],
      fields: {expression: {validate: i.assertNodeType("Expression")}},
      aliases: ["Statement", "ExpressionWrapper"]
    }), j["default"]("File", {
      builder: ["program", "comments", "tokens"],
      visitor: ["program"],
      fields: {program: {validate: i.assertNodeType("Program")}}
    }), j["default"]("ForInStatement", {
      visitor: ["left", "right", "body"],
      aliases: ["Scopable", "Statement", "For", "BlockParent", "Loop", "ForXStatement"],
      fields: {
        left: {validate: i.assertNodeType("VariableDeclaration", "LVal")},
        right: {validate: i.assertNodeType("Expression")},
        body: {validate: i.assertNodeType("Statement")}
      }
    }), j["default"]("ForStatement", {
      visitor: ["init", "test", "update", "body"],
      aliases: ["Scopable", "Statement", "For", "BlockParent", "Loop"],
      fields: {
        init: {
          validate: i.assertNodeType("VariableDeclaration", "Expression"),
          optional: !0
        },
        test: {
          validate: i.assertNodeType("Expression"),
          optional: !0
        },
        update: {
          validate: i.assertNodeType("Expression"),
          optional: !0
        },
        body: {validate: i.assertNodeType("Statement")}
      }
    }), j["default"]("FunctionDeclaration", {
      builder: ["id", "params", "body", "generator", "async"],
      visitor: ["id", "params", "body", "returnType", "typeParameters"],
      fields: {
        id: {validate: i.assertNodeType("Identifier")},
        params: {validate: i.chain(i.assertValueType("array"), i.assertEach(i.assertNodeType("LVal")))},
        body: {validate: i.assertNodeType("BlockStatement")},
        generator: {
          "default": !1,
          validate: i.assertValueType("boolean")
        },
        async: {
          "default": !1,
          validate: i.assertValueType("boolean")
        }
      },
      aliases: ["Scopable", "Function", "BlockParent", "FunctionParent", "Statement", "Pureish", "Declaration"]
    }), j["default"]("FunctionExpression", {
      inherits: "FunctionDeclaration",
      aliases: ["Scopable", "Function", "BlockParent", "FunctionParent", "Expression", "Pureish"],
      fields: {
        id: {
          validate: i.assertNodeType("Identifier"),
          optional: !0
        },
        params: {validate: i.chain(i.assertValueType("array"), i.assertEach(i.assertNodeType("LVal")))},
        body: {validate: i.assertNodeType("BlockStatement")},
        generator: {
          "default": !1,
          validate: i.assertValueType("boolean")
        },
        async: {
          "default": !1,
          validate: i.assertValueType("boolean")
        }
      }
    }), j["default"]("Identifier", {
      builder: ["name"],
      visitor: ["typeAnnotation"],
      aliases: ["Expression", "LVal"],
      fields: {name: {validate: function(a, b, c) {
            !g.isValidIdentifier(c);
          }}}
    }), j["default"]("IfStatement", {
      visitor: ["test", "consequent", "alternate"],
      aliases: ["Statement", "Conditional"],
      fields: {
        test: {validate: i.assertNodeType("Expression")},
        consequent: {validate: i.assertNodeType("Statement")},
        alternate: {
          optional: !0,
          validate: i.assertNodeType("Statement")
        }
      }
    }), j["default"]("LabeledStatement", {
      visitor: ["label", "body"],
      aliases: ["Statement"],
      fields: {
        label: {validate: i.assertNodeType("Identifier")},
        body: {validate: i.assertNodeType("Statement")}
      }
    }), j["default"]("StringLiteral", {
      builder: ["value"],
      fields: {value: {validate: i.assertValueType("string")}},
      aliases: ["Expression", "Pureish", "Literal", "Immutable"]
    }), j["default"]("NumericLiteral", {
      builder: ["value"],
      deprecatedAlias: "NumberLiteral",
      fields: {value: {validate: i.assertValueType("number")}},
      aliases: ["Expression", "Pureish", "Literal", "Immutable"]
    }), j["default"]("NullLiteral", {aliases: ["Expression", "Pureish", "Literal", "Immutable"]}), j["default"]("BooleanLiteral", {
      builder: ["value"],
      fields: {value: {validate: i.assertValueType("boolean")}},
      aliases: ["Expression", "Pureish", "Literal", "Immutable"]
    }), j["default"]("RegExpLiteral", {
      builder: ["pattern", "flags"],
      deprecatedAlias: "RegexLiteral",
      aliases: ["Expression", "Literal"],
      fields: {
        pattern: {validate: i.assertValueType("string")},
        flags: {
          validate: i.assertValueType("string"),
          "default": ""
        }
      }
    }), j["default"]("LogicalExpression", {
      builder: ["operator", "left", "right"],
      visitor: ["left", "right"],
      aliases: ["Binary", "Expression"],
      fields: {
        operator: {validate: i.assertOneOf.apply(void 0, h.LOGICAL_OPERATORS)},
        left: {validate: i.assertNodeType("Expression")},
        right: {validate: i.assertNodeType("Expression")}
      }
    }), j["default"]("MemberExpression", {
      builder: ["object", "property", "computed"],
      visitor: ["object", "property"],
      aliases: ["Expression", "LVal"],
      fields: {
        object: {validate: i.assertNodeType("Expression")},
        property: {validate: function(a, b, c) {
            var d = a.computed ? "Expression" : "Identifier";
            i.assertNodeType(d)(a, b, c);
          }},
        computed: {"default": !1}
      }
    }), j["default"]("NewExpression", {
      visitor: ["callee", "arguments"],
      aliases: ["Expression"],
      fields: {
        callee: {validate: i.assertNodeType("Expression")},
        arguments: {validate: i.chain(i.assertValueType("array"), i.assertEach(i.assertNodeType("Expression", "SpreadElement")))}
      }
    }), j["default"]("Program", {
      visitor: ["directives", "body"],
      builder: ["body", "directives"],
      fields: {
        directives: {
          validate: i.chain(i.assertValueType("array"), i.assertEach(i.assertNodeType("Directive"))),
          "default": []
        },
        body: {validate: i.chain(i.assertValueType("array"), i.assertEach(i.assertNodeType("Statement")))}
      },
      aliases: ["Scopable", "BlockParent", "Block", "FunctionParent"]
    }), j["default"]("ObjectExpression", {
      visitor: ["properties"],
      aliases: ["Expression"],
      fields: {properties: {validate: i.chain(i.assertValueType("array"), i.assertEach(i.assertNodeType("ObjectMethod", "ObjectProperty", "SpreadProperty")))}}
    }), j["default"]("ObjectMethod", {
      builder: ["kind", "key", "params", "body", "computed"],
      fields: {
        kind: {
          validate: i.chain(i.assertValueType("string"), i.assertOneOf("method", "get", "set")),
          "default": "method"
        },
        computed: {
          validate: i.assertValueType("boolean"),
          "default": !1
        },
        key: {validate: function(a, b, c) {
            var d = a.computed ? ["Expression"] : ["Identifier", "StringLiteral", "NumericLiteral"];
            i.assertNodeType.apply(void 0, d)(a, b, c);
          }},
        decorators: {validate: i.chain(i.assertValueType("array"), i.assertEach(i.assertNodeType("Decorator")))},
        body: {validate: i.assertNodeType("BlockStatement")},
        generator: {
          "default": !1,
          validate: i.assertValueType("boolean")
        },
        async: {
          "default": !1,
          validate: i.assertValueType("boolean")
        }
      },
      visitor: ["key", "params", "body", "decorators", "returnType", "typeParameters"],
      aliases: ["UserWhitespacable", "Function", "Scopable", "BlockParent", "FunctionParent", "Method", "ObjectMember"]
    }), j["default"]("ObjectProperty", {
      builder: ["key", "value", "computed", "shorthand", "decorators"],
      fields: {
        computed: {
          validate: i.assertValueType("boolean"),
          "default": !1
        },
        key: {validate: function(a, b, c) {
            var d = a.computed ? ["Expression"] : ["Identifier", "StringLiteral", "NumericLiteral"];
            i.assertNodeType.apply(void 0, d)(a, b, c);
          }},
        value: {validate: i.assertNodeType("Expression")},
        shorthand: {
          validate: i.assertValueType("boolean"),
          "default": !1
        },
        decorators: {
          validate: i.chain(i.assertValueType("array"), i.assertEach(i.assertNodeType("Decorator"))),
          optional: !0
        }
      },
      visitor: ["key", "value", "decorators"],
      aliases: ["UserWhitespacable", "Property", "ObjectMember"]
    }), j["default"]("RestElement", {
      visitor: ["argument", "typeAnnotation"],
      aliases: ["LVal"],
      fields: {argument: {validate: i.assertNodeType("LVal")}}
    }), j["default"]("ReturnStatement", {
      visitor: ["argument"],
      aliases: ["Statement", "Terminatorless", "CompletionStatement"],
      fields: {argument: {
          validate: i.assertNodeType("Expression"),
          optional: !0
        }}
    }), j["default"]("SequenceExpression", {
      visitor: ["expressions"],
      fields: {expressions: {validate: i.chain(i.assertValueType("array"), i.assertEach(i.assertNodeType("Expression")))}},
      aliases: ["Expression"]
    }), j["default"]("SwitchCase", {
      visitor: ["test", "consequent"],
      fields: {
        test: {
          validate: i.assertNodeType("Expression"),
          optional: !0
        },
        consequent: {validate: i.chain(i.assertValueType("array"), i.assertEach(i.assertNodeType("Statement")))}
      }
    }), j["default"]("SwitchStatement", {
      visitor: ["discriminant", "cases"],
      aliases: ["Statement", "BlockParent", "Scopable"],
      fields: {
        discriminant: {validate: i.assertNodeType("Expression")},
        cases: {validate: i.chain(i.assertValueType("array"), i.assertEach(i.assertNodeType("SwitchCase")))}
      }
    }), j["default"]("ThisExpression", {aliases: ["Expression"]}), j["default"]("ThrowStatement", {
      visitor: ["argument"],
      aliases: ["Statement", "Terminatorless", "CompletionStatement"],
      fields: {argument: {validate: i.assertNodeType("Expression")}}
    }), j["default"]("TryStatement", {
      visitor: ["block", "handler", "finalizer"],
      aliases: ["Statement"],
      fields: {
        body: {validate: i.assertNodeType("BlockStatement")},
        handler: {
          optional: !0,
          handler: i.assertNodeType("BlockStatement")
        },
        finalizer: {
          optional: !0,
          validate: i.assertNodeType("BlockStatement")
        }
      }
    }), j["default"]("UnaryExpression", {
      builder: ["operator", "argument", "prefix"],
      fields: {
        prefix: {"default": !0},
        argument: {validate: i.assertNodeType("Expression")},
        operator: {validate: i.assertOneOf.apply(void 0, h.UNARY_OPERATORS)}
      },
      visitor: ["argument"],
      aliases: ["UnaryLike", "Expression"]
    }), j["default"]("UpdateExpression", {
      builder: ["operator", "argument", "prefix"],
      fields: {
        prefix: {"default": !1},
        argument: {validate: i.assertNodeType("Expression")},
        operator: {validate: i.assertOneOf.apply(void 0, h.UPDATE_OPERATORS)}
      },
      visitor: ["argument"],
      aliases: ["Expression"]
    }), j["default"]("VariableDeclaration", {
      builder: ["kind", "declarations"],
      visitor: ["declarations"],
      aliases: ["Statement", "Declaration"],
      fields: {
        kind: {validate: i.chain(i.assertValueType("string"), i.assertOneOf("var", "let", "const"))},
        declarations: {validate: i.chain(i.assertValueType("array"), i.assertEach(i.assertNodeType("VariableDeclarator")))}
      }
    }), j["default"]("VariableDeclarator", {
      visitor: ["id", "init"],
      fields: {
        id: {validate: i.assertNodeType("LVal")},
        init: {
          optional: !0,
          validate: i.assertNodeType("Expression")
        }
      }
    }), j["default"]("WhileStatement", {
      visitor: ["test", "body"],
      aliases: ["Statement", "BlockParent", "Loop", "While", "Scopable"],
      fields: {
        test: {validate: i.assertNodeType("Expression")},
        body: {validate: i.assertNodeType("BlockStatement", "Statement")}
      }
    }), j["default"]("WithStatement", {
      visitor: ["object", "body"],
      aliases: ["Statement"],
      fields: {
        object: {object: i.assertNodeType("Expression")},
        body: {validate: i.assertNodeType("BlockStatement", "Statement")}
      }
    }), c.exports;
  }), a.registerDynamic("137", ["a", "136", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("a")["default"]),
        e = a("136"),
        f = d(e);
    return f["default"]("AssignmentPattern", {
      visitor: ["left", "right"],
      aliases: ["Pattern", "LVal"],
      fields: {
        left: {validate: e.assertNodeType("Identifier")},
        right: {validate: e.assertNodeType("Expression")}
      }
    }), f["default"]("ArrayPattern", {
      visitor: ["elements", "typeAnnotation"],
      aliases: ["Pattern", "LVal"],
      fields: {elements: {validate: e.chain(e.assertValueType("array"), e.assertEach(e.assertNodeType("Expression")))}}
    }), f["default"]("ArrowFunctionExpression", {
      builder: ["params", "body", "async"],
      visitor: ["params", "body", "returnType"],
      aliases: ["Scopable", "Function", "BlockParent", "FunctionParent", "Expression", "Pureish"],
      fields: {
        params: {validate: e.chain(e.assertValueType("array"), e.assertEach(e.assertNodeType("LVal")))},
        body: {validate: e.assertNodeType("BlockStatement", "Expression")},
        async: {
          validate: e.assertValueType("boolean"),
          "default": !1
        }
      }
    }), f["default"]("ClassBody", {
      visitor: ["body"],
      fields: {body: {validate: e.chain(e.assertValueType("array"), e.assertEach(e.assertNodeType("ClassMethod", "ClassProperty")))}}
    }), f["default"]("ClassDeclaration", {
      builder: ["id", "superClass", "body", "decorators"],
      visitor: ["id", "body", "superClass", "mixins", "typeParameters", "superTypeParameters", "implements", "decorators"],
      aliases: ["Scopable", "Class", "Statement", "Declaration", "Pureish"],
      fields: {
        id: {validate: e.assertNodeType("Identifier")},
        body: {validate: e.assertNodeType("ClassBody")},
        superClass: {
          optional: !0,
          validate: e.assertNodeType("Expression")
        },
        decorators: {validate: e.chain(e.assertValueType("array"), e.assertEach(e.assertNodeType("Decorator")))}
      }
    }), f["default"]("ClassExpression", {
      inherits: "ClassDeclaration",
      aliases: ["Scopable", "Class", "Expression", "Pureish"],
      fields: {
        id: {
          optional: !0,
          validate: e.assertNodeType("Identifier")
        },
        body: {validate: e.assertNodeType("ClassBody")},
        superClass: {
          optional: !0,
          validate: e.assertNodeType("Expression")
        },
        decorators: {validate: e.chain(e.assertValueType("array"), e.assertEach(e.assertNodeType("Decorator")))}
      }
    }), f["default"]("ExportAllDeclaration", {
      visitor: ["source"],
      aliases: ["Statement", "Declaration", "ModuleDeclaration", "ExportDeclaration"],
      fields: {source: {validate: e.assertNodeType("StringLiteral")}}
    }), f["default"]("ExportDefaultDeclaration", {
      visitor: ["declaration"],
      aliases: ["Statement", "Declaration", "ModuleDeclaration", "ExportDeclaration"],
      fields: {declaration: {validate: e.assertNodeType("FunctionDeclaration", "ClassDeclaration", "Expression")}}
    }), f["default"]("ExportNamedDeclaration", {
      visitor: ["declaration", "specifiers", "source"],
      aliases: ["Statement", "Declaration", "ModuleDeclaration", "ExportDeclaration"],
      fields: {
        declaration: {
          validate: e.assertNodeType("Declaration"),
          optional: !0
        },
        specifiers: {validate: e.chain(e.assertValueType("array"), e.assertEach(e.assertNodeType("ExportSpecifier")))},
        source: {
          validate: e.assertNodeType("StringLiteral"),
          optional: !0
        }
      }
    }), f["default"]("ExportSpecifier", {
      visitor: ["local", "exported"],
      aliases: ["ModuleSpecifier"],
      fields: {
        local: {validate: e.assertNodeType("Identifier")},
        exported: {validate: e.assertNodeType("Identifier")}
      }
    }), f["default"]("ForOfStatement", {
      visitor: ["left", "right", "body"],
      aliases: ["Scopable", "Statement", "For", "BlockParent", "Loop", "ForXStatement"],
      fields: {
        left: {validate: e.assertNodeType("VariableDeclaration", "LVal")},
        right: {validate: e.assertNodeType("Expression")},
        body: {validate: e.assertNodeType("Statement")}
      }
    }), f["default"]("ImportDeclaration", {
      visitor: ["specifiers", "source"],
      aliases: ["Statement", "Declaration", "ModuleDeclaration"],
      fields: {
        specifiers: {validate: e.chain(e.assertValueType("array"), e.assertEach(e.assertNodeType("ImportSpecifier", "ImportDefaultSpecifier", "ImportNamespaceSpecifier")))},
        source: {validate: e.assertNodeType("StringLiteral")}
      }
    }), f["default"]("ImportDefaultSpecifier", {
      visitor: ["local"],
      aliases: ["ModuleSpecifier"],
      fields: {local: {validate: e.assertNodeType("Identifier")}}
    }), f["default"]("ImportNamespaceSpecifier", {
      visitor: ["local"],
      aliases: ["ModuleSpecifier"],
      fields: {local: {validate: e.assertNodeType("Identifier")}}
    }), f["default"]("ImportSpecifier", {
      visitor: ["local", "imported"],
      aliases: ["ModuleSpecifier"],
      fields: {
        local: {validate: e.assertNodeType("Identifier")},
        imported: {validate: e.assertNodeType("Identifier")}
      }
    }), f["default"]("MetaProperty", {
      visitor: ["meta", "property"],
      aliases: ["Expression"],
      fields: {
        meta: {validate: e.assertValueType("string")},
        property: {validate: e.assertValueType("string")}
      }
    }), f["default"]("ClassMethod", {
      aliases: ["Function", "Scopable", "BlockParent", "FunctionParent", "Method"],
      builder: ["kind", "key", "params", "body", "computed", "static"],
      visitor: ["key", "params", "body", "decorators", "returnType", "typeParameters"],
      fields: {
        kind: {
          validate: e.chain(e.assertValueType("string"), e.assertOneOf("get", "set", "method", "constructor")),
          "default": "method"
        },
        computed: {
          "default": !1,
          validate: e.assertValueType("boolean")
        },
        "static": {
          "default": !1,
          validate: e.assertValueType("boolean")
        },
        key: {validate: function(a, b, c) {
            var d = a.computed ? ["Expression"] : ["Identifier", "StringLiteral", "NumericLiteral"];
            e.assertNodeType.apply(void 0, d)(a, b, c);
          }},
        params: {validate: e.chain(e.assertValueType("array"), e.assertEach(e.assertNodeType("LVal")))},
        body: {validate: e.assertNodeType("BlockStatement")},
        generator: {
          "default": !1,
          validate: e.assertValueType("boolean")
        },
        async: {
          "default": !1,
          validate: e.assertValueType("boolean")
        }
      }
    }), f["default"]("ObjectPattern", {
      visitor: ["properties", "typeAnnotation"],
      aliases: ["Pattern", "LVal"],
      fields: {properties: {validate: e.chain(e.assertValueType("array"), e.assertEach(e.assertNodeType("RestProperty", "Property")))}}
    }), f["default"]("SpreadElement", {
      visitor: ["argument"],
      aliases: ["UnaryLike"],
      fields: {argument: {validate: e.assertNodeType("Expression")}}
    }), f["default"]("Super", {aliases: ["Expression"]}), f["default"]("TaggedTemplateExpression", {
      visitor: ["tag", "quasi"],
      aliases: ["Expression"],
      fields: {
        tag: {validate: e.assertNodeType("Expression")},
        quasi: {validate: e.assertNodeType("TemplateLiteral")}
      }
    }), f["default"]("TemplateElement", {
      builder: ["value", "tail"],
      fields: {
        value: {},
        tail: {
          validate: e.assertValueType("boolean"),
          "default": !1
        }
      }
    }), f["default"]("TemplateLiteral", {
      visitor: ["quasis", "expressions"],
      aliases: ["Expression", "Literal"],
      fields: {
        quasis: {validate: e.chain(e.assertValueType("array"), e.assertEach(e.assertNodeType("TemplateElement")))},
        expressions: {validate: e.chain(e.assertValueType("array"), e.assertEach(e.assertNodeType("Expression")))}
      }
    }), f["default"]("YieldExpression", {
      builder: ["argument", "delegate"],
      visitor: ["argument"],
      aliases: ["Expression", "Terminatorless"],
      fields: {
        delegate: {
          validate: e.assertValueType("boolean"),
          "default": !1
        },
        argument: {
          optional: !0,
          validate: e.assertNodeType("Expression")
        }
      }
    }), c.exports;
  }), a.registerDynamic("138", ["a", "136", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("a")["default"]),
        e = a("136"),
        f = d(e);
    return f["default"]("AnyTypeAnnotation", {
      aliases: ["Flow", "FlowBaseAnnotation"],
      fields: {}
    }), f["default"]("ArrayTypeAnnotation", {
      visitor: ["elementType"],
      aliases: ["Flow"],
      fields: {}
    }), f["default"]("BooleanTypeAnnotation", {
      aliases: ["Flow", "FlowBaseAnnotation"],
      fields: {}
    }), f["default"]("BooleanLiteralTypeAnnotation", {
      aliases: ["Flow"],
      fields: {}
    }), f["default"]("NullLiteralTypeAnnotation", {
      aliases: ["Flow", "FlowBaseAnnotation"],
      fields: {}
    }), f["default"]("ClassImplements", {
      visitor: ["id", "typeParameters"],
      aliases: ["Flow"],
      fields: {}
    }), f["default"]("ClassProperty", {
      visitor: ["key", "value", "typeAnnotation", "decorators"],
      aliases: ["Flow", "Property"],
      fields: {}
    }), f["default"]("DeclareClass", {
      visitor: ["id", "typeParameters", "extends", "body"],
      aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
      fields: {}
    }), f["default"]("DeclareFunction", {
      visitor: ["id"],
      aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
      fields: {}
    }), f["default"]("DeclareInterface", {
      visitor: ["id", "typeParameters", "extends", "body"],
      aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
      fields: {}
    }), f["default"]("DeclareModule", {
      visitor: ["id", "body"],
      aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
      fields: {}
    }), f["default"]("DeclareTypeAlias", {
      visitor: ["id", "typeParameters", "right"],
      aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
      fields: {}
    }), f["default"]("DeclareVariable", {
      visitor: ["id"],
      aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
      fields: {}
    }), f["default"]("ExistentialTypeParam", {aliases: ["Flow"]}), f["default"]("FunctionTypeAnnotation", {
      visitor: ["typeParameters", "params", "rest", "returnType"],
      aliases: ["Flow"],
      fields: {}
    }), f["default"]("FunctionTypeParam", {
      visitor: ["name", "typeAnnotation"],
      aliases: ["Flow"],
      fields: {}
    }), f["default"]("GenericTypeAnnotation", {
      visitor: ["id", "typeParameters"],
      aliases: ["Flow"],
      fields: {}
    }), f["default"]("InterfaceExtends", {
      visitor: ["id", "typeParameters"],
      aliases: ["Flow"],
      fields: {}
    }), f["default"]("InterfaceDeclaration", {
      visitor: ["id", "typeParameters", "extends", "body"],
      aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
      fields: {}
    }), f["default"]("IntersectionTypeAnnotation", {
      visitor: ["types"],
      aliases: ["Flow"],
      fields: {}
    }), f["default"]("MixedTypeAnnotation", {aliases: ["Flow", "FlowBaseAnnotation"]}), f["default"]("NullableTypeAnnotation", {
      visitor: ["typeAnnotation"],
      aliases: ["Flow"],
      fields: {}
    }), f["default"]("NumericLiteralTypeAnnotation", {
      aliases: ["Flow"],
      fields: {}
    }), f["default"]("NumberTypeAnnotation", {
      aliases: ["Flow", "FlowBaseAnnotation"],
      fields: {}
    }), f["default"]("StringLiteralTypeAnnotation", {
      aliases: ["Flow"],
      fields: {}
    }), f["default"]("StringTypeAnnotation", {
      aliases: ["Flow", "FlowBaseAnnotation"],
      fields: {}
    }), f["default"]("ThisTypeAnnotation", {
      aliases: ["Flow", "FlowBaseAnnotation"],
      fields: {}
    }), f["default"]("TupleTypeAnnotation", {
      visitor: ["types"],
      aliases: ["Flow"],
      fields: {}
    }), f["default"]("TypeofTypeAnnotation", {
      visitor: ["argument"],
      aliases: ["Flow"],
      fields: {}
    }), f["default"]("TypeAlias", {
      visitor: ["id", "typeParameters", "right"],
      aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
      fields: {}
    }), f["default"]("TypeAnnotation", {
      visitor: ["typeAnnotation"],
      aliases: ["Flow"],
      fields: {}
    }), f["default"]("TypeCastExpression", {
      visitor: ["expression", "typeAnnotation"],
      aliases: ["Flow", "ExpressionWrapper", "Expression"],
      fields: {}
    }), f["default"]("TypeParameterDeclaration", {
      visitor: ["params"],
      aliases: ["Flow"],
      fields: {}
    }), f["default"]("TypeParameterInstantiation", {
      visitor: ["params"],
      aliases: ["Flow"],
      fields: {}
    }), f["default"]("ObjectTypeAnnotation", {
      visitor: ["properties", "indexers", "callProperties"],
      aliases: ["Flow"],
      fields: {}
    }), f["default"]("ObjectTypeCallProperty", {
      visitor: ["value"],
      aliases: ["Flow", "UserWhitespacable"],
      fields: {}
    }), f["default"]("ObjectTypeIndexer", {
      visitor: ["id", "key", "value"],
      aliases: ["Flow", "UserWhitespacable"],
      fields: {}
    }), f["default"]("ObjectTypeProperty", {
      visitor: ["key", "value"],
      aliases: ["Flow", "UserWhitespacable"],
      fields: {}
    }), f["default"]("QualifiedTypeIdentifier", {
      visitor: ["id", "qualification"],
      aliases: ["Flow"],
      fields: {}
    }), f["default"]("UnionTypeAnnotation", {
      visitor: ["types"],
      aliases: ["Flow"],
      fields: {}
    }), f["default"]("VoidTypeAnnotation", {
      aliases: ["Flow", "FlowBaseAnnotation"],
      fields: {}
    }), c.exports;
  }), a.registerDynamic("139", ["a", "136", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("a")["default"]),
        e = a("136"),
        f = d(e);
    return f["default"]("JSXAttribute", {
      visitor: ["name", "value"],
      aliases: ["JSX", "Immutable"],
      fields: {
        name: {validate: e.assertNodeType("JSXIdentifier", "JSXNamespacedName")},
        value: {
          optional: !0,
          validate: e.assertNodeType("JSXElement", "StringLiteral", "JSXExpressionContainer")
        }
      }
    }), f["default"]("JSXClosingElement", {
      visitor: ["name"],
      aliases: ["JSX", "Immutable"],
      fields: {name: {validate: e.assertNodeType("JSXIdentifier", "JSXMemberExpression")}}
    }), f["default"]("JSXElement", {
      builder: ["openingElement", "closingElement", "children", "selfClosing"],
      visitor: ["openingElement", "children", "closingElement"],
      aliases: ["JSX", "Immutable", "Expression"],
      fields: {
        openingElement: {validate: e.assertNodeType("JSXOpeningElement")},
        closingElement: {
          optional: !0,
          validate: e.assertNodeType("JSXClosingElement")
        },
        children: {validate: e.chain(e.assertValueType("array"), e.assertEach(e.assertNodeType("JSXText", "JSXExpressionContainer", "JSXElement")))}
      }
    }), f["default"]("JSXEmptyExpression", {aliases: ["JSX", "Expression"]}), f["default"]("JSXExpressionContainer", {
      visitor: ["expression"],
      aliases: ["JSX", "Immutable"],
      fields: {expression: {validate: e.assertNodeType("Expression")}}
    }), f["default"]("JSXIdentifier", {
      builder: ["name"],
      aliases: ["JSX", "Expression"],
      fields: {name: {validate: e.assertValueType("string")}}
    }), f["default"]("JSXMemberExpression", {
      visitor: ["object", "property"],
      aliases: ["JSX", "Expression"],
      fields: {
        object: {validate: e.assertNodeType("JSXMemberExpression", "JSXIdentifier")},
        property: {validate: e.assertNodeType("JSXIdentifier")}
      }
    }), f["default"]("JSXNamespacedName", {
      visitor: ["namespace", "name"],
      aliases: ["JSX"],
      fields: {
        namespace: {validate: e.assertNodeType("JSXIdentifier")},
        name: {validate: e.assertNodeType("JSXIdentifier")}
      }
    }), f["default"]("JSXOpeningElement", {
      builder: ["name", "attributes", "selfClosing"],
      visitor: ["name", "attributes"],
      aliases: ["JSX", "Immutable"],
      fields: {
        name: {validate: e.assertNodeType("JSXIdentifier", "JSXMemberExpression")},
        selfClosing: {
          "default": !1,
          validate: e.assertValueType("boolean")
        },
        attributes: {validate: e.chain(e.assertValueType("array"), e.assertEach(e.assertNodeType("JSXAttribute", "JSXSpreadAttribute")))}
      }
    }), f["default"]("JSXSpreadAttribute", {
      visitor: ["argument"],
      aliases: ["JSX"],
      fields: {argument: {validate: e.assertNodeType("Expression")}}
    }), f["default"]("JSXText", {
      aliases: ["JSX"],
      builder: ["value"],
      fields: {value: {validate: e.assertValueType("string")}}
    }), c.exports;
  }), a.registerDynamic("13a", ["a", "136", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("a")["default"]),
        e = a("136"),
        f = d(e);
    return f["default"]("Noop", {visitor: []}), f["default"]("ParenthesizedExpression", {
      visitor: ["expression"],
      aliases: ["Expression", "ExpressionWrapper"],
      fields: {expression: {validate: e.assertNodeType("Expression")}}
    }), c.exports;
  }), a.registerDynamic("13b", ["a", "136", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("a")["default"]),
        e = a("136"),
        f = d(e);
    return f["default"]("AwaitExpression", {
      builder: ["argument"],
      visitor: ["argument"],
      aliases: ["Expression", "Terminatorless"],
      fields: {argument: {validate: e.assertNodeType("Expression")}}
    }), f["default"]("BindExpression", {
      visitor: ["object", "callee"],
      aliases: ["Expression"],
      fields: {}
    }), f["default"]("Decorator", {
      visitor: ["expression"],
      fields: {expression: {validate: e.assertNodeType("Expression")}}
    }), f["default"]("DoExpression", {
      visitor: ["body"],
      aliases: ["Expression"],
      fields: {body: {validate: e.assertNodeType("BlockStatement")}}
    }), f["default"]("ExportDefaultSpecifier", {
      visitor: ["exported"],
      aliases: ["ModuleSpecifier"],
      fields: {exported: {validate: e.assertNodeType("Identifier")}}
    }), f["default"]("ExportNamespaceSpecifier", {
      visitor: ["exported"],
      aliases: ["ModuleSpecifier"],
      fields: {exported: {validate: e.assertNodeType("Identifier")}}
    }), f["default"]("RestProperty", {
      visitor: ["argument"],
      aliases: ["UnaryLike"],
      fields: {argument: {validate: e.assertNodeType("LVal")}}
    }), f["default"]("SpreadProperty", {
      visitor: ["argument"],
      aliases: ["UnaryLike"],
      fields: {argument: {validate: e.assertNodeType("Expression")}}
    }), c.exports;
  }), a.registerDynamic("13c", ["136", "134", "137", "138", "139", "13a", "13b", "3"], !0, function(a, b, c) {
    "use strict";
    a("3");
    return a("136"), a("134"), a("137"), a("138"), a("139"), a("13a"), a("13b"), c.exports;
  }), a.registerDynamic("136", ["c", "4", "5", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return Array.isArray(a) ? "array" : null === a ? "null" : void 0 === a ? "undefined" : typeof a;
    }
    function e(a) {
      function b(b, c, d) {
        if (Array.isArray(d))
          for (var e = 0; e < d.length; e++)
            a(b, c + "[" + e + "]", d[e]);
      }
      return b.each = a, b;
    }
    function f() {
      function a(a, b, d) {
        if (c.indexOf(d) < 0)
          throw new TypeError("Property " + b + " expected value to be one of " + JSON.stringify(c) + " but got " + JSON.stringify(d));
      }
      for (var b = arguments.length,
          c = Array(b),
          d = 0; b > d; d++)
        c[d] = arguments[d];
      return a.oneOf = c, a;
    }
    function g() {
      function a(a, b, d) {
        for (var e = !1,
            f = c,
            g = Array.isArray(f),
            h = 0,
            f = g ? f : l(f); ; ) {
          var i;
          if (g) {
            if (h >= f.length)
              break;
            i = f[h++];
          } else {
            if (h = f.next(), h.done)
              break;
            i = h.value;
          }
          var j = i;
          if (o.is(j, d)) {
            e = !0;
            break;
          }
        }
        if (!e)
          throw new TypeError("Property " + b + " of " + a.type + " expected node to be of a type " + JSON.stringify(c) + " but instead got " + JSON.stringify(d && d.type));
      }
      for (var b = arguments.length,
          c = Array(b),
          d = 0; b > d; d++)
        c[d] = arguments[d];
      return a.oneOfNodeTypes = c, a;
    }
    function h() {
      function a(a, b, e) {
        for (var f = !1,
            g = c,
            h = Array.isArray(g),
            i = 0,
            g = h ? g : l(g); ; ) {
          var j;
          if (h) {
            if (i >= g.length)
              break;
            j = g[i++];
          } else {
            if (i = g.next(), i.done)
              break;
            j = i.value;
          }
          var k = j;
          if (d(e) === k || o.is(k, e)) {
            f = !0;
            break;
          }
        }
        if (!f)
          throw new TypeError("Property " + b + " of " + a.type + " expected node to be of a type " + JSON.stringify(c) + " but instead got " + JSON.stringify(e && e.type));
      }
      for (var b = arguments.length,
          c = Array(b),
          e = 0; b > e; e++)
        c[e] = arguments[e];
      return a.oneOfNodeOrValueTypes = c, a;
    }
    function i(a) {
      function b(b, c, e) {
        var f = d(e) === a;
        if (!f)
          throw new TypeError("Property " + c + " expected type of " + a + " but got " + d(e));
      }
      return b.type = a, b;
    }
    function j() {
      function a() {
        for (var a = c,
            b = Array.isArray(a),
            d = 0,
            a = b ? a : l(a); ; ) {
          var e;
          if (b) {
            if (d >= a.length)
              break;
            e = a[d++];
          } else {
            if (d = a.next(), d.done)
              break;
            e = d.value;
          }
          var f = e;
          f.apply(void 0, arguments);
        }
      }
      for (var b = arguments.length,
          c = Array(b),
          d = 0; b > d; d++)
        c[d] = arguments[d];
      return a.chainOf = c, a;
    }
    function k(a) {
      var b = arguments.length <= 1 || void 0 === arguments[1] ? {} : arguments[1],
          c = b.inherits && u[b.inherits] || {};
      b.fields = b.fields || c.fields || {}, b.visitor = b.visitor || c.visitor || [], b.aliases = b.aliases || c.aliases || [], b.builder = b.builder || c.builder || b.visitor || [], b.deprecatedAlias && (t[b.deprecatedAlias] = a);
      for (var e = b.visitor.concat(b.builder),
          f = Array.isArray(e),
          g = 0,
          e = f ? e : l(e); ; ) {
        var h;
        if (f) {
          if (g >= e.length)
            break;
          h = e[g++];
        } else {
          if (g = e.next(), g.done)
            break;
          h = g.value;
        }
        var j = h;
        b.fields[j] = b.fields[j] || {};
      }
      for (var j in b.fields) {
        var k = b.fields[j];
        void 0 === k["default"] ? k["default"] = null : k.validate || (k.validate = i(d(k["default"])));
      }
      p[a] = b.visitor, s[a] = b.builder, r[a] = b.fields, q[a] = b.aliases, u[a] = b;
    }
    var l = (a("3"), a("c")["default"]),
        m = a("4")["default"];
    b.__esModule = !0, b.assertEach = e, b.assertOneOf = f, b.assertNodeType = g, b.assertNodeOrValueType = h, b.assertValueType = i, b.chain = j, b["default"] = k;
    var n = a("5"),
        o = m(n),
        p = {};
    b.VISITOR_KEYS = p;
    var q = {};
    b.ALIAS_KEYS = q;
    var r = {};
    b.NODE_FIELDS = r;
    var s = {};
    b.BUILDER_KEYS = s;
    var t = {};
    b.DEPRECATED_KEYS = t;
    var u = {};
    return c.exports;
  }), a.registerDynamic("13d", ["4", "5", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return !!a && /^[a-z]|\-/.test(a);
    }
    function e(a, b) {
      for (var c = a.value.split(/\r\n|\n|\r/),
          d = 0,
          e = 0; e < c.length; e++)
        c[e].match(/[^ \t]/) && (d = e);
      for (var f = "",
          e = 0; e < c.length; e++) {
        var g = c[e],
            h = 0 === e,
            j = e === c.length - 1,
            k = e === d,
            l = g.replace(/\t/g, " ");
        h || (l = l.replace(/^[ ]+/, "")), j || (l = l.replace(/[ ]+$/, "")), l && (k || (l += " "), f += l);
      }
      f && b.push(i.stringLiteral(f));
    }
    function f(a) {
      for (var b = [],
          c = 0; c < a.children.length; c++) {
        var d = a.children[c];
        i.isJSXText(d) ? e(d, b) : (i.isJSXExpressionContainer(d) && (d = d.expression), i.isJSXEmptyExpression(d) || b.push(d));
      }
      return b;
    }
    var g = (a("3"), a("4")["default"]);
    b.__esModule = !0, b.isCompatTag = d, b.buildChildren = f;
    var h = a("5"),
        i = g(h),
        j = i.buildMatchMemberExpression("React.Component");
    return b.isReactComponent = j, c.exports;
  }), a.registerDynamic("13e", ["79", "4", "5", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a, b, c) {
      for (var d = [].concat(a),
          e = f(null); d.length; ) {
        var g = d.shift();
        if (g) {
          var h = i.getBindingIdentifiers.keys[g.type];
          if (i.isIdentifier(g))
            if (b) {
              var j = e[g.name] = e[g.name] || [];
              j.push(g);
            } else
              e[g.name] = g;
          else if (i.isExportDeclaration(g))
            i.isDeclaration(a.declaration) && d.push(a.declaration);
          else {
            if (c) {
              if (i.isFunctionDeclaration(g)) {
                d.push(g.id);
                continue;
              }
              if (i.isFunctionExpression(g))
                continue;
            }
            if (h)
              for (var k = 0; k < h.length; k++) {
                var l = h[k];
                g[l] && (d = d.concat(g[l]));
              }
          }
        }
      }
      return e;
    }
    function e(a, b) {
      return d(a, b, !0);
    }
    var f = (a("3"), a("79")["default"]),
        g = a("4")["default"];
    b.__esModule = !0, b.getBindingIdentifiers = d, b.getOuterBindingIdentifiers = e;
    var h = a("5"),
        i = g(h);
    return d.keys = {
      DeclareClass: ["id"],
      DeclareFunction: ["id"],
      DeclareModule: ["id"],
      DeclareVariable: ["id"],
      InterfaceDeclaration: ["id"],
      TypeAlias: ["id"],
      CatchClause: ["param"],
      LabeledStatement: ["label"],
      UnaryExpression: ["argument"],
      AssignmentExpression: ["left"],
      ImportSpecifier: ["local"],
      ImportNamespaceSpecifier: ["local"],
      ImportDefaultSpecifier: ["local"],
      ImportDeclaration: ["specifiers"],
      ExportSpecifier: ["exported"],
      ExportNamespaceSpecifier: ["exported"],
      ExportDefaultSpecifier: ["exported"],
      FunctionDeclaration: ["id", "params"],
      FunctionExpression: ["id", "params"],
      ClassDeclaration: ["id"],
      ClassExpression: ["id"],
      RestElement: ["argument"],
      UpdateExpression: ["argument"],
      SpreadProperty: ["argument"],
      ObjectProperty: ["value"],
      AssignmentPattern: ["left"],
      ArrayPattern: ["elements"],
      ObjectPattern: ["properties"],
      VariableDeclaration: ["declarations"],
      VariableDeclarator: ["id"]
    }, c.exports;
  }), a.registerDynamic("13f", ["140", "51", "3"], !0, function(a, b, c) {
    a("3");
    return a("140"), c.exports = a("51").Symbol["for"], c.exports;
  }), a.registerDynamic("141", ["13f", "3"], !0, function(a, b, c) {
    a("3");
    return c.exports = {
      "default": a("13f"),
      __esModule: !0
    }, c.exports;
  }), a.registerDynamic("135", ["141", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("141")["default"]);
    b.__esModule = !0;
    var e = ["consequent", "body", "alternate"];
    b.STATEMENT_OR_BLOCK_KEYS = e;
    var f = ["body", "expressions"];
    b.FLATTENABLE_KEYS = f;
    var g = ["left", "init"];
    b.FOR_INIT_KEYS = g;
    var h = ["leadingComments", "trailingComments", "innerComments"];
    b.COMMENT_KEYS = h;
    var i = ["||", "&&"];
    b.LOGICAL_OPERATORS = i;
    var j = ["++", "--"];
    b.UPDATE_OPERATORS = j;
    var k = [">", "<", ">=", "<="];
    b.BOOLEAN_NUMBER_BINARY_OPERATORS = k;
    var l = ["==", "===", "!=", "!=="];
    b.EQUALITY_BINARY_OPERATORS = l;
    var m = [].concat(l, ["in", "instanceof"]);
    b.COMPARISON_BINARY_OPERATORS = m;
    var n = [].concat(m, k);
    b.BOOLEAN_BINARY_OPERATORS = n;
    var o = ["-", "/", "%", "*", "**", "&", "|", ">>", ">>>", "<<", "^"];
    b.NUMBER_BINARY_OPERATORS = o;
    var p = ["+"].concat(o, n);
    b.BINARY_OPERATORS = p;
    var q = ["delete", "!"];
    b.BOOLEAN_UNARY_OPERATORS = q;
    var r = ["+", "-", "++", "--", "~"];
    b.NUMBER_UNARY_OPERATORS = r;
    var s = ["typeof"];
    b.STRING_UNARY_OPERATORS = s;
    var t = ["void"].concat(q, r, s);
    b.UNARY_OPERATORS = t;
    var u = {
      optional: ["typeAnnotation", "typeParameters", "returnType"],
      force: ["start", "loc", "end"]
    };
    b.INHERIT_KEYS = u;
    var v = d("var used to be block scoped");
    b.BLOCK_SCOPED_SYMBOL = v;
    var w = d("should not be considered a local binding");
    return b.NOT_LOCAL_BINDING = w, c.exports;
  }), a.registerDynamic("142", ["c", "a", "4", "13e", "143", "5", "135", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a, b) {
      var c = p.getBindingIdentifiers.keys[b.type];
      if (c)
        for (var d = 0; d < c.length; d++) {
          var e = c[d],
              f = b[e];
          if (Array.isArray(f)) {
            if (f.indexOf(a) >= 0)
              return !0;
          } else if (f === a)
            return !0;
        }
      return !1;
    }
    function e(a, b) {
      switch (b.type) {
        case "BindExpression":
          return b.object === a || b.callee === a;
        case "MemberExpression":
        case "JSXMemberExpression":
          return b.property === a && b.computed ? !0 : b.object === a ? !0 : !1;
        case "MetaProperty":
          return !1;
        case "ObjectProperty":
          if (b.key === a)
            return b.computed;
        case "VariableDeclarator":
          return b.id !== a;
        case "ArrowFunctionExpression":
        case "FunctionDeclaration":
        case "FunctionExpression":
          for (var c = b.params,
              d = Array.isArray(c),
              e = 0,
              c = d ? c : m(c); ; ) {
            var f;
            if (d) {
              if (e >= c.length)
                break;
              f = c[e++];
            } else {
              if (e = c.next(), e.done)
                break;
              f = e.value;
            }
            var g = f;
            if (g === a)
              return !1;
          }
          return b.id !== a;
        case "ExportSpecifier":
          return b.source ? !1 : b.local === a;
        case "ExportNamespaceSpecifier":
        case "ExportDefaultSpecifier":
          return !1;
        case "JSXAttribute":
          return b.name !== a;
        case "ClassProperty":
          return b.value === a;
        case "ImportDefaultSpecifier":
        case "ImportNamespaceSpecifier":
        case "ImportSpecifier":
          return !1;
        case "ClassDeclaration":
        case "ClassExpression":
          return b.id !== a;
        case "ClassMethod":
        case "ObjectMethod":
          return b.key === a && b.computed;
        case "LabeledStatement":
          return !1;
        case "CatchClause":
          return b.param !== a;
        case "RestElement":
          return !1;
        case "AssignmentExpression":
          return b.right === a;
        case "AssignmentPattern":
          return b.right === a;
        case "ObjectPattern":
        case "ArrayPattern":
          return !1;
      }
      return !0;
    }
    function f(a) {
      return "string" != typeof a || r["default"].keyword.isReservedWordES6(a, !0) ? !1 : r["default"].keyword.isIdentifierNameES6(a);
    }
    function g(a) {
      return t.isVariableDeclaration(a) && ("var" !== a.kind || a[u.BLOCK_SCOPED_SYMBOL]);
    }
    function h(a) {
      return t.isFunctionDeclaration(a) || t.isClassDeclaration(a) || t.isLet(a);
    }
    function i(a) {
      return t.isVariableDeclaration(a, {kind: "var"}) && !a[u.BLOCK_SCOPED_SYMBOL];
    }
    function j(a) {
      return t.isImportDefaultSpecifier(a) || t.isIdentifier(a.imported || a.exported, {name: "default"});
    }
    function k(a, b) {
      return t.isBlockStatement(a) && t.isFunction(b, {body: a}) ? !1 : t.isScopable(a);
    }
    function l(a) {
      return t.isType(a.type, "Immutable") ? !0 : t.isIdentifier(a) && "undefined" === a.name ? !0 : !1;
    }
    var m = (a("3"), a("c")["default"]),
        n = a("a")["default"],
        o = a("4")["default"];
    b.__esModule = !0, b.isBinding = d, b.isReferenced = e, b.isValidIdentifier = f, b.isLet = g, b.isBlockScoped = h, b.isVar = i, b.isSpecifierDefault = j, b.isScope = k, b.isImmutable = l;
    var p = a("13e"),
        q = a("143"),
        r = n(q),
        s = a("5"),
        t = o(s),
        u = a("135");
    return c.exports;
  }), a.registerDynamic("144", ["64", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("64"));
    return d(d.S, "Number", {MAX_SAFE_INTEGER: 9007199254740991}), c.exports;
  }), a.registerDynamic("145", ["144", "3"], !0, function(a, b, c) {
    a("3");
    return a("144"), c.exports = 9007199254740991, c.exports;
  }), a.registerDynamic("146", ["145", "3"], !0, function(a, b, c) {
    a("3");
    return c.exports = {
      "default": a("145"),
      __esModule: !0
    }, c.exports;
  }), a.registerDynamic("147", ["148", "3a", "3"], !0, function(a, b, c) {
    function d(a, b) {
      return e(a, b, f);
    }
    var e = (a("3"), a("148")),
        f = a("3a");
    return c.exports = d, c.exports;
  }), a.registerDynamic("40", ["147", "3d", "45", "3"], !0, function(a, b, c) {
    function d(a) {
      var b;
      if (!g(a) || k.call(a) != h || f(a) || !j.call(a, "constructor") && (b = a.constructor, "function" == typeof b && !(b instanceof b)))
        return !1;
      var c;
      return e(a, function(a, b) {
        c = b;
      }), void 0 === c || j.call(a, c);
    }
    var e = (a("3"), a("147")),
        f = a("3d"),
        g = a("45"),
        h = "[object Object]",
        i = Object.prototype,
        j = i.hasOwnProperty,
        k = i.toString;
    return c.exports = d, c.exports;
  }), a.registerDynamic("a8", ["45", "3"], !0, function(a, b, c) {
    function d(a) {
      return "number" == typeof a || e(a) && h.call(a) == f;
    }
    var e = (a("3"), a("45")),
        f = "[object Number]",
        g = Object.prototype,
        h = g.toString;
    return c.exports = d, c.exports;
  }), a.registerDynamic("2f", ["44", "3"], !0, function(a, b, c) {
    function d(a) {
      return e(a) && h.call(a) == f;
    }
    var e = (a("3"), a("44")),
        f = "[object RegExp]",
        g = Object.prototype,
        h = g.toString;
    return c.exports = d, c.exports;
  }), a.registerDynamic("149", ["140", "51", "3"], !0, function(a, b, c) {
    a("3");
    return a("140"), c.exports = a("51").Object.getOwnPropertySymbols, c.exports;
  }), a.registerDynamic("14a", ["149", "3"], !0, function(a, b, c) {
    a("3");
    return c.exports = {
      "default": a("149"),
      __esModule: !0
    }, c.exports;
  }), a.registerDynamic("14b", ["9", "c", "a", "4", "14c", "5", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("9")["default"]),
        e = a("c")["default"],
        f = a("a")["default"],
        g = a("4")["default"];
    b.__esModule = !0;
    var h = a("14c"),
        i = f(h),
        j = a("5"),
        k = g(j),
        l = !1,
        m = function() {
          function a(b, c, e, f) {
            d(this, a), this.parentPath = f, this.scope = b, this.state = e, this.opts = c;
          }
          return a.prototype.shouldVisit = function(a) {
            var b = this.opts;
            if (b.enter || b.exit)
              return !0;
            if (b[a.type])
              return !0;
            var c = k.VISITOR_KEYS[a.type];
            if (!c || !c.length)
              return !1;
            for (var d = c,
                f = Array.isArray(d),
                g = 0,
                d = f ? d : e(d); ; ) {
              var h;
              if (f) {
                if (g >= d.length)
                  break;
                h = d[g++];
              } else {
                if (g = d.next(), g.done)
                  break;
                h = g.value;
              }
              var i = h;
              if (a[i])
                return !0;
            }
            return !1;
          }, a.prototype.create = function(a, b, c, d) {
            return i["default"].get({
              parentPath: this.parentPath,
              parent: a,
              container: b,
              key: c,
              listKey: d
            });
          }, a.prototype.maybeQueue = function(a, b) {
            if (this.trap)
              throw new Error("Infinite cycle detected");
            this.queue && (b ? this.queue.push(a) : this.priorityQueue.push(a));
          }, a.prototype.visitMultiple = function(a, b, c) {
            if (0 === a.length)
              return !1;
            for (var d = [],
                e = 0; e < a.length; e++) {
              var f = a[e];
              f && this.shouldVisit(f) && d.push(this.create(b, a, e, c));
            }
            return this.visitQueue(d);
          }, a.prototype.visitSingle = function(a, b) {
            return this.shouldVisit(a[b]) ? this.visitQueue([this.create(a, a, b)]) : !1;
          }, a.prototype.visitQueue = function(a) {
            this.queue = a, this.priorityQueue = [];
            for (var b = [],
                c = !1,
                d = a,
                f = Array.isArray(d),
                g = 0,
                d = f ? d : e(d); ; ) {
              var h;
              if (f) {
                if (g >= d.length)
                  break;
                h = d[g++];
              } else {
                if (g = d.next(), g.done)
                  break;
                h = g.value;
              }
              var i = h;
              if (i.resync(), i.pushContext(this), null !== i.key && (l && a.length >= 1e3 && (this.trap = !0), !(b.indexOf(i.node) >= 0))) {
                if (b.push(i.node), i.visit()) {
                  c = !0;
                  break;
                }
                if (this.priorityQueue.length && (c = this.visitQueue(this.priorityQueue), this.priorityQueue = [], this.queue = a, c))
                  break;
              }
            }
            for (var j = a,
                k = Array.isArray(j),
                m = 0,
                j = k ? j : e(j); ; ) {
              var n;
              if (k) {
                if (m >= j.length)
                  break;
                n = j[m++];
              } else {
                if (m = j.next(), m.done)
                  break;
                n = m.value;
              }
              var i = n;
              i.popContext();
            }
            return this.queue = null, c;
          }, a.prototype.visit = function(a, b) {
            var c = a[b];
            return c ? Array.isArray(c) ? this.visitMultiple(c, a, b) : this.visitSingle(a, b) : !1;
          }, a;
        }();
    return b["default"] = m, c.exports = b["default"], c.exports;
  }), a.registerDynamic("93", ["5a", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("5a"));
    return c.exports = function(a) {
      return Object(d(a));
    }, c.exports;
  }), a.registerDynamic("108", ["64", "51", "65", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("64")),
        e = a("51"),
        f = a("65");
    return c.exports = function(a, b) {
      var c = (e.Object || {})[a] || Object[a],
          g = {};
      g[a] = b(c), d(d.S + d.F * f(function() {
        c(1);
      }), "Object", g);
    }, c.exports;
  }), a.registerDynamic("14d", ["93", "108", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("93"));
    return a("108")("keys", function(a) {
      return function(b) {
        return a(d(b));
      };
    }), c.exports;
  }), a.registerDynamic("14e", ["14d", "51", "3"], !0, function(a, b, c) {
    a("3");
    return a("14d"), c.exports = a("51").Object.keys, c.exports;
  }), a.registerDynamic("82", ["14e", "3"], !0, function(a, b, c) {
    a("3");
    return c.exports = {
      "default": a("14e"),
      __esModule: !0
    }, c.exports;
  }), a.registerDynamic("3c", ["3"], !0, function(a, b, c) {
    function d(a, b) {
      var c = -1,
          d = a.length;
      for (b || (b = Array(d)); ++c < d; )
        b[c] = a[c];
      return b;
    }
    a("3");
    return c.exports = d, c.exports;
  }), a.registerDynamic("43", ["3"], !0, function(a, b, c) {
    function d(a, b) {
      for (var c = -1,
          d = a.length; ++c < d && b(a[c], c, a) !== !1; )
        ;
      return a;
    }
    a("3");
    return c.exports = d, c.exports;
  }), a.registerDynamic("118", ["44", "3"], !0, function(a, b, c) {
    function d(a) {
      return e(a) ? a : Object(a);
    }
    var e = (a("3"), a("44"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("14f", ["118", "3"], !0, function(a, b, c) {
    function d(a) {
      return function(b, c, d) {
        for (var f = e(b),
            g = d(b),
            h = g.length,
            i = a ? h : -1; a ? i-- : ++i < h; ) {
          var j = g[i];
          if (c(f[j], j, f) === !1)
            break;
        }
        return b;
      };
    }
    var e = (a("3"), a("118"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("148", ["14f", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("14f")),
        e = d();
    return c.exports = e, c.exports;
  }), a.registerDynamic("119", ["148", "46", "3"], !0, function(a, b, c) {
    function d(a, b) {
      return e(a, b, f);
    }
    var e = (a("3"), a("148")),
        f = a("46");
    return c.exports = d, c.exports;
  }), a.registerDynamic("150", ["3"], !0, function(a, b, c) {
    function d(a) {
      var b = a.length,
          c = new a.constructor(b);
      return b && "string" == typeof a[0] && f.call(a, "index") && (c.index = a.index, c.input = a.input), c;
    }
    var e = (a("3"), Object.prototype),
        f = e.hasOwnProperty;
    return c.exports = d, c.exports;
  }), a.registerDynamic("151", ["3"], !0, function(a, b, c) {
    function d(a) {
      var b = new f(a.byteLength),
          c = new g(b);
      return c.set(new g(a)), b;
    }
    var e = (a("3"), this),
        f = e.ArrayBuffer,
        g = e.Uint8Array;
    return c.exports = d, c.exports;
  }), a.registerDynamic("152", ["151", "3"], !0, function(a, b, c) {
    function d(a, b, c) {
      var d = a.constructor;
      switch (b) {
        case k:
          return e(a);
        case f:
        case g:
          return new d(+a);
        case l:
        case m:
        case n:
        case o:
        case p:
        case q:
        case r:
        case s:
        case t:
          var v = a.buffer;
          return new d(c ? e(v) : v, a.byteOffset, a.length);
        case h:
        case j:
          return new d(a);
        case i:
          var w = new d(a.source, u.exec(a));
          w.lastIndex = a.lastIndex;
      }
      return w;
    }
    var e = (a("3"), a("151")),
        f = "[object Boolean]",
        g = "[object Date]",
        h = "[object Number]",
        i = "[object RegExp]",
        j = "[object String]",
        k = "[object ArrayBuffer]",
        l = "[object Float32Array]",
        m = "[object Float64Array]",
        n = "[object Int8Array]",
        o = "[object Int16Array]",
        p = "[object Int32Array]",
        q = "[object Uint8Array]",
        r = "[object Uint8ClampedArray]",
        s = "[object Uint16Array]",
        t = "[object Uint32Array]",
        u = /\w*$/;
    return c.exports = d, c.exports;
  }), a.registerDynamic("153", ["3"], !0, function(a, b, c) {
    function d(a) {
      var b = a.constructor;
      return "function" == typeof b && b instanceof b || (b = Object), new b;
    }
    a("3");
    return c.exports = d, c.exports;
  }), a.registerDynamic("f5", ["3c", "43", "154", "119", "150", "152", "153", "3e", "44", "3"], !0, function(a, b, c) {
    function d(a, b, c, o, p, q, r) {
      var t;
      if (c && (t = p ? c(a, o, p) : c(a)), void 0 !== t)
        return t;
      if (!m(a))
        return a;
      var u = l(a);
      if (u) {
        if (t = i(a), !b)
          return e(a, t);
      } else {
        var w = M.call(a),
            x = w == s;
        if (w != v && w != n && (!x || p))
          return K[w] ? j(a, w, b) : p ? a : {};
        if (t = k(x ? {} : a), !b)
          return g(t, a);
      }
      q || (q = []), r || (r = []);
      for (var y = q.length; y--; )
        if (q[y] == a)
          return r[y];
      return q.push(a), r.push(t), (u ? f : h)(a, function(e, f) {
        t[f] = d(e, b, c, f, a, q, r);
      }), t;
    }
    var e = (a("3"), a("3c")),
        f = a("43"),
        g = a("154"),
        h = a("119"),
        i = a("150"),
        j = a("152"),
        k = a("153"),
        l = a("3e"),
        m = a("44"),
        n = "[object Arguments]",
        o = "[object Array]",
        p = "[object Boolean]",
        q = "[object Date]",
        r = "[object Error]",
        s = "[object Function]",
        t = "[object Map]",
        u = "[object Number]",
        v = "[object Object]",
        w = "[object RegExp]",
        x = "[object Set]",
        y = "[object String]",
        z = "[object WeakMap]",
        A = "[object ArrayBuffer]",
        B = "[object Float32Array]",
        C = "[object Float64Array]",
        D = "[object Int8Array]",
        E = "[object Int16Array]",
        F = "[object Int32Array]",
        G = "[object Uint8Array]",
        H = "[object Uint8ClampedArray]",
        I = "[object Uint16Array]",
        J = "[object Uint32Array]",
        K = {};
    K[n] = K[o] = K[A] = K[p] = K[q] = K[B] = K[C] = K[D] = K[E] = K[F] = K[u] = K[v] = K[w] = K[y] = K[G] = K[H] = K[I] = K[J] = !0, K[r] = K[s] = K[t] = K[x] = K[z] = !1;
    var L = Object.prototype,
        M = L.toString;
    return c.exports = d, c.exports;
  }), a.registerDynamic("4f", ["f5", "f6", "1e", "3"], !0, function(a, b, c) {
    function d(a, b, c, d) {
      return b && "boolean" != typeof b && g(a, b, c) ? b = !1 : "function" == typeof b && (d = c, c = b, b = !1), "function" == typeof c ? e(a, b, f(c, d, 3)) : e(a, b);
    }
    var e = (a("3"), a("f5")),
        f = a("f6"),
        g = a("1e");
    return c.exports = d, c.exports;
  }), a.registerDynamic("155", ["c", "82", "4", "a", "156", "4d", "5", "4f", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a._exploded)
        return a;
      a._exploded = !0;
      for (var b in a)
        if (!l(b)) {
          var c = b.split("|");
          if (1 !== c.length) {
            var d = a[b];
            delete a[b];
            for (var f = c,
                g = Array.isArray(f),
                h = 0,
                f = g ? f : n(f); ; ) {
              var p;
              if (g) {
                if (h >= f.length)
                  break;
                p = f[h++];
              } else {
                if (h = f.next(), h.done)
                  break;
                p = h.value;
              }
              var q = p;
              a[q] = d;
            }
          }
        }
      e(a), delete a.__esModule, i(a), j(a);
      for (var r = o(a),
          t = Array.isArray(r),
          u = 0,
          r = t ? r : n(r); ; ) {
        var v;
        if (t) {
          if (u >= r.length)
            break;
          v = r[u++];
        } else {
          if (u = r.next(), u.done)
            break;
          v = u.value;
        }
        var b = v;
        if (!l(b)) {
          var x = s[b];
          if (x) {
            var d = a[b];
            for (var z in d)
              d[z] = k(x, d[z]);
            if (delete a[b], x.types)
              for (var A = x.types,
                  B = Array.isArray(A),
                  C = 0,
                  A = B ? A : n(A); ; ) {
                var D;
                if (B) {
                  if (C >= A.length)
                    break;
                  D = A[C++];
                } else {
                  if (C = A.next(), C.done)
                    break;
                  D = C.value;
                }
                var z = D;
                a[z] ? m(a[z], d) : a[z] = d;
              }
            else
              m(a, d);
          }
        }
      }
      for (var b in a)
        if (!l(b)) {
          var d = a[b],
              E = w.FLIPPED_ALIAS_KEYS[b],
              F = w.DEPRECATED_KEYS[b];
          if (F && (console.trace("Visitor defined for " + b + " but it has been renamed to " + F), E = [F]), E) {
            delete a[b];
            for (var G = E,
                H = Array.isArray(G),
                I = 0,
                G = H ? G : n(G); ; ) {
              var J;
              if (H) {
                if (I >= G.length)
                  break;
                J = G[I++];
              } else {
                if (I = G.next(), I.done)
                  break;
                J = I.value;
              }
              var K = J,
                  L = a[K];
              L ? m(L, d) : a[K] = y["default"](d);
            }
          }
        }
      for (var b in a)
        l(b) || j(a[b]);
      return a;
    }
    function e(a) {
      if (!a._verified) {
        if ("function" == typeof a)
          throw new Error(u.get("traverseVerifyRootFunction"));
        for (var b in a)
          if (("enter" === b || "exit" === b) && f(b, a[b]), !l(b)) {
            if (w.TYPES.indexOf(b) < 0)
              throw new Error(u.get("traverseVerifyNodeType", b));
            var c = a[b];
            if ("object" == typeof c)
              for (var d in c) {
                if ("enter" !== d && "exit" !== d)
                  throw new Error(u.get("traverseVerifyVisitorProperty", b, d));
                f(b + "." + d, c[d]);
              }
          }
        a._verified = !0;
      }
    }
    function f(a, b) {
      for (var c = [].concat(b),
          d = c,
          e = Array.isArray(d),
          f = 0,
          d = e ? d : n(d); ; ) {
        var g;
        if (e) {
          if (f >= d.length)
            break;
          g = d[f++];
        } else {
          if (f = d.next(), f.done)
            break;
          g = f.value;
        }
        var h = g;
        if ("function" != typeof h)
          throw new TypeError("Non-function found defined in " + a + " with type " + typeof h);
      }
    }
    function g(a) {
      for (var b = arguments.length <= 1 || void 0 === arguments[1] ? [] : arguments[1],
          c = {},
          e = 0; e < a.length; e++) {
        var f = a[e],
            g = b[e];
        d(f);
        for (var i in f) {
          var j = f[i];
          g && (j = h(j, g));
          var k = c[i] = c[i] || {};
          m(k, j);
        }
      }
      return c;
    }
    function h(a, b) {
      var c = {};
      for (var d in a) {
        var e = a[d];
        Array.isArray(e) && (e = e.map(function(a) {
          var c = function(c) {
            return a.call(b, c, b);
          };
          return c.toString = function() {
            return a.toString();
          }, c;
        }), c[d] = e);
      }
      return c;
    }
    function i(a) {
      for (var b in a)
        if (!l(b)) {
          var c = a[b];
          "function" == typeof c && (a[b] = {enter: c});
        }
    }
    function j(a) {
      a.enter && !Array.isArray(a.enter) && (a.enter = [a.enter]), a.exit && !Array.isArray(a.exit) && (a.exit = [a.exit]);
    }
    function k(a, b) {
      var c = function(c) {
        return a.checkPath(c) ? b.apply(this, arguments) : void 0;
      };
      return c.toString = function() {
        return b.toString();
      }, c;
    }
    function l(a) {
      return "_" === a[0] ? !0 : "enter" === a || "exit" === a || "shouldSkip" === a ? !0 : "blacklist" === a || "noScope" === a || "skipKeys" === a ? !0 : !1;
    }
    function m(a, b) {
      for (var c in b)
        a[c] = [].concat(a[c] || [], b[c]);
    }
    var n = (a("3"), a("c")["default"]),
        o = a("82")["default"],
        p = a("4")["default"],
        q = a("a")["default"];
    b.__esModule = !0, b.explode = d, b.verify = e, b.merge = g;
    var r = a("156"),
        s = p(r),
        t = a("4d"),
        u = p(t),
        v = a("5"),
        w = p(v),
        x = a("4f"),
        y = q(x);
    return c.exports;
  }), a.registerDynamic("156", ["4", "5", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("4")["default"]);
    b.__esModule = !0;
    var e = a("5"),
        f = d(e),
        g = {
          types: ["Identifier", "JSXIdentifier"],
          checkPath: function(a, b) {
            var c = a.node,
                d = a.parent;
            if (!f.isIdentifier(c, b)) {
              if (!f.isJSXIdentifier(c, b))
                return !1;
              if (e.react.isCompatTag(c.name))
                return !1;
            }
            return f.isReferenced(c, d);
          }
        };
    b.ReferencedIdentifier = g;
    var h = {
      types: ["MemberExpression"],
      checkPath: function(a) {
        var b = a.node,
            c = a.parent;
        return f.isMemberExpression(b) && f.isReferenced(b, c);
      }
    };
    b.ReferencedMemberExpression = h;
    var i = {
      types: ["Identifier"],
      checkPath: function(a) {
        var b = a.node,
            c = a.parent;
        return f.isIdentifier(b) && f.isBinding(b, c);
      }
    };
    b.BindingIdentifier = i;
    var j = {
      types: ["Statement"],
      checkPath: function(a) {
        var b = a.node,
            c = a.parent;
        if (f.isStatement(b)) {
          if (f.isVariableDeclaration(b)) {
            if (f.isForXStatement(c, {left: b}))
              return !1;
            if (f.isForStatement(c, {init: b}))
              return !1;
          }
          return !0;
        }
        return !1;
      }
    };
    b.Statement = j;
    var k = {
      types: ["Expression"],
      checkPath: function(a) {
        return a.isIdentifier() ? a.isReferencedIdentifier() : f.isExpression(a.node);
      }
    };
    b.Expression = k;
    var l = {
      types: ["Scopable"],
      checkPath: function(a) {
        return f.isScope(a.node, a.parent);
      }
    };
    b.Scope = l;
    var m = {checkPath: function(a) {
        return f.isReferenced(a.node, a.parent);
      }};
    b.Referenced = m;
    var n = {checkPath: function(a) {
        return f.isBlockScoped(a.node);
      }};
    b.BlockScoped = n;
    var o = {
      types: ["VariableDeclaration"],
      checkPath: function(a) {
        return f.isVar(a.node);
      }
    };
    b.Var = o;
    var p = {checkPath: function(a) {
        return a.node && !!a.node.loc;
      }};
    b.User = p;
    var q = {checkPath: function(a) {
        return !a.isUser();
      }};
    b.Generated = q;
    var r = {checkPath: function(a, b) {
        return a.scope.isPure(a.node, b);
      }};
    b.Pure = r;
    var s = {
      types: ["Flow", "ImportDeclaration", "ExportDeclaration"],
      checkPath: function(a) {
        var b = a.node;
        return f.isFlow(b) ? !0 : f.isImportDeclaration(b) ? "type" === b.importKind || "typeof" === b.importKind : f.isExportDeclaration(b) ? "type" === b.exportKind : !1;
      }
    };
    return b.Flow = s, c.exports;
  }), a.registerDynamic("157", ["3"], !0, function(a, b, c) {
    function d(a) {
      if (a = "" + a, !(a.length > 1e4)) {
        var b = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(a);
        if (b) {
          var c = parseFloat(b[1]),
              d = (b[2] || "ms").toLowerCase();
          switch (d) {
            case "years":
            case "year":
            case "yrs":
            case "yr":
            case "y":
              return c * l;
            case "days":
            case "day":
            case "d":
              return c * k;
            case "hours":
            case "hour":
            case "hrs":
            case "hr":
            case "h":
              return c * j;
            case "minutes":
            case "minute":
            case "mins":
            case "min":
            case "m":
              return c * i;
            case "seconds":
            case "second":
            case "secs":
            case "sec":
            case "s":
              return c * h;
            case "milliseconds":
            case "millisecond":
            case "msecs":
            case "msec":
            case "ms":
              return c;
          }
        }
      }
    }
    function e(a) {
      return a >= k ? Math.round(a / k) + "d" : a >= j ? Math.round(a / j) + "h" : a >= i ? Math.round(a / i) + "m" : a >= h ? Math.round(a / h) + "s" : a + "ms";
    }
    function f(a) {
      return g(a, k, "day") || g(a, j, "hour") || g(a, i, "minute") || g(a, h, "second") || a + " ms";
    }
    function g(a, b, c) {
      return b > a ? void 0 : 1.5 * b > a ? Math.floor(a / b) + " " + c : Math.ceil(a / b) + " " + c + "s";
    }
    var h = (a("3"), 1e3),
        i = 60 * h,
        j = 60 * i,
        k = 24 * j,
        l = 365.25 * k;
    return c.exports = function(a, b) {
      return b = b || {}, "string" == typeof a ? d(a) : b["long"] ? f(a) : e(a);
    }, c.exports;
  }), a.registerDynamic("158", ["157", "3"], !0, function(a, b, c) {
    function d() {
      return b.colors[k++ % b.colors.length];
    }
    function e(a) {
      function c() {}
      function e() {
        var a = e,
            c = +new Date,
            f = c - (j || c);
        a.diff = f, a.prev = j, a.curr = c, j = c, null == a.useColors && (a.useColors = b.useColors()), null == a.color && a.useColors && (a.color = d());
        var g = Array.prototype.slice.call(arguments);
        g[0] = b.coerce(g[0]), "string" != typeof g[0] && (g = ["%o"].concat(g));
        var h = 0;
        g[0] = g[0].replace(/%([a-z%])/g, function(c, d) {
          if ("%%" === c)
            return c;
          h++;
          var e = b.formatters[d];
          if ("function" == typeof e) {
            var f = g[h];
            c = e.call(a, f), g.splice(h, 1), h--;
          }
          return c;
        }), "function" == typeof b.formatArgs && (g = b.formatArgs.apply(a, g));
        var i = e.log || b.log || console.log.bind(console);
        i.apply(a, g);
      }
      c.enabled = !1, e.enabled = !0;
      var f = b.enabled(a) ? e : c;
      return f.namespace = a, f;
    }
    function f(a) {
      b.save(a);
      for (var c = (a || "").split(/[\s,]+/),
          d = c.length,
          e = 0; d > e; e++)
        c[e] && (a = c[e].replace(/\*/g, ".*?"), "-" === a[0] ? b.skips.push(new RegExp("^" + a.substr(1) + "$")) : b.names.push(new RegExp("^" + a + "$")));
    }
    function g() {
      b.enable("");
    }
    function h(a) {
      var c,
          d;
      for (c = 0, d = b.skips.length; d > c; c++)
        if (b.skips[c].test(a))
          return !1;
      for (c = 0, d = b.names.length; d > c; c++)
        if (b.names[c].test(a))
          return !0;
      return !1;
    }
    function i(a) {
      return a instanceof Error ? a.stack || a.message : a;
    }
    a("3");
    b = c.exports = e, b.coerce = i, b.disable = g, b.enable = f, b.enabled = h, b.humanize = a("157"), b.names = [], b.skips = [], b.formatters = {};
    var j,
        k = 0;
    return c.exports;
  }), a.registerDynamic("17", ["158", "3"], !0, function(a, b, c) {
    function d() {
      return "WebkitAppearance" in document.documentElement.style || window.console && (console.firebug || console.exception && console.table) || navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31;
    }
    function e() {
      var a = arguments,
          c = this.useColors;
      if (a[0] = (c ? "%c" : "") + this.namespace + (c ? " %c" : " ") + a[0] + (c ? "%c " : " ") + "+" + b.humanize(this.diff), !c)
        return a;
      var d = "color: " + this.color;
      a = [a[0], d, "color: inherit"].concat(Array.prototype.slice.call(a, 1));
      var e = 0,
          f = 0;
      return a[0].replace(/%[a-z%]/g, function(a) {
        "%%" !== a && (e++, "%c" === a && (f = e));
      }), a.splice(f, 0, d), a;
    }
    function f() {
      return "object" == typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);
    }
    function g(a) {
      try {
        null == a ? b.storage.removeItem("debug") : b.storage.debug = a;
      } catch (c) {}
    }
    function h() {
      var a;
      try {
        a = b.storage.debug;
      } catch (c) {}
      return a;
    }
    function i() {
      try {
        return window.localStorage;
      } catch (a) {}
    }
    a("3");
    return b = c.exports = a("158"), b.log = f, b.formatArgs = e, b.save = g, b.load = h, b.useColors = d, b.storage = "undefined" != typeof chrome && "undefined" != typeof chrome.storage ? chrome.storage.local : i(), b.colors = ["lightseagreen", "forestgreen", "goldenrod", "dodgerblue", "darkorchid", "crimson"], b.formatters.j = function(a) {
      return JSON.stringify(a);
    }, b.enable(h()), c.exports;
  }), a.registerDynamic("159", ["3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), function(a, b, c, d, e, f, g, h) {
      if (!a) {
        var i;
        if (void 0 === b)
          i = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
        else {
          var j = [c, d, e, f, g, h],
              k = 0;
          i = new Error(b.replace(/%s/g, function() {
            return j[k++];
          })), i.name = "Invariant Violation";
        }
        throw i.framesToPop = 1, i;
      }
    });
    return c.exports = d, c.exports;
  }), a.registerDynamic("15a", ["c", "4", "a", "5", "14c", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      for (var b = this; b = b.parentPath; )
        if (a(b))
          return b;
      return null;
    }
    function e(a) {
      var b = this;
      do
        if (a(b))
          return b;
 while (b = b.parentPath);
      return null;
    }
    function f() {
      return this.findParent(function(a) {
        return a.isFunction() || a.isProgram();
      });
    }
    function g() {
      var a = this;
      do
        if (Array.isArray(a.container))
          return a;
 while (a = a.parentPath);
    }
    function h(a) {
      return this.getDeepestCommonAncestorFrom(a, function(a, b, c) {
        for (var d = void 0,
            e = q.VISITOR_KEYS[a.type],
            f = c,
            g = Array.isArray(f),
            h = 0,
            f = g ? f : m(f); ; ) {
          var i;
          if (g) {
            if (h >= f.length)
              break;
            i = f[h++];
          } else {
            if (h = f.next(), h.done)
              break;
            i = h.value;
          }
          var j = i,
              k = j[b + 1];
          if (d)
            if (k.listKey && d.listKey === k.listKey && k.key < d.key)
              d = k;
            else {
              var l = e.indexOf(d.parentKey),
                  n = e.indexOf(k.parentKey);
              l > n && (d = k);
            }
          else
            d = k;
        }
        return d;
      });
    }
    function i(a, b) {
      var c = this;
      if (!a.length)
        return this;
      if (1 === a.length)
        return a[0];
      var d = 1 / 0,
          e = void 0,
          f = void 0,
          g = a.map(function(a) {
            var b = [];
            do
              b.unshift(a);
 while ((a = a.parentPath) && a !== c);
            return b.length < d && (d = b.length), b;
          }),
          h = g[0];
      a: for (var i = 0; d > i; i++) {
        for (var j = h[i],
            k = g,
            l = Array.isArray(k),
            n = 0,
            k = l ? k : m(k); ; ) {
          var o;
          if (l) {
            if (n >= k.length)
              break;
            o = k[n++];
          } else {
            if (n = k.next(), n.done)
              break;
            o = n.value;
          }
          var p = o;
          if (p[i] !== j)
            break a;
        }
        e = i, f = j;
      }
      if (f)
        return b ? b(f, e, g) : f;
      throw new Error("Couldn't find intersection");
    }
    function j() {
      var a = this,
          b = [];
      do
        b.push(a);
 while (a = a.parentPath);
      return b;
    }
    function k() {
      for (var a = this; a; ) {
        for (var b = arguments,
            c = Array.isArray(b),
            d = 0,
            b = c ? b : m(b); ; ) {
          var e;
          if (c) {
            if (d >= b.length)
              break;
            e = b[d++];
          } else {
            if (d = b.next(), d.done)
              break;
            e = d.value;
          }
          var f = e;
          if (a.node.type === f)
            return !0;
        }
        a = a.parentPath;
      }
      return !1;
    }
    function l(a) {
      var b = this;
      do
        if (b.isFunction()) {
          var c = b.node.shadow;
          if (c) {
            if (!a || c[a] !== !1)
              return b;
          } else if (b.isArrowFunctionExpression())
            return b;
          return null;
        }
 while (b = b.parentPath);
      return null;
    }
    var m = (a("3"), a("c")["default"]),
        n = a("4")["default"],
        o = a("a")["default"];
    b.__esModule = !0, b.findParent = d, b.find = e, b.getFunctionParent = f, b.getStatementParent = g, b.getEarliestCommonAncestorFrom = h, b.getDeepestCommonAncestorFrom = i, b.getAncestry = j, b.inType = k, b.inShadow = l;
    var p = a("5"),
        q = n(p),
        r = a("14c");
    o(r);
    return c.exports;
  }), a.registerDynamic("b4", ["3"], !0, function(a, b, c) {
    "use strict";
    a("3");
    return b["default"] = function(a) {
      return a && a.__esModule ? a["default"] : a;
    }, b.__esModule = !0, c.exports;
  }), a.registerDynamic("15b", ["c", "4", "5", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a, b) {
      var c = a.scope.getBinding(b),
          d = [];
      a.typeAnnotation = l.unionTypeAnnotation(d);
      var f = [],
          g = e(c, a, f),
          j = h(a, b);
      if (j && !function() {
        var a = e(c, j.ifStatement);
        g = g.filter(function(b) {
          return a.indexOf(b) < 0;
        }), d.push(j.typeAnnotation);
      }(), g.length) {
        g = g.concat(f);
        for (var k = g,
            m = Array.isArray(k),
            n = 0,
            k = m ? k : i(k); ; ) {
          var o;
          if (m) {
            if (n >= k.length)
              break;
            o = k[n++];
          } else {
            if (n = k.next(), n.done)
              break;
            o = n.value;
          }
          var p = o;
          d.push(p.getTypeAnnotation());
        }
      }
      return d.length ? l.createUnionTypeAnnotation(d) : void 0;
    }
    function e(a, b, c) {
      var d = a.constantViolations.slice();
      return d.unshift(a.path), d.filter(function(a) {
        a = a.resolve();
        var d = a._guessExecutionStatusRelativeTo(b);
        return c && "function" === d && c.push(a), "before" === d;
      });
    }
    function f(a, b) {
      var c = b.node.operator,
          d = b.get("right").resolve(),
          e = b.get("left").resolve(),
          f = void 0;
      if (e.isIdentifier({name: a}) ? f = d : d.isIdentifier({name: a}) && (f = e), f)
        return "===" === c ? f.getTypeAnnotation() : l.BOOLEAN_NUMBER_BINARY_OPERATORS.indexOf(c) >= 0 ? l.numberTypeAnnotation() : void 0;
      if ("===" === c) {
        var g = void 0,
            h = void 0;
        if (e.isUnaryExpression({operator: "typeof"}) ? (g = e, h = d) : d.isUnaryExpression({operator: "typeof"}) && (g = d, h = e), (h || g) && (h = h.resolve(), h.isLiteral())) {
          var i = h.node.value;
          if ("string" == typeof i && g.get("argument").isIdentifier({name: a}))
            return l.createTypeAnnotationBasedOnTypeof(h.node.value);
        }
      }
    }
    function g(a) {
      for (var b = void 0; b = a.parentPath; ) {
        if (b.isIfStatement() || b.isConditionalExpression())
          return "test" === a.key ? void 0 : b;
        a = b;
      }
    }
    function h(a, b) {
      var c = g(a);
      if (c) {
        var d = c.get("test"),
            e = [d],
            i = [];
        do {
          var j = e.shift().resolve();
          if (j.isLogicalExpression() && (e.push(j.get("left")), e.push(j.get("right"))), j.isBinaryExpression()) {
            var k = f(b, j);
            k && i.push(k);
          }
        } while (e.length);
        return i.length ? {
          typeAnnotation: l.createUnionTypeAnnotation(i),
          ifStatement: c
        } : h(c, b);
      }
    }
    var i = (a("3"), a("c")["default"]),
        j = a("4")["default"];
    b.__esModule = !0;
    var k = a("5"),
        l = j(k);
    return b["default"] = function(a) {
      if (this.isReferenced()) {
        var b = this.scope.getBinding(a.name);
        return b ? b.identifier.typeAnnotation ? b.identifier.typeAnnotation : d(this, a.name) : "undefined" === a.name ? l.voidTypeAnnotation() : "NaN" === a.name || "Infinity" === a.name ? l.numberTypeAnnotation() : void("arguments" === a.name);
      }
    }, c.exports = b["default"], c.exports;
  }), a.registerDynamic("15c", ["4", "b4", "5", "15b", "3"], !0, function(a, b, c) {
    "use strict";
    function d() {
      var a = this.get("id");
      return a.isIdentifier() ? this.get("init").getTypeAnnotation() : void 0;
    }
    function e(a) {
      return a.typeAnnotation;
    }
    function f(a) {
      return this.get("callee").isIdentifier() ? D.genericTypeAnnotation(a.callee) : void 0;
    }
    function g() {
      return D.stringTypeAnnotation();
    }
    function h(a) {
      var b = a.operator;
      return "void" === b ? D.voidTypeAnnotation() : D.NUMBER_UNARY_OPERATORS.indexOf(b) >= 0 ? D.numberTypeAnnotation() : D.STRING_UNARY_OPERATORS.indexOf(b) >= 0 ? D.stringTypeAnnotation() : D.BOOLEAN_UNARY_OPERATORS.indexOf(b) >= 0 ? D.booleanTypeAnnotation() : void 0;
    }
    function i(a) {
      var b = a.operator;
      if (D.NUMBER_BINARY_OPERATORS.indexOf(b) >= 0)
        return D.numberTypeAnnotation();
      if (D.BOOLEAN_BINARY_OPERATORS.indexOf(b) >= 0)
        return D.booleanTypeAnnotation();
      if ("+" === b) {
        var c = this.get("right"),
            d = this.get("left");
        return d.isBaseType("number") && c.isBaseType("number") ? D.numberTypeAnnotation() : d.isBaseType("string") || c.isBaseType("string") ? D.stringTypeAnnotation() : D.unionTypeAnnotation([D.stringTypeAnnotation(), D.numberTypeAnnotation()]);
      }
    }
    function j() {
      return D.createUnionTypeAnnotation([this.get("left").getTypeAnnotation(), this.get("right").getTypeAnnotation()]);
    }
    function k() {
      return D.createUnionTypeAnnotation([this.get("consequent").getTypeAnnotation(), this.get("alternate").getTypeAnnotation()]);
    }
    function l() {
      return this.get("expressions").pop().getTypeAnnotation();
    }
    function m() {
      return this.get("right").getTypeAnnotation();
    }
    function n(a) {
      var b = a.operator;
      return "++" === b || "--" === b ? D.numberTypeAnnotation() : void 0;
    }
    function o() {
      return D.stringTypeAnnotation();
    }
    function p() {
      return D.numberTypeAnnotation();
    }
    function q() {
      return D.booleanTypeAnnotation();
    }
    function r() {
      return D.nullLiteralTypeAnnotation();
    }
    function s() {
      return D.genericTypeAnnotation(D.identifier("RegExp"));
    }
    function t() {
      return D.genericTypeAnnotation(D.identifier("Object"));
    }
    function u() {
      return D.genericTypeAnnotation(D.identifier("Array"));
    }
    function v() {
      return u();
    }
    function w() {
      return D.genericTypeAnnotation(D.identifier("Function"));
    }
    function x() {
      return z(this.get("callee"));
    }
    function y() {
      return z(this.get("tag"));
    }
    function z(a) {
      if (a = a.resolve(), a.isFunction()) {
        if (a.is("async"))
          return a.is("generator") ? D.genericTypeAnnotation(D.identifier("AsyncIterator")) : D.genericTypeAnnotation(D.identifier("Promise"));
        if (a.node.returnType)
          return a.node.returnType;
      }
    }
    var A = (a("3"), a("4")["default"]),
        B = a("b4")["default"];
    b.__esModule = !0, b.VariableDeclarator = d, b.TypeCastExpression = e, b.NewExpression = f, b.TemplateLiteral = g, b.UnaryExpression = h, b.BinaryExpression = i, b.LogicalExpression = j, b.ConditionalExpression = k, b.SequenceExpression = l, b.AssignmentExpression = m, b.UpdateExpression = n, b.StringLiteral = o, b.NumericLiteral = p, b.BooleanLiteral = q, b.NullLiteral = r, b.RegExpLiteral = s, b.ObjectExpression = t, b.ArrayExpression = u, b.RestElement = v, b.CallExpression = x, b.TaggedTemplateExpression = y;
    var C = a("5"),
        D = A(C),
        E = a("15b");
    return b.Identifier = B(E), e.validParent = !0, v.validParent = !0, b.Function = w, b.Class = w, c.exports;
  }), a.registerDynamic("15d", ["c", "4", "15c", "5", "3"], !0, function(a, b, c) {
    "use strict";
    function d() {
      if (this.typeAnnotation)
        return this.typeAnnotation;
      var a = this._getTypeAnnotation() || p.anyTypeAnnotation();
      return p.isTypeAnnotation(a) && (a = a.typeAnnotation), this.typeAnnotation = a;
    }
    function e() {
      var a = this.node;
      {
        if (a) {
          if (a.typeAnnotation)
            return a.typeAnnotation;
          var b = n[a.type];
          return b ? b.call(this, a) : (b = n[this.parentPath.type], b && b.validParent ? this.parentPath.getTypeAnnotation() : void 0);
        }
        if ("init" === this.key && this.parentPath.isVariableDeclarator()) {
          var c = this.parentPath.parentPath,
              d = c.parentPath;
          return "left" === c.key && d.isForInStatement() ? p.stringTypeAnnotation() : "left" === c.key && d.isForOfStatement() ? p.anyTypeAnnotation() : p.voidTypeAnnotation();
        }
      }
    }
    function f(a, b) {
      return g(a, this.getTypeAnnotation(), b);
    }
    function g(a, b, c) {
      if ("string" === a)
        return p.isStringTypeAnnotation(b);
      if ("number" === a)
        return p.isNumberTypeAnnotation(b);
      if ("boolean" === a)
        return p.isBooleanTypeAnnotation(b);
      if ("any" === a)
        return p.isAnyTypeAnnotation(b);
      if ("mixed" === a)
        return p.isMixedTypeAnnotation(b);
      if ("void" === a)
        return p.isVoidTypeAnnotation(b);
      if (c)
        return !1;
      throw new Error("Unknown base type " + a);
    }
    function h(a) {
      var b = this.getTypeAnnotation();
      if (p.isAnyTypeAnnotation(b))
        return !0;
      if (p.isUnionTypeAnnotation(b)) {
        for (var c = b.types,
            d = Array.isArray(c),
            e = 0,
            c = d ? c : k(c); ; ) {
          var f;
          if (d) {
            if (e >= c.length)
              break;
            f = c[e++];
          } else {
            if (e = c.next(), e.done)
              break;
            f = e.value;
          }
          var h = f;
          if (p.isAnyTypeAnnotation(h) || g(a, h, !0))
            return !0;
        }
        return !1;
      }
      return g(a, b, !0);
    }
    function i(a) {
      var b = this.getTypeAnnotation();
      return a = a.getTypeAnnotation(), !p.isAnyTypeAnnotation(b) && p.isFlowBaseAnnotation(b) ? a.type === b.type : void 0;
    }
    function j(a) {
      var b = this.getTypeAnnotation();
      return p.isGenericTypeAnnotation(b) && p.isIdentifier(b.id, {name: a});
    }
    var k = (a("3"), a("c")["default"]),
        l = a("4")["default"];
    b.__esModule = !0, b.getTypeAnnotation = d, b._getTypeAnnotation = e, b.isBaseType = f, b.couldBeBaseType = h, b.baseTypeStrictlyMatches = i, b.isGenericType = j;
    var m = a("15c"),
        n = l(m),
        o = a("5"),
        p = l(o);
    return c.exports;
  }), a.registerDynamic("15e", ["3"], !0, function(a, b, c) {
    function d(a, b, c) {
      a = String(a);
      var d = -1;
      for (c || (c = " "), b -= a.length; ++d < b; )
        a = c + a;
      return a;
    }
    a("3");
    return c.exports = d, c.exports;
  }), a.registerDynamic("15f", ["15e", "3"], !0, function(a, b, c) {
    function d(a, b, c) {
      return b in a ? a[b] : c;
    }
    function e(a, b) {
      var c = d.bind(null, b || {}),
          e = c("transform", Function.prototype),
          g = c("padding", " "),
          h = c("before", " "),
          i = c("after", " | "),
          j = c("start", 1),
          k = Array.isArray(a),
          l = k ? a : a.split("\n"),
          m = j + l.length - 1,
          n = String(m).length,
          o = l.map(function(a, b) {
            var c = j + b,
                d = {
                  before: h,
                  number: c,
                  width: n,
                  after: i,
                  line: a
                };
            return e(d), d.before + f(d.number, n, g) + d.after + d.line;
          });
      return k ? o : o.join("\n");
    }
    var f = (a("3"), a("15e"));
    return c.exports = e, c.exports;
  }), a.registerDynamic("160", ["3"], !0, function(a, b, c) {
    a("3");
    return c.exports = /((['"])(?:(?!\2|\\).|\\(?:\r\n|[\s\S]))*(\2)?|`(?:[^`\\$]|\\[\s\S]|\$(?!\{)|\$\{(?:[^{}]|\{[^}]*\}?)*\}?)*(`)?)|(\/\/.*)|(\/\*(?:[^*]|\*(?!\/))*(\*\/)?)|(\/(?!\*)(?:\[(?:(?![\]\\]).|\\.)*\]|(?![\/\]\\]).|\\.)+\/(?:(?!\s*(?:\b|[\u0080-\uFFFF$\\'"~({]|[+\-!](?!=)|\.?\d))|[gmiyu]{1,5}\b(?![\u0080-\uFFFF$\\]|\s*(?:[+\-*%&|^<>!=?({]|\/(?![\/*])))))|((?:0[xX][\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\d*\.\d+|\d+\.?)(?:[eE][+-]?\d+)?))|((?!\d)(?:(?!\s)[$\w\u0080-\uFFFF]|\\u[\da-fA-F]{4}|\\u\{[\da-fA-F]{1,6}\})+)|(--|\+\+|&&|\|\||=>|\.{3}|(?:[+\-*\/%&|^]|<{1,2}|>{1,3}|!=?|={1,2})=?|[?:~]|[;,.[\](){}])|(\s+)|(^$|[\s\S])/g, c.exports.matchToToken = function(a) {
      var b = {
        type: "invalid",
        value: a[0]
      };
      return a[1] ? (b.type = "string", b.closed = !(!a[3] && !a[4])) : a[5] ? b.type = "comment" : a[6] ? (b.type = "comment", b.closed = !!a[7]) : a[8] ? b.type = "regex" : a[9] ? b.type = "number" : a[10] ? b.type = "name" : a[11] ? b.type = "punctuator" : a[12] && (b.type = "whitespace"), b;
    }, c.exports;
  }), a.registerDynamic("161", ["3"], !0, function(a, b, c) {
    a("3");
    return function() {
      "use strict";
      function a(a) {
        if (null == a)
          return !1;
        switch (a.type) {
          case "ArrayExpression":
          case "AssignmentExpression":
          case "BinaryExpression":
          case "CallExpression":
          case "ConditionalExpression":
          case "FunctionExpression":
          case "Identifier":
          case "Literal":
          case "LogicalExpression":
          case "MemberExpression":
          case "NewExpression":
          case "ObjectExpression":
          case "SequenceExpression":
          case "ThisExpression":
          case "UnaryExpression":
          case "UpdateExpression":
            return !0;
        }
        return !1;
      }
      function b(a) {
        if (null == a)
          return !1;
        switch (a.type) {
          case "DoWhileStatement":
          case "ForInStatement":
          case "ForStatement":
          case "WhileStatement":
            return !0;
        }
        return !1;
      }
      function d(a) {
        if (null == a)
          return !1;
        switch (a.type) {
          case "BlockStatement":
          case "BreakStatement":
          case "ContinueStatement":
          case "DebuggerStatement":
          case "DoWhileStatement":
          case "EmptyStatement":
          case "ExpressionStatement":
          case "ForInStatement":
          case "ForStatement":
          case "IfStatement":
          case "LabeledStatement":
          case "ReturnStatement":
          case "SwitchStatement":
          case "ThrowStatement":
          case "TryStatement":
          case "VariableDeclaration":
          case "WhileStatement":
          case "WithStatement":
            return !0;
        }
        return !1;
      }
      function e(a) {
        return d(a) || null != a && "FunctionDeclaration" === a.type;
      }
      function f(a) {
        switch (a.type) {
          case "IfStatement":
            return null != a.alternate ? a.alternate : a.consequent;
          case "LabeledStatement":
          case "ForStatement":
          case "ForInStatement":
          case "WhileStatement":
          case "WithStatement":
            return a.body;
        }
        return null;
      }
      function g(a) {
        var b;
        if ("IfStatement" !== a.type)
          return !1;
        if (null == a.alternate)
          return !1;
        b = a.consequent;
        do {
          if ("IfStatement" === b.type && null == b.alternate)
            return !0;
          b = f(b);
        } while (b);
        return !1;
      }
      c.exports = {
        isExpression: a,
        isStatement: d,
        isIterationStatement: b,
        isSourceElement: e,
        isProblematicIfStatement: g,
        trailingStatement: f
      };
    }(), c.exports;
  }), a.registerDynamic("162", ["3"], !0, function(a, b, c) {
    a("3");
    return function() {
      "use strict";
      function a(a) {
        return a >= 48 && 57 >= a;
      }
      function b(a) {
        return a >= 48 && 57 >= a || a >= 97 && 102 >= a || a >= 65 && 70 >= a;
      }
      function d(a) {
        return a >= 48 && 55 >= a;
      }
      function e(a) {
        return 32 === a || 9 === a || 11 === a || 12 === a || 160 === a || a >= 5760 && n.indexOf(a) >= 0;
      }
      function f(a) {
        return 10 === a || 13 === a || 8232 === a || 8233 === a;
      }
      function g(a) {
        if (65535 >= a)
          return String.fromCharCode(a);
        var b = String.fromCharCode(Math.floor((a - 65536) / 1024) + 55296),
            c = String.fromCharCode((a - 65536) % 1024 + 56320);
        return b + c;
      }
      function h(a) {
        return 128 > a ? o[a] : m.NonAsciiIdentifierStart.test(g(a));
      }
      function i(a) {
        return 128 > a ? p[a] : m.NonAsciiIdentifierPart.test(g(a));
      }
      function j(a) {
        return 128 > a ? o[a] : l.NonAsciiIdentifierStart.test(g(a));
      }
      function k(a) {
        return 128 > a ? p[a] : l.NonAsciiIdentifierPart.test(g(a));
      }
      var l,
          m,
          n,
          o,
          p,
          q;
      for (m = {
        NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B2\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,
        NonAsciiIdentifierPart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B2\u08E4-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58\u0C59\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D60-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA69D\uA69F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2D\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/
      }, l = {
        NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B2\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDE00-\uDE11\uDE13-\uDE2B\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF5D-\uDF61]|\uD805[\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDE00-\uDE2F\uDE44\uDE80-\uDEAA]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF98]|\uD809[\uDC00-\uDC6E]|[\uD80C\uD840-\uD868\uD86A-\uD86C][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D]|\uD87E[\uDC00-\uDE1D]/,
        NonAsciiIdentifierPart: /[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B2\u08E4-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58\u0C59\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D60-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA69D\uA69F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2D\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDD0-\uDDDA\uDE00-\uDE11\uDE13-\uDE37\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF01-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF98]|\uD809[\uDC00-\uDC6E]|[\uD80C\uD840-\uD868\uD86A-\uD86C][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/
      }, n = [5760, 6158, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8239, 8287, 12288, 65279], o = new Array(128), q = 0; 128 > q; ++q)
        o[q] = q >= 97 && 122 >= q || q >= 65 && 90 >= q || 36 === q || 95 === q;
      for (p = new Array(128), q = 0; 128 > q; ++q)
        p[q] = q >= 97 && 122 >= q || q >= 65 && 90 >= q || q >= 48 && 57 >= q || 36 === q || 95 === q;
      c.exports = {
        isDecimalDigit: a,
        isHexDigit: b,
        isOctalDigit: d,
        isWhiteSpace: e,
        isLineTerminator: f,
        isIdentifierStartES5: h,
        isIdentifierPartES5: i,
        isIdentifierStartES6: j,
        isIdentifierPartES6: k
      };
    }(), c.exports;
  }), a.registerDynamic("163", ["162", "3"], !0, function(a, b, c) {
    a("3");
    return function() {
      "use strict";
      function b(a) {
        switch (a) {
          case "implements":
          case "interface":
          case "package":
          case "private":
          case "protected":
          case "public":
          case "static":
          case "let":
            return !0;
          default:
            return !1;
        }
      }
      function d(a, b) {
        return b || "yield" !== a ? e(a, b) : !1;
      }
      function e(a, c) {
        if (c && b(a))
          return !0;
        switch (a.length) {
          case 2:
            return "if" === a || "in" === a || "do" === a;
          case 3:
            return "var" === a || "for" === a || "new" === a || "try" === a;
          case 4:
            return "this" === a || "else" === a || "case" === a || "void" === a || "with" === a || "enum" === a;
          case 5:
            return "while" === a || "break" === a || "catch" === a || "throw" === a || "const" === a || "yield" === a || "class" === a || "super" === a;
          case 6:
            return "return" === a || "typeof" === a || "delete" === a || "switch" === a || "export" === a || "import" === a;
          case 7:
            return "default" === a || "finally" === a || "extends" === a;
          case 8:
            return "function" === a || "continue" === a || "debugger" === a;
          case 10:
            return "instanceof" === a;
          default:
            return !1;
        }
      }
      function f(a, b) {
        return "null" === a || "true" === a || "false" === a || d(a, b);
      }
      function g(a, b) {
        return "null" === a || "true" === a || "false" === a || e(a, b);
      }
      function h(a) {
        return "eval" === a || "arguments" === a;
      }
      function i(a) {
        var b,
            c,
            d;
        if (0 === a.length)
          return !1;
        if (d = a.charCodeAt(0), !n.isIdentifierStartES5(d))
          return !1;
        for (b = 1, c = a.length; c > b; ++b)
          if (d = a.charCodeAt(b), !n.isIdentifierPartES5(d))
            return !1;
        return !0;
      }
      function j(a, b) {
        return 1024 * (a - 55296) + (b - 56320) + 65536;
      }
      function k(a) {
        var b,
            c,
            d,
            e,
            f;
        if (0 === a.length)
          return !1;
        for (f = n.isIdentifierStartES6, b = 0, c = a.length; c > b; ++b) {
          if (d = a.charCodeAt(b), d >= 55296 && 56319 >= d) {
            if (++b, b >= c)
              return !1;
            if (e = a.charCodeAt(b), !(e >= 56320 && 57343 >= e))
              return !1;
            d = j(d, e);
          }
          if (!f(d))
            return !1;
          f = n.isIdentifierPartES6;
        }
        return !0;
      }
      function l(a, b) {
        return i(a) && !f(a, b);
      }
      function m(a, b) {
        return k(a) && !g(a, b);
      }
      var n = a("162");
      c.exports = {
        isKeywordES5: d,
        isKeywordES6: e,
        isReservedWordES5: f,
        isReservedWordES6: g,
        isRestrictedWord: h,
        isIdentifierNameES5: i,
        isIdentifierNameES6: k,
        isIdentifierES5: l,
        isIdentifierES6: m
      };
    }(), c.exports;
  }), a.registerDynamic("143", ["161", "162", "163", "3"], !0, function(a, b, c) {
    a("3");
    return function() {
      "use strict";
      b.ast = a("161"), b.code = a("162"), b.keyword = a("163");
    }(), c.exports;
  }), a.registerDynamic("164", ["3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), /[|\\{}()[\]^$+*?.]/g);
    return c.exports = function(a) {
      if ("string" != typeof a)
        throw new TypeError("Expected a string");
      return a.replace(d, "\\$&");
    }, c.exports;
  }), a.registerDynamic("165", ["3"], !0, function(a, b, c) {
    "use strict";
    function d() {
      var a = {
        modifiers: {
          reset: [0, 0],
          bold: [1, 22],
          dim: [2, 22],
          italic: [3, 23],
          underline: [4, 24],
          inverse: [7, 27],
          hidden: [8, 28],
          strikethrough: [9, 29]
        },
        colors: {
          black: [30, 39],
          red: [31, 39],
          green: [32, 39],
          yellow: [33, 39],
          blue: [34, 39],
          magenta: [35, 39],
          cyan: [36, 39],
          white: [37, 39],
          gray: [90, 39]
        },
        bgColors: {
          bgBlack: [40, 49],
          bgRed: [41, 49],
          bgGreen: [42, 49],
          bgYellow: [43, 49],
          bgBlue: [44, 49],
          bgMagenta: [45, 49],
          bgCyan: [46, 49],
          bgWhite: [47, 49]
        }
      };
      return a.colors.grey = a.colors.gray, Object.keys(a).forEach(function(b) {
        var c = a[b];
        Object.keys(c).forEach(function(b) {
          var d = c[b];
          a[b] = c[b] = {
            open: "[" + d[0] + "m",
            close: "[" + d[1] + "m"
          };
        }), Object.defineProperty(a, b, {
          value: c,
          enumerable: !1
        });
      }), a;
    }
    a("3");
    return Object.defineProperty(c, "exports", {
      enumerable: !0,
      get: d
    }), c.exports;
  }), a.registerDynamic("166", ["167", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("167")());
    return c.exports = function(a) {
      return "string" == typeof a ? a.replace(d, "") : a;
    }, c.exports;
  }), a.registerDynamic("167", ["3"], !0, function(a, b, c) {
    "use strict";
    a("3");
    return c.exports = function() {
      return /[\u001b\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g;
    }, c.exports;
  }), a.registerDynamic("168", ["167", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("167")),
        e = new RegExp(d().source);
    return c.exports = e.test.bind(e), c.exports;
  }), a.registerDynamic("169", ["3"], !0, function(a, b, c) {
    "use strict";
    var d = a("3"),
        e = d.argv,
        f = e.indexOf("--"),
        g = function(a) {
          a = "--" + a;
          var b = e.indexOf(a);
          return -1 !== b && (-1 !== f ? f > b : !0);
        };
    return c.exports = function() {
      return "FORCE_COLOR" in d.env ? !0 : g("no-color") || g("no-colors") || g("color=false") ? !1 : g("color") || g("colors") || g("color=true") || g("color=always") ? !0 : d.stdout && !d.stdout.isTTY ? !1 : "win32" === d.platform ? !0 : "COLORTERM" in d.env ? !0 : "dumb" === d.env.TERM ? !1 : /^screen|^xterm|^vt100|color|ansi|cygwin|linux/i.test(d.env.TERM) ? !0 : !1;
    }(), c.exports;
  }), a.registerDynamic("16a", ["164", "165", "166", "168", "169", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      this.enabled = a && void 0 !== a.enabled ? a.enabled : m;
    }
    function e(a) {
      var b = function() {
        return f.apply(b, arguments);
      };
      return b._styles = a, b.enabled = this.enabled, b.__proto__ = q, b;
    }
    function f() {
      var a = arguments,
          b = a.length,
          c = 0 !== b && String(arguments[0]);
      if (b > 1)
        for (var d = 1; b > d; d++)
          c += " " + a[d];
      if (!this.enabled || !c)
        return c;
      var e = this._styles,
          f = e.length,
          g = j.dim.open;
      for (!o || -1 === e.indexOf("gray") && -1 === e.indexOf("grey") || (j.dim.open = ""); f--; ) {
        var h = j[e[f]];
        c = h.open + c.replace(h.closeRe, h.open) + h.close;
      }
      return j.dim.open = g, c;
    }
    function g() {
      var a = {};
      return Object.keys(p).forEach(function(b) {
        a[b] = {get: function() {
            return e.call(this, [b]);
          }};
      }), a;
    }
    var h = a("3"),
        i = a("164"),
        j = a("165"),
        k = a("166"),
        l = a("168"),
        m = a("169"),
        n = Object.defineProperties,
        o = "win32" === h.platform && !/^xterm/i.test(h.env.TERM);
    o && (j.blue.open = "[94m");
    var p = function() {
      var a = {};
      return Object.keys(j).forEach(function(b) {
        j[b].closeRe = new RegExp(i(j[b].close), "g"), a[b] = {get: function() {
            return e.call(this, this._styles.concat(b));
          }};
      }), a;
    }(),
        q = n(function() {}, p);
    return n(d.prototype, g()), c.exports = new d, c.exports.styles = j, c.exports.hasColor = l, c.exports.stripColor = k, c.exports.supportsColor = m, c.exports;
  }), a.registerDynamic("7d", ["a", "15f", "84", "160", "143", "16a", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      var b = l["default"].matchToToken(a);
      if ("name" === b.type && n["default"].keyword.isReservedWordES6(b.value))
        return "keyword";
      if ("punctuator" === b.type)
        switch (b.value) {
          case "{":
          case "}":
            return "curly";
          case "(":
          case ")":
            return "parens";
          case "[":
          case "]":
            return "square";
        }
      return b.type;
    }
    function e(a) {
      return a.replace(l["default"], function() {
        for (var a = arguments.length,
            b = Array(a),
            c = 0; a > c; c++)
          b[c] = arguments[c];
        var e = d(b),
            f = q[e];
        return f ? b[0].split(r).map(function(a) {
          return f(a);
        }).join("\n") : b[0];
      });
    }
    var f = (a("3"), a("a")["default"]);
    b.__esModule = !0;
    var g = a("15f"),
        h = f(g),
        i = a("84"),
        j = f(i),
        k = a("160"),
        l = f(k),
        m = a("143"),
        n = f(m),
        o = a("16a"),
        p = f(o),
        q = {
          string: p["default"].red,
          punctuator: p["default"].bold,
          curly: p["default"].green,
          parens: p["default"].blue.bold,
          square: p["default"].yellow,
          keyword: p["default"].cyan,
          number: p["default"].magenta,
          regex: p["default"].magenta,
          comment: p["default"].grey,
          invalid: p["default"].inverse
        },
        r = /\r\n|[\n\r\u2028\u2029]/;
    return b["default"] = function(a, b, c) {
      var d = arguments.length <= 3 || void 0 === arguments[3] ? {} : arguments[3];
      c = Math.max(c, 0);
      var f = d.highlightCode && p["default"].supportsColor;
      f && (a = e(a));
      var g = a.split(r),
          i = Math.max(b - 3, 0),
          k = Math.min(g.length, b + 3);
      b || c || (i = 0, k = g.length);
      var l = h["default"](g.slice(i, k), {
        start: i + 1,
        before: "  ",
        after: " | ",
        transform: function(a) {
          a.number === b && (c && (a.line += "\n" + a.before + j["default"](" ", a.width) + a.after + j["default"](" ", c - 1) + "^"), a.before = a.before.replace(/^./, ">"));
        }
      }).join("\n");
      return f ? p["default"].reset(l) : l;
    }, c.exports = b["default"], c.exports;
  }), a.registerDynamic("7f", ["3"], !0, function(a, b, c) {
    var d,
        e = (a("3"), this);
    return function(a) {
      if ("object" == typeof b && "undefined" != typeof c)
        c.exports = a();
      else if ("function" == typeof d && d.amd)
        d([], a);
      else {
        var f;
        f = "undefined" != typeof window ? window : "undefined" != typeof e ? e : "undefined" != typeof self ? self : this, f.babylon = a();
      }
    }(function() {
      return function b(c, d, e) {
        function f(h, i) {
          if (!d[h]) {
            if (!c[h]) {
              var j = "function" == typeof a && a;
              if (!i && j)
                return j(h, !0);
              if (g)
                return g(h, !0);
              var k = new Error("Cannot find module '" + h + "'");
              throw k.code = "MODULE_NOT_FOUND", k;
            }
            var l = d[h] = {exports: {}};
            c[h][0].call(l.exports, function(a) {
              var b = c[h][1][a];
              return f(b ? b : a);
            }, l, l.exports, b, c, d, e);
          }
          return d[h].exports;
        }
        for (var g = "function" == typeof a && a,
            h = 0; h < e.length; h++)
          f(e[h]);
        return f;
      }({
        1: [function(a, b, c) {
          "use strict";
          function d(a, b) {
            return new g["default"](b, a).parse();
          }
          var e = a("babel-runtime/helpers/interop-require-default")["default"];
          c.__esModule = !0, c.parse = d;
          var f = a("./parser"),
              g = e(f);
          a("./parser/util"), a("./parser/statement"), a("./parser/lval"), a("./parser/expression"), a("./parser/node"), a("./parser/location"), a("./parser/comments");
          var h = a("./tokenizer/types");
          a("./tokenizer"), a("./tokenizer/context");
          var i = a("./plugins/flow"),
              j = e(i),
              k = a("./plugins/jsx"),
              l = e(k);
          f.plugins.flow = j["default"], f.plugins.jsx = l["default"], c.tokTypes = h.types;
        }, {
          "./parser": 5,
          "./parser/comments": 3,
          "./parser/expression": 4,
          "./parser/location": 6,
          "./parser/lval": 7,
          "./parser/node": 8,
          "./parser/statement": 9,
          "./parser/util": 10,
          "./plugins/flow": 11,
          "./plugins/jsx": 12,
          "./tokenizer": 15,
          "./tokenizer/context": 14,
          "./tokenizer/types": 17,
          "babel-runtime/helpers/interop-require-default": 26
        }],
        2: [function(a, b, c) {
          "use strict";
          function d(a) {
            var b = {};
            for (var c in e)
              b[c] = a && c in a ? a[c] : e[c];
            return b;
          }
          c.__esModule = !0, c.getOptions = d;
          var e = {
            sourceType: "script",
            allowReturnOutsideFunction: !1,
            allowImportExportEverywhere: !1,
            allowSuperOutsideMethod: !1,
            plugins: [],
            strictMode: null
          };
          c.defaultOptions = e;
        }, {}],
        3: [function(a, b, c) {
          "use strict";
          function d(a) {
            return a[a.length - 1];
          }
          var e = a("babel-runtime/helpers/interop-require-default")["default"],
              f = a("./index"),
              g = e(f),
              h = g["default"].prototype;
          h.addComment = function(a) {
            this.state.trailingComments.push(a), this.state.leadingComments.push(a);
          }, h.processComment = function(a) {
            if (!("Program" === a.type && a.body.length > 0)) {
              var b = this.state.commentStack,
                  c = void 0,
                  e = void 0,
                  f = void 0;
              if (this.state.trailingComments.length > 0)
                this.state.trailingComments[0].start >= a.end ? (e = this.state.trailingComments, this.state.trailingComments = []) : this.state.trailingComments.length = 0;
              else {
                var g = d(b);
                b.length > 0 && g.trailingComments && g.trailingComments[0].start >= a.end && (e = g.trailingComments, g.trailingComments = null);
              }
              for (; b.length > 0 && d(b).start >= a.start; )
                c = b.pop();
              if (c) {
                if (c.leadingComments)
                  if (c !== a && d(c.leadingComments).end <= a.start)
                    a.leadingComments = c.leadingComments, c.leadingComments = null;
                  else
                    for (f = c.leadingComments.length - 2; f >= 0; --f)
                      if (c.leadingComments[f].end <= a.start) {
                        a.leadingComments = c.leadingComments.splice(0, f + 1);
                        break;
                      }
              } else if (this.state.leadingComments.length > 0)
                if (d(this.state.leadingComments).end <= a.start)
                  a.leadingComments = this.state.leadingComments, this.state.leadingComments = [];
                else {
                  for (f = 0; f < this.state.leadingComments.length && !(this.state.leadingComments[f].end > a.start); f++)
                    ;
                  a.leadingComments = this.state.leadingComments.slice(0, f), 0 === a.leadingComments.length && (a.leadingComments = null), e = this.state.leadingComments.slice(f), 0 === e.length && (e = null);
                }
              e && (e.length && e[0].start >= a.start && d(e).end <= a.end ? a.innerComments = e : a.trailingComments = e), b.push(a);
            }
          };
        }, {
          "./index": 5,
          "babel-runtime/helpers/interop-require-default": 26
        }],
        4: [function(a, b, c) {
          "use strict";
          var d = a("babel-runtime/core-js/object/create")["default"],
              e = a("babel-runtime/core-js/get-iterator")["default"],
              f = a("babel-runtime/helpers/interop-require-default")["default"],
              g = a("../tokenizer/types"),
              h = a("./index"),
              i = f(h),
              j = a("../util/identifier"),
              k = i["default"].prototype;
          k.checkPropClash = function(a, b) {
            if (!a.computed) {
              var c = a.key,
                  d = void 0;
              switch (c.type) {
                case "Identifier":
                  d = c.name;
                  break;
                case "StringLiteral":
                case "NumericLiteral":
                  d = String(c.value);
                  break;
                default:
                  return;
              }
              "__proto__" === d && "init" === a.kind && (b.proto && this.raise(c.start, "Redefinition of __proto__ property"), b.proto = !0);
            }
          }, k.parseExpression = function(a, b) {
            var c = this.state.start,
                d = this.state.startLoc,
                e = this.parseMaybeAssign(a, b);
            if (this.match(g.types.comma)) {
              var f = this.startNodeAt(c, d);
              for (f.expressions = [e]; this.eat(g.types.comma); )
                f.expressions.push(this.parseMaybeAssign(a, b));
              return this.toReferencedList(f.expressions), this.finishNode(f, "SequenceExpression");
            }
            return e;
          }, k.parseMaybeAssign = function(a, b, c) {
            if (this.match(g.types._yield) && this.state.inGenerator)
              return this.parseYield();
            var d = void 0;
            b ? d = !1 : (b = {start: 0}, d = !0);
            var e = this.state.start,
                f = this.state.startLoc;
            (this.match(g.types.parenL) || this.match(g.types.name)) && (this.state.potentialArrowAt = this.state.start);
            var h = this.parseMaybeConditional(a, b);
            if (c && (h = c.call(this, h, e, f)), this.state.type.isAssign) {
              var i = this.startNodeAt(e, f);
              if (i.operator = this.state.value, i.left = this.match(g.types.eq) ? this.toAssignable(h) : h, b.start = 0, this.checkLVal(h), h.extra && h.extra.parenthesized) {
                var j = void 0;
                "ObjectPattern" === h.type ? j = "`({a}) = 0` use `({a} = 0)`" : "ArrayPattern" === h.type && (j = "`([a]) = 0` use `([a] = 0)`"), j && this.raise(h.start, "You're trying to assign to a parenthesized expression, eg. instead of " + j);
              }
              return this.next(), i.right = this.parseMaybeAssign(a), this.finishNode(i, "AssignmentExpression");
            }
            return d && b.start && this.unexpected(b.start), h;
          }, k.parseMaybeConditional = function(a, b) {
            var c = this.state.start,
                d = this.state.startLoc,
                e = this.parseExprOps(a, b);
            if (b && b.start)
              return e;
            if (this.eat(g.types.question)) {
              var f = this.startNodeAt(c, d);
              return f.test = e, f.consequent = this.parseMaybeAssign(), this.expect(g.types.colon), f.alternate = this.parseMaybeAssign(a), this.finishNode(f, "ConditionalExpression");
            }
            return e;
          }, k.parseExprOps = function(a, b) {
            var c = this.state.start,
                d = this.state.startLoc,
                e = this.parseMaybeUnary(b);
            return b && b.start ? e : this.parseExprOp(e, c, d, -1, a);
          }, k.parseExprOp = function(a, b, c, d, e) {
            var f = this.state.type.binop;
            if (!(null == f || e && this.match(g.types._in)) && f > d) {
              var h = this.startNodeAt(b, c);
              h.left = a, h.operator = this.state.value, "**" === h.operator && "UnaryExpression" === a.type && a.extra && !a.extra.parenthesizedArgument && this.raise(a.argument.start, "Illegal expression. Wrap left hand side or entire exponentiation in parentheses.");
              var i = this.state.type;
              this.next();
              var j = this.state.start,
                  k = this.state.startLoc;
              return h.right = this.parseExprOp(this.parseMaybeUnary(), j, k, i.rightAssociative ? f - 1 : f, e), this.finishNode(h, i === g.types.logicalOR || i === g.types.logicalAND ? "LogicalExpression" : "BinaryExpression"), this.parseExprOp(h, b, c, d, e);
            }
            return a;
          }, k.parseMaybeUnary = function(a) {
            if (this.state.type.prefix) {
              var b = this.startNode(),
                  c = this.match(g.types.incDec);
              b.operator = this.state.value, b.prefix = !0, this.next();
              var d = this.state.type;
              return this.addExtra(b, "parenthesizedArgument", d === g.types.parenL), b.argument = this.parseMaybeUnary(), a && a.start && this.unexpected(a.start), c ? this.checkLVal(b.argument) : this.state.strict && "delete" === b.operator && "Identifier" === b.argument.type && this.raise(b.start, "Deleting local variable in strict mode"), this.finishNode(b, c ? "UpdateExpression" : "UnaryExpression");
            }
            var e = this.state.start,
                f = this.state.startLoc,
                h = this.parseExprSubscripts(a);
            if (a && a.start)
              return h;
            for (; this.state.type.postfix && !this.canInsertSemicolon(); ) {
              var b = this.startNodeAt(e, f);
              b.operator = this.state.value, b.prefix = !1, b.argument = h, this.checkLVal(h), this.next(), h = this.finishNode(b, "UpdateExpression");
            }
            return h;
          }, k.parseExprSubscripts = function(a) {
            var b = this.state.start,
                c = this.state.startLoc,
                d = this.state.potentialArrowAt,
                e = this.parseExprAtom(a);
            return "ArrowFunctionExpression" === e.type && e.start === d ? e : a && a.start ? e : this.parseSubscripts(e, b, c);
          }, k.parseSubscripts = function(a, b, c, d) {
            for (; ; ) {
              if (!d && this.eat(g.types.doubleColon)) {
                var e = this.startNodeAt(b, c);
                return e.object = a, e.callee = this.parseNoCallExpr(), this.parseSubscripts(this.finishNode(e, "BindExpression"), b, c, d);
              }
              if (this.eat(g.types.dot)) {
                var e = this.startNodeAt(b, c);
                e.object = a, e.property = this.parseIdentifier(!0), e.computed = !1, a = this.finishNode(e, "MemberExpression");
              } else if (this.eat(g.types.bracketL)) {
                var e = this.startNodeAt(b, c);
                e.object = a, e.property = this.parseExpression(), e.computed = !0, this.expect(g.types.bracketR), a = this.finishNode(e, "MemberExpression");
              } else if (!d && this.match(g.types.parenL)) {
                var f = this.state.potentialArrowAt === a.start && "Identifier" === a.type && "async" === a.name && !this.canInsertSemicolon();
                this.next();
                var e = this.startNodeAt(b, c);
                if (e.callee = a, e.arguments = this.parseCallExpressionArguments(g.types.parenR, this.hasPlugin("trailingFunctionCommas"), f), a = this.finishNode(e, "CallExpression"), f && this.shouldParseAsyncArrow())
                  return this.parseAsyncArrowFromCallExpression(this.startNodeAt(b, c), e);
                this.toReferencedList(e.arguments);
              } else {
                if (!this.match(g.types.backQuote))
                  return a;
                var e = this.startNodeAt(b, c);
                e.tag = a, e.quasi = this.parseTemplate(), a = this.finishNode(e, "TaggedTemplateExpression");
              }
            }
          }, k.parseCallExpressionArguments = function(a, b, c) {
            for (var d = void 0,
                e = [],
                f = !0; !this.eat(a); ) {
              if (f)
                f = !1;
              else if (this.expect(g.types.comma), b && this.eat(a))
                break;
              this.match(g.types.parenL) && !d && (d = this.state.start), e.push(this.parseExprListItem());
            }
            return c && d && this.shouldParseAsyncArrow() && this.unexpected(), e;
          }, k.shouldParseAsyncArrow = function() {
            return this.match(g.types.arrow);
          }, k.parseAsyncArrowFromCallExpression = function(a, b) {
            return this.hasPlugin("asyncFunctions") || this.unexpected(), this.expect(g.types.arrow), this.parseArrowExpression(a, b.arguments, !0);
          }, k.parseNoCallExpr = function() {
            var a = this.state.start,
                b = this.state.startLoc;
            return this.parseSubscripts(this.parseExprAtom(), a, b, !0);
          }, k.parseExprAtom = function(a) {
            var b = void 0,
                c = this.state.potentialArrowAt === this.state.start;
            switch (this.state.type) {
              case g.types._super:
                return this.state.inMethod || this.options.allowSuperOutsideMethod || this.raise(this.state.start, "'super' outside of function or class"), b = this.startNode(), this.next(), this.match(g.types.parenL) || this.match(g.types.bracketL) || this.match(g.types.dot) || this.unexpected(), this.match(g.types.parenL) && "constructor" !== this.state.inMethod && !this.options.allowSuperOutsideMethod && this.raise(b.start, "super() outside of class constructor"), this.finishNode(b, "Super");
              case g.types._this:
                return b = this.startNode(), this.next(), this.finishNode(b, "ThisExpression");
              case g.types._yield:
                this.state.inGenerator && this.unexpected();
              case g.types.name:
                b = this.startNode();
                var d = this.hasPlugin("asyncFunctions") && "await" === this.state.value && this.state.inAsync,
                    e = this.shouldAllowYieldIdentifier(),
                    f = this.parseIdentifier(d || e);
                if (this.hasPlugin("asyncFunctions"))
                  if ("await" === f.name) {
                    if (this.state.inAsync || this.inModule)
                      return this.parseAwait(b);
                  } else {
                    if ("async" === f.name && this.match(g.types._function) && !this.canInsertSemicolon())
                      return this.next(), this.parseFunction(b, !1, !1, !0);
                    if (c && "async" === f.name && this.match(g.types.name)) {
                      var h = [this.parseIdentifier()];
                      return this.expect(g.types.arrow), this.parseArrowExpression(b, h, !0);
                    }
                  }
                return c && !this.canInsertSemicolon() && this.eat(g.types.arrow) ? this.parseArrowExpression(b, [f]) : f;
              case g.types._do:
                if (this.hasPlugin("doExpressions")) {
                  var i = this.startNode();
                  this.next();
                  var j = this.state.inFunction,
                      k = this.state.labels;
                  return this.state.labels = [], this.state.inFunction = !1, i.body = this.parseBlock(!1, !0), this.state.inFunction = j, this.state.labels = k, this.finishNode(i, "DoExpression");
                }
              case g.types.regexp:
                var l = this.state.value;
                return b = this.parseLiteral(l.value, "RegExpLiteral"), b.pattern = l.pattern, b.flags = l.flags, b;
              case g.types.num:
                return this.parseLiteral(this.state.value, "NumericLiteral");
              case g.types.string:
                return this.parseLiteral(this.state.value, "StringLiteral");
              case g.types._null:
                return b = this.startNode(), this.next(), this.finishNode(b, "NullLiteral");
              case g.types._true:
              case g.types._false:
                return b = this.startNode(), b.value = this.match(g.types._true), this.next(), this.finishNode(b, "BooleanLiteral");
              case g.types.parenL:
                return this.parseParenAndDistinguishExpression(null, null, c);
              case g.types.bracketL:
                return b = this.startNode(), this.next(), b.elements = this.parseExprList(g.types.bracketR, !0, !0, a), this.toReferencedList(b.elements), this.finishNode(b, "ArrayExpression");
              case g.types.braceL:
                return this.parseObj(!1, a);
              case g.types._function:
                return this.parseFunctionExpression();
              case g.types.at:
                this.parseDecorators();
              case g.types._class:
                return b = this.startNode(), this.takeDecorators(b), this.parseClass(b, !1);
              case g.types._new:
                return this.parseNew();
              case g.types.backQuote:
                return this.parseTemplate();
              case g.types.doubleColon:
                b = this.startNode(), this.next(), b.object = null;
                var m = b.callee = this.parseNoCallExpr();
                if ("MemberExpression" === m.type)
                  return this.finishNode(b, "BindExpression");
                this.raise(m.start, "Binding should be performed on object property.");
              default:
                this.unexpected();
            }
          }, k.parseFunctionExpression = function() {
            var a = this.startNode(),
                b = this.parseIdentifier(!0);
            return this.state.inGenerator && this.eat(g.types.dot) && this.hasPlugin("functionSent") ? this.parseMetaProperty(a, b, "sent") : this.parseFunction(a, !1);
          }, k.parseMetaProperty = function(a, b, c) {
            return a.meta = b, a.property = this.parseIdentifier(!0), a.property.name !== c && this.raise(a.property.start, "The only valid meta property for new is " + b.name + "." + c), this.finishNode(a, "MetaProperty");
          }, k.parseLiteral = function(a, b) {
            var c = this.startNode();
            return this.addExtra(c, "rawValue", a), this.addExtra(c, "raw", this.input.slice(this.state.start, this.state.end)), c.value = a, this.next(), this.finishNode(c, b);
          }, k.parseParenExpression = function() {
            this.expect(g.types.parenL);
            var a = this.parseExpression();
            return this.expect(g.types.parenR), a;
          }, k.parseParenAndDistinguishExpression = function(a, b, c, d, e) {
            a = a || this.state.start, b = b || this.state.startLoc;
            var f = void 0;
            this.next();
            for (var h = this.state.start,
                i = this.state.startLoc,
                j = [],
                k = !0,
                l = {start: 0},
                m = void 0,
                n = void 0; !this.match(g.types.parenR); ) {
              if (k)
                k = !1;
              else if (this.expect(g.types.comma), this.match(g.types.parenR) && this.hasPlugin("trailingFunctionCommas")) {
                n = this.state.start;
                break;
              }
              if (this.match(g.types.ellipsis)) {
                var o = this.state.start,
                    p = this.state.startLoc;
                m = this.state.start, j.push(this.parseParenItem(this.parseRest(), p, o));
                break;
              }
              j.push(this.parseMaybeAssign(!1, l, this.parseParenItem));
            }
            var q = this.state.start,
                r = this.state.startLoc;
            if (this.expect(g.types.parenR), c && !this.canInsertSemicolon() && this.eat(g.types.arrow)) {
              for (var s = 0; s < j.length; s++) {
                var t = j[s];
                t.extra && t.extra.parenthesized && this.unexpected(t.extra.parenStart);
              }
              return this.parseArrowExpression(this.startNodeAt(a, b), j, d);
            }
            if (!j.length) {
              if (d)
                return;
              this.unexpected(this.state.lastTokStart);
            }
            return n && !e && this.unexpected(n), m && this.unexpected(m), l.start && this.unexpected(l.start), j.length > 1 ? (f = this.startNodeAt(h, i), f.expressions = j, this.toReferencedList(f.expressions), this.finishNodeAt(f, "SequenceExpression", q, r)) : f = j[0], this.addExtra(f, "parenthesized", !0), this.addExtra(f, "parenStart", a), f;
          }, k.parseParenItem = function(a) {
            return a;
          }, k.parseNew = function() {
            var a = this.startNode(),
                b = this.parseIdentifier(!0);
            return this.eat(g.types.dot) ? this.parseMetaProperty(a, b, "target") : (a.callee = this.parseNoCallExpr(), this.eat(g.types.parenL) ? (a.arguments = this.parseExprList(g.types.parenR, this.hasPlugin("trailingFunctionCommas")), this.toReferencedList(a.arguments)) : a.arguments = [], this.finishNode(a, "NewExpression"));
          }, k.parseTemplateElement = function() {
            var a = this.startNode();
            return a.value = {
              raw: this.input.slice(this.state.start, this.state.end).replace(/\r\n?/g, "\n"),
              cooked: this.state.value
            }, this.next(), a.tail = this.match(g.types.backQuote), this.finishNode(a, "TemplateElement");
          }, k.parseTemplate = function() {
            var a = this.startNode();
            this.next(), a.expressions = [];
            var b = this.parseTemplateElement();
            for (a.quasis = [b]; !b.tail; )
              this.expect(g.types.dollarBraceL), a.expressions.push(this.parseExpression()), this.expect(g.types.braceR), a.quasis.push(b = this.parseTemplateElement());
            return this.next(), this.finishNode(a, "TemplateLiteral");
          }, k.parseObj = function(a, b) {
            var c = [],
                e = d(null),
                f = !0,
                h = this.startNode();
            for (h.properties = [], this.next(); !this.eat(g.types.braceR); ) {
              if (f)
                f = !1;
              else if (this.expect(g.types.comma), this.eat(g.types.braceR))
                break;
              for (; this.match(g.types.at); )
                c.push(this.parseDecorator());
              var i = this.startNode(),
                  j = !1,
                  k = !1,
                  l = void 0,
                  m = void 0;
              if (c.length && (i.decorators = c, c = []), this.hasPlugin("objectRestSpread") && this.match(g.types.ellipsis))
                i = this.parseSpread(), i.type = a ? "RestProperty" : "SpreadProperty", h.properties.push(i);
              else {
                if (i.method = !1, i.shorthand = !1, (a || b) && (l = this.state.start, m = this.state.startLoc), a || (j = this.eat(g.types.star)), !a && this.hasPlugin("asyncFunctions") && this.isContextual("async")) {
                  j && this.unexpected();
                  var n = this.parseIdentifier();
                  this.match(g.types.colon) || this.match(g.types.parenL) || this.match(g.types.braceR) ? i.key = n : (k = !0, this.hasPlugin("asyncGenerators") && (j = this.eat(g.types.star)), this.parsePropertyName(i));
                } else
                  this.parsePropertyName(i);
                this.parseObjPropValue(i, l, m, j, k, a, b), this.checkPropClash(i, e), i.shorthand && this.addExtra(i, "shorthand", !0), h.properties.push(i);
              }
            }
            return c.length && this.raise(this.state.start, "You have trailing decorators with no property"), this.finishNode(h, a ? "ObjectPattern" : "ObjectExpression");
          }, k.parseObjPropValue = function(a, b, c, d, e, f, h) {
            if (e || d || this.match(g.types.parenL))
              return f && this.unexpected(), a.kind = "method", a.method = !0, this.parseMethod(a, d, e), this.finishNode(a, "ObjectMethod");
            if (this.eat(g.types.colon))
              return a.value = f ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssign(!1, h), this.finishNode(a, "ObjectProperty");
            if (!(a.computed || "Identifier" !== a.key.type || "get" !== a.key.name && "set" !== a.key.name || this.match(g.types.comma) || this.match(g.types.braceR))) {
              (d || e || f) && this.unexpected(), a.kind = a.key.name, this.parsePropertyName(a), this.parseMethod(a, !1);
              var i = "get" === a.kind ? 0 : 1;
              if (a.params.length !== i) {
                var k = a.start;
                "get" === a.kind ? this.raise(k, "getter should have no params") : this.raise(k, "setter should have exactly one param");
              }
              return this.finishNode(a, "ObjectMethod");
            }
            if (!a.computed && "Identifier" === a.key.type) {
              if (f) {
                var l = this.isKeyword(a.key.name);
                !l && this.state.strict && (l = j.reservedWords.strictBind(a.key.name) || j.reservedWords.strict(a.key.name)), l && this.raise(a.key.start, "Binding " + a.key.name), a.value = this.parseMaybeDefault(b, c, a.key.__clone());
              } else
                this.match(g.types.eq) && h ? (h.start || (h.start = this.state.start), a.value = this.parseMaybeDefault(b, c, a.key.__clone())) : a.value = a.key.__clone();
              return a.shorthand = !0, this.finishNode(a, "ObjectProperty");
            }
            this.unexpected();
          }, k.parsePropertyName = function(a) {
            return this.eat(g.types.bracketL) ? (a.computed = !0, a.key = this.parseMaybeAssign(), this.expect(g.types.bracketR), a.key) : (a.computed = !1, a.key = this.match(g.types.num) || this.match(g.types.string) ? this.parseExprAtom() : this.parseIdentifier(!0));
          }, k.initFunction = function(a, b) {
            a.id = null, a.generator = !1, a.expression = !1, this.hasPlugin("asyncFunctions") && (a.async = !!b);
          }, k.parseMethod = function(a, b, c) {
            var d = this.state.inMethod;
            return this.state.inMethod = a.kind || !0, this.initFunction(a, c), this.expect(g.types.parenL), a.params = this.parseBindingList(g.types.parenR, !1, this.hasPlugin("trailingFunctionCommas")), a.generator = b, this.parseFunctionBody(a), this.state.inMethod = d, a;
          }, k.parseArrowExpression = function(a, b, c) {
            return this.initFunction(a, c), a.params = this.toAssignableList(b, !0), this.parseFunctionBody(a, !0), this.finishNode(a, "ArrowFunctionExpression");
          }, k.parseFunctionBody = function(a, b) {
            var c = b && !this.match(g.types.braceL),
                f = this.state.inAsync;
            if (this.state.inAsync = a.async, c)
              a.body = this.parseMaybeAssign(), a.expression = !0;
            else {
              var h = this.state.inFunction,
                  i = this.state.inGenerator,
                  j = this.state.labels;
              this.state.inFunction = !0, this.state.inGenerator = a.generator, this.state.labels = [], a.body = this.parseBlock(!0), a.expression = !1, this.state.inFunction = h, this.state.inGenerator = i, this.state.labels = j;
            }
            this.state.inAsync = f;
            var k = this.state.strict,
                l = !1,
                m = !1;
            if (b && (k = !0), !c && a.body.directives.length)
              for (var n = a.body.directives,
                  o = Array.isArray(n),
                  p = 0,
                  n = o ? n : e(n); ; ) {
                var q;
                if (o) {
                  if (p >= n.length)
                    break;
                  q = n[p++];
                } else {
                  if (p = n.next(), p.done)
                    break;
                  q = p.value;
                }
                var r = q;
                if ("use strict" === r.value.value) {
                  m = !0, k = !0, l = !0;
                  break;
                }
              }
            if (m && a.id && "Identifier" === a.id.type && "yield" === a.id.name && this.raise(a.id.start, "Binding yield in strict mode"), k) {
              var s = d(null),
                  t = this.state.strict;
              l && (this.state.strict = !0), a.id && this.checkLVal(a.id, !0);
              for (var u = a.params,
                  v = Array.isArray(u),
                  w = 0,
                  u = v ? u : e(u); ; ) {
                var x;
                if (v) {
                  if (w >= u.length)
                    break;
                  x = u[w++];
                } else {
                  if (w = u.next(), w.done)
                    break;
                  x = w.value;
                }
                var y = x;
                this.checkLVal(y, !0, s);
              }
              this.state.strict = t;
            }
          }, k.parseExprList = function(a, b, c, d) {
            for (var e = [],
                f = !0; !this.eat(a); ) {
              if (f)
                f = !1;
              else if (this.expect(g.types.comma), b && this.eat(a))
                break;
              e.push(this.parseExprListItem(c, d));
            }
            return e;
          }, k.parseExprListItem = function(a, b) {
            var c = void 0;
            return c = a && this.match(g.types.comma) ? null : this.match(g.types.ellipsis) ? this.parseSpread(b) : this.parseMaybeAssign(!1, b);
          }, k.parseIdentifier = function(a) {
            var b = this.startNode();
            return this.match(g.types.name) ? (!a && this.state.strict && j.reservedWords.strict(this.state.value) && this.raise(this.state.start, "The keyword '" + this.state.value + "' is reserved"), b.name = this.state.value) : a && this.state.type.keyword ? b.name = this.state.type.keyword : this.unexpected(), !a && "await" === b.name && this.state.inAsync && this.raise(b.start, "invalid use of await inside of an async function"), this.next(), this.finishNode(b, "Identifier");
          }, k.parseAwait = function(a) {
            return this.state.inAsync || this.unexpected(), this.isLineTerminator() && this.unexpected(), this.match(g.types.star) && this.raise(a.start, "await* has been removed from the async functions proposal. Use Promise.all() instead."), a.argument = this.parseMaybeUnary(), this.finishNode(a, "AwaitExpression");
          }, k.parseYield = function() {
            var a = this.startNode();
            return this.next(), this.match(g.types.semi) || this.canInsertSemicolon() || !this.match(g.types.star) && !this.state.type.startsExpr ? (a.delegate = !1, a.argument = null) : (a.delegate = this.eat(g.types.star), a.argument = this.parseMaybeAssign()), this.finishNode(a, "YieldExpression");
          };
        }, {
          "../tokenizer/types": 17,
          "../util/identifier": 18,
          "./index": 5,
          "babel-runtime/core-js/get-iterator": 21,
          "babel-runtime/core-js/object/create": 22,
          "babel-runtime/helpers/interop-require-default": 26
        }],
        5: [function(a, b, c) {
          "use strict";
          var d = a("babel-runtime/helpers/inherits")["default"],
              e = a("babel-runtime/helpers/class-call-check")["default"],
              f = a("babel-runtime/core-js/get-iterator")["default"],
              g = a("babel-runtime/helpers/interop-require-default")["default"];
          c.__esModule = !0;
          var h = a("../util/identifier"),
              i = a("../options"),
              j = a("../tokenizer"),
              k = g(j),
              l = {};
          c.plugins = l;
          var m = function(a) {
            function b(c, d) {
              e(this, b), c = i.getOptions(c), a.call(this, c, d), this.options = c, this.inModule = "module" === this.options.sourceType, this.isReservedWord = h.reservedWords[6], this.input = d, this.plugins = this.loadPlugins(this.options.plugins), 0 === this.state.pos && "#" === this.input[0] && "!" === this.input[1] && this.skipLineComment(2);
            }
            return d(b, a), b.prototype.hasPlugin = function(a) {
              return !(!this.plugins["*"] && !this.plugins[a]);
            }, b.prototype.extend = function(a, b) {
              this[a] = b(this[a]);
            }, b.prototype.loadPlugins = function(a) {
              var b = {};
              a.indexOf("flow") >= 0 && (a = a.filter(function(a) {
                return "flow" !== a;
              }), a.push("flow"));
              for (var d = a,
                  e = Array.isArray(d),
                  g = 0,
                  d = e ? d : f(d); ; ) {
                var h;
                if (e) {
                  if (g >= d.length)
                    break;
                  h = d[g++];
                } else {
                  if (g = d.next(), g.done)
                    break;
                  h = g.value;
                }
                var i = h;
                if (!b[i]) {
                  b[i] = !0;
                  var j = c.plugins[i];
                  j && j(this);
                }
              }
              return b;
            }, b.prototype.parse = function() {
              var a = this.startNode(),
                  b = this.startNode();
              return this.nextToken(), this.parseTopLevel(a, b);
            }, b;
          }(k["default"]);
          c["default"] = m;
        }, {
          "../options": 2,
          "../tokenizer": 15,
          "../util/identifier": 18,
          "babel-runtime/core-js/get-iterator": 21,
          "babel-runtime/helpers/class-call-check": 24,
          "babel-runtime/helpers/inherits": 25,
          "babel-runtime/helpers/interop-require-default": 26
        }],
        6: [function(a, b, c) {
          "use strict";
          var d = a("babel-runtime/helpers/interop-require-default")["default"],
              e = a("../util/location"),
              f = a("./index"),
              g = d(f),
              h = g["default"].prototype;
          h.raise = function(a, b) {
            var c = e.getLineInfo(this.input, a);
            b += " (" + c.line + ":" + c.column + ")";
            var d = new SyntaxError(b);
            throw d.pos = a, d.loc = c, d;
          };
        }, {
          "../util/location": 19,
          "./index": 5,
          "babel-runtime/helpers/interop-require-default": 26
        }],
        7: [function(a, b, c) {
          "use strict";
          var d = a("babel-runtime/core-js/get-iterator")["default"],
              e = a("babel-runtime/helpers/interop-require-default")["default"],
              f = a("../tokenizer/types"),
              g = a("./index"),
              h = e(g),
              i = a("../util/identifier"),
              j = h["default"].prototype;
          j.toAssignable = function(a, b) {
            if (a)
              switch (a.type) {
                case "Identifier":
                case "ObjectPattern":
                case "ArrayPattern":
                case "AssignmentPattern":
                  break;
                case "ObjectExpression":
                  a.type = "ObjectPattern";
                  for (var c = a.properties,
                      e = Array.isArray(c),
                      f = 0,
                      c = e ? c : d(c); ; ) {
                    var g;
                    if (e) {
                      if (f >= c.length)
                        break;
                      g = c[f++];
                    } else {
                      if (f = c.next(), f.done)
                        break;
                      g = f.value;
                    }
                    var h = g;
                    "ObjectMethod" === h.type ? "get" === h.kind || "set" === h.kind ? this.raise(h.key.start, "Object pattern can't contain getter or setter") : this.raise(h.key.start, "Object pattern can't contain methods") : this.toAssignable(h, b);
                  }
                  break;
                case "ObjectProperty":
                  this.toAssignable(a.value, b);
                  break;
                case "SpreadProperty":
                  a.type = "RestProperty";
                  break;
                case "ArrayExpression":
                  a.type = "ArrayPattern", this.toAssignableList(a.elements, b);
                  break;
                case "AssignmentExpression":
                  "=" === a.operator ? (a.type = "AssignmentPattern", delete a.operator) : this.raise(a.left.end, "Only '=' operator can be used for specifying default value.");
                  break;
                case "MemberExpression":
                  if (!b)
                    break;
                default:
                  this.raise(a.start, "Assigning to rvalue");
              }
            return a;
          }, j.toAssignableList = function(a, b) {
            var c = a.length;
            if (c) {
              var d = a[c - 1];
              if (d && "RestElement" === d.type)
                --c;
              else if (d && "SpreadElement" === d.type) {
                d.type = "RestElement";
                var e = d.argument;
                this.toAssignable(e, b), "Identifier" !== e.type && "MemberExpression" !== e.type && "ArrayPattern" !== e.type && this.unexpected(e.start), --c;
              }
            }
            for (var f = 0; c > f; f++) {
              var g = a[f];
              g && this.toAssignable(g, b);
            }
            return a;
          }, j.toReferencedList = function(a) {
            return a;
          }, j.parseSpread = function(a) {
            var b = this.startNode();
            return this.next(), b.argument = this.parseMaybeAssign(a), this.finishNode(b, "SpreadElement");
          }, j.parseRest = function() {
            var a = this.startNode();
            return this.next(), a.argument = this.parseBindingIdentifier(), this.finishNode(a, "RestElement");
          }, j.shouldAllowYieldIdentifier = function() {
            return this.match(f.types._yield) && !this.state.strict && !this.state.inGenerator;
          }, j.parseBindingIdentifier = function() {
            return this.parseIdentifier(this.shouldAllowYieldIdentifier());
          }, j.parseBindingAtom = function() {
            switch (this.state.type) {
              case f.types._yield:
                (this.state.strict || this.state.inGenerator) && this.unexpected();
              case f.types.name:
                return this.parseIdentifier(!0);
              case f.types.bracketL:
                var a = this.startNode();
                return this.next(), a.elements = this.parseBindingList(f.types.bracketR, !0, !0), this.finishNode(a, "ArrayPattern");
              case f.types.braceL:
                return this.parseObj(!0);
              default:
                this.unexpected();
            }
          }, j.parseBindingList = function(a, b, c) {
            for (var d = [],
                e = !0; !this.eat(a); )
              if (e ? e = !1 : this.expect(f.types.comma), b && this.match(f.types.comma))
                d.push(null);
              else {
                if (c && this.eat(a))
                  break;
                if (this.match(f.types.ellipsis)) {
                  d.push(this.parseAssignableListItemTypes(this.parseRest())), this.expect(a);
                  break;
                }
                var g = this.parseMaybeDefault();
                this.parseAssignableListItemTypes(g), d.push(this.parseMaybeDefault(null, null, g));
              }
            return d;
          }, j.parseAssignableListItemTypes = function(a) {
            return a;
          }, j.parseMaybeDefault = function(a, b, c) {
            if (b = b || this.state.startLoc, a = a || this.state.start, c = c || this.parseBindingAtom(), !this.eat(f.types.eq))
              return c;
            var d = this.startNodeAt(a, b);
            return d.left = c, d.right = this.parseMaybeAssign(), this.finishNode(d, "AssignmentPattern");
          }, j.checkLVal = function(a, b, c) {
            switch (a.type) {
              case "Identifier":
                if (this.state.strict && (i.reservedWords.strictBind(a.name) || i.reservedWords.strict(a.name)) && this.raise(a.start, (b ? "Binding " : "Assigning to ") + a.name + " in strict mode"), c) {
                  var e = "_" + a.name;
                  c[e] ? this.raise(a.start, "Argument name clash in strict mode") : c[e] = !0;
                }
                break;
              case "MemberExpression":
                b && this.raise(a.start, (b ? "Binding" : "Assigning to") + " member expression");
                break;
              case "ObjectPattern":
                for (var f = a.properties,
                    g = Array.isArray(f),
                    h = 0,
                    f = g ? f : d(f); ; ) {
                  var j;
                  if (g) {
                    if (h >= f.length)
                      break;
                    j = f[h++];
                  } else {
                    if (h = f.next(), h.done)
                      break;
                    j = h.value;
                  }
                  var k = j;
                  "ObjectProperty" === k.type && (k = k.value), this.checkLVal(k, b, c);
                }
                break;
              case "ArrayPattern":
                for (var l = a.elements,
                    m = Array.isArray(l),
                    n = 0,
                    l = m ? l : d(l); ; ) {
                  var o;
                  if (m) {
                    if (n >= l.length)
                      break;
                    o = l[n++];
                  } else {
                    if (n = l.next(), n.done)
                      break;
                    o = n.value;
                  }
                  var p = o;
                  p && this.checkLVal(p, b, c);
                }
                break;
              case "AssignmentPattern":
                this.checkLVal(a.left, b, c);
                break;
              case "RestProperty":
              case "RestElement":
                this.checkLVal(a.argument, b, c);
                break;
              default:
                this.raise(a.start, (b ? "Binding" : "Assigning to") + " rvalue");
            }
          };
        }, {
          "../tokenizer/types": 17,
          "../util/identifier": 18,
          "./index": 5,
          "babel-runtime/core-js/get-iterator": 21,
          "babel-runtime/helpers/interop-require-default": 26
        }],
        8: [function(a, b, c) {
          "use strict";
          function d(a, b, c, d) {
            return a.type = b, a.end = c, a.loc.end = d, this.processComment(a), a;
          }
          var e = a("babel-runtime/helpers/class-call-check")["default"],
              f = a("babel-runtime/helpers/interop-require-default")["default"],
              g = a("./index"),
              h = f(g),
              i = a("../util/location"),
              j = h["default"].prototype,
              k = function() {
                function a(b, c) {
                  e(this, a), this.type = "", this.start = b, this.end = 0, this.loc = new i.SourceLocation(c);
                }
                return a.prototype.__clone = function() {
                  var b = new a;
                  for (var c in this)
                    b[c] = this[c];
                  return b;
                }, a;
              }();
          j.startNode = function() {
            return new k(this.state.start, this.state.startLoc);
          }, j.startNodeAt = function(a, b) {
            return new k(a, b);
          }, j.finishNode = function(a, b) {
            return d.call(this, a, b, this.state.lastTokEnd, this.state.lastTokEndLoc);
          }, j.finishNodeAt = function(a, b, c, e) {
            return d.call(this, a, b, c, e);
          };
        }, {
          "../util/location": 19,
          "./index": 5,
          "babel-runtime/helpers/class-call-check": 24,
          "babel-runtime/helpers/interop-require-default": 26
        }],
        9: [function(a, b, c) {
          "use strict";
          var d = a("babel-runtime/core-js/object/create")["default"],
              e = a("babel-runtime/core-js/get-iterator")["default"],
              f = a("babel-runtime/helpers/interop-require-default")["default"],
              g = a("../tokenizer/types"),
              h = a("./index"),
              i = f(h),
              j = a("../util/whitespace"),
              k = i["default"].prototype;
          k.parseTopLevel = function(a, b) {
            return b.sourceType = this.options.sourceType, this.parseBlockBody(b, !0, !0, g.types.eof), a.program = this.finishNode(b, "Program"), a.comments = this.state.comments, a.tokens = this.state.tokens, this.finishNode(a, "File");
          };
          var l = {kind: "loop"},
              m = {kind: "switch"};
          k.stmtToDirective = function(a) {
            var b = a.expression,
                c = this.startNodeAt(b.start, b.loc.start),
                d = this.startNodeAt(a.start, a.loc.start),
                e = this.input.slice(b.start, b.end),
                f = c.value = e.slice(1, -1);
            return this.addExtra(c, "raw", e), this.addExtra(c, "rawValue", f), d.value = this.finishNodeAt(c, "DirectiveLiteral", b.end, b.loc.end), this.finishNodeAt(d, "Directive", a.end, a.loc.end);
          }, k.parseStatement = function(a, b) {
            this.match(g.types.at) && this.parseDecorators(!0);
            var c = this.state.type,
                d = this.startNode();
            switch (c) {
              case g.types._break:
              case g.types._continue:
                return this.parseBreakContinueStatement(d, c.keyword);
              case g.types._debugger:
                return this.parseDebuggerStatement(d);
              case g.types._do:
                return this.parseDoStatement(d);
              case g.types._for:
                return this.parseForStatement(d);
              case g.types._function:
                return a || this.unexpected(), this.parseFunctionStatement(d);
              case g.types._class:
                return a || this.unexpected(), this.takeDecorators(d), this.parseClass(d, !0);
              case g.types._if:
                return this.parseIfStatement(d);
              case g.types._return:
                return this.parseReturnStatement(d);
              case g.types._switch:
                return this.parseSwitchStatement(d);
              case g.types._throw:
                return this.parseThrowStatement(d);
              case g.types._try:
                return this.parseTryStatement(d);
              case g.types._let:
              case g.types._const:
                a || this.unexpected();
              case g.types._var:
                return this.parseVarStatement(d, c);
              case g.types._while:
                return this.parseWhileStatement(d);
              case g.types._with:
                return this.parseWithStatement(d);
              case g.types.braceL:
                return this.parseBlock();
              case g.types.semi:
                return this.parseEmptyStatement(d);
              case g.types._export:
              case g.types._import:
                return this.options.allowImportExportEverywhere || (b || this.raise(this.state.start, "'import' and 'export' may only appear at the top level"), this.inModule || this.raise(this.state.start, "'import' and 'export' may appear only with 'sourceType: module'")), c === g.types._import ? this.parseImport(d) : this.parseExport(d);
              case g.types.name:
                if (this.hasPlugin("asyncFunctions") && "async" === this.state.value) {
                  var e = this.state.clone();
                  if (this.next(), this.match(g.types._function) && !this.canInsertSemicolon())
                    return this.expect(g.types._function), this.parseFunction(d, !0, !1, !0);
                  this.state = e;
                }
            }
            var f = this.state.value,
                h = this.parseExpression();
            return c === g.types.name && "Identifier" === h.type && this.eat(g.types.colon) ? this.parseLabeledStatement(d, f, h) : this.parseExpressionStatement(d, h);
          }, k.takeDecorators = function(a) {
            this.state.decorators.length && (a.decorators = this.state.decorators, this.state.decorators = []);
          }, k.parseDecorators = function(a) {
            for (; this.match(g.types.at); )
              this.state.decorators.push(this.parseDecorator());
            a && this.match(g.types._export) || this.match(g.types._class) || this.raise(this.state.start, "Leading decorators must be attached to a class declaration");
          }, k.parseDecorator = function() {
            this.hasPlugin("decorators") || this.unexpected();
            var a = this.startNode();
            return this.next(), a.expression = this.parseMaybeAssign(), this.finishNode(a, "Decorator");
          }, k.parseBreakContinueStatement = function(a, b) {
            var c = "break" === b;
            this.next(), this.isLineTerminator() ? a.label = null : this.match(g.types.name) ? (a.label = this.parseIdentifier(), this.semicolon()) : this.unexpected();
            var d = void 0;
            for (d = 0; d < this.state.labels.length; ++d) {
              var e = this.state.labels[d];
              if (null == a.label || e.name === a.label.name) {
                if (null != e.kind && (c || "loop" === e.kind))
                  break;
                if (a.label && c)
                  break;
              }
            }
            return d === this.state.labels.length && this.raise(a.start, "Unsyntactic " + b), this.finishNode(a, c ? "BreakStatement" : "ContinueStatement");
          }, k.parseDebuggerStatement = function(a) {
            return this.next(), this.semicolon(), this.finishNode(a, "DebuggerStatement");
          }, k.parseDoStatement = function(a) {
            return this.next(), this.state.labels.push(l), a.body = this.parseStatement(!1), this.state.labels.pop(), this.expect(g.types._while), a.test = this.parseParenExpression(), this.eat(g.types.semi), this.finishNode(a, "DoWhileStatement");
          }, k.parseForStatement = function(a) {
            if (this.next(), this.state.labels.push(l), this.expect(g.types.parenL), this.match(g.types.semi))
              return this.parseFor(a, null);
            if (this.match(g.types._var) || this.match(g.types._let) || this.match(g.types._const)) {
              var b = this.startNode(),
                  c = this.state.type;
              return this.next(), this.parseVar(b, !0, c), this.finishNode(b, "VariableDeclaration"), !this.match(g.types._in) && !this.isContextual("of") || 1 !== b.declarations.length || b.declarations[0].init ? this.parseFor(a, b) : this.parseForIn(a, b);
            }
            var d = {start: 0},
                e = this.parseExpression(!0, d);
            return this.match(g.types._in) || this.isContextual("of") ? (this.toAssignable(e), this.checkLVal(e), this.parseForIn(a, e)) : (d.start && this.unexpected(d.start), this.parseFor(a, e));
          }, k.parseFunctionStatement = function(a) {
            return this.next(), this.parseFunction(a, !0);
          }, k.parseIfStatement = function(a) {
            return this.next(), a.test = this.parseParenExpression(), a.consequent = this.parseStatement(!1), a.alternate = this.eat(g.types._else) ? this.parseStatement(!1) : null, this.finishNode(a, "IfStatement");
          }, k.parseReturnStatement = function(a) {
            return this.state.inFunction || this.options.allowReturnOutsideFunction || this.raise(this.state.start, "'return' outside of function"), this.next(), this.isLineTerminator() ? a.argument = null : (a.argument = this.parseExpression(), this.semicolon()), this.finishNode(a, "ReturnStatement");
          }, k.parseSwitchStatement = function(a) {
            this.next(), a.discriminant = this.parseParenExpression(), a.cases = [], this.expect(g.types.braceL), this.state.labels.push(m);
            for (var b = void 0,
                c = void 0; !this.match(g.types.braceR); )
              if (this.match(g.types._case) || this.match(g.types._default)) {
                var d = this.match(g.types._case);
                b && this.finishNode(b, "SwitchCase"), a.cases.push(b = this.startNode()), b.consequent = [], this.next(), d ? b.test = this.parseExpression() : (c && this.raise(this.state.lastTokStart, "Multiple default clauses"), c = !0, b.test = null), this.expect(g.types.colon);
              } else
                b ? b.consequent.push(this.parseStatement(!0)) : this.unexpected();
            return b && this.finishNode(b, "SwitchCase"), this.next(), this.state.labels.pop(), this.finishNode(a, "SwitchStatement");
          }, k.parseThrowStatement = function(a) {
            return this.next(), j.lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start)) && this.raise(this.state.lastTokEnd, "Illegal newline after throw"), a.argument = this.parseExpression(), this.semicolon(), this.finishNode(a, "ThrowStatement");
          };
          var n = [];
          k.parseTryStatement = function(a) {
            if (this.next(), a.block = this.parseBlock(), a.handler = null, this.match(g.types._catch)) {
              var b = this.startNode();
              this.next(), this.expect(g.types.parenL), b.param = this.parseBindingAtom(), this.checkLVal(b.param, !0, d(null)), this.expect(g.types.parenR), b.body = this.parseBlock(), a.handler = this.finishNode(b, "CatchClause");
            }
            return a.guardedHandlers = n, a.finalizer = this.eat(g.types._finally) ? this.parseBlock() : null, a.handler || a.finalizer || this.raise(a.start, "Missing catch or finally clause"), this.finishNode(a, "TryStatement");
          }, k.parseVarStatement = function(a, b) {
            return this.next(), this.parseVar(a, !1, b), this.semicolon(), this.finishNode(a, "VariableDeclaration");
          }, k.parseWhileStatement = function(a) {
            return this.next(), a.test = this.parseParenExpression(), this.state.labels.push(l), a.body = this.parseStatement(!1), this.state.labels.pop(), this.finishNode(a, "WhileStatement");
          }, k.parseWithStatement = function(a) {
            return this.state.strict && this.raise(this.state.start, "'with' in strict mode"), this.next(), a.object = this.parseParenExpression(), a.body = this.parseStatement(!1), this.finishNode(a, "WithStatement");
          }, k.parseEmptyStatement = function(a) {
            return this.next(), this.finishNode(a, "EmptyStatement");
          }, k.parseLabeledStatement = function(a, b, c) {
            for (var d = this.state.labels,
                f = Array.isArray(d),
                h = 0,
                d = f ? d : e(d); ; ) {
              var i;
              if (f) {
                if (h >= d.length)
                  break;
                i = d[h++];
              } else {
                if (h = d.next(), h.done)
                  break;
                i = h.value;
              }
              var j = i;
              j.name === b && this.raise(c.start, "Label '" + b + "' is already declared");
            }
            for (var k = this.state.type.isLoop ? "loop" : this.match(g.types._switch) ? "switch" : null,
                l = this.state.labels.length - 1; l >= 0; l--) {
              var j = this.state.labels[l];
              if (j.statementStart !== a.start)
                break;
              j.statementStart = this.state.start, j.kind = k;
            }
            return this.state.labels.push({
              name: b,
              kind: k,
              statementStart: this.state.start
            }), a.body = this.parseStatement(!0), this.state.labels.pop(), a.label = c, this.finishNode(a, "LabeledStatement");
          }, k.parseExpressionStatement = function(a, b) {
            return a.expression = b, this.semicolon(), this.finishNode(a, "ExpressionStatement");
          }, k.parseBlock = function(a) {
            var b = this.startNode();
            return this.expect(g.types.braceL), this.parseBlockBody(b, a, !1, g.types.braceR), this.finishNode(b, "BlockStatement");
          }, k.parseBlockBody = function(a, b, c, d) {
            a.body = [], a.directives = [];
            for (var e = !1,
                f = void 0,
                g = void 0; !this.eat(d); ) {
              e || !this.state.containsOctal || g || (g = this.state.octalPosition);
              var h = this.parseStatement(!0, c);
              if (!b || e || "ExpressionStatement" !== h.type || "StringLiteral" !== h.expression.type || h.expression.extra.parenthesized)
                e = !0, a.body.push(h);
              else {
                var i = this.stmtToDirective(h);
                a.directives.push(i), void 0 === f && "use strict" === i.value.value && (f = this.state.strict, this.setStrict(!0), g && this.raise(g, "Octal literal in strict mode"));
              }
            }
            f === !1 && this.setStrict(!1);
          }, k.parseFor = function(a, b) {
            return a.init = b, this.expect(g.types.semi), a.test = this.match(g.types.semi) ? null : this.parseExpression(), this.expect(g.types.semi), a.update = this.match(g.types.parenR) ? null : this.parseExpression(), this.expect(g.types.parenR), a.body = this.parseStatement(!1), this.state.labels.pop(), this.finishNode(a, "ForStatement");
          }, k.parseForIn = function(a, b) {
            var c = this.match(g.types._in) ? "ForInStatement" : "ForOfStatement";
            return this.next(), a.left = b, a.right = this.parseExpression(), this.expect(g.types.parenR), a.body = this.parseStatement(!1), this.state.labels.pop(), this.finishNode(a, c);
          }, k.parseVar = function(a, b, c) {
            for (a.declarations = [], a.kind = c.keyword; ; ) {
              var d = this.startNode();
              if (this.parseVarHead(d), this.eat(g.types.eq) ? d.init = this.parseMaybeAssign(b) : c !== g.types._const || this.match(g.types._in) || this.isContextual("of") ? "Identifier" === d.id.type || b && (this.match(g.types._in) || this.isContextual("of")) ? d.init = null : this.raise(this.state.lastTokEnd, "Complex binding patterns require an initialization value") : this.unexpected(), a.declarations.push(this.finishNode(d, "VariableDeclarator")), !this.eat(g.types.comma))
                break;
            }
            return a;
          }, k.parseVarHead = function(a) {
            a.id = this.parseBindingAtom(), this.checkLVal(a.id, !0);
          }, k.parseFunction = function(a, b, c, d, e) {
            var f = this.state.inMethod;
            return this.state.inMethod = !1, this.initFunction(a, d), this.match(g.types.star) && (a.async && !this.hasPlugin("asyncGenerators") ? this.unexpected() : (a.generator = !0, this.next())), !b || e || this.match(g.types.name) || this.match(g.types._yield) || this.unexpected(), (this.match(g.types.name) || this.match(g.types._yield)) && (a.id = this.parseBindingIdentifier()), this.parseFunctionParams(a), this.parseFunctionBody(a, c), this.state.inMethod = f, this.finishNode(a, b ? "FunctionDeclaration" : "FunctionExpression");
          }, k.parseFunctionParams = function(a) {
            this.expect(g.types.parenL), a.params = this.parseBindingList(g.types.parenR, !1, this.hasPlugin("trailingFunctionCommas"));
          }, k.parseClass = function(a, b, c) {
            return this.next(), this.parseClassId(a, b, c), this.parseClassSuper(a), this.parseClassBody(a), this.finishNode(a, b ? "ClassDeclaration" : "ClassExpression");
          }, k.isClassProperty = function() {
            return this.match(g.types.eq) || this.isLineTerminator();
          }, k.parseClassBody = function(a) {
            var b = this.state.strict;
            this.state.strict = !0;
            var c = !1,
                d = !1,
                e = [],
                f = this.startNode();
            for (f.body = [], this.expect(g.types.braceL); !this.eat(g.types.braceR); )
              if (!this.eat(g.types.semi))
                if (this.match(g.types.at))
                  e.push(this.parseDecorator());
                else {
                  var h = this.startNode();
                  e.length && (h.decorators = e, e = []);
                  var i = !1,
                      j = this.match(g.types.name) && "static" === this.state.value,
                      k = this.eat(g.types.star),
                      l = !1,
                      m = !1;
                  if (this.parsePropertyName(h), h["static"] = j && !this.match(g.types.parenL), h["static"] && (k && this.unexpected(), k = this.eat(g.types.star), this.parsePropertyName(h)), !k && "Identifier" === h.key.type && !h.computed) {
                    if (this.isClassProperty()) {
                      f.body.push(this.parseClassProperty(h));
                      continue;
                    }
                    this.hasPlugin("classConstructorCall") && "call" === h.key.name && this.match(g.types.name) && "constructor" === this.state.value && (i = !0, this.parsePropertyName(h));
                  }
                  var n = this.hasPlugin("asyncFunctions") && !this.match(g.types.parenL) && !h.computed && "Identifier" === h.key.type && "async" === h.key.name;
                  if (n && (this.hasPlugin("asyncGenerators") && this.eat(g.types.star) && (k = !0), m = !0, this.parsePropertyName(h)), h.kind = "method", !h.computed) {
                    var o = h.key;
                    m || k || "Identifier" !== o.type || this.match(g.types.parenL) || "get" !== o.name && "set" !== o.name || (l = !0, h.kind = o.name, o = this.parsePropertyName(h));
                    var p = !i && !h["static"] && ("Identifier" === o.type && "constructor" === o.name || "StringLiteral" === o.type && "constructor" === o.value);
                    p && (d && this.raise(o.start, "Duplicate constructor in the same class"), l && this.raise(o.start, "Constructor can't have get/set modifier"), k && this.raise(o.start, "Constructor can't be a generator"), m && this.raise(o.start, "Constructor can't be an async function"), h.kind = "constructor", d = !0);
                    var q = h["static"] && ("Identifier" === o.type && "prototype" === o.name || "StringLiteral" === o.type && "prototype" === o.value);
                    q && this.raise(o.start, "Classes may not have static property named prototype");
                  }
                  if (i && (c && this.raise(h.start, "Duplicate constructor call in the same class"), h.kind = "constructorCall", c = !0), "constructor" !== h.kind && "constructorCall" !== h.kind || !h.decorators || this.raise(h.start, "You can't attach decorators to a class constructor"), this.parseClassMethod(f, h, k, m), l) {
                    var r = "get" === h.kind ? 0 : 1;
                    if (h.params.length !== r) {
                      var s = h.start;
                      "get" === h.kind ? this.raise(s, "getter should have no params") : this.raise(s, "setter should have exactly one param");
                    }
                  }
                }
            e.length && this.raise(this.state.start, "You have trailing decorators with no method"), a.body = this.finishNode(f, "ClassBody"), this.state.strict = b;
          }, k.parseClassProperty = function(a) {
            return this.match(g.types.eq) ? (this.hasPlugin("classProperties") || this.unexpected(), this.next(), a.value = this.parseMaybeAssign()) : a.value = null, this.semicolon(), this.finishNode(a, "ClassProperty");
          }, k.parseClassMethod = function(a, b, c, d) {
            this.parseMethod(b, c, d), a.body.push(this.finishNode(b, "ClassMethod"));
          }, k.parseClassId = function(a, b, c) {
            this.match(g.types.name) ? a.id = this.parseIdentifier() : c || !b ? a.id = null : this.unexpected();
          }, k.parseClassSuper = function(a) {
            a.superClass = this.eat(g.types._extends) ? this.parseExprSubscripts() : null;
          }, k.parseExport = function(a) {
            if (this.next(), this.match(g.types.star)) {
              var b = this.startNode();
              if (this.next(), !this.hasPlugin("exportExtensions") || !this.eatContextual("as"))
                return this.parseExportFrom(a, !0), this.finishNode(a, "ExportAllDeclaration");
              b.exported = this.parseIdentifier(), a.specifiers = [this.finishNode(b, "ExportNamespaceSpecifier")], this.parseExportSpecifiersMaybe(a), this.parseExportFrom(a, !0);
            } else if (this.hasPlugin("exportExtensions") && this.isExportDefaultSpecifier()) {
              var b = this.startNode();
              if (b.exported = this.parseIdentifier(!0), a.specifiers = [this.finishNode(b, "ExportDefaultSpecifier")], this.match(g.types.comma) && this.lookahead().type === g.types.star) {
                this.expect(g.types.comma);
                var c = this.startNode();
                this.expect(g.types.star), this.expectContextual("as"), c.exported = this.parseIdentifier(), a.specifiers.push(this.finishNode(c, "ExportNamespaceSpecifier"));
              } else
                this.parseExportSpecifiersMaybe(a);
              this.parseExportFrom(a, !0);
            } else {
              if (this.eat(g.types._default)) {
                var d = this.startNode(),
                    e = !1;
                return this.eat(g.types._function) ? d = this.parseFunction(d, !0, !1, !1, !0) : this.match(g.types._class) ? d = this.parseClass(d, !0, !0) : (e = !0, d = this.parseMaybeAssign()), a.declaration = d, e && this.semicolon(), this.checkExport(a), this.finishNode(a, "ExportDefaultDeclaration");
              }
              this.state.type.keyword || this.shouldParseExportDeclaration() ? (a.specifiers = [], a.source = null, a.declaration = this.parseExportDeclaration(a)) : (a.declaration = null, a.specifiers = this.parseExportSpecifiers(), this.parseExportFrom(a));
            }
            return this.checkExport(a), this.finishNode(a, "ExportNamedDeclaration");
          }, k.parseExportDeclaration = function() {
            return this.parseStatement(!0);
          }, k.isExportDefaultSpecifier = function() {
            if (this.match(g.types.name))
              return "type" !== this.state.value && "async" !== this.state.value && "interface" !== this.state.value;
            if (!this.match(g.types._default))
              return !1;
            var a = this.lookahead();
            return a.type === g.types.comma || a.type === g.types.name && "from" === a.value;
          }, k.parseExportSpecifiersMaybe = function(a) {
            this.eat(g.types.comma) && (a.specifiers = a.specifiers.concat(this.parseExportSpecifiers()));
          }, k.parseExportFrom = function(a, b) {
            this.eatContextual("from") ? (a.source = this.match(g.types.string) ? this.parseExprAtom() : this.unexpected(), this.checkExport(a)) : b ? this.unexpected() : a.source = null, this.semicolon();
          }, k.shouldParseExportDeclaration = function() {
            return this.hasPlugin("asyncFunctions") && this.isContextual("async");
          }, k.checkExport = function(a) {
            if (this.state.decorators.length) {
              var b = a.declaration && ("ClassDeclaration" === a.declaration.type || "ClassExpression" === a.declaration.type);
              a.declaration && b || this.raise(a.start, "You can only use decorators on an export when exporting a class"), this.takeDecorators(a.declaration);
            }
          }, k.parseExportSpecifiers = function() {
            var a = [],
                b = !0,
                c = void 0;
            for (this.expect(g.types.braceL); !this.eat(g.types.braceR); ) {
              if (b)
                b = !1;
              else if (this.expect(g.types.comma), this.eat(g.types.braceR))
                break;
              var d = this.match(g.types._default);
              d && !c && (c = !0);
              var e = this.startNode();
              e.local = this.parseIdentifier(d), e.exported = this.eatContextual("as") ? this.parseIdentifier(!0) : e.local.__clone(), a.push(this.finishNode(e, "ExportSpecifier"));
            }
            return c && !this.isContextual("from") && this.unexpected(), a;
          }, k.parseImport = function(a) {
            return this.next(), this.match(g.types.string) ? (a.specifiers = [], a.source = this.parseExprAtom()) : (a.specifiers = [], this.parseImportSpecifiers(a), this.expectContextual("from"), a.source = this.match(g.types.string) ? this.parseExprAtom() : this.unexpected()), this.semicolon(), this.finishNode(a, "ImportDeclaration");
          }, k.parseImportSpecifiers = function(a) {
            var b = !0;
            if (this.match(g.types.name)) {
              var c = this.state.start,
                  d = this.state.startLoc;
              if (a.specifiers.push(this.parseImportSpecifierDefault(this.parseIdentifier(), c, d)), !this.eat(g.types.comma))
                return;
            }
            if (this.match(g.types.star)) {
              var e = this.startNode();
              return this.next(), this.expectContextual("as"), e.local = this.parseIdentifier(), this.checkLVal(e.local, !0), void a.specifiers.push(this.finishNode(e, "ImportNamespaceSpecifier"));
            }
            for (this.expect(g.types.braceL); !this.eat(g.types.braceR); ) {
              if (b)
                b = !1;
              else if (this.expect(g.types.comma), this.eat(g.types.braceR))
                break;
              var e = this.startNode();
              e.imported = this.parseIdentifier(!0), e.local = this.eatContextual("as") ? this.parseIdentifier() : e.imported.__clone(), this.checkLVal(e.local, !0), a.specifiers.push(this.finishNode(e, "ImportSpecifier"));
            }
          }, k.parseImportSpecifierDefault = function(a, b, c) {
            var d = this.startNodeAt(b, c);
            return d.local = a, this.checkLVal(d.local, !0), this.finishNode(d, "ImportDefaultSpecifier");
          };
        }, {
          "../tokenizer/types": 17,
          "../util/whitespace": 20,
          "./index": 5,
          "babel-runtime/core-js/get-iterator": 21,
          "babel-runtime/core-js/object/create": 22,
          "babel-runtime/helpers/interop-require-default": 26
        }],
        10: [function(a, b, c) {
          "use strict";
          var d = a("babel-runtime/helpers/interop-require-default")["default"],
              e = a("../tokenizer/types"),
              f = a("./index"),
              g = d(f),
              h = a("../util/whitespace"),
              i = g["default"].prototype;
          i.addExtra = function(a, b, c) {
            if (a) {
              var d = a.extra = a.extra || {};
              d[b] = c;
            }
          }, i.isRelational = function(a) {
            return this.match(e.types.relational) && this.state.value === a;
          }, i.expectRelational = function(a) {
            this.isRelational(a) ? this.next() : this.unexpected();
          }, i.isContextual = function(a) {
            return this.match(e.types.name) && this.state.value === a;
          }, i.eatContextual = function(a) {
            return this.state.value === a && this.eat(e.types.name);
          }, i.expectContextual = function(a) {
            this.eatContextual(a) || this.unexpected();
          }, i.canInsertSemicolon = function() {
            return this.match(e.types.eof) || this.match(e.types.braceR) || h.lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));
          }, i.isLineTerminator = function() {
            return this.eat(e.types.semi) || this.canInsertSemicolon();
          }, i.semicolon = function() {
            this.isLineTerminator() || this.unexpected();
          }, i.expect = function(a) {
            return this.eat(a) || this.unexpected();
          }, i.unexpected = function(a) {
            this.raise(null != a ? a : this.state.start, "Unexpected token");
          };
        }, {
          "../tokenizer/types": 17,
          "../util/whitespace": 20,
          "./index": 5,
          "babel-runtime/helpers/interop-require-default": 26
        }],
        11: [function(a, b, c) {
          "use strict";
          var d = a("babel-runtime/helpers/interop-require-default")["default"];
          c.__esModule = !0;
          var e = a("../tokenizer/types"),
              f = a("../parser"),
              g = d(f),
              h = g["default"].prototype;
          h.flowParseTypeInitialiser = function(a, b) {
            var c = this.state.inType;
            this.state.inType = !0, this.expect(a || e.types.colon), b && (this.match(e.types.bitwiseAND) || this.match(e.types.bitwiseOR)) && this.next();
            var d = this.flowParseType();
            return this.state.inType = c, d;
          }, h.flowParseDeclareClass = function(a) {
            return this.next(), this.flowParseInterfaceish(a, !0), this.finishNode(a, "DeclareClass");
          }, h.flowParseDeclareFunction = function(a) {
            this.next();
            var b = a.id = this.parseIdentifier(),
                c = this.startNode(),
                d = this.startNode();
            this.isRelational("<") ? c.typeParameters = this.flowParseTypeParameterDeclaration() : c.typeParameters = null, this.expect(e.types.parenL);
            var f = this.flowParseFunctionTypeParams();
            return c.params = f.params, c.rest = f.rest, this.expect(e.types.parenR), c.returnType = this.flowParseTypeInitialiser(), d.typeAnnotation = this.finishNode(c, "FunctionTypeAnnotation"), b.typeAnnotation = this.finishNode(d, "TypeAnnotation"), this.finishNode(b, b.type), this.semicolon(), this.finishNode(a, "DeclareFunction");
          }, h.flowParseDeclare = function(a) {
            return this.match(e.types._class) ? this.flowParseDeclareClass(a) : this.match(e.types._function) ? this.flowParseDeclareFunction(a) : this.match(e.types._var) ? this.flowParseDeclareVariable(a) : this.isContextual("module") ? this.flowParseDeclareModule(a) : this.isContextual("type") ? this.flowParseDeclareTypeAlias(a) : this.isContextual("interface") ? this.flowParseDeclareInterface(a) : void this.unexpected();
          }, h.flowParseDeclareVariable = function(a) {
            return this.next(), a.id = this.flowParseTypeAnnotatableIdentifier(), this.semicolon(), this.finishNode(a, "DeclareVariable");
          }, h.flowParseDeclareModule = function(a) {
            this.next(), this.match(e.types.string) ? a.id = this.parseExprAtom() : a.id = this.parseIdentifier();
            var b = a.body = this.startNode(),
                c = b.body = [];
            for (this.expect(e.types.braceL); !this.match(e.types.braceR); ) {
              var d = this.startNode();
              this.next(), c.push(this.flowParseDeclare(d));
            }
            return this.expect(e.types.braceR), this.finishNode(b, "BlockStatement"), this.finishNode(a, "DeclareModule");
          }, h.flowParseDeclareTypeAlias = function(a) {
            return this.next(), this.flowParseTypeAlias(a), this.finishNode(a, "DeclareTypeAlias");
          }, h.flowParseDeclareInterface = function(a) {
            return this.next(), this.flowParseInterfaceish(a), this.finishNode(a, "DeclareInterface");
          }, h.flowParseInterfaceish = function(a, b) {
            if (a.id = this.parseIdentifier(), this.isRelational("<") ? a.typeParameters = this.flowParseTypeParameterDeclaration() : a.typeParameters = null, a["extends"] = [], a.mixins = [], this.eat(e.types._extends))
              do
                a["extends"].push(this.flowParseInterfaceExtends());
 while (this.eat(e.types.comma));
            if (this.isContextual("mixins")) {
              this.next();
              do
                a.mixins.push(this.flowParseInterfaceExtends());
 while (this.eat(e.types.comma));
            }
            a.body = this.flowParseObjectType(b);
          }, h.flowParseInterfaceExtends = function() {
            var a = this.startNode();
            return a.id = this.parseIdentifier(), this.isRelational("<") ? a.typeParameters = this.flowParseTypeParameterInstantiation() : a.typeParameters = null, this.finishNode(a, "InterfaceExtends");
          }, h.flowParseInterface = function(a) {
            return this.flowParseInterfaceish(a, !1), this.finishNode(a, "InterfaceDeclaration");
          }, h.flowParseTypeAlias = function(a) {
            return a.id = this.parseIdentifier(), this.isRelational("<") ? a.typeParameters = this.flowParseTypeParameterDeclaration() : a.typeParameters = null, a.right = this.flowParseTypeInitialiser(e.types.eq, !0), this.semicolon(), this.finishNode(a, "TypeAlias");
          }, h.flowParseTypeParameterDeclaration = function() {
            var a = this.startNode();
            for (a.params = [], this.expectRelational("<"); !this.isRelational(">"); )
              a.params.push(this.flowParseExistentialTypeParam() || this.flowParseTypeAnnotatableIdentifier()), this.isRelational(">") || this.expect(e.types.comma);
            return this.expectRelational(">"), this.finishNode(a, "TypeParameterDeclaration");
          }, h.flowParseExistentialTypeParam = function() {
            if (this.match(e.types.star)) {
              var a = this.startNode();
              return this.next(), this.finishNode(a, "ExistentialTypeParam");
            }
          }, h.flowParseTypeParameterInstantiation = function() {
            var a = this.startNode(),
                b = this.state.inType;
            for (a.params = [], this.state.inType = !0, this.expectRelational("<"); !this.isRelational(">"); )
              a.params.push(this.flowParseExistentialTypeParam() || this.flowParseType()), this.isRelational(">") || this.expect(e.types.comma);
            return this.expectRelational(">"), this.state.inType = b, this.finishNode(a, "TypeParameterInstantiation");
          }, h.flowParseObjectPropertyKey = function() {
            return this.match(e.types.num) || this.match(e.types.string) ? this.parseExprAtom() : this.parseIdentifier(!0);
          }, h.flowParseObjectTypeIndexer = function(a, b) {
            return a["static"] = b, this.expect(e.types.bracketL), a.id = this.flowParseObjectPropertyKey(), a.key = this.flowParseTypeInitialiser(), this.expect(e.types.bracketR), a.value = this.flowParseTypeInitialiser(), this.flowObjectTypeSemicolon(), this.finishNode(a, "ObjectTypeIndexer");
          }, h.flowParseObjectTypeMethodish = function(a) {
            for (a.params = [], a.rest = null, a.typeParameters = null, this.isRelational("<") && (a.typeParameters = this.flowParseTypeParameterDeclaration()), this.expect(e.types.parenL); this.match(e.types.name); )
              a.params.push(this.flowParseFunctionTypeParam()), this.match(e.types.parenR) || this.expect(e.types.comma);
            return this.eat(e.types.ellipsis) && (a.rest = this.flowParseFunctionTypeParam()), this.expect(e.types.parenR), a.returnType = this.flowParseTypeInitialiser(), this.finishNode(a, "FunctionTypeAnnotation");
          }, h.flowParseObjectTypeMethod = function(a, b, c, d) {
            var e = this.startNodeAt(a, b);
            return e.value = this.flowParseObjectTypeMethodish(this.startNodeAt(a, b)), e["static"] = c, e.key = d, e.optional = !1, this.flowObjectTypeSemicolon(), this.finishNode(e, "ObjectTypeProperty");
          }, h.flowParseObjectTypeCallProperty = function(a, b) {
            var c = this.startNode();
            return a["static"] = b, a.value = this.flowParseObjectTypeMethodish(c), this.flowObjectTypeSemicolon(), this.finishNode(a, "ObjectTypeCallProperty");
          }, h.flowParseObjectType = function(a) {
            var b = this.startNode(),
                c = void 0,
                d = void 0,
                f = void 0;
            for (b.callProperties = [], b.properties = [], b.indexers = [], this.expect(e.types.braceL); !this.match(e.types.braceR); ) {
              var g = !1,
                  h = this.state.start,
                  i = this.state.startLoc;
              c = this.startNode(), a && this.isContextual("static") && (this.next(), f = !0), this.match(e.types.bracketL) ? b.indexers.push(this.flowParseObjectTypeIndexer(c, f)) : this.match(e.types.parenL) || this.isRelational("<") ? b.callProperties.push(this.flowParseObjectTypeCallProperty(c, a)) : (d = f && this.match(e.types.colon) ? this.parseIdentifier() : this.flowParseObjectPropertyKey(), this.isRelational("<") || this.match(e.types.parenL) ? b.properties.push(this.flowParseObjectTypeMethod(h, i, f, d)) : (this.eat(e.types.question) && (g = !0), c.key = d, c.value = this.flowParseTypeInitialiser(), c.optional = g, c["static"] = f, this.flowObjectTypeSemicolon(), b.properties.push(this.finishNode(c, "ObjectTypeProperty"))));
            }
            return this.expect(e.types.braceR), this.finishNode(b, "ObjectTypeAnnotation");
          }, h.flowObjectTypeSemicolon = function() {
            this.eat(e.types.semi) || this.eat(e.types.comma) || this.match(e.types.braceR) || this.unexpected();
          }, h.flowParseGenericType = function(a, b, c) {
            var d = this.startNodeAt(a, b);
            for (d.typeParameters = null, d.id = c; this.eat(e.types.dot); ) {
              var f = this.startNodeAt(a, b);
              f.qualification = d.id, f.id = this.parseIdentifier(), d.id = this.finishNode(f, "QualifiedTypeIdentifier");
            }
            return this.isRelational("<") && (d.typeParameters = this.flowParseTypeParameterInstantiation()), this.finishNode(d, "GenericTypeAnnotation");
          }, h.flowParseTypeofType = function() {
            var a = this.startNode();
            return this.expect(e.types._typeof), a.argument = this.flowParsePrimaryType(), this.finishNode(a, "TypeofTypeAnnotation");
          }, h.flowParseTupleType = function() {
            var a = this.startNode();
            for (a.types = [], this.expect(e.types.bracketL); this.state.pos < this.input.length && !this.match(e.types.bracketR) && (a.types.push(this.flowParseType()), !this.match(e.types.bracketR)); )
              this.expect(e.types.comma);
            return this.expect(e.types.bracketR), this.finishNode(a, "TupleTypeAnnotation");
          }, h.flowParseFunctionTypeParam = function() {
            var a = !1,
                b = this.startNode();
            return b.name = this.parseIdentifier(), this.eat(e.types.question) && (a = !0), b.optional = a, b.typeAnnotation = this.flowParseTypeInitialiser(), this.finishNode(b, "FunctionTypeParam");
          }, h.flowParseFunctionTypeParams = function() {
            for (var a = {
              params: [],
              rest: null
            }; this.match(e.types.name); )
              a.params.push(this.flowParseFunctionTypeParam()), this.match(e.types.parenR) || this.expect(e.types.comma);
            return this.eat(e.types.ellipsis) && (a.rest = this.flowParseFunctionTypeParam()), a;
          }, h.flowIdentToTypeAnnotation = function(a, b, c, d) {
            switch (d.name) {
              case "any":
                return this.finishNode(c, "AnyTypeAnnotation");
              case "void":
                return this.finishNode(c, "VoidTypeAnnotation");
              case "bool":
              case "boolean":
                return this.finishNode(c, "BooleanTypeAnnotation");
              case "mixed":
                return this.finishNode(c, "MixedTypeAnnotation");
              case "number":
                return this.finishNode(c, "NumberTypeAnnotation");
              case "string":
                return this.finishNode(c, "StringTypeAnnotation");
              default:
                return this.flowParseGenericType(a, b, d);
            }
          }, h.flowParsePrimaryType = function() {
            var a = this.state.start,
                b = this.state.startLoc,
                c = this.startNode(),
                d = void 0,
                f = void 0,
                g = !1;
            switch (this.state.type) {
              case e.types.name:
                return this.flowIdentToTypeAnnotation(a, b, c, this.parseIdentifier());
              case e.types.braceL:
                return this.flowParseObjectType();
              case e.types.bracketL:
                return this.flowParseTupleType();
              case e.types.relational:
                if ("<" === this.state.value)
                  return c.typeParameters = this.flowParseTypeParameterDeclaration(), this.expect(e.types.parenL), d = this.flowParseFunctionTypeParams(), c.params = d.params, c.rest = d.rest, this.expect(e.types.parenR), this.expect(e.types.arrow), c.returnType = this.flowParseType(), this.finishNode(c, "FunctionTypeAnnotation");
              case e.types.parenL:
                if (this.next(), !this.match(e.types.parenR) && !this.match(e.types.ellipsis))
                  if (this.match(e.types.name)) {
                    var h = this.lookahead().type;
                    g = h !== e.types.question && h !== e.types.colon;
                  } else
                    g = !0;
                return g ? (f = this.flowParseType(), this.expect(e.types.parenR), this.eat(e.types.arrow) && this.raise(c, "Unexpected token =>. It looks like you are trying to write a function type, but you ended up writing a grouped type followed by an =>, which is a syntax error. Remember, function type parameters are named so function types look like (name1: type1, name2: type2) => returnType. You probably wrote (type1) => returnType"), f) : (d = this.flowParseFunctionTypeParams(), c.params = d.params, c.rest = d.rest, this.expect(e.types.parenR), this.expect(e.types.arrow), c.returnType = this.flowParseType(), c.typeParameters = null, this.finishNode(c, "FunctionTypeAnnotation"));
              case e.types.string:
                return c.value = this.state.value, this.addExtra(c, "rawValue", c.value), this.addExtra(c, "raw", this.input.slice(this.state.start, this.state.end)), this.next(), this.finishNode(c, "StringLiteralTypeAnnotation");
              case e.types._true:
              case e.types._false:
                return c.value = this.match(e.types._true), this.next(), this.finishNode(c, "BooleanLiteralTypeAnnotation");
              case e.types.num:
                return c.value = this.state.value, this.addExtra(c, "rawValue", c.value), this.addExtra(c, "raw", this.input.slice(this.state.start, this.state.end)), this.next(), this.finishNode(c, "NumericLiteralTypeAnnotation");
              case e.types._null:
                return c.value = this.match(e.types._null), this.next(), this.finishNode(c, "NullLiteralTypeAnnotation");
              case e.types._this:
                return c.value = this.match(e.types._this), this.next(), this.finishNode(c, "ThisTypeAnnotation");
              default:
                if ("typeof" === this.state.type.keyword)
                  return this.flowParseTypeofType();
            }
            this.unexpected();
          }, h.flowParsePostfixType = function() {
            var a = this.startNode(),
                b = a.elementType = this.flowParsePrimaryType();
            return this.match(e.types.bracketL) ? (this.expect(e.types.bracketL), this.expect(e.types.bracketR), this.finishNode(a, "ArrayTypeAnnotation")) : b;
          }, h.flowParsePrefixType = function() {
            var a = this.startNode();
            return this.eat(e.types.question) ? (a.typeAnnotation = this.flowParsePrefixType(), this.finishNode(a, "NullableTypeAnnotation")) : this.flowParsePostfixType();
          }, h.flowParseIntersectionType = function() {
            var a = this.startNode(),
                b = this.flowParsePrefixType();
            for (a.types = [b]; this.eat(e.types.bitwiseAND); )
              a.types.push(this.flowParsePrefixType());
            return 1 === a.types.length ? b : this.finishNode(a, "IntersectionTypeAnnotation");
          }, h.flowParseUnionType = function() {
            var a = this.startNode(),
                b = this.flowParseIntersectionType();
            for (a.types = [b]; this.eat(e.types.bitwiseOR); )
              a.types.push(this.flowParseIntersectionType());
            return 1 === a.types.length ? b : this.finishNode(a, "UnionTypeAnnotation");
          }, h.flowParseType = function() {
            var a = this.state.inType;
            this.state.inType = !0;
            var b = this.flowParseUnionType();
            return this.state.inType = a, b;
          }, h.flowParseTypeAnnotation = function() {
            var a = this.startNode();
            return a.typeAnnotation = this.flowParseTypeInitialiser(), this.finishNode(a, "TypeAnnotation");
          }, h.flowParseTypeAnnotatableIdentifier = function(a, b) {
            var c = this.parseIdentifier(),
                d = !1;
            return b && this.eat(e.types.question) && (this.expect(e.types.question), d = !0), (a || this.match(e.types.colon)) && (c.typeAnnotation = this.flowParseTypeAnnotation(), this.finishNode(c, c.type)), d && (c.optional = !0, this.finishNode(c, c.type)), c;
          }, c["default"] = function(a) {
            function b(a) {
              return a.expression.typeAnnotation = a.typeAnnotation, a.expression;
            }
            a.extend("parseFunctionBody", function(a) {
              return function(b, c) {
                return this.match(e.types.colon) && !c && (b.returnType = this.flowParseTypeAnnotation()), a.call(this, b, c);
              };
            }), a.extend("parseStatement", function(a) {
              return function(b, c) {
                if (this.state.strict && this.match(e.types.name) && "interface" === this.state.value) {
                  var d = this.startNode();
                  return this.next(), this.flowParseInterface(d);
                }
                return a.call(this, b, c);
              };
            }), a.extend("parseExpressionStatement", function(a) {
              return function(b, c) {
                if ("Identifier" === c.type)
                  if ("declare" === c.name) {
                    if (this.match(e.types._class) || this.match(e.types.name) || this.match(e.types._function) || this.match(e.types._var))
                      return this.flowParseDeclare(b);
                  } else if (this.match(e.types.name)) {
                    if ("interface" === c.name)
                      return this.flowParseInterface(b);
                    if ("type" === c.name)
                      return this.flowParseTypeAlias(b);
                  }
                return a.call(this, b, c);
              };
            }), a.extend("shouldParseExportDeclaration", function(a) {
              return function() {
                return this.isContextual("type") || this.isContextual("interface") || a.call(this);
              };
            }), a.extend("parseParenItem", function() {
              return function(a, b, c, d) {
                var f = this.state.potentialArrowAt = c;
                if (this.match(e.types.colon)) {
                  var g = this.startNodeAt(b, c);
                  if (g.expression = a, g.typeAnnotation = this.flowParseTypeAnnotation(), d && !this.match(e.types.arrow) && this.unexpected(), f && this.eat(e.types.arrow)) {
                    var h = "SequenceExpression" === a.type ? a.expressions : [a],
                        i = this.parseArrowExpression(this.startNodeAt(b, c), h);
                    return i.returnType = g.typeAnnotation, i;
                  }
                  return this.finishNode(g, "TypeCastExpression");
                }
                return a;
              };
            }), a.extend("parseExport", function(a) {
              return function(b) {
                return b = a.call(this, b), "ExportNamedDeclaration" === b.type && (b.exportKind = b.exportKind || "value"), b;
              };
            }), a.extend("parseExportDeclaration", function(a) {
              return function(b) {
                if (this.isContextual("type")) {
                  b.exportKind = "type";
                  var c = this.startNode();
                  return this.next(), this.match(e.types.braceL) ? (b.specifiers = this.parseExportSpecifiers(), this.parseExportFrom(b), null) : this.flowParseTypeAlias(c);
                }
                if (this.isContextual("interface")) {
                  b.exportKind = "type";
                  var c = this.startNode();
                  return this.next(), this.flowParseInterface(c);
                }
                return a.call(this, b);
              };
            }), a.extend("parseClassId", function(a) {
              return function(b) {
                a.apply(this, arguments), this.isRelational("<") && (b.typeParameters = this.flowParseTypeParameterDeclaration());
              };
            }), a.extend("isKeyword", function(a) {
              return function(b) {
                return this.state.inType && "void" === b ? !1 : a.call(this, b);
              };
            }), a.extend("readToken", function(a) {
              return function(b) {
                return !this.state.inType || 62 !== b && 60 !== b ? a.call(this, b) : this.finishOp(e.types.relational, 1);
              };
            }), a.extend("jsx_readToken", function(a) {
              return function() {
                return this.state.inType ? void 0 : a.call(this);
              };
            }), a.extend("toAssignable", function(a) {
              return function(c) {
                return "TypeCastExpression" === c.type ? b(c) : a.apply(this, arguments);
              };
            }), a.extend("toAssignableList", function(a) {
              return function(c, d) {
                for (var e = 0; e < c.length; e++) {
                  var f = c[e];
                  f && "TypeCastExpression" === f.type && (c[e] = b(f));
                }
                return a.call(this, c, d);
              };
            }), a.extend("toReferencedList", function() {
              return function(a) {
                for (var b = 0; b < a.length; b++) {
                  var c = a[b];
                  c && c._exprListItem && "TypeCastExpression" === c.type && this.raise(c.start, "Unexpected type cast");
                }
                return a;
              };
            }), a.extend("parseExprListItem", function(a) {
              return function(b, c) {
                var d = this.startNode(),
                    f = a.call(this, b, c);
                return this.match(e.types.colon) ? (d._exprListItem = !0, d.expression = f, d.typeAnnotation = this.flowParseTypeAnnotation(), this.finishNode(d, "TypeCastExpression")) : f;
              };
            }), a.extend("checkLVal", function(a) {
              return function(b) {
                return "TypeCastExpression" !== b.type ? a.apply(this, arguments) : void 0;
              };
            }), a.extend("parseClassProperty", function(a) {
              return function(b) {
                return this.match(e.types.colon) && (b.typeAnnotation = this.flowParseTypeAnnotation()), a.call(this, b);
              };
            }), a.extend("isClassProperty", function(a) {
              return function() {
                return this.match(e.types.colon) || a.call(this);
              };
            }), a.extend("parseClassMethod", function() {
              return function(a, b, c, d) {
                this.isRelational("<") && (b.typeParameters = this.flowParseTypeParameterDeclaration()), this.parseMethod(b, c, d), a.body.push(this.finishNode(b, "ClassMethod"));
              };
            }), a.extend("parseClassSuper", function(a) {
              return function(b, c) {
                if (a.call(this, b, c), b.superClass && this.isRelational("<") && (b.superTypeParameters = this.flowParseTypeParameterInstantiation()), this.isContextual("implements")) {
                  this.next();
                  var d = b["implements"] = [];
                  do {
                    var f = this.startNode();
                    f.id = this.parseIdentifier(), this.isRelational("<") ? f.typeParameters = this.flowParseTypeParameterInstantiation() : f.typeParameters = null, d.push(this.finishNode(f, "ClassImplements"));
                  } while (this.eat(e.types.comma));
                }
              };
            }), a.extend("parseObjPropValue", function(a) {
              return function(b) {
                var c = void 0;
                this.isRelational("<") && (c = this.flowParseTypeParameterDeclaration(), this.match(e.types.parenL) || this.unexpected()), a.apply(this, arguments), c && ((b.value || b).typeParameters = c);
              };
            }), a.extend("parseAssignableListItemTypes", function() {
              return function(a) {
                return this.eat(e.types.question) && (a.optional = !0), this.match(e.types.colon) && (a.typeAnnotation = this.flowParseTypeAnnotation()), this.finishNode(a, a.type), a;
              };
            }), a.extend("parseImportSpecifiers", function(a) {
              return function(b) {
                b.importKind = "value";
                var c = null;
                if (this.match(e.types._typeof) ? c = "typeof" : this.isContextual("type") && (c = "type"), c) {
                  var d = this.lookahead();
                  (d.type === e.types.name && "from" !== d.value || d.type === e.types.braceL || d.type === e.types.star) && (this.next(), b.importKind = c);
                }
                a.call(this, b);
              };
            }), a.extend("parseFunctionParams", function(a) {
              return function(b) {
                this.isRelational("<") && (b.typeParameters = this.flowParseTypeParameterDeclaration()), a.call(this, b);
              };
            }), a.extend("parseVarHead", function(a) {
              return function(b) {
                a.call(this, b), this.match(e.types.colon) && (b.id.typeAnnotation = this.flowParseTypeAnnotation(), this.finishNode(b.id, b.id.type));
              };
            }), a.extend("parseAsyncArrowFromCallExpression", function(a) {
              return function(b, c) {
                return this.match(e.types.colon) && (b.returnType = this.flowParseTypeAnnotation()), a.call(this, b, c);
              };
            }), a.extend("shouldParseAsyncArrow", function(a) {
              return function() {
                return this.match(e.types.colon) || a.call(this);
              };
            }), a.extend("parseParenAndDistinguishExpression", function(a) {
              return function(b, c, d, f) {
                if (b = b || this.state.start, c = c || this.state.startLoc, d && this.lookahead().type === e.types.parenR) {
                  this.expect(e.types.parenL), this.expect(e.types.parenR);
                  var g = this.startNodeAt(b, c);
                  return this.match(e.types.colon) && (g.returnType = this.flowParseTypeAnnotation()), this.expect(e.types.arrow), this.parseArrowExpression(g, [], f);
                }
                var g = a.call(this, b, c, d, f, this.hasPlugin("trailingFunctionCommas"));
                if (!this.match(e.types.colon))
                  return g;
                var h = this.state.clone();
                try {
                  return this.parseParenItem(g, b, c, !0);
                } catch (i) {
                  if (i instanceof SyntaxError)
                    return this.state = h, g;
                  throw i;
                }
              };
            });
          }, b.exports = c["default"];
        }, {
          "../parser": 5,
          "../tokenizer/types": 17,
          "babel-runtime/helpers/interop-require-default": 26
        }],
        12: [function(a, b, c) {
          "use strict";
          function d(a) {
            return "JSXIdentifier" === a.type ? a.name : "JSXNamespacedName" === a.type ? a.namespace.name + ":" + a.name.name : "JSXMemberExpression" === a.type ? d(a.object) + "." + d(a.property) : void 0;
          }
          var e = a("babel-runtime/helpers/interop-require-default")["default"];
          c.__esModule = !0;
          var f = a("./xhtml"),
              g = e(f),
              h = a("../../tokenizer/types"),
              i = a("../../tokenizer/context"),
              j = a("../../parser"),
              k = e(j),
              l = a("../../util/identifier"),
              m = a("../../util/whitespace"),
              n = /^[\da-fA-F]+$/,
              o = /^\d+$/;
          i.types.j_oTag = new i.TokContext("<tag", !1), i.types.j_cTag = new i.TokContext("</tag", !1), i.types.j_expr = new i.TokContext("<tag>...</tag>", !0, !0), h.types.jsxName = new h.TokenType("jsxName"), h.types.jsxText = new h.TokenType("jsxText", {beforeExpr: !0}), h.types.jsxTagStart = new h.TokenType("jsxTagStart"), h.types.jsxTagEnd = new h.TokenType("jsxTagEnd"), h.types.jsxTagStart.updateContext = function() {
            this.state.context.push(i.types.j_expr), this.state.context.push(i.types.j_oTag), this.state.exprAllowed = !1;
          }, h.types.jsxTagEnd.updateContext = function(a) {
            var b = this.state.context.pop();
            b === i.types.j_oTag && a === h.types.slash || b === i.types.j_cTag ? (this.state.context.pop(), this.state.exprAllowed = this.curContext() === i.types.j_expr) : this.state.exprAllowed = !0;
          };
          var p = k["default"].prototype;
          p.jsxReadToken = function() {
            for (var a = "",
                b = this.state.pos; ; ) {
              this.state.pos >= this.input.length && this.raise(this.state.start, "Unterminated JSX contents");
              var c = this.input.charCodeAt(this.state.pos);
              switch (c) {
                case 60:
                case 123:
                  return this.state.pos === this.state.start ? 60 === c && this.state.exprAllowed ? (++this.state.pos, this.finishToken(h.types.jsxTagStart)) : this.getTokenFromCode(c) : (a += this.input.slice(b, this.state.pos), this.finishToken(h.types.jsxText, a));
                case 38:
                  a += this.input.slice(b, this.state.pos), a += this.jsxReadEntity(), b = this.state.pos;
                  break;
                default:
                  m.isNewLine(c) ? (a += this.input.slice(b, this.state.pos), a += this.jsxReadNewLine(!0), b = this.state.pos) : ++this.state.pos;
              }
            }
          }, p.jsxReadNewLine = function(a) {
            var b = this.input.charCodeAt(this.state.pos),
                c = void 0;
            return ++this.state.pos, 13 === b && 10 === this.input.charCodeAt(this.state.pos) ? (++this.state.pos, c = a ? "\n" : "\r\n") : c = String.fromCharCode(b), ++this.state.curLine, this.state.lineStart = this.state.pos, c;
          }, p.jsxReadString = function(a) {
            for (var b = "",
                c = ++this.state.pos; ; ) {
              this.state.pos >= this.input.length && this.raise(this.state.start, "Unterminated string constant");
              var d = this.input.charCodeAt(this.state.pos);
              if (d === a)
                break;
              38 === d ? (b += this.input.slice(c, this.state.pos), b += this.jsxReadEntity(), c = this.state.pos) : m.isNewLine(d) ? (b += this.input.slice(c, this.state.pos), b += this.jsxReadNewLine(!1), c = this.state.pos) : ++this.state.pos;
            }
            return b += this.input.slice(c, this.state.pos++), this.finishToken(h.types.string, b);
          }, p.jsxReadEntity = function() {
            for (var a = "",
                b = 0,
                c = void 0,
                d = this.input[this.state.pos],
                e = ++this.state.pos; this.state.pos < this.input.length && b++ < 10; ) {
              if (d = this.input[this.state.pos++], ";" === d) {
                "#" === a[0] ? "x" === a[1] ? (a = a.substr(2), n.test(a) && (c = String.fromCharCode(parseInt(a, 16)))) : (a = a.substr(1), o.test(a) && (c = String.fromCharCode(parseInt(a, 10)))) : c = g["default"][a];
                break;
              }
              a += d;
            }
            return c ? c : (this.state.pos = e, "&");
          }, p.jsxReadWord = function() {
            var a = void 0,
                b = this.state.pos;
            do
              a = this.input.charCodeAt(++this.state.pos);
 while (l.isIdentifierChar(a) || 45 === a);
            return this.finishToken(h.types.jsxName, this.input.slice(b, this.state.pos));
          }, p.jsxParseIdentifier = function() {
            var a = this.startNode();
            return this.match(h.types.jsxName) ? a.name = this.state.value : this.state.type.keyword ? a.name = this.state.type.keyword : this.unexpected(), this.next(), this.finishNode(a, "JSXIdentifier");
          }, p.jsxParseNamespacedName = function() {
            var a = this.state.start,
                b = this.state.startLoc,
                c = this.jsxParseIdentifier();
            if (!this.eat(h.types.colon))
              return c;
            var d = this.startNodeAt(a, b);
            return d.namespace = c, d.name = this.jsxParseIdentifier(), this.finishNode(d, "JSXNamespacedName");
          }, p.jsxParseElementName = function() {
            for (var a = this.state.start,
                b = this.state.startLoc,
                c = this.jsxParseNamespacedName(); this.eat(h.types.dot); ) {
              var d = this.startNodeAt(a, b);
              d.object = c, d.property = this.jsxParseIdentifier(), c = this.finishNode(d, "JSXMemberExpression");
            }
            return c;
          }, p.jsxParseAttributeValue = function() {
            var a = void 0;
            switch (this.state.type) {
              case h.types.braceL:
                if (a = this.jsxParseExpressionContainer(), "JSXEmptyExpression" !== a.expression.type)
                  return a;
                this.raise(a.start, "JSX attributes must only be assigned a non-empty expression");
              case h.types.jsxTagStart:
              case h.types.string:
                return a = this.parseExprAtom(), a.extra = null, a;
              default:
                this.raise(this.state.start, "JSX value should be either an expression or a quoted JSX text");
            }
          }, p.jsxParseEmptyExpression = function() {
            var a = this.startNodeAt(this.lastTokEnd, this.lastTokEndLoc);
            return this.finishNodeAt(a, "JSXEmptyExpression", this.start, this.startLoc);
          }, p.jsxParseExpressionContainer = function() {
            var a = this.startNode();
            return this.next(), this.match(h.types.braceR) ? a.expression = this.jsxParseEmptyExpression() : a.expression = this.parseExpression(), this.expect(h.types.braceR), this.finishNode(a, "JSXExpressionContainer");
          }, p.jsxParseAttribute = function() {
            var a = this.startNode();
            return this.eat(h.types.braceL) ? (this.expect(h.types.ellipsis), a.argument = this.parseMaybeAssign(), this.expect(h.types.braceR), this.finishNode(a, "JSXSpreadAttribute")) : (a.name = this.jsxParseNamespacedName(), a.value = this.eat(h.types.eq) ? this.jsxParseAttributeValue() : null, this.finishNode(a, "JSXAttribute"));
          }, p.jsxParseOpeningElementAt = function(a, b) {
            var c = this.startNodeAt(a, b);
            for (c.attributes = [], c.name = this.jsxParseElementName(); !this.match(h.types.slash) && !this.match(h.types.jsxTagEnd); )
              c.attributes.push(this.jsxParseAttribute());
            return c.selfClosing = this.eat(h.types.slash), this.expect(h.types.jsxTagEnd), this.finishNode(c, "JSXOpeningElement");
          }, p.jsxParseClosingElementAt = function(a, b) {
            var c = this.startNodeAt(a, b);
            return c.name = this.jsxParseElementName(), this.expect(h.types.jsxTagEnd), this.finishNode(c, "JSXClosingElement");
          }, p.jsxParseElementAt = function(a, b) {
            var c = this.startNodeAt(a, b),
                e = [],
                f = this.jsxParseOpeningElementAt(a, b),
                g = null;
            if (!f.selfClosing) {
              a: for (; ; )
                switch (this.state.type) {
                  case h.types.jsxTagStart:
                    if (a = this.state.start, b = this.state.startLoc, this.next(), this.eat(h.types.slash)) {
                      g = this.jsxParseClosingElementAt(a, b);
                      break a;
                    }
                    e.push(this.jsxParseElementAt(a, b));
                    break;
                  case h.types.jsxText:
                    e.push(this.parseExprAtom());
                    break;
                  case h.types.braceL:
                    e.push(this.jsxParseExpressionContainer());
                    break;
                  default:
                    this.unexpected();
                }
              d(g.name) !== d(f.name) && this.raise(g.start, "Expected corresponding JSX closing tag for <" + d(f.name) + ">");
            }
            return c.openingElement = f, c.closingElement = g, c.children = e, this.match(h.types.relational) && "<" === this.state.value && this.raise(this.state.start, "Adjacent JSX elements must be wrapped in an enclosing tag"), this.finishNode(c, "JSXElement");
          }, p.jsxParseElement = function() {
            var a = this.state.start,
                b = this.state.startLoc;
            return this.next(), this.jsxParseElementAt(a, b);
          }, c["default"] = function(a) {
            a.extend("parseExprAtom", function(a) {
              return function(b) {
                if (this.match(h.types.jsxText)) {
                  var c = this.parseLiteral(this.state.value, "JSXText");
                  return c.extra = null, c;
                }
                return this.match(h.types.jsxTagStart) ? this.jsxParseElement() : a.call(this, b);
              };
            }), a.extend("readToken", function(a) {
              return function(b) {
                var c = this.curContext();
                if (c === i.types.j_expr)
                  return this.jsxReadToken();
                if (c === i.types.j_oTag || c === i.types.j_cTag) {
                  if (l.isIdentifierStart(b))
                    return this.jsxReadWord();
                  if (62 === b)
                    return ++this.state.pos, this.finishToken(h.types.jsxTagEnd);
                  if ((34 === b || 39 === b) && c === i.types.j_oTag)
                    return this.jsxReadString(b);
                }
                return 60 === b && this.state.exprAllowed ? (++this.state.pos, this.finishToken(h.types.jsxTagStart)) : a.call(this, b);
              };
            }), a.extend("updateContext", function(a) {
              return function(b) {
                if (this.match(h.types.braceL)) {
                  var c = this.curContext();
                  c === i.types.j_oTag ? this.state.context.push(i.types.b_expr) : c === i.types.j_expr ? this.state.context.push(i.types.b_tmpl) : a.call(this, b), this.state.exprAllowed = !0;
                } else {
                  if (!this.match(h.types.slash) || b !== h.types.jsxTagStart)
                    return a.call(this, b);
                  this.state.context.length -= 2, this.state.context.push(i.types.j_cTag), this.state.exprAllowed = !1;
                }
              };
            });
          }, b.exports = c["default"];
        }, {
          "../../parser": 5,
          "../../tokenizer/context": 14,
          "../../tokenizer/types": 17,
          "../../util/identifier": 18,
          "../../util/whitespace": 20,
          "./xhtml": 13,
          "babel-runtime/helpers/interop-require-default": 26
        }],
        13: [function(a, b, c) {
          "use strict";
          c.__esModule = !0, c["default"] = {
            quot: '"',
            amp: "&",
            apos: "'",
            lt: "<",
            gt: ">",
            nbsp: " ",
            iexcl: "¡",
            cent: "¢",
            pound: "£",
            curren: "¤",
            yen: "¥",
            brvbar: "¦",
            sect: "§",
            uml: "¨",
            copy: "©",
            ordf: "ª",
            laquo: "«",
            not: "¬",
            shy: "­",
            reg: "®",
            macr: "¯",
            deg: "°",
            plusmn: "±",
            sup2: "²",
            sup3: "³",
            acute: "´",
            micro: "µ",
            para: "¶",
            middot: "·",
            cedil: "¸",
            sup1: "¹",
            ordm: "º",
            raquo: "»",
            frac14: "¼",
            frac12: "½",
            frac34: "¾",
            iquest: "¿",
            Agrave: "À",
            Aacute: "Á",
            Acirc: "Â",
            Atilde: "Ã",
            Auml: "Ä",
            Aring: "Å",
            AElig: "Æ",
            Ccedil: "Ç",
            Egrave: "È",
            Eacute: "É",
            Ecirc: "Ê",
            Euml: "Ë",
            Igrave: "Ì",
            Iacute: "Í",
            Icirc: "Î",
            Iuml: "Ï",
            ETH: "Ð",
            Ntilde: "Ñ",
            Ograve: "Ò",
            Oacute: "Ó",
            Ocirc: "Ô",
            Otilde: "Õ",
            Ouml: "Ö",
            times: "×",
            Oslash: "Ø",
            Ugrave: "Ù",
            Uacute: "Ú",
            Ucirc: "Û",
            Uuml: "Ü",
            Yacute: "Ý",
            THORN: "Þ",
            szlig: "ß",
            agrave: "à",
            aacute: "á",
            acirc: "â",
            atilde: "ã",
            auml: "ä",
            aring: "å",
            aelig: "æ",
            ccedil: "ç",
            egrave: "è",
            eacute: "é",
            ecirc: "ê",
            euml: "ë",
            igrave: "ì",
            iacute: "í",
            icirc: "î",
            iuml: "ï",
            eth: "ð",
            ntilde: "ñ",
            ograve: "ò",
            oacute: "ó",
            ocirc: "ô",
            otilde: "õ",
            ouml: "ö",
            divide: "÷",
            oslash: "ø",
            ugrave: "ù",
            uacute: "ú",
            ucirc: "û",
            uuml: "ü",
            yacute: "ý",
            thorn: "þ",
            yuml: "ÿ",
            OElig: "Œ",
            oelig: "œ",
            Scaron: "Š",
            scaron: "š",
            Yuml: "Ÿ",
            fnof: "ƒ",
            circ: "ˆ",
            tilde: "˜",
            Alpha: "Α",
            Beta: "Β",
            Gamma: "Γ",
            Delta: "Δ",
            Epsilon: "Ε",
            Zeta: "Ζ",
            Eta: "Η",
            Theta: "Θ",
            Iota: "Ι",
            Kappa: "Κ",
            Lambda: "Λ",
            Mu: "Μ",
            Nu: "Ν",
            Xi: "Ξ",
            Omicron: "Ο",
            Pi: "Π",
            Rho: "Ρ",
            Sigma: "Σ",
            Tau: "Τ",
            Upsilon: "Υ",
            Phi: "Φ",
            Chi: "Χ",
            Psi: "Ψ",
            Omega: "Ω",
            alpha: "α",
            beta: "β",
            gamma: "γ",
            delta: "δ",
            epsilon: "ε",
            zeta: "ζ",
            eta: "η",
            theta: "θ",
            iota: "ι",
            kappa: "κ",
            lambda: "λ",
            mu: "μ",
            nu: "ν",
            xi: "ξ",
            omicron: "ο",
            pi: "π",
            rho: "ρ",
            sigmaf: "ς",
            sigma: "σ",
            tau: "τ",
            upsilon: "υ",
            phi: "φ",
            chi: "χ",
            psi: "ψ",
            omega: "ω",
            thetasym: "ϑ",
            upsih: "ϒ",
            piv: "ϖ",
            ensp: " ",
            emsp: " ",
            thinsp: " ",
            zwnj: "‌",
            zwj: "‍",
            lrm: "‎",
            rlm: "‏",
            ndash: "–",
            mdash: "—",
            lsquo: "‘",
            rsquo: "’",
            sbquo: "‚",
            ldquo: "“",
            rdquo: "”",
            bdquo: "„",
            dagger: "†",
            Dagger: "‡",
            bull: "•",
            hellip: "…",
            permil: "‰",
            prime: "′",
            Prime: "″",
            lsaquo: "‹",
            rsaquo: "›",
            oline: "‾",
            frasl: "⁄",
            euro: "€",
            image: "ℑ",
            weierp: "℘",
            real: "ℜ",
            trade: "™",
            alefsym: "ℵ",
            larr: "←",
            uarr: "↑",
            rarr: "→",
            darr: "↓",
            harr: "↔",
            crarr: "↵",
            lArr: "⇐",
            uArr: "⇑",
            rArr: "⇒",
            dArr: "⇓",
            hArr: "⇔",
            forall: "∀",
            part: "∂",
            exist: "∃",
            empty: "∅",
            nabla: "∇",
            isin: "∈",
            notin: "∉",
            ni: "∋",
            prod: "∏",
            sum: "∑",
            minus: "−",
            lowast: "∗",
            radic: "√",
            prop: "∝",
            infin: "∞",
            ang: "∠",
            and: "∧",
            or: "∨",
            cap: "∩",
            cup: "∪",
            "int": "∫",
            there4: "∴",
            sim: "∼",
            cong: "≅",
            asymp: "≈",
            ne: "≠",
            equiv: "≡",
            le: "≤",
            ge: "≥",
            sub: "⊂",
            sup: "⊃",
            nsub: "⊄",
            sube: "⊆",
            supe: "⊇",
            oplus: "⊕",
            otimes: "⊗",
            perp: "⊥",
            sdot: "⋅",
            lceil: "⌈",
            rceil: "⌉",
            lfloor: "⌊",
            rfloor: "⌋",
            lang: "〈",
            rang: "〉",
            loz: "◊",
            spades: "♠",
            clubs: "♣",
            hearts: "♥",
            diams: "♦"
          }, b.exports = c["default"];
        }, {}],
        14: [function(a, b, c) {
          "use strict";
          var d = a("babel-runtime/helpers/class-call-check")["default"];
          c.__esModule = !0;
          var e = a("./types"),
              f = a("../util/whitespace"),
              g = function i(a, b, c, e) {
                d(this, i), this.token = a, this.isExpr = !!b, this.preserveSpace = !!c, this.override = e;
              };
          c.TokContext = g;
          var h = {
            b_stat: new g("{", !1),
            b_expr: new g("{", !0),
            b_tmpl: new g("${", !0),
            p_stat: new g("(", !1),
            p_expr: new g("(", !0),
            q_tmpl: new g("`", !0, !0, function(a) {
              return a.readTmplToken();
            }),
            f_expr: new g("function", !0)
          };
          c.types = h, e.types.parenR.updateContext = e.types.braceR.updateContext = function() {
            if (1 === this.state.context.length)
              return void(this.state.exprAllowed = !0);
            var a = this.state.context.pop();
            a === h.b_stat && this.curContext() === h.f_expr ? (this.state.context.pop(), this.state.exprAllowed = !1) : a === h.b_tmpl ? this.state.exprAllowed = !0 : this.state.exprAllowed = !a.isExpr;
          }, e.types.name.updateContext = function(a) {
            this.state.exprAllowed = !1, (a === e.types._let || a === e.types._const || a === e.types._var) && f.lineBreak.test(this.input.slice(this.state.end)) && (this.state.exprAllowed = !0);
          }, e.types.braceL.updateContext = function(a) {
            this.state.context.push(this.braceIsBlock(a) ? h.b_stat : h.b_expr), this.state.exprAllowed = !0;
          }, e.types.dollarBraceL.updateContext = function() {
            this.state.context.push(h.b_tmpl), this.state.exprAllowed = !0;
          }, e.types.parenL.updateContext = function(a) {
            var b = a === e.types._if || a === e.types._for || a === e.types._with || a === e.types._while;
            this.state.context.push(b ? h.p_stat : h.p_expr), this.state.exprAllowed = !0;
          }, e.types.incDec.updateContext = function() {}, e.types._function.updateContext = function() {
            this.curContext() !== h.b_stat && this.state.context.push(h.f_expr), this.state.exprAllowed = !1;
          }, e.types.backQuote.updateContext = function() {
            this.curContext() === h.q_tmpl ? this.state.context.pop() : this.state.context.push(h.q_tmpl), this.state.exprAllowed = !1;
          };
        }, {
          "../util/whitespace": 20,
          "./types": 17,
          "babel-runtime/helpers/class-call-check": 24
        }],
        15: [function(a, b, c) {
          "use strict";
          function d(a) {
            return 65535 >= a ? String.fromCharCode(a) : String.fromCharCode((a - 65536 >> 10) + 55296, (a - 65536 & 1023) + 56320);
          }
          var e = a("babel-runtime/helpers/class-call-check")["default"],
              f = a("babel-runtime/helpers/interop-require-default")["default"];
          c.__esModule = !0;
          var g = a("../util/identifier"),
              h = a("./types"),
              i = a("./context"),
              j = a("../util/location"),
              k = a("../util/whitespace"),
              l = a("./state"),
              m = f(l),
              n = function p(a) {
                e(this, p), this.type = a.type, this.value = a.value, this.start = a.start, this.end = a.end, this.loc = new j.SourceLocation(a.startLoc, a.endLoc);
              };
          c.Token = n;
          var o = function() {
            function a(b, c) {
              e(this, a), this.state = new m["default"], this.state.init(b, c);
            }
            return a.prototype.next = function() {
              this.isLookahead || this.state.tokens.push(new n(this.state)), this.state.lastTokEnd = this.state.end, this.state.lastTokStart = this.state.start, this.state.lastTokEndLoc = this.state.endLoc, this.state.lastTokStartLoc = this.state.startLoc, this.nextToken();
            }, a.prototype.eat = function(a) {
              return this.match(a) ? (this.next(), !0) : !1;
            }, a.prototype.match = function(a) {
              return this.state.type === a;
            }, a.prototype.isKeyword = function(a) {
              return g.isKeyword(a);
            }, a.prototype.lookahead = function() {
              var a = this.state;
              this.state = a.clone(!0), this.isLookahead = !0, this.next(), this.isLookahead = !1;
              var b = this.state.clone(!0);
              return this.state = a, b;
            }, a.prototype.setStrict = function(a) {
              if (this.state.strict = a, this.match(h.types.num) || this.match(h.types.string)) {
                for (this.state.pos = this.state.start; this.state.pos < this.state.lineStart; )
                  this.state.lineStart = this.input.lastIndexOf("\n", this.state.lineStart - 2) + 1, --this.state.curLine;
                this.nextToken();
              }
            }, a.prototype.curContext = function() {
              return this.state.context[this.state.context.length - 1];
            }, a.prototype.nextToken = function() {
              var a = this.curContext();
              return a && a.preserveSpace || this.skipSpace(), this.state.containsOctal = !1, this.state.octalPosition = null, this.state.start = this.state.pos, this.state.startLoc = this.state.curPosition(), this.state.pos >= this.input.length ? this.finishToken(h.types.eof) : a.override ? a.override(this) : this.readToken(this.fullCharCodeAtPos());
            }, a.prototype.readToken = function(a) {
              return g.isIdentifierStart(a) || 92 === a ? this.readWord() : this.getTokenFromCode(a);
            }, a.prototype.fullCharCodeAtPos = function() {
              var a = this.input.charCodeAt(this.state.pos);
              if (55295 >= a || a >= 57344)
                return a;
              var b = this.input.charCodeAt(this.state.pos + 1);
              return (a << 10) + b - 56613888;
            }, a.prototype.pushComment = function(a, b, c, d, e, f) {
              var g = {
                type: a ? "CommentBlock" : "CommentLine",
                value: b,
                start: c,
                end: d,
                loc: new j.SourceLocation(e, f)
              };
              this.isLookahead || (this.state.tokens.push(g), this.state.comments.push(g)), this.addComment(g);
            }, a.prototype.skipBlockComment = function() {
              var a = this.state.curPosition(),
                  b = this.state.pos,
                  c = this.input.indexOf("*/", this.state.pos += 2);
              -1 === c && this.raise(this.state.pos - 2, "Unterminated comment"), this.state.pos = c + 2, k.lineBreakG.lastIndex = b;
              for (var d = void 0; (d = k.lineBreakG.exec(this.input)) && d.index < this.state.pos; )
                ++this.state.curLine, this.state.lineStart = d.index + d[0].length;
              this.pushComment(!0, this.input.slice(b + 2, c), b, this.state.pos, a, this.state.curPosition());
            }, a.prototype.skipLineComment = function(a) {
              for (var b = this.state.pos,
                  c = this.state.curPosition(),
                  d = this.input.charCodeAt(this.state.pos += a); this.state.pos < this.input.length && 10 !== d && 13 !== d && 8232 !== d && 8233 !== d; )
                ++this.state.pos, d = this.input.charCodeAt(this.state.pos);
              this.pushComment(!1, this.input.slice(b + a, this.state.pos), b, this.state.pos, c, this.state.curPosition());
            }, a.prototype.skipSpace = function() {
              a: for (; this.state.pos < this.input.length; ) {
                var a = this.input.charCodeAt(this.state.pos);
                switch (a) {
                  case 32:
                  case 160:
                    ++this.state.pos;
                    break;
                  case 13:
                    10 === this.input.charCodeAt(this.state.pos + 1) && ++this.state.pos;
                  case 10:
                  case 8232:
                  case 8233:
                    ++this.state.pos, ++this.state.curLine, this.state.lineStart = this.state.pos;
                    break;
                  case 47:
                    switch (this.input.charCodeAt(this.state.pos + 1)) {
                      case 42:
                        this.skipBlockComment();
                        break;
                      case 47:
                        this.skipLineComment(2);
                        break;
                      default:
                        break a;
                    }
                    break;
                  default:
                    if (!(a > 8 && 14 > a || a >= 5760 && k.nonASCIIwhitespace.test(String.fromCharCode(a))))
                      break a;
                    ++this.state.pos;
                }
              }
            }, a.prototype.finishToken = function(a, b) {
              this.state.end = this.state.pos, this.state.endLoc = this.state.curPosition();
              var c = this.state.type;
              this.state.type = a, this.state.value = b, this.updateContext(c);
            }, a.prototype.readToken_dot = function() {
              var a = this.input.charCodeAt(this.state.pos + 1);
              if (a >= 48 && 57 >= a)
                return this.readNumber(!0);
              var b = this.input.charCodeAt(this.state.pos + 2);
              return 46 === a && 46 === b ? (this.state.pos += 3, this.finishToken(h.types.ellipsis)) : (++this.state.pos, this.finishToken(h.types.dot));
            }, a.prototype.readToken_slash = function() {
              if (this.state.exprAllowed)
                return ++this.state.pos, this.readRegexp();
              var a = this.input.charCodeAt(this.state.pos + 1);
              return 61 === a ? this.finishOp(h.types.assign, 2) : this.finishOp(h.types.slash, 1);
            }, a.prototype.readToken_mult_modulo = function(a) {
              var b = 42 === a ? h.types.star : h.types.modulo,
                  c = 1,
                  d = this.input.charCodeAt(this.state.pos + 1);
              return 42 === d && this.hasPlugin("exponentiationOperator") && (c++, d = this.input.charCodeAt(this.state.pos + 2), b = h.types.exponent), 61 === d && (c++, b = h.types.assign), this.finishOp(b, c);
            }, a.prototype.readToken_pipe_amp = function(a) {
              var b = this.input.charCodeAt(this.state.pos + 1);
              return b === a ? this.finishOp(124 === a ? h.types.logicalOR : h.types.logicalAND, 2) : 61 === b ? this.finishOp(h.types.assign, 2) : this.finishOp(124 === a ? h.types.bitwiseOR : h.types.bitwiseAND, 1);
            }, a.prototype.readToken_caret = function() {
              var a = this.input.charCodeAt(this.state.pos + 1);
              return 61 === a ? this.finishOp(h.types.assign, 2) : this.finishOp(h.types.bitwiseXOR, 1);
            }, a.prototype.readToken_plus_min = function(a) {
              var b = this.input.charCodeAt(this.state.pos + 1);
              return b === a ? 45 === b && 62 === this.input.charCodeAt(this.state.pos + 2) && k.lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.pos)) ? (this.skipLineComment(3), this.skipSpace(), this.nextToken()) : this.finishOp(h.types.incDec, 2) : 61 === b ? this.finishOp(h.types.assign, 2) : this.finishOp(h.types.plusMin, 1);
            }, a.prototype.readToken_lt_gt = function(a) {
              var b = this.input.charCodeAt(this.state.pos + 1),
                  c = 1;
              return b === a ? (c = 62 === a && 62 === this.input.charCodeAt(this.state.pos + 2) ? 3 : 2, 61 === this.input.charCodeAt(this.state.pos + c) ? this.finishOp(h.types.assign, c + 1) : this.finishOp(h.types.bitShift, c)) : 33 === b && 60 === a && 45 === this.input.charCodeAt(this.state.pos + 2) && 45 === this.input.charCodeAt(this.state.pos + 3) ? (this.inModule && this.unexpected(), this.skipLineComment(4), this.skipSpace(), this.nextToken()) : (61 === b && (c = 61 === this.input.charCodeAt(this.state.pos + 2) ? 3 : 2), this.finishOp(h.types.relational, c));
            }, a.prototype.readToken_eq_excl = function(a) {
              var b = this.input.charCodeAt(this.state.pos + 1);
              return 61 === b ? this.finishOp(h.types.equality, 61 === this.input.charCodeAt(this.state.pos + 2) ? 3 : 2) : 61 === a && 62 === b ? (this.state.pos += 2, this.finishToken(h.types.arrow)) : this.finishOp(61 === a ? h.types.eq : h.types.prefix, 1);
            }, a.prototype.getTokenFromCode = function(a) {
              switch (a) {
                case 46:
                  return this.readToken_dot();
                case 40:
                  return ++this.state.pos, this.finishToken(h.types.parenL);
                case 41:
                  return ++this.state.pos, this.finishToken(h.types.parenR);
                case 59:
                  return ++this.state.pos, this.finishToken(h.types.semi);
                case 44:
                  return ++this.state.pos, this.finishToken(h.types.comma);
                case 91:
                  return ++this.state.pos, this.finishToken(h.types.bracketL);
                case 93:
                  return ++this.state.pos, this.finishToken(h.types.bracketR);
                case 123:
                  return ++this.state.pos, this.finishToken(h.types.braceL);
                case 125:
                  return ++this.state.pos, this.finishToken(h.types.braceR);
                case 58:
                  return this.hasPlugin("functionBind") && 58 === this.input.charCodeAt(this.state.pos + 1) ? this.finishOp(h.types.doubleColon, 2) : (++this.state.pos, this.finishToken(h.types.colon));
                case 63:
                  return ++this.state.pos, this.finishToken(h.types.question);
                case 64:
                  return ++this.state.pos, this.finishToken(h.types.at);
                case 96:
                  return ++this.state.pos, this.finishToken(h.types.backQuote);
                case 48:
                  var b = this.input.charCodeAt(this.state.pos + 1);
                  if (120 === b || 88 === b)
                    return this.readRadixNumber(16);
                  if (111 === b || 79 === b)
                    return this.readRadixNumber(8);
                  if (98 === b || 66 === b)
                    return this.readRadixNumber(2);
                case 49:
                case 50:
                case 51:
                case 52:
                case 53:
                case 54:
                case 55:
                case 56:
                case 57:
                  return this.readNumber(!1);
                case 34:
                case 39:
                  return this.readString(a);
                case 47:
                  return this.readToken_slash();
                case 37:
                case 42:
                  return this.readToken_mult_modulo(a);
                case 124:
                case 38:
                  return this.readToken_pipe_amp(a);
                case 94:
                  return this.readToken_caret();
                case 43:
                case 45:
                  return this.readToken_plus_min(a);
                case 60:
                case 62:
                  return this.readToken_lt_gt(a);
                case 61:
                case 33:
                  return this.readToken_eq_excl(a);
                case 126:
                  return this.finishOp(h.types.prefix, 1);
              }
              this.raise(this.state.pos, "Unexpected character '" + d(a) + "'");
            }, a.prototype.finishOp = function(a, b) {
              var c = this.input.slice(this.state.pos, this.state.pos + b);
              return this.state.pos += b, this.finishToken(a, c);
            }, a.prototype.readRegexp = function() {
              for (var a = void 0,
                  b = void 0,
                  c = this.state.pos; ; ) {
                this.state.pos >= this.input.length && this.raise(c, "Unterminated regular expression");
                var d = this.input.charAt(this.state.pos);
                if (k.lineBreak.test(d) && this.raise(c, "Unterminated regular expression"), a)
                  a = !1;
                else {
                  if ("[" === d)
                    b = !0;
                  else if ("]" === d && b)
                    b = !1;
                  else if ("/" === d && !b)
                    break;
                  a = "\\" === d;
                }
                ++this.state.pos;
              }
              var e = this.input.slice(c, this.state.pos);
              ++this.state.pos;
              var f = this.readWord1();
              if (f) {
                var g = /^[gmsiyu]*$/;
                g.test(f) || this.raise(c, "Invalid regular expression flag");
              }
              return this.finishToken(h.types.regexp, {
                pattern: e,
                flags: f
              });
            }, a.prototype.readInt = function(a, b) {
              for (var c = this.state.pos,
                  d = 0,
                  e = 0,
                  f = null == b ? 1 / 0 : b; f > e; ++e) {
                var g = this.input.charCodeAt(this.state.pos),
                    h = void 0;
                if (h = g >= 97 ? g - 97 + 10 : g >= 65 ? g - 65 + 10 : g >= 48 && 57 >= g ? g - 48 : 1 / 0, h >= a)
                  break;
                ++this.state.pos, d = d * a + h;
              }
              return this.state.pos === c || null != b && this.state.pos - c !== b ? null : d;
            }, a.prototype.readRadixNumber = function(a) {
              this.state.pos += 2;
              var b = this.readInt(a);
              return null == b && this.raise(this.state.start + 2, "Expected number in radix " + a), g.isIdentifierStart(this.fullCharCodeAtPos()) && this.raise(this.state.pos, "Identifier directly after number"), this.finishToken(h.types.num, b);
            }, a.prototype.readNumber = function(a) {
              var b = this.state.pos,
                  c = !1,
                  d = 48 === this.input.charCodeAt(this.state.pos);
              a || null !== this.readInt(10) || this.raise(b, "Invalid number");
              var e = this.input.charCodeAt(this.state.pos);
              46 === e && (++this.state.pos, this.readInt(10), c = !0, e = this.input.charCodeAt(this.state.pos)), (69 === e || 101 === e) && (e = this.input.charCodeAt(++this.state.pos), (43 === e || 45 === e) && ++this.state.pos, null === this.readInt(10) && this.raise(b, "Invalid number"), c = !0), g.isIdentifierStart(this.fullCharCodeAtPos()) && this.raise(this.state.pos, "Identifier directly after number");
              var f = this.input.slice(b, this.state.pos),
                  i = void 0;
              return c ? i = parseFloat(f) : d && 1 !== f.length ? /[89]/.test(f) || this.state.strict ? this.raise(b, "Invalid number") : i = parseInt(f, 8) : i = parseInt(f, 10), this.finishToken(h.types.num, i);
            }, a.prototype.readCodePoint = function() {
              var a = this.input.charCodeAt(this.state.pos),
                  b = void 0;
              if (123 === a) {
                var c = ++this.state.pos;
                b = this.readHexChar(this.input.indexOf("}", this.state.pos) - this.state.pos), ++this.state.pos, b > 1114111 && this.raise(c, "Code point out of bounds");
              } else
                b = this.readHexChar(4);
              return b;
            }, a.prototype.readString = function(a) {
              for (var b = "",
                  c = ++this.state.pos; ; ) {
                this.state.pos >= this.input.length && this.raise(this.state.start, "Unterminated string constant");
                var d = this.input.charCodeAt(this.state.pos);
                if (d === a)
                  break;
                92 === d ? (b += this.input.slice(c, this.state.pos), b += this.readEscapedChar(!1), c = this.state.pos) : (k.isNewLine(d) && this.raise(this.state.start, "Unterminated string constant"), ++this.state.pos);
              }
              return b += this.input.slice(c, this.state.pos++), this.finishToken(h.types.string, b);
            }, a.prototype.readTmplToken = function() {
              for (var a = "",
                  b = this.state.pos; ; ) {
                this.state.pos >= this.input.length && this.raise(this.state.start, "Unterminated template");
                var c = this.input.charCodeAt(this.state.pos);
                if (96 === c || 36 === c && 123 === this.input.charCodeAt(this.state.pos + 1))
                  return this.state.pos === this.state.start && this.match(h.types.template) ? 36 === c ? (this.state.pos += 2, this.finishToken(h.types.dollarBraceL)) : (++this.state.pos, this.finishToken(h.types.backQuote)) : (a += this.input.slice(b, this.state.pos), this.finishToken(h.types.template, a));
                if (92 === c)
                  a += this.input.slice(b, this.state.pos), a += this.readEscapedChar(!0), b = this.state.pos;
                else if (k.isNewLine(c)) {
                  switch (a += this.input.slice(b, this.state.pos), ++this.state.pos, c) {
                    case 13:
                      10 === this.input.charCodeAt(this.state.pos) && ++this.state.pos;
                    case 10:
                      a += "\n";
                      break;
                    default:
                      a += String.fromCharCode(c);
                  }
                  ++this.state.curLine, this.state.lineStart = this.state.pos, b = this.state.pos;
                } else
                  ++this.state.pos;
              }
            }, a.prototype.readEscapedChar = function(a) {
              var b = this.input.charCodeAt(++this.state.pos);
              switch (++this.state.pos, b) {
                case 110:
                  return "\n";
                case 114:
                  return "\r";
                case 120:
                  return String.fromCharCode(this.readHexChar(2));
                case 117:
                  return d(this.readCodePoint());
                case 116:
                  return "	";
                case 98:
                  return "\b";
                case 118:
                  return "\x0B";
                case 102:
                  return "\f";
                case 13:
                  10 === this.input.charCodeAt(this.state.pos) && ++this.state.pos;
                case 10:
                  return this.state.lineStart = this.state.pos, ++this.state.curLine, "";
                default:
                  if (b >= 48 && 55 >= b) {
                    var c = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/)[0],
                        e = parseInt(c, 8);
                    return e > 255 && (c = c.slice(0, -1), e = parseInt(c, 8)), e > 0 && (this.state.containsOctal || (this.state.containsOctal = !0, this.state.octalPosition = this.state.pos - 2), (this.state.strict || a) && this.raise(this.state.pos - 2, "Octal literal in strict mode")), this.state.pos += c.length - 1, String.fromCharCode(e);
                  }
                  return String.fromCharCode(b);
              }
            }, a.prototype.readHexChar = function(a) {
              var b = this.state.pos,
                  c = this.readInt(16, a);
              return null === c && this.raise(b, "Bad character escape sequence"), c;
            }, a.prototype.readWord1 = function() {
              this.state.containsEsc = !1;
              for (var a = "",
                  b = !0,
                  c = this.state.pos; this.state.pos < this.input.length; ) {
                var e = this.fullCharCodeAtPos();
                if (g.isIdentifierChar(e))
                  this.state.pos += 65535 >= e ? 1 : 2;
                else {
                  if (92 !== e)
                    break;
                  this.state.containsEsc = !0, a += this.input.slice(c, this.state.pos);
                  var f = this.state.pos;
                  117 !== this.input.charCodeAt(++this.state.pos) && this.raise(this.state.pos, "Expecting Unicode escape sequence \\uXXXX"), ++this.state.pos;
                  var h = this.readCodePoint();
                  (b ? g.isIdentifierStart : g.isIdentifierChar)(h, !0) || this.raise(f, "Invalid Unicode escape"), a += d(h), c = this.state.pos;
                }
                b = !1;
              }
              return a + this.input.slice(c, this.state.pos);
            }, a.prototype.readWord = function() {
              var a = this.readWord1(),
                  b = h.types.name;
              return !this.state.containsEsc && this.isKeyword(a) && (b = h.keywords[a]), this.finishToken(b, a);
            }, a.prototype.braceIsBlock = function(a) {
              if (a === h.types.colon) {
                var b = this.curContext();
                if (b === i.types.b_stat || b === i.types.b_expr)
                  return !b.isExpr;
              }
              return a === h.types._return ? k.lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start)) : a === h.types._else || a === h.types.semi || a === h.types.eof || a === h.types.parenR ? !0 : a === h.types.braceL ? this.curContext() === i.types.b_stat : !this.state.exprAllowed;
            }, a.prototype.updateContext = function(a) {
              var b = void 0,
                  c = this.state.type;
              c.keyword && a === h.types.dot ? this.state.exprAllowed = !1 : (b = c.updateContext) ? b.call(this, a) : this.state.exprAllowed = c.beforeExpr;
            }, a;
          }();
          c["default"] = o;
        }, {
          "../util/identifier": 18,
          "../util/location": 19,
          "../util/whitespace": 20,
          "./context": 14,
          "./state": 16,
          "./types": 17,
          "babel-runtime/helpers/class-call-check": 24,
          "babel-runtime/helpers/interop-require-default": 26
        }],
        16: [function(a, b, c) {
          "use strict";
          var d = a("babel-runtime/helpers/class-call-check")["default"];
          c.__esModule = !0;
          var e = a("../util/location"),
              f = a("./context"),
              g = a("./types"),
              h = function() {
                function a() {
                  d(this, a);
                }
                return a.prototype.init = function(a, b) {
                  return this.strict = a.strictMode === !1 ? !1 : "module" === a.sourceType, this.input = b, this.potentialArrowAt = -1, this.inMethod = this.inFunction = this.inGenerator = this.inAsync = !1, this.labels = [], this.decorators = [], this.tokens = [], this.comments = [], this.trailingComments = [], this.leadingComments = [], this.commentStack = [], this.pos = this.lineStart = 0, this.curLine = 1, this.type = g.types.eof, this.value = null, this.start = this.end = this.pos, this.startLoc = this.endLoc = this.curPosition(), this.lastTokEndLoc = this.lastTokStartLoc = null, this.lastTokStart = this.lastTokEnd = this.pos, this.context = [f.types.b_stat], this.exprAllowed = !0, this.containsEsc = this.containsOctal = !1, this.octalPosition = null, this;
                }, a.prototype.curPosition = function() {
                  return new e.Position(this.curLine, this.pos - this.lineStart);
                }, a.prototype.clone = function(b) {
                  var c = new a;
                  for (var d in this) {
                    var e = this[d];
                    b && "context" !== d || !Array.isArray(e) || (e = e.slice()), c[d] = e;
                  }
                  return c;
                }, a;
              }();
          c["default"] = h, b.exports = c["default"];
        }, {
          "../util/location": 19,
          "./context": 14,
          "./types": 17,
          "babel-runtime/helpers/class-call-check": 24
        }],
        17: [function(a, b, c) {
          "use strict";
          function d(a, b) {
            return new g(a, {
              beforeExpr: !0,
              binop: b
            });
          }
          function e(a) {
            var b = arguments.length <= 1 || void 0 === arguments[1] ? {} : arguments[1];
            b.keyword = a, k[a] = j["_" + a] = new g(a, b);
          }
          var f = a("babel-runtime/helpers/class-call-check")["default"];
          c.__esModule = !0;
          var g = function l(a) {
            var b = arguments.length <= 1 || void 0 === arguments[1] ? {} : arguments[1];
            f(this, l), this.label = a, this.keyword = b.keyword, this.beforeExpr = !!b.beforeExpr, this.startsExpr = !!b.startsExpr, this.rightAssociative = !!b.rightAssociative, this.isLoop = !!b.isLoop, this.isAssign = !!b.isAssign, this.prefix = !!b.prefix, this.postfix = !!b.postfix, this.binop = b.binop || null, this.updateContext = null;
          };
          c.TokenType = g;
          var h = {beforeExpr: !0},
              i = {startsExpr: !0},
              j = {
                num: new g("num", i),
                regexp: new g("regexp", i),
                string: new g("string", i),
                name: new g("name", i),
                eof: new g("eof"),
                bracketL: new g("[", {
                  beforeExpr: !0,
                  startsExpr: !0
                }),
                bracketR: new g("]"),
                braceL: new g("{", {
                  beforeExpr: !0,
                  startsExpr: !0
                }),
                braceR: new g("}"),
                parenL: new g("(", {
                  beforeExpr: !0,
                  startsExpr: !0
                }),
                parenR: new g(")"),
                comma: new g(",", h),
                semi: new g(";", h),
                colon: new g(":", h),
                doubleColon: new g("::", h),
                dot: new g("."),
                question: new g("?", h),
                arrow: new g("=>", h),
                template: new g("template"),
                ellipsis: new g("...", h),
                backQuote: new g("`", i),
                dollarBraceL: new g("${", {
                  beforeExpr: !0,
                  startsExpr: !0
                }),
                at: new g("@"),
                eq: new g("=", {
                  beforeExpr: !0,
                  isAssign: !0
                }),
                assign: new g("_=", {
                  beforeExpr: !0,
                  isAssign: !0
                }),
                incDec: new g("++/--", {
                  prefix: !0,
                  postfix: !0,
                  startsExpr: !0
                }),
                prefix: new g("prefix", {
                  beforeExpr: !0,
                  prefix: !0,
                  startsExpr: !0
                }),
                logicalOR: d("||", 1),
                logicalAND: d("&&", 2),
                bitwiseOR: d("|", 3),
                bitwiseXOR: d("^", 4),
                bitwiseAND: d("&", 5),
                equality: d("==/!=", 6),
                relational: d("</>", 7),
                bitShift: d("<</>>", 8),
                plusMin: new g("+/-", {
                  beforeExpr: !0,
                  binop: 9,
                  prefix: !0,
                  startsExpr: !0
                }),
                modulo: d("%", 10),
                star: d("*", 10),
                slash: d("/", 10),
                exponent: new g("**", {
                  beforeExpr: !0,
                  binop: 11,
                  rightAssociative: !0
                })
              };
          c.types = j;
          var k = {};
          c.keywords = k, e("break"), e("case", h), e("catch"), e("continue"), e("debugger"), e("default", h), e("do", {
            isLoop: !0,
            beforeExpr: !0
          }), e("else", h), e("finally"), e("for", {isLoop: !0}), e("function", i), e("if"), e("return", h), e("switch"), e("throw", h), e("try"), e("var"), e("let"), e("const"), e("while", {isLoop: !0}), e("with"), e("new", {
            beforeExpr: !0,
            startsExpr: !0
          }), e("this", i), e("super", i), e("class"), e("extends", h), e("export"), e("import"), e("yield", {
            beforeExpr: !0,
            startsExpr: !0
          }), e("null", i), e("true", i), e("false", i), e("in", {
            beforeExpr: !0,
            binop: 7
          }), e("instanceof", {
            beforeExpr: !0,
            binop: 7
          }), e("typeof", {
            beforeExpr: !0,
            prefix: !0,
            startsExpr: !0
          }), e("void", {
            beforeExpr: !0,
            prefix: !0,
            startsExpr: !0
          }), e("delete", {
            beforeExpr: !0,
            prefix: !0,
            startsExpr: !0
          });
        }, {"babel-runtime/helpers/class-call-check": 24}],
        18: [function(a, b, c) {
          "use strict";
          function d(a) {
            return a = a.split(" "), function(b) {
              return a.indexOf(b) >= 0;
            };
          }
          function e(a, b) {
            for (var c = 65536,
                d = 0; d < b.length; d += 2) {
              if (c += b[d], c > a)
                return !1;
              if (c += b[d + 1], c >= a)
                return !0;
            }
          }
          function f(a) {
            return 65 > a ? 36 === a : 91 > a ? !0 : 97 > a ? 95 === a : 123 > a ? !0 : 65535 >= a ? a >= 170 && l.test(String.fromCharCode(a)) : e(a, n);
          }
          function g(a) {
            return 48 > a ? 36 === a : 58 > a ? !0 : 65 > a ? !1 : 91 > a ? !0 : 97 > a ? 95 === a : 123 > a ? !0 : 65535 >= a ? a >= 170 && m.test(String.fromCharCode(a)) : e(a, n) || e(a, o);
          }
          c.__esModule = !0, c.isIdentifierStart = f, c.isIdentifierChar = g;
          var h = {
            6: d("enum await"),
            strict: d("implements interface let package private protected public static yield"),
            strictBind: d("eval arguments")
          };
          c.reservedWords = h;
          var i = d("break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this let const class extends export import yield super");
          c.isKeyword = i;
          var j = "ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙա-ևא-תװ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࢠ-ࢲऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘౙౠౡಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൠൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡷᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᧁ-ᧇᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᳩ-ᳬᳮ-ᳱᳵᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖ゛-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿌ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞎꞐ-ꞭꞰꞱꟷ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭟꭤꭥꯀ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ",
              k = "‌‍·̀-ͯ·҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-٩ٰۖ-ۜ۟-۪ۤۧۨ-ۭ۰-۹ܑܰ-݊ަ-ް߀-߉߫-߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛ࣤ-ःऺ-़ा-ॏ॑-ॗॢॣ०-९ঁ-ঃ়া-ৄেৈো-্ৗৢৣ০-৯ਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣ૦-૯ଁ-ଃ଼ା-ୄେୈୋ-୍ୖୗୢୣ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఀ-ఃా-ౄె-ైొ-్ౕౖౢౣ౦-౯ಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣ೦-೯ഁ-ഃാ-ൄെ-ൈൊ-്ൗൢൣ൦-൯ංඃ්ා-ුූෘ-ෟ෦-෯ෲෳัิ-ฺ็-๎๐-๙ັິ-ູົຼ່-ໍ໐-໙༘༙༠-༩༹༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှ၀-၉ၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟፩-፱ᜒ-᜔ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝០-៩᠋-᠍᠐-᠙ᢩᤠ-ᤫᤰ-᤻᥆-᥏ᦰ-ᧀᧈᧉ᧐-᧚ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪰-᪽ᬀ-ᬄ᬴-᭄᭐-᭙᭫-᭳ᮀ-ᮂᮡ-ᮭ᮰-᮹᯦-᯳ᰤ-᰷᱀-᱉᱐-᱙᳐-᳔᳒-᳨᳭ᳲ-᳴᳸᳹᷀-᷵᷼-᷿‿⁀⁔⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯꘠-꘩꙯ꙴ-꙽ꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧꢀꢁꢴ-꣄꣐-꣙꣠-꣱꤀-꤉ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀꧐-꧙ꧥ꧰-꧹ꨩ-ꨶꩃꩌꩍ꩐-꩙ꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭꯰-꯹ﬞ︀-️︠-︭︳︴﹍-﹏０-９＿",
              l = new RegExp("[" + j + "]"),
              m = new RegExp("[" + j + k + "]");
          j = k = null;
          var n = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 17, 26, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 99, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 98, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 26, 45, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 955, 52, 76, 44, 33, 24, 27, 35, 42, 34, 4, 0, 13, 47, 15, 3, 22, 0, 38, 17, 2, 24, 133, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 32, 4, 287, 47, 21, 1, 2, 0, 185, 46, 82, 47, 21, 0, 60, 42, 502, 63, 32, 0, 449, 56, 1288, 920, 104, 110, 2962, 1070, 13266, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 881, 68, 12, 0, 67, 12, 16481, 1, 3071, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 4149, 196, 1340, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42710, 42, 4148, 12, 221, 16355, 541],
              o = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 1306, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 52, 0, 13, 2, 49, 13, 16, 9, 83, 11, 168, 11, 6, 9, 8, 2, 57, 0, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 316, 19, 13, 9, 214, 6, 3, 8, 112, 16, 16, 9, 82, 12, 9, 9, 535, 9, 20855, 9, 135, 4, 60, 6, 26, 9, 1016, 45, 17, 3, 19723, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 4305, 6, 792618, 239];
        }, {}],
        19: [function(a, b, c) {
          "use strict";
          function d(a, b) {
            for (var c = 1,
                d = 0; ; ) {
              f.lineBreakG.lastIndex = d;
              var e = f.lineBreakG.exec(a);
              if (!(e && e.index < b))
                return new g(c, b - d);
              ++c, d = e.index + e[0].length;
            }
          }
          var e = a("babel-runtime/helpers/class-call-check")["default"];
          c.__esModule = !0, c.getLineInfo = d;
          var f = a("./whitespace"),
              g = function i(a, b) {
                e(this, i), this.line = a, this.column = b;
              };
          c.Position = g;
          var h = function j(a, b) {
            e(this, j), this.start = a, this.end = b;
          };
          c.SourceLocation = h;
        }, {
          "./whitespace": 20,
          "babel-runtime/helpers/class-call-check": 24
        }],
        20: [function(a, b, c) {
          "use strict";
          function d(a) {
            return 10 === a || 13 === a || 8232 === a || 8233 === a;
          }
          c.__esModule = !0, c.isNewLine = d;
          var e = /\r\n?|\n|\u2028|\u2029/;
          c.lineBreak = e;
          var f = new RegExp(e.source, "g");
          c.lineBreakG = f;
          var g = /[\u1680\u180e\u2000-\u200a\u202f\u205f\u3000\ufeff]/;
          c.nonASCIIwhitespace = g;
        }, {}],
        21: [function(a, b, c) {
          b.exports = {
            "default": a("core-js/library/fn/get-iterator"),
            __esModule: !0
          };
        }, {"core-js/library/fn/get-iterator": 27}],
        22: [function(a, b, c) {
          b.exports = {
            "default": a("core-js/library/fn/object/create"),
            __esModule: !0
          };
        }, {"core-js/library/fn/object/create": 28}],
        23: [function(a, b, c) {
          b.exports = {
            "default": a("core-js/library/fn/object/set-prototype-of"),
            __esModule: !0
          };
        }, {"core-js/library/fn/object/set-prototype-of": 29}],
        24: [function(a, b, c) {
          "use strict";
          c["default"] = function(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }, c.__esModule = !0;
        }, {}],
        25: [function(a, b, c) {
          "use strict";
          var d = a("babel-runtime/core-js/object/create")["default"],
              e = a("babel-runtime/core-js/object/set-prototype-of")["default"];
          c["default"] = function(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = d(b && b.prototype, {constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0
              }}), b && (e ? e(a, b) : a.__proto__ = b);
          }, c.__esModule = !0;
        }, {
          "babel-runtime/core-js/object/create": 22,
          "babel-runtime/core-js/object/set-prototype-of": 23
        }],
        26: [function(a, b, c) {
          "use strict";
          c["default"] = function(a) {
            return a && a.__esModule ? a : {"default": a};
          }, c.__esModule = !0;
        }, {}],
        27: [function(a, b, c) {
          a("../modules/web.dom.iterable"), a("../modules/es6.string.iterator"), b.exports = a("../modules/core.get-iterator");
        }, {
          "../modules/core.get-iterator": 63,
          "../modules/es6.string.iterator": 66,
          "../modules/web.dom.iterable": 67
        }],
        28: [function(a, b, c) {
          var d = a("../../modules/$");
          b.exports = function(a, b) {
            return d.create(a, b);
          };
        }, {"../../modules/$": 50}],
        29: [function(a, b, c) {
          a("../../modules/es6.object.set-prototype-of"), b.exports = a("../../modules/$.core").Object.setPrototypeOf;
        }, {
          "../../modules/$.core": 35,
          "../../modules/es6.object.set-prototype-of": 65
        }],
        30: [function(a, b, c) {
          b.exports = function(a) {
            if ("function" != typeof a)
              throw TypeError(a + " is not a function!");
            return a;
          };
        }, {}],
        31: [function(a, b, c) {
          b.exports = function() {};
        }, {}],
        32: [function(a, b, c) {
          var d = a("./$.is-object");
          b.exports = function(a) {
            if (!d(a))
              throw TypeError(a + " is not an object!");
            return a;
          };
        }, {"./$.is-object": 45}],
        33: [function(a, b, c) {
          var d = a("./$.cof"),
              e = a("./$.wks")("toStringTag"),
              f = "Arguments" == d(function() {
                return arguments;
              }());
          b.exports = function(a) {
            var b,
                c,
                g;
            return void 0 === a ? "Undefined" : null === a ? "Null" : "string" == typeof(c = (b = Object(a))[e]) ? c : f ? d(b) : "Object" == (g = d(b)) && "function" == typeof b.callee ? "Arguments" : g;
          };
        }, {
          "./$.cof": 34,
          "./$.wks": 61
        }],
        34: [function(a, b, c) {
          var d = {}.toString;
          b.exports = function(a) {
            return d.call(a).slice(8, -1);
          };
        }, {}],
        35: [function(a, b, c) {
          var d = b.exports = {version: "1.2.6"};
          "number" == typeof __e && (__e = d);
        }, {}],
        36: [function(a, b, c) {
          var d = a("./$.a-function");
          b.exports = function(a, b, c) {
            if (d(a), void 0 === b)
              return a;
            switch (c) {
              case 1:
                return function(c) {
                  return a.call(b, c);
                };
              case 2:
                return function(c, d) {
                  return a.call(b, c, d);
                };
              case 3:
                return function(c, d, e) {
                  return a.call(b, c, d, e);
                };
            }
            return function() {
              return a.apply(b, arguments);
            };
          };
        }, {"./$.a-function": 30}],
        37: [function(a, b, c) {
          b.exports = function(a) {
            if (void 0 == a)
              throw TypeError("Can't call method on  " + a);
            return a;
          };
        }, {}],
        38: [function(a, b, c) {
          b.exports = !a("./$.fails")(function() {
            return 7 != Object.defineProperty({}, "a", {get: function() {
                return 7;
              }}).a;
          });
        }, {"./$.fails": 40}],
        39: [function(a, b, c) {
          var d = a("./$.global"),
              e = a("./$.core"),
              f = a("./$.ctx"),
              g = "prototype",
              h = function(a, b, c) {
                var i,
                    j,
                    k,
                    l = a & h.F,
                    m = a & h.G,
                    n = a & h.S,
                    o = a & h.P,
                    p = a & h.B,
                    q = a & h.W,
                    r = m ? e : e[b] || (e[b] = {}),
                    s = m ? d : n ? d[b] : (d[b] || {})[g];
                m && (c = b);
                for (i in c)
                  j = !l && s && i in s, j && i in r || (k = j ? s[i] : c[i], r[i] = m && "function" != typeof s[i] ? c[i] : p && j ? f(k, d) : q && s[i] == k ? function(a) {
                    var b = function(b) {
                      return this instanceof a ? new a(b) : a(b);
                    };
                    return b[g] = a[g], b;
                  }(k) : o && "function" == typeof k ? f(Function.call, k) : k, o && ((r[g] || (r[g] = {}))[i] = k));
              };
          h.F = 1, h.G = 2, h.S = 4, h.P = 8, h.B = 16, h.W = 32, b.exports = h;
        }, {
          "./$.core": 35,
          "./$.ctx": 36,
          "./$.global": 41
        }],
        40: [function(a, b, c) {
          b.exports = function(a) {
            try {
              return !!a();
            } catch (b) {
              return !0;
            }
          };
        }, {}],
        41: [function(a, b, c) {
          var d = b.exports = "undefined" != typeof window && window.Math == Math ? window : "undefined" != typeof self && self.Math == Math ? self : Function("return this")();
          "number" == typeof __g && (__g = d);
        }, {}],
        42: [function(a, b, c) {
          var d = {}.hasOwnProperty;
          b.exports = function(a, b) {
            return d.call(a, b);
          };
        }, {}],
        43: [function(a, b, c) {
          var d = a("./$"),
              e = a("./$.property-desc");
          b.exports = a("./$.descriptors") ? function(a, b, c) {
            return d.setDesc(a, b, e(1, c));
          } : function(a, b, c) {
            return a[b] = c, a;
          };
        }, {
          "./$": 50,
          "./$.descriptors": 38,
          "./$.property-desc": 52
        }],
        44: [function(a, b, c) {
          var d = a("./$.cof");
          b.exports = Object("z").propertyIsEnumerable(0) ? Object : function(a) {
            return "String" == d(a) ? a.split("") : Object(a);
          };
        }, {"./$.cof": 34}],
        45: [function(a, b, c) {
          b.exports = function(a) {
            return "object" == typeof a ? null !== a : "function" == typeof a;
          };
        }, {}],
        46: [function(a, b, c) {
          "use strict";
          var d = a("./$"),
              e = a("./$.property-desc"),
              f = a("./$.set-to-string-tag"),
              g = {};
          a("./$.hide")(g, a("./$.wks")("iterator"), function() {
            return this;
          }), b.exports = function(a, b, c) {
            a.prototype = d.create(g, {next: e(1, c)}), f(a, b + " Iterator");
          };
        }, {
          "./$": 50,
          "./$.hide": 43,
          "./$.property-desc": 52,
          "./$.set-to-string-tag": 55,
          "./$.wks": 61
        }],
        47: [function(a, b, c) {
          "use strict";
          var d = a("./$.library"),
              e = a("./$.export"),
              f = a("./$.redefine"),
              g = a("./$.hide"),
              h = a("./$.has"),
              i = a("./$.iterators"),
              j = a("./$.iter-create"),
              k = a("./$.set-to-string-tag"),
              l = a("./$").getProto,
              m = a("./$.wks")("iterator"),
              n = !([].keys && "next" in [].keys()),
              o = "@@iterator",
              p = "keys",
              q = "values",
              r = function() {
                return this;
              };
          b.exports = function(a, b, c, s, t, u, v) {
            j(c, b, s);
            var w,
                x,
                y = function(a) {
                  if (!n && a in C)
                    return C[a];
                  switch (a) {
                    case p:
                      return function() {
                        return new c(this, a);
                      };
                    case q:
                      return function() {
                        return new c(this, a);
                      };
                  }
                  return function() {
                    return new c(this, a);
                  };
                },
                z = b + " Iterator",
                A = t == q,
                B = !1,
                C = a.prototype,
                D = C[m] || C[o] || t && C[t],
                E = D || y(t);
            if (D) {
              var F = l(E.call(new a));
              k(F, z, !0), !d && h(C, o) && g(F, m, r), A && D.name !== q && (B = !0, E = function() {
                return D.call(this);
              });
            }
            if (d && !v || !n && !B && C[m] || g(C, m, E), i[b] = E, i[z] = r, t)
              if (w = {
                values: A ? E : y(q),
                keys: u ? E : y(p),
                entries: A ? y("entries") : E
              }, v)
                for (x in w)
                  x in C || f(C, x, w[x]);
              else
                e(e.P + e.F * (n || B), b, w);
            return w;
          };
        }, {
          "./$": 50,
          "./$.export": 39,
          "./$.has": 42,
          "./$.hide": 43,
          "./$.iter-create": 46,
          "./$.iterators": 49,
          "./$.library": 51,
          "./$.redefine": 53,
          "./$.set-to-string-tag": 55,
          "./$.wks": 61
        }],
        48: [function(a, b, c) {
          b.exports = function(a, b) {
            return {
              value: b,
              done: !!a
            };
          };
        }, {}],
        49: [function(a, b, c) {
          b.exports = {};
        }, {}],
        50: [function(a, b, c) {
          var d = Object;
          b.exports = {
            create: d.create,
            getProto: d.getPrototypeOf,
            isEnum: {}.propertyIsEnumerable,
            getDesc: d.getOwnPropertyDescriptor,
            setDesc: d.defineProperty,
            setDescs: d.defineProperties,
            getKeys: d.keys,
            getNames: d.getOwnPropertyNames,
            getSymbols: d.getOwnPropertySymbols,
            each: [].forEach
          };
        }, {}],
        51: [function(a, b, c) {
          b.exports = !0;
        }, {}],
        52: [function(a, b, c) {
          b.exports = function(a, b) {
            return {
              enumerable: !(1 & a),
              configurable: !(2 & a),
              writable: !(4 & a),
              value: b
            };
          };
        }, {}],
        53: [function(a, b, c) {
          b.exports = a("./$.hide");
        }, {"./$.hide": 43}],
        54: [function(a, b, c) {
          var d = a("./$").getDesc,
              e = a("./$.is-object"),
              f = a("./$.an-object"),
              g = function(a, b) {
                if (f(a), !e(b) && null !== b)
                  throw TypeError(b + ": can't set as prototype!");
              };
          b.exports = {
            set: Object.setPrototypeOf || ("__proto__" in {} ? function(b, c, e) {
              try {
                e = a("./$.ctx")(Function.call, d(Object.prototype, "__proto__").set, 2), e(b, []), c = !(b instanceof Array);
              } catch (f) {
                c = !0;
              }
              return function(a, b) {
                return g(a, b), c ? a.__proto__ = b : e(a, b), a;
              };
            }({}, !1) : void 0),
            check: g
          };
        }, {
          "./$": 50,
          "./$.an-object": 32,
          "./$.ctx": 36,
          "./$.is-object": 45
        }],
        55: [function(a, b, c) {
          var d = a("./$").setDesc,
              e = a("./$.has"),
              f = a("./$.wks")("toStringTag");
          b.exports = function(a, b, c) {
            a && !e(a = c ? a : a.prototype, f) && d(a, f, {
              configurable: !0,
              value: b
            });
          };
        }, {
          "./$": 50,
          "./$.has": 42,
          "./$.wks": 61
        }],
        56: [function(a, b, c) {
          var d = a("./$.global"),
              e = "__core-js_shared__",
              f = d[e] || (d[e] = {});
          b.exports = function(a) {
            return f[a] || (f[a] = {});
          };
        }, {"./$.global": 41}],
        57: [function(a, b, c) {
          var d = a("./$.to-integer"),
              e = a("./$.defined");
          b.exports = function(a) {
            return function(b, c) {
              var f,
                  g,
                  h = String(e(b)),
                  i = d(c),
                  j = h.length;
              return 0 > i || i >= j ? a ? "" : void 0 : (f = h.charCodeAt(i), 55296 > f || f > 56319 || i + 1 === j || (g = h.charCodeAt(i + 1)) < 56320 || g > 57343 ? a ? h.charAt(i) : f : a ? h.slice(i, i + 2) : (f - 55296 << 10) + (g - 56320) + 65536);
            };
          };
        }, {
          "./$.defined": 37,
          "./$.to-integer": 58
        }],
        58: [function(a, b, c) {
          var d = Math.ceil,
              e = Math.floor;
          b.exports = function(a) {
            return isNaN(a = +a) ? 0 : (a > 0 ? e : d)(a);
          };
        }, {}],
        59: [function(a, b, c) {
          var d = a("./$.iobject"),
              e = a("./$.defined");
          b.exports = function(a) {
            return d(e(a));
          };
        }, {
          "./$.defined": 37,
          "./$.iobject": 44
        }],
        60: [function(a, b, c) {
          var d = 0,
              e = Math.random();
          b.exports = function(a) {
            return "Symbol(".concat(void 0 === a ? "" : a, ")_", (++d + e).toString(36));
          };
        }, {}],
        61: [function(a, b, c) {
          var d = a("./$.shared")("wks"),
              e = a("./$.uid"),
              f = a("./$.global").Symbol;
          b.exports = function(a) {
            return d[a] || (d[a] = f && f[a] || (f || e)("Symbol." + a));
          };
        }, {
          "./$.global": 41,
          "./$.shared": 56,
          "./$.uid": 60
        }],
        62: [function(a, b, c) {
          var d = a("./$.classof"),
              e = a("./$.wks")("iterator"),
              f = a("./$.iterators");
          b.exports = a("./$.core").getIteratorMethod = function(a) {
            return void 0 != a ? a[e] || a["@@iterator"] || f[d(a)] : void 0;
          };
        }, {
          "./$.classof": 33,
          "./$.core": 35,
          "./$.iterators": 49,
          "./$.wks": 61
        }],
        63: [function(a, b, c) {
          var d = a("./$.an-object"),
              e = a("./core.get-iterator-method");
          b.exports = a("./$.core").getIterator = function(a) {
            var b = e(a);
            if ("function" != typeof b)
              throw TypeError(a + " is not iterable!");
            return d(b.call(a));
          };
        }, {
          "./$.an-object": 32,
          "./$.core": 35,
          "./core.get-iterator-method": 62
        }],
        64: [function(a, b, c) {
          "use strict";
          var d = a("./$.add-to-unscopables"),
              e = a("./$.iter-step"),
              f = a("./$.iterators"),
              g = a("./$.to-iobject");
          b.exports = a("./$.iter-define")(Array, "Array", function(a, b) {
            this._t = g(a), this._i = 0, this._k = b;
          }, function() {
            var a = this._t,
                b = this._k,
                c = this._i++;
            return !a || c >= a.length ? (this._t = void 0, e(1)) : "keys" == b ? e(0, c) : "values" == b ? e(0, a[c]) : e(0, [c, a[c]]);
          }, "values"), f.Arguments = f.Array, d("keys"), d("values"), d("entries");
        }, {
          "./$.add-to-unscopables": 31,
          "./$.iter-define": 47,
          "./$.iter-step": 48,
          "./$.iterators": 49,
          "./$.to-iobject": 59
        }],
        65: [function(a, b, c) {
          var d = a("./$.export");
          d(d.S, "Object", {setPrototypeOf: a("./$.set-proto").set});
        }, {
          "./$.export": 39,
          "./$.set-proto": 54
        }],
        66: [function(a, b, c) {
          "use strict";
          var d = a("./$.string-at")(!0);
          a("./$.iter-define")(String, "String", function(a) {
            this._t = String(a), this._i = 0;
          }, function() {
            var a,
                b = this._t,
                c = this._i;
            return c >= b.length ? {
              value: void 0,
              done: !0
            } : (a = d(b, c), this._i += a.length, {
              value: a,
              done: !1
            });
          });
        }, {
          "./$.iter-define": 47,
          "./$.string-at": 57
        }],
        67: [function(a, b, c) {
          a("./es6.array.iterator");
          var d = a("./$.iterators");
          d.NodeList = d.HTMLCollection = d.Array;
        }, {
          "./$.iterators": 49,
          "./es6.array.iterator": 64
        }]
      }, {}, [1])(1);
    }), c.exports;
  }), a.registerDynamic("16b", ["c", "a", "4", "7d", "14", "14c", "7f", "5", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      this.resync(), a = this._verifyNodeList(a), u.inheritLeadingComments(a[0], this.node), u.inheritTrailingComments(a[a.length - 1], this.node), this.node = this.container[this.key] = null, this.insertAfter(a), this.node ? this.requeue() : this.remove();
    }
    function e(a) {
      this.resync();
      try {
        a = "(" + a + ")", a = s.parse(a);
      } catch (b) {
        var c = b.loc;
        throw c && (b.message += " - make sure this is an expression.", b.message += "\n" + n["default"](a, c.line, c.column + 1)), b;
      }
      return a = a.program.body[0].expression, p["default"].removeProperties(a), this.replaceWith(a);
    }
    function f(a) {
      if (this.resync(), this.removed)
        throw new Error("You can't replace this node, we've already removed it");
      if (a instanceof r["default"] && (a = a.node), !a)
        throw new Error("You passed `path.replaceWith()` a falsy node, use `path.remove()` instead");
      if (this.node !== a) {
        if (this.isProgram() && !u.isProgram(a))
          throw new Error("You can only replace a Program root node with another Program node");
        if (Array.isArray(a))
          throw new Error("Don't use `path.replaceWith()` with an array of nodes, use `path.replaceWithMultiple()`");
        if ("string" == typeof a)
          throw new Error("Don't use `path.replaceWith()` with a source string, use `path.replaceWithSourceString()`");
        if (this.isNodeType("Statement") && u.isExpression(a) && !this.canHaveVariableDeclarationOrExpression() && (a = u.expressionStatement(a)), this.isNodeType("Expression") && u.isStatement(a))
          return this.replaceExpressionWithStatements([a]);
        var b = this.node;
        b && (u.inheritsComments(a, b), u.removeComments(b)), this._replaceWith(a), this.type = a.type, this.setScope(), this.requeue();
      }
    }
    function g(a) {
      if (!this.container)
        throw new ReferenceError("Container is falsy");
      this.inList ? u.validate(this.parent, this.key, [a]) : u.validate(this.parent, this.key, a), this.debug(function() {
        return "Replace with " + (a && a.type);
      }), this.node = this.container[this.key] = a;
    }
    function h(a) {
      this.resync();
      var b = u.toSequenceExpression(a, this.scope);
      if (u.isSequenceExpression(b)) {
        var c = b.expressions;
        c.length >= 2 && this.parentPath.isExpressionStatement() && this._maybePopFromStatements(c), 1 === c.length ? this.replaceWith(c[0]) : this.replaceWith(b);
      } else {
        if (!b) {
          var d = u.functionExpression(null, [], u.blockStatement(a));
          d.shadow = !0, this.replaceWith(u.callExpression(d, [])), this.traverse(v);
          for (var e = this.get("callee").getCompletionRecords(),
              f = e,
              g = Array.isArray(f),
              h = 0,
              f = g ? f : j(f); ; ) {
            var i;
            if (g) {
              if (h >= f.length)
                break;
              i = f[h++];
            } else {
              if (h = f.next(), h.done)
                break;
              i = h.value;
            }
            var k = i;
            if (k.isExpressionStatement()) {
              var l = k.findParent(function(a) {
                return a.isLoop();
              });
              if (l) {
                var m = this.get("callee"),
                    n = m.scope.generateDeclaredUidIdentifier("ret");
                m.get("body").pushContainer("body", u.returnStatement(n)), k.get("expression").replaceWith(u.assignmentExpression("=", n, k.node.expression));
              } else
                k.replaceWith(u.returnStatement(k.node.expression));
            }
          }
          return this.node;
        }
        this.replaceWith(b);
      }
    }
    function i(a) {
      return this.resync(), Array.isArray(a) ? Array.isArray(this.container) ? (a = this._verifyNodeList(a), this._containerInsertAfter(a), this.remove()) : this.replaceWithMultiple(a) : this.replaceWith(a);
    }
    var j = (a("3"), a("c")["default"]),
        k = a("a")["default"],
        l = a("4")["default"];
    b.__esModule = !0, b.replaceWithMultiple = d, b.replaceWithSourceString = e, b.replaceWith = f, b._replaceWith = g, b.replaceExpressionWithStatements = h, b.replaceInline = i;
    var m = a("7d"),
        n = k(m),
        o = a("14"),
        p = k(o),
        q = a("14c"),
        r = k(q),
        s = a("7f"),
        t = a("5"),
        u = l(t),
        v = {
          Function: function(a) {
            a.skip();
          },
          VariableDeclaration: function(a) {
            if ("var" === a.node.kind) {
              var b = a.getBindingIdentifiers();
              for (var c in b)
                a.scope.push({id: b[c]});
              for (var d = [],
                  e = a.node.declarations,
                  f = Array.isArray(e),
                  g = 0,
                  e = f ? e : j(e); ; ) {
                var h;
                if (f) {
                  if (g >= e.length)
                    break;
                  h = e[g++];
                } else {
                  if (g = e.next(), g.done)
                    break;
                  h = g.value;
                }
                var i = h;
                i.init && d.push(u.expressionStatement(u.assignmentExpression("=", i.id, i.init)));
              }
              a.replaceWithMultiple(d);
            }
          }
        };
    return c.exports;
  }), a.registerDynamic("16c", ["c", "3"], !0, function(a, b, c) {
    "use strict";
    function d() {
      var a = this.evaluate();
      return a.confident ? !!a.value : void 0;
    }
    function e() {
      function a(a) {
        c && (d = a, c = !1);
      }
      function b(d) {
        if (c) {
          var e = d.node;
          if (d.isSequenceExpression()) {
            var j = d.get("expressions");
            return b(j[j.length - 1]);
          }
          if (d.isStringLiteral() || d.isNumericLiteral() || d.isBooleanLiteral())
            return e.value;
          if (d.isNullLiteral())
            return null;
          if (d.isTemplateLiteral()) {
            for (var k = "",
                l = 0,
                j = d.get("expressions"),
                m = e.quasis,
                n = Array.isArray(m),
                o = 0,
                m = n ? m : g(m); ; ) {
              var p;
              if (n) {
                if (o >= m.length)
                  break;
                p = m[o++];
              } else {
                if (o = m.next(), o.done)
                  break;
                p = o.value;
              }
              var q = p;
              if (!c)
                break;
              k += q.value.cooked;
              var r = j[l++];
              r && (k += String(b(r)));
            }
            if (!c)
              return;
            return k;
          }
          if (d.isConditionalExpression()) {
            var s = b(d.get("test"));
            if (!c)
              return;
            return b(s ? d.get("consequent") : d.get("alternate"));
          }
          if (d.isExpressionWrapper())
            return b(d.get("expression"));
          if (d.isMemberExpression() && !d.parentPath.isCallExpression({callee: e})) {
            var t = d.get("property"),
                u = d.get("object");
            if (u.isLiteral() && t.isIdentifier()) {
              var v = u.node.value,
                  w = typeof v;
              if ("number" === w || "string" === w)
                return v[t.node.name];
            }
          }
          if (d.isReferencedIdentifier()) {
            var x = d.scope.getBinding(e.name);
            if (x && x.hasValue)
              return x.value;
            if ("undefined" === e.name)
              return;
            if ("Infinity" === e.name)
              return 1 / 0;
            if ("NaN" === e.name)
              return NaN;
            var y = d.resolve();
            return y === d ? a(d) : b(y);
          }
          if (d.isUnaryExpression({prefix: !0})) {
            if ("void" === e.operator)
              return;
            var z = d.get("argument");
            if ("typeof" === e.operator && (z.isFunction() || z.isClass()))
              return "function";
            var A = b(z);
            if (!c)
              return;
            switch (e.operator) {
              case "!":
                return !A;
              case "+":
                return +A;
              case "-":
                return -A;
              case "~":
                return ~A;
              case "typeof":
                return typeof A;
            }
          }
          if (d.isArrayExpression()) {
            for (var B = [],
                C = d.get("elements"),
                D = C,
                E = Array.isArray(D),
                F = 0,
                D = E ? D : g(D); ; ) {
              var G;
              if (E) {
                if (F >= D.length)
                  break;
                G = D[F++];
              } else {
                if (F = D.next(), F.done)
                  break;
                G = F.value;
              }
              var q = G;
              if (q = q.evaluate(), !q.confident)
                return a(q);
              B.push(q.value);
            }
            return B;
          }
          if (d.isObjectExpression(), d.isLogicalExpression()) {
            var H = c,
                I = b(d.get("left")),
                J = c;
            c = H;
            var K = b(d.get("right")),
                L = c;
            switch (c = J && L, e.operator) {
              case "||":
                if (I && J)
                  return c = !0, I;
                if (!c)
                  return;
                return I || K;
              case "&&":
                if ((!I && J || !K && L) && (c = !0), !c)
                  return;
                return I && K;
            }
          }
          if (d.isBinaryExpression()) {
            var I = b(d.get("left"));
            if (!c)
              return;
            var K = b(d.get("right"));
            if (!c)
              return;
            switch (e.operator) {
              case "-":
                return I - K;
              case "+":
                return I + K;
              case "/":
                return I / K;
              case "*":
                return I * K;
              case "%":
                return I % K;
              case "**":
                return Math.pow(I, K);
              case "<":
                return K > I;
              case ">":
                return I > K;
              case "<=":
                return K >= I;
              case ">=":
                return I >= K;
              case "==":
                return I == K;
              case "!=":
                return I != K;
              case "===":
                return I === K;
              case "!==":
                return I !== K;
              case "|":
                return I | K;
              case "&":
                return I & K;
              case "^":
                return I ^ K;
              case "<<":
                return I << K;
              case ">>":
                return I >> K;
              case ">>>":
                return I >>> K;
            }
          }
          if (d.isCallExpression()) {
            var M = d.get("callee"),
                N = void 0,
                O = void 0;
            if (M.isIdentifier() && !d.scope.getBinding(M.node.name, !0) && h.indexOf(M.node.name) >= 0 && (O = f[e.callee.name]), M.isMemberExpression()) {
              var u = M.get("object"),
                  t = M.get("property");
              if (u.isIdentifier() && t.isIdentifier() && h.indexOf(u.node.name) >= 0 && i.indexOf(t.node.name) < 0 && (N = f[u.node.name], O = N[t.node.name]), u.isLiteral() && t.isIdentifier()) {
                var w = typeof u.node.value;
                ("string" === w || "number" === w) && (N = u.node.value, O = N[t.node.name]);
              }
            }
            if (O) {
              var P = d.get("arguments").map(b);
              if (!c)
                return;
              return O.apply(N, P);
            }
          }
          a(d);
        }
      }
      var c = !0,
          d = void 0,
          e = b(this);
      return c || (e = void 0), {
        confident: c,
        deopt: d,
        value: e
      };
    }
    var f = (a("3"), this),
        g = a("c")["default"];
    b.__esModule = !0, b.evaluateTruthy = d, b.evaluate = e;
    var h = ["String", "Number", "Math"],
        i = ["random"];
    return c.exports;
  }), a.registerDynamic("16d", ["4", "5", "3"], !0, function(a, b, c) {
    "use strict";
    function d() {
      var a = this.node,
          b = void 0;
      if (this.isMemberExpression())
        b = a.property;
      else {
        if (!this.isProperty() && !this.isMethod())
          throw new ReferenceError("todo");
        b = a.key;
      }
      return a.computed || i.isIdentifier(b) && (b = i.stringLiteral(b.name)), b;
    }
    function e() {
      return i.ensureBlock(this.node);
    }
    function f() {
      if (this.isArrowFunctionExpression()) {
        this.ensureBlock();
        var a = this.node;
        a.expression = !1, a.type = "FunctionExpression", a.shadow = a.shadow || !0;
      }
    }
    var g = (a("3"), a("4")["default"]);
    b.__esModule = !0, b.toComputedKey = d, b.ensureBlock = e, b.arrowFunctionToShadowed = f;
    var h = a("5"),
        i = g(h);
    return c.exports;
  }), a.registerDynamic("16e", ["c", "a", "4", "29", "5", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a, b) {
      function c(a) {
        var b = d[f];
        return "*" === b || a === b;
      }
      if (!this.isMemberExpression())
        return !1;
      for (var d = a.split("."),
          e = [this.node],
          f = 0; e.length; ) {
        var g = e.shift();
        if (b && f === d.length)
          return !0;
        if (z.isIdentifier(g)) {
          if (!c(g.name))
            return !1;
        } else if (z.isLiteral(g)) {
          if (!c(g.value))
            return !1;
        } else {
          if (z.isMemberExpression(g)) {
            if (g.computed && !z.isLiteral(g.property))
              return !1;
            e.unshift(g.property), e.unshift(g.object);
            continue;
          }
          if (!z.isThisExpression(g))
            return !1;
          if (!c("this"))
            return !1;
        }
        if (++f > d.length)
          return !1;
      }
      return f === d.length;
    }
    function e(a) {
      var b = this.node && this.node[a];
      return b && Array.isArray(b) ? !!b.length : !!b;
    }
    function f() {
      return this.scope.isStatic(this.node);
    }
    function g(a) {
      return !this.has(a);
    }
    function h(a, b) {
      return this.node[a] === b;
    }
    function i(a) {
      return z.isType(this.type, a);
    }
    function j() {
      return ("init" === this.key || "left" === this.key) && this.parentPath.isFor();
    }
    function k(a) {
      var b = this,
          c = !0;
      do {
        var d = b.container;
        if (b.isFunction() && !c)
          return !!a;
        if (c = !1, Array.isArray(d) && b.key !== d.length - 1)
          return !1;
      } while ((b = b.parentPath) && !b.isProgram());
      return !0;
    }
    function l() {
      return this.parentPath.isLabeledStatement() || z.isBlockStatement(this.container) ? !1 : x["default"](z.STATEMENT_OR_BLOCK_KEYS, this.key);
    }
    function m(a, b) {
      if (!this.isReferencedIdentifier())
        return !1;
      var c = this.scope.getBinding(this.node.name);
      if (!c || "module" !== c.kind)
        return !1;
      var d = c.path,
          e = d.parentPath;
      return e.isImportDeclaration() ? e.node.source.value !== a ? !1 : b ? d.isImportDefaultSpecifier() && "default" === b ? !0 : d.isImportNamespaceSpecifier() && "*" === b ? !0 : d.isImportSpecifier() && d.node.imported.name === b ? !0 : !1 : !0 : !1;
    }
    function n() {
      var a = this.node;
      return a.end ? this.hub.file.code.slice(a.start, a.end) : "";
    }
    function o(a) {
      return "after" !== this._guessExecutionStatusRelativeTo(a);
    }
    function p(a) {
      var b = a.scope.getFunctionParent(),
          c = this.scope.getFunctionParent();
      if (b.node !== c.node) {
        var d = this._guessExecutionStatusRelativeToDifferentFunctions(b);
        if (d)
          return d;
        a = b.path;
      }
      var e = a.getAncestry();
      if (e.indexOf(this) >= 0)
        return "after";
      var f = this.getAncestry(),
          g = void 0,
          h = void 0,
          i = void 0;
      for (i = 0; i < f.length; i++) {
        var j = f[i];
        if (h = e.indexOf(j), h >= 0) {
          g = j;
          break;
        }
      }
      if (!g)
        return "before";
      var k = e[h - 1],
          l = f[i - 1];
      if (!k || !l)
        return "before";
      if (k.listKey && k.container === l.container)
        return k.key > l.key ? "before" : "after";
      var m = z.VISITOR_KEYS[k.type].indexOf(k.key),
          n = z.VISITOR_KEYS[l.type].indexOf(l.key);
      return m > n ? "before" : "after";
    }
    function q(a) {
      var b = a.path;
      if (b.isFunctionDeclaration()) {
        var c = b.scope.getBinding(b.node.id.name);
        if (!c.references)
          return "before";
        for (var d = c.referencePaths,
            e = d,
            f = Array.isArray(e),
            g = 0,
            e = f ? e : t(e); ; ) {
          var h;
          if (f) {
            if (g >= e.length)
              break;
            h = e[g++];
          } else {
            if (g = e.next(), g.done)
              break;
            h = g.value;
          }
          var i = h;
          if ("callee" !== i.key || !i.parentPath.isCallExpression())
            return;
        }
        for (var j = void 0,
            k = d,
            l = Array.isArray(k),
            m = 0,
            k = l ? k : t(k); ; ) {
          var n;
          if (l) {
            if (m >= k.length)
              break;
            n = k[m++];
          } else {
            if (m = k.next(), m.done)
              break;
            n = m.value;
          }
          var i = n,
              o = !!i.find(function(a) {
                return a.node === b.node;
              });
          if (!o) {
            var p = this._guessExecutionStatusRelativeTo(i);
            if (j) {
              if (j !== p)
                return;
            } else
              j = p;
          }
        }
        return j;
      }
    }
    function r(a, b) {
      return this._resolve(a, b) || this;
    }
    function s(a, b) {
      var c = this;
      if (!(b && b.indexOf(this) >= 0))
        if (b = b || [], b.push(this), this.isVariableDeclarator()) {
          if (this.get("id").isIdentifier())
            return this.get("init").resolve(a, b);
        } else if (this.isReferencedIdentifier()) {
          var d = this.scope.getBinding(this.node.name);
          if (!d)
            return;
          if (!d.constant)
            return;
          if ("module" === d.kind)
            return;
          if (d.path !== this) {
            var e = function() {
              var e = d.path.resolve(a, b);
              return c.find(function(a) {
                return a.node === e.node;
              }) ? {v: void 0} : {v: e};
            }();
            if ("object" == typeof e)
              return e.v;
          }
        } else {
          if (this.isTypeCastExpression())
            return this.get("expression").resolve(a, b);
          if (a && this.isMemberExpression()) {
            var f = this.toComputedKey();
            if (!z.isLiteral(f))
              return;
            var g = f.value,
                h = this.get("object").resolve(a, b);
            if (h.isObjectExpression())
              for (var i = h.get("properties"),
                  j = i,
                  k = Array.isArray(j),
                  l = 0,
                  j = k ? j : t(j); ; ) {
                var m;
                if (k) {
                  if (l >= j.length)
                    break;
                  m = j[l++];
                } else {
                  if (l = j.next(), l.done)
                    break;
                  m = l.value;
                }
                var n = m;
                if (n.isProperty()) {
                  var o = n.get("key"),
                      p = n.isnt("computed") && o.isIdentifier({name: g});
                  if (p = p || o.isLiteral({value: g}))
                    return n.get("value").resolve(a, b);
                }
              }
            else if (h.isArrayExpression() && !isNaN(+g)) {
              var q = h.get("elements"),
                  r = q[g];
              if (r)
                return r.resolve(a, b);
            }
          }
        }
    }
    var t = (a("3"), a("c")["default"]),
        u = a("a")["default"],
        v = a("4")["default"];
    b.__esModule = !0, b.matchesPattern = d, b.has = e, b.isStatic = f, b.isnt = g, b.equals = h, b.isNodeType = i, b.canHaveVariableDeclarationOrExpression = j, b.isCompletionRecord = k, b.isStatementOrBlock = l, b.referencesImport = m, b.getSource = n, b.willIMaybeExecuteBefore = o, b._guessExecutionStatusRelativeTo = p, b._guessExecutionStatusRelativeToDifferentFunctions = q, b.resolve = r, b._resolve = s;
    var w = a("29"),
        x = u(w),
        y = a("5"),
        z = v(y),
        A = e;
    return b.is = A, c.exports;
  }), a.registerDynamic("16f", ["c", "a", "14", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      var b = this.opts;
      return this.debug(function() {
        return a;
      }), this.node && this._call(b[a]) ? !0 : this.node ? this._call(b[this.node.type] && b[this.node.type][a]) : !1;
    }
    function e(a) {
      if (!a)
        return !1;
      for (var b = a,
          c = Array.isArray(b),
          d = 0,
          b = c ? b : w(b); ; ) {
        var e;
        if (c) {
          if (d >= b.length)
            break;
          e = b[d++];
        } else {
          if (d = b.next(), d.done)
            break;
          e = d.value;
        }
        var f = e;
        if (f) {
          var g = this.node;
          if (!g)
            return !0;
          var h = f.call(this.state, this, this.state);
          if (h)
            throw new Error("Unexpected return value from visitor method " + f);
          if (this.node !== g)
            return !0;
          if (this.shouldStop || this.shouldSkip || this.removed)
            return !0;
        }
      }
      return !1;
    }
    function f() {
      var a = this.opts.blacklist;
      return a && a.indexOf(this.node.type) > -1;
    }
    function g() {
      return this.node ? this.isBlacklisted() ? !1 : this.opts.shouldSkip && this.opts.shouldSkip(this) ? !1 : this.call("enter") || this.shouldSkip ? (this.debug(function() {
        return "Skip...";
      }), this.shouldStop) : (this.debug(function() {
        return "Recursing into...";
      }), z["default"].node(this.node, this.opts, this.scope, this.state, this, this.skipKeys), this.call("exit"), this.shouldStop) : !1;
    }
    function h() {
      this.shouldSkip = !0;
    }
    function i(a) {
      this.skipKeys[a] = !0;
    }
    function j() {
      this.shouldStop = !0, this.shouldSkip = !0;
    }
    function k() {
      if (!this.opts || !this.opts.noScope) {
        var a = this.context && this.context.scope;
        if (!a)
          for (var b = this.parentPath; b && !a; ) {
            if (b.opts && b.opts.noScope)
              return;
            a = b.scope, b = b.parentPath;
          }
        this.scope = this.getScope(a), this.scope && this.scope.init();
      }
    }
    function l(a) {
      return this.shouldSkip = !1, this.shouldStop = !1, this.removed = !1, this.skipKeys = {}, a && (this.context = a, this.state = a.state, this.opts = a.opts), this.setScope(), this;
    }
    function m() {
      this.removed || (this._resyncParent(), this._resyncList(), this._resyncKey());
    }
    function n() {
      this.parentPath && (this.parent = this.parentPath.node);
    }
    function o() {
      if (this.container && this.node !== this.container[this.key]) {
        if (Array.isArray(this.container)) {
          for (var a = 0; a < this.container.length; a++)
            if (this.container[a] === this.node)
              return this.setKey(a);
        } else
          for (var b in this.container)
            if (this.container[b] === this.node)
              return this.setKey(b);
        this.key = null;
      }
    }
    function p() {
      if (this.parent && this.inList) {
        var a = this.parent[this.listKey];
        this.container !== a && (this.container = a || null);
      }
    }
    function q() {
      null != this.key && this.container && this.container[this.key] === this.node || this._markRemoved();
    }
    function r() {
      this.contexts.pop(), this.setContext(this.contexts[this.contexts.length - 1]);
    }
    function s(a) {
      this.contexts.push(a), this.setContext(a);
    }
    function t(a, b, c, d) {
      this.inList = !!c, this.listKey = c, this.parentKey = c || d, this.container = b, this.parentPath = a || this.parentPath, this.setKey(d);
    }
    function u(a) {
      this.key = a, this.node = this.container[this.key], this.type = this.node && this.node.type;
    }
    function v() {
      var a = arguments.length <= 0 || void 0 === arguments[0] ? this : arguments[0];
      if (!a.removed)
        for (var b = this.contexts,
            c = Array.isArray(b),
            d = 0,
            b = c ? b : w(b); ; ) {
          var e;
          if (c) {
            if (d >= b.length)
              break;
            e = b[d++];
          } else {
            if (d = b.next(), d.done)
              break;
            e = d.value;
          }
          var f = e;
          f.maybeQueue(a);
        }
    }
    var w = (a("3"), a("c")["default"]),
        x = a("a")["default"];
    b.__esModule = !0, b.call = d, b._call = e, b.isBlacklisted = f, b.visit = g, b.skip = h, b.skipKey = i, b.stop = j, b.setScope = k, b.setContext = l, b.resync = m, b._resyncParent = n, b._resyncKey = o, b._resyncList = p, b._resyncRemoved = q, b.popContext = r, b.pushContext = s, b.setup = t, b.setKey = u, b.requeue = v;
    var y = a("14"),
        z = x(y);
    return c.exports;
  }), a.registerDynamic("170", ["3"], !0, function(a, b, c) {
    "use strict";
    a("3");
    b.__esModule = !0;
    var d = [function(a, b) {
      return "body" === a.key && b.isArrowFunctionExpression() ? (a.replaceWith(a.scope.buildUndefinedNode()), !0) : void 0;
    }, function(a, b) {
      var c = !1;
      return c = c || "test" === a.key && (b.isWhile() || b.isSwitchCase()), c = c || "declaration" === a.key && b.isExportDeclaration(), c = c || "body" === a.key && b.isLabeledStatement(), c = c || "declarations" === a.listKey && b.isVariableDeclaration() && 1 === b.node.declarations.length, c = c || "expression" === a.key && b.isExpressionStatement(), c ? (b.remove(), !0) : void 0;
    }, function(a, b) {
      return b.isSequenceExpression() && 1 === b.node.expressions.length ? (b.replaceWith(b.node.expressions[0]), !0) : void 0;
    }, function(a, b) {
      return b.isBinary() ? ("left" === a.key ? b.replaceWith(b.node.right) : b.replaceWith(b.node.left), !0) : void 0;
    }];
    return b.hooks = d, c.exports;
  }), a.registerDynamic("171", ["c", "170", "3"], !0, function(a, b, c) {
    "use strict";
    function d() {
      return this._assertUnremoved(), this.resync(), this._callRemovalHooks() ? void this._markRemoved() : (this.shareCommentsWithSiblings(), this._remove(), void this._markRemoved());
    }
    function e() {
      for (var a = j.hooks,
          b = Array.isArray(a),
          c = 0,
          a = b ? a : i(a); ; ) {
        var d;
        if (b) {
          if (c >= a.length)
            break;
          d = a[c++];
        } else {
          if (c = a.next(), c.done)
            break;
          d = c.value;
        }
        var e = d;
        if (e(this, this.parentPath))
          return !0;
      }
    }
    function f() {
      Array.isArray(this.container) ? (this.container.splice(this.key, 1), this.updateSiblingKeys(this.key, -1)) : this._replaceWith(null);
    }
    function g() {
      this.shouldSkip = !0, this.removed = !0, this.node = null;
    }
    function h() {
      if (this.removed)
        throw this.buildCodeFrameError("NodePath has been removed so is read-only.");
    }
    var i = (a("3"), a("c")["default"]);
    b.__esModule = !0, b.remove = d, b._callRemovalHooks = e, b._remove = f, b._markRemoved = g, b._assertUnremoved = h;
    var j = a("170");
    return c.exports;
  }), a.registerDynamic("172", ["3"], !0, function(a, b, c) {
    "use strict";
    a("3");
    b.__esModule = !0;
    var d = "_paths";
    return b.PATH_CACHE_KEY = d, c.exports;
  }), a.registerDynamic("173", ["9", "c", "4", "5", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("9")["default"]),
        e = a("c")["default"],
        f = a("4")["default"];
    b.__esModule = !0;
    var g = a("5"),
        h = f(g),
        i = {ReferencedIdentifier: function(a, b) {
            if (!a.isJSXIdentifier() || !g.react.isCompatTag(a.node.name)) {
              var c = a.scope.getBinding(a.node.name);
              if (c && c === b.scope.getBinding(a.node.name))
                if (c.constant)
                  b.bindings[a.node.name] = c;
                else
                  for (var d = c.constantViolations,
                      f = Array.isArray(d),
                      h = 0,
                      d = f ? d : e(d); ; ) {
                    var i;
                    if (f) {
                      if (h >= d.length)
                        break;
                      i = d[h++];
                    } else {
                      if (h = d.next(), h.done)
                        break;
                      i = h.value;
                    }
                    var j = i;
                    b.breakOnScopePaths = b.breakOnScopePaths.concat(j.getAncestry());
                  }
            }
          }},
        j = function() {
          function a(b, c) {
            d(this, a), this.breakOnScopePaths = [], this.bindings = {}, this.scopes = [], this.scope = c, this.path = b;
          }
          return a.prototype.isCompatibleScope = function(a) {
            for (var b in this.bindings) {
              var c = this.bindings[b];
              if (!a.bindingIdentifierEquals(b, c.identifier))
                return !1;
            }
            return !0;
          }, a.prototype.getCompatibleScopes = function() {
            var a = this.path.scope;
            do {
              if (!this.isCompatibleScope(a))
                break;
              if (this.scopes.push(a), this.breakOnScopePaths.indexOf(a.path) >= 0)
                break;
            } while (a = a.parent);
          }, a.prototype.getAttachmentPath = function() {
            var a = this.scopes,
                b = a.pop();
            if (b) {
              if (b.path.isFunction()) {
                if (this.hasOwnParamBindings(b)) {
                  if (this.scope === b)
                    return;
                  return b.path.get("body").get("body")[0];
                }
                return this.getNextScopeStatementParent();
              }
              return b.path.isProgram() ? this.getNextScopeStatementParent() : void 0;
            }
          }, a.prototype.getNextScopeStatementParent = function() {
            var a = this.scopes.pop();
            return a ? a.path.getStatementParent() : void 0;
          }, a.prototype.hasOwnParamBindings = function(a) {
            for (var b in this.bindings)
              if (a.hasOwnBinding(b)) {
                var c = this.bindings[b];
                if ("param" === c.kind)
                  return !0;
              }
            return !1;
          }, a.prototype.run = function() {
            var a = this.path.node;
            if (!a._hoisted) {
              a._hoisted = !0, this.path.traverse(i, this), this.getCompatibleScopes();
              var b = this.getAttachmentPath();
              if (b && b.getFunctionParent() !== this.path.getFunctionParent()) {
                var c = b.scope.generateUidIdentifier("ref");
                b.insertBefore([h.variableDeclaration("var", [h.variableDeclarator(c, this.path.node)])]);
                var d = this.path.parentPath;
                d.isJSXElement() && this.path.container === d.node.children && (c = h.JSXExpressionContainer(c)), this.path.replaceWith(c);
              }
            }
          }, a;
        }();
    return b["default"] = j, c.exports = b["default"], c.exports;
  }), a.registerDynamic("174", ["c", "a", "4", "172", "173", "14c", "5", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (this._assertUnremoved(), a = this._verifyNodeList(a), this.parentPath.isExpressionStatement() || this.parentPath.isLabeledStatement())
        return this.parentPath.insertBefore(a);
      if (this.isNodeType("Expression") || this.parentPath.isForStatement() && "init" === this.key)
        this.node && a.push(this.node), this.replaceExpressionWithStatements(a);
      else {
        if (this._maybePopFromStatements(a), Array.isArray(this.container))
          return this._containerInsertBefore(a);
        if (!this.isStatementOrBlock())
          throw new Error("We don't know what to do with this node type. We were previously a Statement but we can't fit in here?");
        this.node && a.push(this.node), this._replaceWith(x.blockStatement(a));
      }
      return [this];
    }
    function e(a, b) {
      this.updateSiblingKeys(a, b.length);
      for (var c = [],
          d = 0; d < b.length; d++) {
        var e = a + d,
            f = b[d];
        if (this.container.splice(e, 0, f), this.context) {
          var g = this.context.create(this.parent, this.container, e, this.listKey);
          c.push(g);
        } else
          c.push(v["default"].get({
            parentPath: this.parentPath,
            parent: this.parent,
            container: this.container,
            listKey: this.listKey,
            key: e
          }));
      }
      for (var h = this.contexts,
          i = this; !h.length; )
        i = i.parentPath, h = i.contexts;
      for (var j = c,
          k = Array.isArray(j),
          l = 0,
          j = k ? j : o(j); ; ) {
        var m;
        if (k) {
          if (l >= j.length)
            break;
          m = j[l++];
        } else {
          if (l = j.next(), l.done)
            break;
          m = l.value;
        }
        var n = m;
        n.setScope(), n.debug(function() {
          return "Inserted.";
        });
        for (var p = h,
            q = Array.isArray(p),
            r = 0,
            p = q ? p : o(p); ; ) {
          var s;
          if (q) {
            if (r >= p.length)
              break;
            s = p[r++];
          } else {
            if (r = p.next(), r.done)
              break;
            s = r.value;
          }
          var t = s;
          t.maybeQueue(n, !0);
        }
      }
      return c;
    }
    function f(a) {
      return this._containerInsert(this.key, a);
    }
    function g(a) {
      return this._containerInsert(this.key + 1, a);
    }
    function h(a) {
      var b = a[a.length - 1],
          c = x.isIdentifier(b) || x.isExpressionStatement(b) && x.isIdentifier(b.expression);
      c && !this.isCompletionRecord() && a.pop();
    }
    function i(a) {
      if (this._assertUnremoved(), a = this._verifyNodeList(a), this.parentPath.isExpressionStatement() || this.parentPath.isLabeledStatement())
        return this.parentPath.insertAfter(a);
      if (this.isNodeType("Expression") || this.parentPath.isForStatement() && "init" === this.key) {
        if (this.node) {
          var b = this.scope.generateDeclaredUidIdentifier();
          a.unshift(x.expressionStatement(x.assignmentExpression("=", b, this.node))), a.push(x.expressionStatement(b));
        }
        this.replaceExpressionWithStatements(a);
      } else {
        if (this._maybePopFromStatements(a), Array.isArray(this.container))
          return this._containerInsertAfter(a);
        if (!this.isStatementOrBlock())
          throw new Error("We don't know what to do with this node type. We were previously a Statement but we can't fit in here?");
        this.node && a.unshift(this.node), this._replaceWith(x.blockStatement(a));
      }
      return [this];
    }
    function j(a, b) {
      if (this.parent)
        for (var c = this.parent[r.PATH_CACHE_KEY],
            d = 0; d < c.length; d++) {
          var e = c[d];
          e.key >= a && (e.key += b);
        }
    }
    function k(a) {
      if (!a)
        return [];
      a.constructor !== Array && (a = [a]);
      for (var b = 0; b < a.length; b++) {
        var c = a[b],
            d = void 0;
        if (c ? "object" != typeof c ? d = "contains a non-object node" : c.type ? c instanceof v["default"] && (d = "has a NodePath when it expected a raw object") : d = "without a type" : d = "has falsy node", d) {
          var e = Array.isArray(c) ? "array" : typeof c;
          throw new Error("Node list " + d + " with the index of " + b + " and type of " + e);
        }
      }
      return a;
    }
    function l(a, b) {
      this._assertUnremoved(), b = this._verifyNodeList(b);
      var c = v["default"].get({
        parentPath: this,
        parent: this.node,
        container: this.node[a],
        listKey: a,
        key: 0
      });
      return c.insertBefore(b);
    }
    function m(a, b) {
      this._assertUnremoved(), b = this._verifyNodeList(b);
      var c = this.node[a],
          d = v["default"].get({
            parentPath: this,
            parent: this.node,
            container: c,
            listKey: a,
            key: c.length
          });
      return d.replaceWithMultiple(b);
    }
    function n() {
      var a = arguments.length <= 0 || void 0 === arguments[0] ? this.scope : arguments[0],
          b = new t["default"](this, a);
      return b.run();
    }
    var o = (a("3"), a("c")["default"]),
        p = a("a")["default"],
        q = a("4")["default"];
    b.__esModule = !0, b.insertBefore = d, b._containerInsert = e, b._containerInsertBefore = f, b._containerInsertAfter = g, b._maybePopFromStatements = h, b.insertAfter = i, b.updateSiblingKeys = j, b._verifyNodeList = k, b.unshiftContainer = l, b.pushContainer = m, b.hoist = n;
    var r = a("172"),
        s = a("173"),
        t = p(s),
        u = a("14c"),
        v = p(u),
        w = a("5"),
        x = q(w);
    return c.exports;
  }), a.registerDynamic("175", ["c", "a", "4", "14c", "5", "3"], !0, function(a, b, c) {
    "use strict";
    function d() {
      var a = this;
      do {
        if (!a.parentPath || Array.isArray(a.container) && a.isStatement())
          break;
        a = a.parentPath;
      } while (a);
      if (a && (a.isProgram() || a.isFile()))
        throw new Error("File/Program node, we can't possibly find a statement parent to this");
      return a;
    }
    function e() {
      return "left" === this.key ? this.getSibling("right") : "right" === this.key ? this.getSibling("left") : void 0;
    }
    function f() {
      var a = [],
          b = function(b) {
            b && (a = a.concat(b.getCompletionRecords()));
          };
      if (this.isIfStatement())
        b(this.get("consequent")), b(this.get("alternate"));
      else if (this.isDoExpression() || this.isFor() || this.isWhile())
        b(this.get("body"));
      else if (this.isProgram() || this.isBlockStatement())
        b(this.get("body").pop());
      else {
        if (this.isFunction())
          return this.get("body").getCompletionRecords();
        this.isTryStatement() ? (b(this.get("block")), b(this.get("handler")), b(this.get("finalizer"))) : a.push(this);
      }
      return a;
    }
    function g(a) {
      return q["default"].get({
        parentPath: this.parentPath,
        parent: this.parent,
        container: this.container,
        listKey: this.listKey,
        key: a
      });
    }
    function h(a, b) {
      b === !0 && (b = this.context);
      var c = a.split(".");
      return 1 === c.length ? this._getKey(a, b) : this._getPattern(c, b);
    }
    function i(a, b) {
      var c = this,
          d = this.node,
          e = d[a];
      return Array.isArray(e) ? e.map(function(f, g) {
        return q["default"].get({
          listKey: a,
          parentPath: c,
          parent: d,
          container: e,
          key: g
        }).setContext(b);
      }) : q["default"].get({
        parentPath: this,
        parent: d,
        container: d,
        key: a
      }).setContext(b);
    }
    function j(a, b) {
      for (var c = this,
          d = a,
          e = Array.isArray(d),
          f = 0,
          d = e ? d : m(d); ; ) {
        var g;
        if (e) {
          if (f >= d.length)
            break;
          g = d[f++];
        } else {
          if (f = d.next(), f.done)
            break;
          g = f.value;
        }
        var h = g;
        c = "." === h ? c.parentPath : Array.isArray(c) ? c[h] : c.get(h, b);
      }
      return c;
    }
    function k(a) {
      return s.getBindingIdentifiers(this.node, a);
    }
    function l(a) {
      return s.getOuterBindingIdentifiers(this.node, a);
    }
    var m = (a("3"), a("c")["default"]),
        n = a("a")["default"],
        o = a("4")["default"];
    b.__esModule = !0, b.getStatementParent = d, b.getOpposite = e, b.getCompletionRecords = f, b.getSibling = g, b.get = h, b._getKey = i, b._getPattern = j, b.getBindingIdentifiers = k, b.getOuterBindingIdentifiers = l;
    var p = a("14c"),
        q = n(p),
        r = a("5"),
        s = o(r);
    return c.exports;
  }), a.registerDynamic("176", ["3"], !0, function(a, b, c) {
    "use strict";
    function d() {
      var a = this.node;
      if (a) {
        var b = a.trailingComments,
            c = a.leadingComments;
        if (b || c) {
          var d = this.getSibling(this.key - 1),
              e = this.getSibling(this.key + 1);
          d.node || (d = e), e.node || (e = d), d.addComments("trailing", c), e.addComments("leading", b);
        }
      }
    }
    function e(a, b, c) {
      this.addComments(a, [{
        type: c ? "CommentLine" : "CommentBlock",
        value: b
      }]);
    }
    function f(a, b) {
      if (b) {
        var c = this.node;
        if (c) {
          var d = a + "Comments";
          c[d] ? c[d] = c[d].concat(b) : c[d] = b;
        }
      }
    }
    a("3");
    return b.__esModule = !0, b.shareCommentsWithSiblings = d, b.addComment = e, b.addComments = f, c.exports;
  }), a.registerDynamic("14c", ["9", "c", "4", "a", "156", "17", "172", "159", "14", "77", "177", "5", "15a", "15d", "16b", "16c", "16d", "16e", "16f", "171", "174", "175", "176", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("9")["default"]),
        e = a("c")["default"],
        f = a("4")["default"],
        g = a("a")["default"];
    b.__esModule = !0;
    var h = a("156"),
        i = f(h),
        j = a("17"),
        k = g(j),
        l = a("172"),
        m = a("159"),
        n = g(m),
        o = a("14"),
        p = g(o),
        q = a("77"),
        r = g(q),
        s = a("177"),
        t = g(s),
        u = a("5"),
        v = f(u),
        w = k["default"]("babel"),
        x = function() {
          function a(b, c) {
            d(this, a), this.parent = c, this.hub = b, this.contexts = [], this.data = {}, this.shouldSkip = !1, this.shouldStop = !1, this.removed = !1, this.state = null, this.opts = null, this.skipKeys = null, this.parentPath = null, this.context = null, this.container = null, this.listKey = null, this.inList = !1, this.parentKey = null, this.key = null, this.node = null, this.scope = null, this.type = null, this.typeAnnotation = null;
          }
          return a.get = function(b) {
            var c = b.hub,
                d = b.parentPath,
                e = b.parent,
                f = b.container,
                g = b.listKey,
                h = b.key;
            !c && d && (c = d.hub), n["default"](e, "To get a node path the parent needs to exist");
            for (var i = f[h],
                j = e[l.PATH_CACHE_KEY] = e[l.PATH_CACHE_KEY] || [],
                k = void 0,
                m = 0; m < j.length; m++) {
              var o = j[m];
              if (o.node === i) {
                k = o;
                break;
              }
            }
            if (k && !(k instanceof a)) {
              if ("NodePath" !== k.constructor.name)
                throw new Error("We found a path that isn't a NodePath instance. Possiblly due to bad serialisation.");
              k = null;
            }
            return k || (k = new a(c, e), j.push(k)), k.setup(d, f, g, h), k;
          }, a.prototype.getScope = function(a) {
            var b = a;
            return this.isScope() && (b = new t["default"](this, a)), b;
          }, a.prototype.setData = function(a, b) {
            return this.data[a] = b;
          }, a.prototype.getData = function(a, b) {
            var c = this.data[a];
            return !c && b && (c = this.data[a] = b), c;
          }, a.prototype.buildCodeFrameError = function(a) {
            var b = arguments.length <= 1 || void 0 === arguments[1] ? SyntaxError : arguments[1];
            return this.hub.file.buildCodeFrameError(this.node, a, b);
          }, a.prototype.traverse = function(a, b) {
            p["default"](this.node, a, this.scope, b, this);
          }, a.prototype.mark = function(a, b) {
            this.hub.file.metadata.marked.push({
              type: a,
              message: b,
              loc: this.node.loc
            });
          }, a.prototype.set = function(a, b) {
            v.validate(this.node, a, b), this.node[a] = b;
          }, a.prototype.getPathLocation = function() {
            var a = [],
                b = this;
            do {
              var c = b.key;
              b.inList && (c = b.listKey + "[" + c + "]"), a.unshift(c);
            } while (b = b.parentPath);
            return a.join(".");
          }, a.prototype.debug = function(a) {
            w.enabled && w(this.getPathLocation() + " " + this.type + ": " + a());
          }, a;
        }();
    b["default"] = x, r["default"](x.prototype, a("15a")), r["default"](x.prototype, a("15d")), r["default"](x.prototype, a("16b")), r["default"](x.prototype, a("16c")), r["default"](x.prototype, a("16d")), r["default"](x.prototype, a("16e")), r["default"](x.prototype, a("16f")), r["default"](x.prototype, a("171")), r["default"](x.prototype, a("174")), r["default"](x.prototype, a("175")), r["default"](x.prototype, a("176"));
    for (var y = function() {
      if (A) {
        if (B >= z.length)
          return "break";
        C = z[B++];
      } else {
        if (B = z.next(), B.done)
          return "break";
        C = B.value;
      }
      var a = C,
          b = "is" + a;
      x.prototype[b] = function(a) {
        return v[b](this.node, a);
      }, x.prototype["assert" + a] = function(c) {
        if (!this[b](c))
          throw new TypeError("Expected node path of type " + a);
      };
    },
        z = v.TYPES,
        A = Array.isArray(z),
        B = 0,
        z = A ? z : e(z); ; ) {
      var C,
          D = y();
      if ("break" === D)
        break;
    }
    var E = function(a) {
      if ("_" === a[0])
        return "continue";
      v.TYPES.indexOf(a) < 0 && v.TYPES.push(a);
      var b = i[a];
      x.prototype["is" + a] = function(a) {
        return b.checkPath(this, a);
      };
    };
    for (var F in i) {
      E(F);
    }
    return c.exports = b["default"], c.exports;
  }), a.registerDynamic("178", ["52", "10d", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("52")),
        e = a("10d");
    return c.exports = function(a, b) {
      for (var c,
          f = e(a),
          g = d.getKeys(f),
          h = g.length,
          i = 0; h > i; )
        if (f[c = g[i++]] === b)
          return c;
    }, c.exports;
  }), a.registerDynamic("109", ["10d", "52", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("10d")),
        e = a("52").getNames,
        f = {}.toString,
        g = "object" == typeof window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [],
        h = function(a) {
          try {
            return e(a);
          } catch (b) {
            return g.slice();
          }
        };
    return c.exports.get = function(a) {
      return g && "[object Window]" == f.call(a) ? h(a) : e(d(a));
    }, c.exports;
  }), a.registerDynamic("179", ["52", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("52"));
    return c.exports = function(a) {
      var b = d.getKeys(a),
          c = d.getSymbols;
      if (c)
        for (var e,
            f = c(a),
            g = d.isEnum,
            h = 0; f.length > h; )
          g.call(a, e = f[h++]) && b.push(e);
      return b;
    }, c.exports;
  }), a.registerDynamic("17a", ["17b", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("17b"));
    return c.exports = Array.isArray || function(a) {
      return "Array" == d(a);
    }, c.exports;
  }), a.registerDynamic("140", ["52", "63", "5f", "53", "64", "61", "65", "17c", "66", "5e", "54", "178", "109", "179", "17a", "69", "10d", "17d", "17e", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), this),
        e = a("52"),
        d = a("63"),
        f = a("5f"),
        g = a("53"),
        h = a("64"),
        i = a("61"),
        j = a("65"),
        k = a("17c"),
        l = a("66"),
        m = a("5e"),
        n = a("54"),
        o = a("178"),
        p = a("109"),
        q = a("179"),
        r = a("17a"),
        s = a("69"),
        t = a("10d"),
        u = a("17d"),
        v = e.getDesc,
        w = e.setDesc,
        x = e.create,
        y = p.get,
        z = d.Symbol,
        A = d.JSON,
        B = A && A.stringify,
        C = !1,
        D = n("_hidden"),
        E = e.isEnum,
        F = k("symbol-registry"),
        G = k("symbols"),
        H = "function" == typeof z,
        I = Object.prototype,
        J = g && j(function() {
          return 7 != x(w({}, "a", {get: function() {
              return w(this, "a", {value: 7}).a;
            }})).a;
        }) ? function(a, b, c) {
          var d = v(I, b);
          d && delete I[b], w(a, b, c), d && a !== I && w(I, b, d);
        } : w,
        K = function(a) {
          var b = G[a] = x(z.prototype);
          return b._k = a, g && C && J(I, a, {
            configurable: !0,
            set: function(b) {
              f(this, D) && f(this[D], a) && (this[D][a] = !1), J(this, a, u(1, b));
            }
          }), b;
        },
        L = function(a) {
          return "symbol" == typeof a;
        },
        M = function(a, b, c) {
          return c && f(G, b) ? (c.enumerable ? (f(a, D) && a[D][b] && (a[D][b] = !1), c = x(c, {enumerable: u(0, !1)})) : (f(a, D) || w(a, D, u(1, {})), a[D][b] = !0), J(a, b, c)) : w(a, b, c);
        },
        N = function(a, b) {
          s(a);
          for (var c,
              d = q(b = t(b)),
              e = 0,
              f = d.length; f > e; )
            M(a, c = d[e++], b[c]);
          return a;
        },
        O = function(a, b) {
          return void 0 === b ? x(a) : N(x(a), b);
        },
        P = function(a) {
          var b = E.call(this, a);
          return b || !f(this, a) || !f(G, a) || f(this, D) && this[D][a] ? b : !0;
        },
        Q = function(a, b) {
          var c = v(a = t(a), b);
          return !c || !f(G, b) || f(a, D) && a[D][b] || (c.enumerable = !0), c;
        },
        R = function(a) {
          for (var b,
              c = y(t(a)),
              d = [],
              e = 0; c.length > e; )
            f(G, b = c[e++]) || b == D || d.push(b);
          return d;
        },
        S = function(a) {
          for (var b,
              c = y(t(a)),
              d = [],
              e = 0; c.length > e; )
            f(G, b = c[e++]) && d.push(G[b]);
          return d;
        },
        T = function(a) {
          if (void 0 !== a && !L(a)) {
            for (var b,
                c,
                d = [a],
                e = 1,
                f = arguments; f.length > e; )
              d.push(f[e++]);
            return b = d[1], "function" == typeof b && (c = b), (c || !r(b)) && (b = function(a, b) {
              return c && (b = c.call(this, a, b)), L(b) ? void 0 : b;
            }), d[1] = b, B.apply(A, d);
          }
        },
        U = j(function() {
          var a = z();
          return "[null]" != B([a]) || "{}" != B({a: a}) || "{}" != B(Object(a));
        });
    H || (z = function() {
      if (L(this))
        throw TypeError("Symbol is not a constructor");
      return K(m(arguments.length > 0 ? arguments[0] : void 0));
    }, i(z.prototype, "toString", function() {
      return this._k;
    }), L = function(a) {
      return a instanceof z;
    }, e.create = O, e.isEnum = P, e.getDesc = Q, e.setDesc = M, e.setDescs = N, e.getNames = p.get = R, e.getSymbols = S, g && !a("17e") && i(I, "propertyIsEnumerable", P, !0));
    var V = {
      "for": function(a) {
        return f(F, a += "") ? F[a] : F[a] = z(a);
      },
      keyFor: function(a) {
        return o(F, a);
      },
      useSetter: function() {
        C = !0;
      },
      useSimple: function() {
        C = !1;
      }
    };
    return e.each.call("hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","), function(a) {
      var b = n(a);
      V[a] = H ? b : K(b);
    }), C = !0, h(h.G + h.W, {Symbol: z}), h(h.S, "Symbol", V), h(h.S + h.F * !H, "Object", {
      create: O,
      defineProperty: M,
      defineProperties: N,
      getOwnPropertyDescriptor: Q,
      getOwnPropertyNames: R,
      getOwnPropertySymbols: S
    }), A && h(h.S + h.F * (!H || U), "JSON", {stringify: T}), l(z, "Symbol"), l(Math, "Math", !0), l(d.JSON, "JSON", !0), c.exports;
  }), a.registerDynamic("73", ["3"], !0, function(a, b, c) {
    a("3");
    return c.exports;
  }), a.registerDynamic("17f", ["140", "73", "51", "3"], !0, function(a, b, c) {
    a("3");
    return a("140"), a("73"), c.exports = a("51").Symbol, c.exports;
  }), a.registerDynamic("b9", ["17f", "3"], !0, function(a, b, c) {
    a("3");
    return c.exports = {
      "default": a("17f"),
      __esModule: !0
    }, c.exports;
  }), a.registerDynamic("180", ["3"], !0, function(a, b, c) {
    a("3");
    return c.exports = function() {}, c.exports;
  }), a.registerDynamic("5d", ["3"], !0, function(a, b, c) {
    a("3");
    return c.exports = function(a, b) {
      return {
        value: b,
        done: !!a
      };
    }, c.exports;
  }), a.registerDynamic("94", ["17b", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("17b"));
    return c.exports = Object("z").propertyIsEnumerable(0) ? Object : function(a) {
      return "String" == d(a) ? a.split("") : Object(a);
    }, c.exports;
  }), a.registerDynamic("10d", ["94", "5a", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("94")),
        e = a("5a");
    return c.exports = function(a) {
      return d(e(a));
    }, c.exports;
  }), a.registerDynamic("181", ["180", "5d", "6b", "10d", "5c", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("180")),
        e = a("5d"),
        f = a("6b"),
        g = a("10d");
    return c.exports = a("5c")(Array, "Array", function(a, b) {
      this._t = g(a), this._i = 0, this._k = b;
    }, function() {
      var a = this._t,
          b = this._k,
          c = this._i++;
      return !a || c >= a.length ? (this._t = void 0, e(1)) : "keys" == b ? e(0, c) : "values" == b ? e(0, a[c]) : e(0, [c, a[c]]);
    }, "values"), f.Arguments = f.Array, d("keys"), d("values"), d("entries"), c.exports;
  }), a.registerDynamic("75", ["181", "6b", "3"], !0, function(a, b, c) {
    a("3");
    a("181");
    var d = a("6b");
    return d.NodeList = d.HTMLCollection = d.Array, c.exports;
  }), a.registerDynamic("6d", ["3"], !0, function(a, b, c) {
    var d = (a("3"), Math.ceil),
        e = Math.floor;
    return c.exports = function(a) {
      return isNaN(a = +a) ? 0 : (a > 0 ? e : d)(a);
    }, c.exports;
  }), a.registerDynamic("5a", ["3"], !0, function(a, b, c) {
    a("3");
    return c.exports = function(a) {
      if (void 0 == a)
        throw TypeError("Can't call method on  " + a);
      return a;
    }, c.exports;
  }), a.registerDynamic("182", ["6d", "5a", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("6d")),
        e = a("5a");
    return c.exports = function(a) {
      return function(b, c) {
        var f,
            g,
            h = String(e(b)),
            i = d(c),
            j = h.length;
        return 0 > i || i >= j ? a ? "" : void 0 : (f = h.charCodeAt(i), 55296 > f || f > 56319 || i + 1 === j || (g = h.charCodeAt(i + 1)) < 56320 || g > 57343 ? a ? h.charAt(i) : f : a ? h.slice(i, i + 2) : (f - 55296 << 10) + (g - 56320) + 65536);
      };
    }, c.exports;
  }), a.registerDynamic("17e", ["3"], !0, function(a, b, c) {
    a("3");
    return c.exports = !0, c.exports;
  }), a.registerDynamic("183", ["3"], !0, function(a, b, c) {
    a("3");
    return c.exports = function(a) {
      if ("function" != typeof a)
        throw TypeError(a + " is not a function!");
      return a;
    }, c.exports;
  }), a.registerDynamic("58", ["183", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("183"));
    return c.exports = function(a, b, c) {
      if (d(a), void 0 === b)
        return a;
      switch (c) {
        case 1:
          return function(c) {
            return a.call(b, c);
          };
        case 2:
          return function(c, d) {
            return a.call(b, c, d);
          };
        case 3:
          return function(c, d, e) {
            return a.call(b, c, d, e);
          };
      }
      return function() {
        return a.apply(b, arguments);
      };
    }, c.exports;
  }), a.registerDynamic("64", ["63", "51", "58", "3"], !0, function(a, b, c) {
    var d = (a("3"), this),
        d = a("63"),
        e = a("51"),
        f = a("58"),
        g = "prototype",
        h = function(a, b, c) {
          var i,
              j,
              k,
              l = a & h.F,
              m = a & h.G,
              n = a & h.S,
              o = a & h.P,
              p = a & h.B,
              q = a & h.W,
              r = m ? e : e[b] || (e[b] = {}),
              s = m ? d : n ? d[b] : (d[b] || {})[g];
          m && (c = b);
          for (i in c)
            j = !l && s && i in s, j && i in r || (k = j ? s[i] : c[i], r[i] = m && "function" != typeof s[i] ? c[i] : p && j ? f(k, d) : q && s[i] == k ? function(a) {
              var b = function(b) {
                return this instanceof a ? new a(b) : a(b);
              };
              return b[g] = a[g], b;
            }(k) : o && "function" == typeof k ? f(Function.call, k) : k, o && ((r[g] || (r[g] = {}))[i] = k));
        };
    return h.F = 1, h.G = 2, h.S = 4, h.P = 8, h.B = 16, h.W = 32, c.exports = h, c.exports;
  }), a.registerDynamic("61", ["56", "3"], !0, function(a, b, c) {
    a("3");
    return c.exports = a("56"), c.exports;
  }), a.registerDynamic("17d", ["3"], !0, function(a, b, c) {
    a("3");
    return c.exports = function(a, b) {
      return {
        enumerable: !(1 & a),
        configurable: !(2 & a),
        writable: !(4 & a),
        value: b
      };
    }, c.exports;
  }), a.registerDynamic("65", ["3"], !0, function(a, b, c) {
    a("3");
    return c.exports = function(a) {
      try {
        return !!a();
      } catch (b) {
        return !0;
      }
    }, c.exports;
  }), a.registerDynamic("53", ["65", "3"], !0, function(a, b, c) {
    a("3");
    return c.exports = !a("65")(function() {
      return 7 != Object.defineProperty({}, "a", {get: function() {
          return 7;
        }}).a;
    }), c.exports;
  }), a.registerDynamic("56", ["52", "17d", "53", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("52")),
        e = a("17d");
    return c.exports = a("53") ? function(a, b, c) {
      return d.setDesc(a, b, e(1, c));
    } : function(a, b, c) {
      return a[b] = c, a;
    }, c.exports;
  }), a.registerDynamic("184", ["52", "17d", "66", "56", "54", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("52")),
        e = a("17d"),
        f = a("66"),
        g = {};
    return a("56")(g, a("54")("iterator"), function() {
      return this;
    }), c.exports = function(a, b, c) {
      a.prototype = d.create(g, {next: e(1, c)}), f(a, b + " Iterator");
    }, c.exports;
  }), a.registerDynamic("5f", ["3"], !0, function(a, b, c) {
    var d = (a("3"), {}.hasOwnProperty);
    return c.exports = function(a, b) {
      return d.call(a, b);
    }, c.exports;
  }), a.registerDynamic("66", ["52", "5f", "54", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("52").setDesc),
        e = a("5f"),
        f = a("54")("toStringTag");
    return c.exports = function(a, b, c) {
      a && !e(a = c ? a : a.prototype, f) && d(a, f, {
        configurable: !0,
        value: b
      });
    }, c.exports;
  }), a.registerDynamic("5c", ["17e", "64", "61", "56", "5f", "6b", "184", "66", "52", "54", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("17e")),
        e = a("64"),
        f = a("61"),
        g = a("56"),
        h = a("5f"),
        i = a("6b"),
        j = a("184"),
        k = a("66"),
        l = a("52").getProto,
        m = a("54")("iterator"),
        n = !([].keys && "next" in [].keys()),
        o = "@@iterator",
        p = "keys",
        q = "values",
        r = function() {
          return this;
        };
    return c.exports = function(a, b, c, s, t, u, v) {
      j(c, b, s);
      var w,
          x,
          y = function(a) {
            if (!n && a in C)
              return C[a];
            switch (a) {
              case p:
                return function() {
                  return new c(this, a);
                };
              case q:
                return function() {
                  return new c(this, a);
                };
            }
            return function() {
              return new c(this, a);
            };
          },
          z = b + " Iterator",
          A = t == q,
          B = !1,
          C = a.prototype,
          D = C[m] || C[o] || t && C[t],
          E = D || y(t);
      if (D) {
        var F = l(E.call(new a));
        k(F, z, !0), !d && h(C, o) && g(F, m, r), A && D.name !== q && (B = !0, E = function() {
          return D.call(this);
        });
      }
      if (d && !v || !n && !B && C[m] || g(C, m, E), i[b] = E, i[z] = r, t)
        if (w = {
          values: A ? E : y(q),
          keys: u ? E : y(p),
          entries: A ? y("entries") : E
        }, v)
          for (x in w)
            x in C || f(C, x, w[x]);
        else
          e(e.P + e.F * (n || B), b, w);
      return w;
    }, c.exports;
  }), a.registerDynamic("74", ["182", "5c", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("182")(!0));
    return a("5c")(String, "String", function(a) {
      this._t = String(a), this._i = 0;
    }, function() {
      var a,
          b = this._t,
          c = this._i;
      return c >= b.length ? {
        value: void 0,
        done: !0
      } : (a = d(b, c), this._i += a.length, {
        value: a,
        done: !1
      });
    }), c.exports;
  }), a.registerDynamic("60", ["3"], !0, function(a, b, c) {
    a("3");
    return c.exports = function(a) {
      return "object" == typeof a ? null !== a : "function" == typeof a;
    }, c.exports;
  }), a.registerDynamic("69", ["60", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("60"));
    return c.exports = function(a) {
      if (!d(a))
        throw TypeError(a + " is not an object!");
      return a;
    }, c.exports;
  }), a.registerDynamic("17b", ["3"], !0, function(a, b, c) {
    var d = (a("3"), {}.toString);
    return c.exports = function(a) {
      return d.call(a).slice(8, -1);
    }, c.exports;
  }), a.registerDynamic("70", ["17b", "54", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("17b")),
        e = a("54")("toStringTag"),
        f = "Arguments" == d(function() {
          return arguments;
        }());
    return c.exports = function(a) {
      var b,
          c,
          g;
      return void 0 === a ? "Undefined" : null === a ? "Null" : "string" == typeof(c = (b = Object(a))[e]) ? c : f ? d(b) : "Object" == (g = d(b)) && "function" == typeof b.callee ? "Arguments" : g;
    }, c.exports;
  }), a.registerDynamic("17c", ["63", "3"], !0, function(a, b, c) {
    var d = (a("3"), this),
        d = a("63"),
        e = "__core-js_shared__",
        f = d[e] || (d[e] = {});
    return c.exports = function(a) {
      return f[a] || (f[a] = {});
    }, c.exports;
  }), a.registerDynamic("5e", ["3"], !0, function(a, b, c) {
    var d = (a("3"), 0),
        e = Math.random();
    return c.exports = function(a) {
      return "Symbol(".concat(void 0 === a ? "" : a, ")_", (++d + e).toString(36));
    }, c.exports;
  }), a.registerDynamic("63", ["3"], !0, function(a, b, c) {
    var d = (a("3"), this),
        d = c.exports = "undefined" != typeof window && window.Math == Math ? window : "undefined" != typeof self && self.Math == Math ? self : Function("return this")();
    return "number" == typeof __g && (__g = d), c.exports;
  }), a.registerDynamic("54", ["17c", "5e", "63", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("17c")("wks")),
        e = a("5e"),
        f = a("63").Symbol;
    return c.exports = function(a) {
      return d[a] || (d[a] = f && f[a] || (f || e)("Symbol." + a));
    }, c.exports;
  }), a.registerDynamic("6b", ["3"], !0, function(a, b, c) {
    a("3");
    return c.exports = {}, c.exports;
  }), a.registerDynamic("6e", ["70", "54", "6b", "51", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("70")),
        e = a("54")("iterator"),
        f = a("6b");
    return c.exports = a("51").getIteratorMethod = function(a) {
      return void 0 != a ? a[e] || a["@@iterator"] || f[d(a)] : void 0;
    }, c.exports;
  }), a.registerDynamic("51", ["3"], !0, function(a, b, c) {
    var d = (a("3"), c.exports = {version: "1.2.6"});
    return "number" == typeof __e && (__e = d), c.exports;
  }), a.registerDynamic("185", ["69", "6e", "51", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("69")),
        e = a("6e");
    return c.exports = a("51").getIterator = function(a) {
      var b = e(a);
      if ("function" != typeof b)
        throw TypeError(a + " is not iterable!");
      return d(b.call(a));
    }, c.exports;
  }), a.registerDynamic("186", ["75", "74", "185", "3"], !0, function(a, b, c) {
    a("3");
    return a("75"), a("74"), c.exports = a("185"), c.exports;
  }), a.registerDynamic("c", ["186", "3"], !0, function(a, b, c) {
    a("3");
    return c.exports = {
      "default": a("186"),
      __esModule: !0
    }, c.exports;
  }), a.registerDynamic("52", ["3"], !0, function(a, b, c) {
    var d = (a("3"), Object);
    return c.exports = {
      create: d.create,
      getProto: d.getPrototypeOf,
      isEnum: {}.propertyIsEnumerable,
      getDesc: d.getOwnPropertyDescriptor,
      setDesc: d.defineProperty,
      setDescs: d.defineProperties,
      getKeys: d.keys,
      getNames: d.getOwnPropertyNames,
      getSymbols: d.getOwnPropertySymbols,
      each: [].forEach
    }, c.exports;
  }), a.registerDynamic("187", ["52", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("52"));
    return c.exports = function(a, b) {
      return d.create(a, b);
    }, c.exports;
  }), a.registerDynamic("79", ["187", "3"], !0, function(a, b, c) {
    a("3");
    return c.exports = {
      "default": a("187"),
      __esModule: !0
    }, c.exports;
  }), a.registerDynamic("188", ["3"], !0, function(a, b, c) {
    function d(a, b, c) {
      for (var d = a.length,
          e = b + (c ? 0 : -1); c ? e-- : ++e < d; ) {
        var f = a[e];
        if (f !== f)
          return e;
      }
      return -1;
    }
    a("3");
    return c.exports = d, c.exports;
  }), a.registerDynamic("e9", ["188", "3"], !0, function(a, b, c) {
    function d(a, b, c) {
      if (b !== b)
        return e(a, c);
      for (var d = c - 1,
          f = a.length; ++d < f; )
        if (a[d] === b)
          return d;
      return -1;
    }
    var e = (a("3"), a("188"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("2e", ["45", "3"], !0, function(a, b, c) {
    function d(a) {
      return "string" == typeof a || e(a) && h.call(a) == f;
    }
    var e = (a("3"), a("45")),
        f = "[object String]",
        g = Object.prototype,
        h = g.toString;
    return c.exports = d, c.exports;
  }), a.registerDynamic("189", ["3"], !0, function(a, b, c) {
    function d(a, b) {
      for (var c = -1,
          d = b.length,
          e = Array(d); ++c < d; )
        e[c] = a[b[c]];
      return e;
    }
    a("3");
    return c.exports = d, c.exports;
  }), a.registerDynamic("ff", ["189", "46", "3"], !0, function(a, b, c) {
    function d(a) {
      return e(a, f(a));
    }
    var e = (a("3"), a("189")),
        f = a("46");
    return c.exports = d, c.exports;
  }), a.registerDynamic("29", ["e9", "117", "3e", "1e", "fb", "2e", "ff", "3"], !0, function(a, b, c) {
    function d(a, b, c, d) {
      var m = a ? f(a) : 0;
      return i(m) || (a = k(a), m = a.length), c = "number" != typeof c || d && h(b, c, d) ? 0 : 0 > c ? l(m + c, 0) : c || 0, "string" == typeof a || !g(a) && j(a) ? m >= c && a.indexOf(b, c) > -1 : !!m && e(a, b, c) > -1;
    }
    var e = (a("3"), a("e9")),
        f = a("117"),
        g = a("3e"),
        h = a("1e"),
        i = a("fb"),
        j = a("2e"),
        k = a("ff"),
        l = Math.max;
    return c.exports = d, c.exports;
  }), a.registerDynamic("18a", ["3"], !0, function(a, b, c) {
    "use strict";
    a("3");
    return c.exports = Number.isNaN || function(a) {
      return a !== a;
    }, c.exports;
  }), a.registerDynamic("9f", ["18a", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("18a"));
    return c.exports = Number.isFinite || function(a) {
      return !("number" != typeof a || d(a) || a === 1 / 0 || a === -(1 / 0));
    }, c.exports;
  }), a.registerDynamic("84", ["9f", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("9f"));
    return c.exports = function(a, b) {
      if ("string" != typeof a)
        throw new TypeError("Expected a string as the first argument");
      if (0 > b || !d(b))
        throw new TypeError("Expected a finite positive number");
      var c = "";
      do
        1 & b && (c += a), a += a;
 while (b >>= 1);
      return c;
    }, c.exports;
  }), a.registerDynamic("a", ["3"], !0, function(a, b, c) {
    "use strict";
    a("3");
    return b["default"] = function(a) {
      return a && a.__esModule ? a : {"default": a};
    }, b.__esModule = !0, c.exports;
  }), a.registerDynamic("18b", ["9", "a", "4", "18c", "5", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("9")["default"]),
        e = a("a")["default"],
        f = a("4")["default"];
    b.__esModule = !0;
    var g = a("18c"),
        h = (e(g), a("5")),
        i = f(h),
        j = {
          ReferencedIdentifier: function(a, b) {
            var c = a.node;
            c.name === b.oldName && (c.name = b.newName);
          },
          Scope: function(a, b) {
            a.scope.bindingIdentifierEquals(b.oldName, b.binding.identifier) || a.skip();
          },
          "AssignmentExpression|Declaration": function(a, b) {
            var c = a.getOuterBindingIdentifiers();
            for (var d in c)
              d === b.oldName && (c[d].name = b.newName);
          }
        },
        k = function() {
          function a(b, c, e) {
            d(this, a), this.newName = e, this.oldName = c, this.binding = b;
          }
          return a.prototype.maybeConvertFromExportDeclaration = function(a) {
            var b = a.parentPath.isExportDeclaration() && a.parentPath;
            if (b) {
              var c = b.isExportDefaultDeclaration();
              c && (a.isFunctionDeclaration() || a.isClassDeclaration()) && !a.node.id && (a.node.id = a.scope.generateUidIdentifier("default"));
              var d = a.getOuterBindingIdentifiers(),
                  e = [];
              for (var f in d) {
                var g = f === this.oldName ? this.newName : f,
                    h = c ? "default" : f;
                e.push(i.exportSpecifier(i.identifier(g), i.identifier(h)));
              }
              var j = i.exportNamedDeclaration(null, e);
              a.isFunctionDeclaration() && (j._blockHoist = 3), b.insertAfter(j), b.replaceWith(a.node);
            }
          }, a.prototype.maybeConvertFromClassFunctionDeclaration = function(a) {}, a.prototype.maybeConvertFromClassFunctionExpression = function(a) {}, a.prototype.rename = function(a) {
            var b = this.binding,
                c = this.oldName,
                d = this.newName,
                e = b.scope,
                f = b.path,
                g = f.find(function(a) {
                  return a.isDeclaration() || a.isFunctionExpression();
                });
            g && this.maybeConvertFromExportDeclaration(g), e.traverse(a || e.block, j, this), a || (e.removeOwnBinding(c), e.bindings[d] = b, this.binding.identifier.name = d), "hoisted" === b.type, g && (this.maybeConvertFromClassFunctionDeclaration(g), this.maybeConvertFromClassFunctionExpression(g));
          }, a;
        }();
    return b["default"] = k, c.exports = b["default"], c.exports;
  }), a.registerDynamic("18d", ["46", "3"], !0, function(a, b, c) {
    function d(a, b, c) {
      for (var d = -1,
          f = e(b),
          g = f.length; ++d < g; ) {
        var h = f[d],
            i = a[h],
            j = c(i, b[h], h, a, b);
        (j === j ? j === i : i !== i) && (void 0 !== i || h in a) || (a[h] = j);
      }
      return a;
    }
    var e = (a("3"), a("46"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("39", ["3"], !0, function(a, b, c) {
    function d(a, b, c) {
      c || (c = {});
      for (var d = -1,
          e = b.length; ++d < e; ) {
        var f = b[d];
        c[f] = a[f];
      }
      return c;
    }
    a("3");
    return c.exports = d, c.exports;
  }), a.registerDynamic("3d", ["3f", "45", "3"], !0, function(a, b, c) {
    function d(a) {
      return f(a) && e(a) && h.call(a, "callee") && !i.call(a, "callee");
    }
    var e = (a("3"), a("3f")),
        f = a("45"),
        g = Object.prototype,
        h = g.hasOwnProperty,
        i = g.propertyIsEnumerable;
    return c.exports = d, c.exports;
  }), a.registerDynamic("b5", ["44", "3"], !0, function(a, b, c) {
    function d(a) {
      return e(a) && h.call(a) == f;
    }
    var e = (a("3"), a("44")),
        f = "[object Function]",
        g = Object.prototype,
        h = g.toString;
    return c.exports = d, c.exports;
  }), a.registerDynamic("18e", ["b5", "45", "3"], !0, function(a, b, c) {
    function d(a) {
      return null == a ? !1 : e(a) ? k.test(i.call(a)) : f(a) && g.test(a);
    }
    var e = (a("3"), a("b5")),
        f = a("45"),
        g = /^\[object .+?Constructor\]$/,
        h = Object.prototype,
        i = Function.prototype.toString,
        j = h.hasOwnProperty,
        k = RegExp("^" + i.call(j).replace(/[\\^$.*+?()[\]{}|]/g, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
    return c.exports = d, c.exports;
  }), a.registerDynamic("12f", ["18e", "3"], !0, function(a, b, c) {
    function d(a, b) {
      var c = null == a ? void 0 : a[b];
      return e(c) ? c : void 0;
    }
    var e = (a("3"), a("18e"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("45", ["3"], !0, function(a, b, c) {
    function d(a) {
      return !!a && "object" == typeof a;
    }
    a("3");
    return c.exports = d, c.exports;
  }), a.registerDynamic("3e", ["12f", "fb", "45", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("12f")),
        e = a("fb"),
        f = a("45"),
        g = "[object Array]",
        h = Object.prototype,
        i = h.toString,
        j = d(Array, "isArray"),
        k = j || function(a) {
          return f(a) && e(a.length) && i.call(a) == g;
        };
    return c.exports = k, c.exports;
  }), a.registerDynamic("3a", ["3d", "3e", "f9", "fb", "44", "3"], !0, function(a, b, c) {
    function d(a) {
      if (null == a)
        return [];
      i(a) || (a = Object(a));
      var b = a.length;
      b = b && h(b) && (f(a) || e(a)) && b || 0;
      for (var c = a.constructor,
          d = -1,
          j = "function" == typeof c && c.prototype === a,
          l = Array(b),
          m = b > 0; ++d < b; )
        l[d] = d + "";
      for (var n in a)
        m && g(n, b) || "constructor" == n && (j || !k.call(a, n)) || l.push(n);
      return l;
    }
    var e = (a("3"), a("3d")),
        f = a("3e"),
        g = a("f9"),
        h = a("fb"),
        i = a("44"),
        j = Object.prototype,
        k = j.hasOwnProperty;
    return c.exports = d, c.exports;
  }), a.registerDynamic("18f", ["3d", "3e", "f9", "fb", "3a", "3"], !0, function(a, b, c) {
    function d(a) {
      for (var b = i(a),
          c = b.length,
          d = c && a.length,
          j = !!d && h(d) && (f(a) || e(a)),
          l = -1,
          m = []; ++l < c; ) {
        var n = b[l];
        (j && g(n, d) || k.call(a, n)) && m.push(n);
      }
      return m;
    }
    var e = (a("3"), a("3d")),
        f = a("3e"),
        g = a("f9"),
        h = a("fb"),
        i = a("3a"),
        j = Object.prototype,
        k = j.hasOwnProperty;
    return c.exports = d, c.exports;
  }), a.registerDynamic("46", ["12f", "3f", "44", "18f", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("12f")),
        e = a("3f"),
        f = a("44"),
        g = a("18f"),
        h = d(Object, "keys"),
        i = h ? function(a) {
          var b = null == a ? void 0 : a.constructor;
          return "function" == typeof b && b.prototype === a || "function" != typeof a && e(a) ? g(a) : f(a) ? h(a) : [];
        } : g;
    return c.exports = i, c.exports;
  }), a.registerDynamic("154", ["39", "46", "3"], !0, function(a, b, c) {
    function d(a, b) {
      return null == b ? a : e(b, f(b), a);
    }
    var e = (a("3"), a("39")),
        f = a("46");
    return c.exports = d, c.exports;
  }), a.registerDynamic("12b", ["3"], !0, function(a, b, c) {
    function d(a) {
      return a;
    }
    a("3");
    return c.exports = d, c.exports;
  }), a.registerDynamic("f6", ["12b", "3"], !0, function(a, b, c) {
    function d(a, b, c) {
      if ("function" != typeof a)
        return e;
      if (void 0 === b)
        return a;
      switch (c) {
        case 1:
          return function(c) {
            return a.call(b, c);
          };
        case 3:
          return function(c, d, e) {
            return a.call(b, c, d, e);
          };
        case 4:
          return function(c, d, e, f) {
            return a.call(b, c, d, e, f);
          };
        case 5:
          return function(c, d, e, f, g) {
            return a.call(b, c, d, e, f, g);
          };
      }
      return function() {
        return a.apply(b, arguments);
      };
    }
    var e = (a("3"), a("12b"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("12a", ["3"], !0, function(a, b, c) {
    function d(a) {
      return function(b) {
        return null == b ? void 0 : b[a];
      };
    }
    a("3");
    return c.exports = d, c.exports;
  }), a.registerDynamic("117", ["12a", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("12a")),
        e = d("length");
    return c.exports = e, c.exports;
  }), a.registerDynamic("fb", ["3"], !0, function(a, b, c) {
    function d(a) {
      return "number" == typeof a && a > -1 && a % 1 == 0 && e >= a;
    }
    var e = (a("3"), 9007199254740991);
    return c.exports = d, c.exports;
  }), a.registerDynamic("3f", ["117", "fb", "3"], !0, function(a, b, c) {
    function d(a) {
      return null != a && f(e(a));
    }
    var e = (a("3"), a("117")),
        f = a("fb");
    return c.exports = d, c.exports;
  }), a.registerDynamic("f9", ["3"], !0, function(a, b, c) {
    function d(a, b) {
      return a = "number" == typeof a || e.test(a) ? +a : -1, b = null == b ? f : b, a > -1 && a % 1 == 0 && b > a;
    }
    var e = (a("3"), /^\d+$/),
        f = 9007199254740991;
    return c.exports = d, c.exports;
  }), a.registerDynamic("44", ["3"], !0, function(a, b, c) {
    function d(a) {
      var b = typeof a;
      return !!a && ("object" == b || "function" == b);
    }
    a("3");
    return c.exports = d, c.exports;
  }), a.registerDynamic("1e", ["3f", "f9", "44", "3"], !0, function(a, b, c) {
    function d(a, b, c) {
      if (!g(c))
        return !1;
      var d = typeof b;
      if ("number" == d ? e(c) && f(b, c.length) : "string" == d && b in c) {
        var h = c[b];
        return a === a ? a === h : h !== h;
      }
      return !1;
    }
    var e = (a("3"), a("3f")),
        f = a("f9"),
        g = a("44");
    return c.exports = d, c.exports;
  }), a.registerDynamic("48", ["f6", "1e", "190", "3"], !0, function(a, b, c) {
    function d(a) {
      return g(function(b, c) {
        var d = -1,
            g = null == b ? 0 : c.length,
            h = g > 2 ? c[g - 2] : void 0,
            i = g > 2 ? c[2] : void 0,
            j = g > 1 ? c[g - 1] : void 0;
        for ("function" == typeof h ? (h = e(h, j, 5), g -= 2) : (h = "function" == typeof j ? j : void 0, g -= h ? 1 : 0), i && f(c[0], c[1], i) && (h = 3 > g ? void 0 : h, g = 1); ++d < g; ) {
          var k = c[d];
          k && a(b, k, h);
        }
        return b;
      });
    }
    var e = (a("3"), a("f6")),
        f = a("1e"),
        g = a("190");
    return c.exports = d, c.exports;
  }), a.registerDynamic("77", ["18d", "154", "48", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("18d")),
        e = a("154"),
        f = a("48"),
        g = f(function(a, b, c) {
          return c ? d(a, b, c) : e(a, b);
        });
    return c.exports = g, c.exports;
  }), a.registerDynamic("191", ["3"], !0, function(a, b, c) {
    function d(a, b) {
      return void 0 === a ? b : a;
    }
    a("3");
    return c.exports = d, c.exports;
  }), a.registerDynamic("190", ["3"], !0, function(a, b, c) {
    function d(a, b) {
      if ("function" != typeof a)
        throw new TypeError(e);
      return b = f(void 0 === b ? a.length - 1 : +b || 0, 0), function() {
        for (var c = arguments,
            d = -1,
            e = f(c.length - b, 0),
            g = Array(e); ++d < e; )
          g[d] = c[b + d];
        switch (b) {
          case 0:
            return a.call(this, g);
          case 1:
            return a.call(this, c[0], g);
          case 2:
            return a.call(this, c[0], c[1], g);
        }
        var h = Array(b + 1);
        for (d = -1; ++d < b; )
          h[d] = c[d];
        return h[b] = g, a.apply(this, h);
      };
    }
    var e = (a("3"), "Expected a function"),
        f = Math.max;
    return c.exports = d, c.exports;
  }), a.registerDynamic("192", ["190", "3"], !0, function(a, b, c) {
    function d(a, b) {
      return e(function(c) {
        var d = c[0];
        return null == d ? d : (c.push(b), a.apply(void 0, c));
      });
    }
    var e = (a("3"), a("190"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("7e", ["77", "191", "192", "3"], !0, function(a, b, c) {
    var d = (a("3"), a("77")),
        e = a("191"),
        f = a("192"),
        g = f(d, e);
    return c.exports = g, c.exports;
  }), a.registerDynamic("193", [], !0, function(a, b, c) {
    return c.exports = function(a) {
      return a && "object" == typeof a && "function" == typeof a.copy && "function" == typeof a.fill && "function" == typeof a.readUInt8;
    }, c.exports;
  }), a.registerDynamic("2c", ["3", "193"], !0, function(a, b, c) {
    function d(a, c) {
      var d = {
        seen: [],
        stylize: f
      };
      return arguments.length >= 3 && (d.depth = arguments[2]), arguments.length >= 4 && (d.colors = arguments[3]), o(c) ? d.showHidden = c : c && b._extend(d, c), u(d.showHidden) && (d.showHidden = !1), u(d.depth) && (d.depth = 2), u(d.colors) && (d.colors = !1), u(d.customInspect) && (d.customInspect = !0), d.colors && (d.stylize = e), h(d, a, d.depth);
    }
    function e(a, b) {
      var c = d.styles[b];
      return c ? "[" + d.colors[c][0] + "m" + a + "[" + d.colors[c][1] + "m" : a;
    }
    function f(a, b) {
      return a;
    }
    function g(a) {
      var b = {};
      return a.forEach(function(a, c) {
        b[a] = !0;
      }), b;
    }
    function h(a, c, d) {
      if (a.customInspect && c && z(c.inspect) && c.inspect !== b.inspect && (!c.constructor || c.constructor.prototype !== c)) {
        var e = c.inspect(d, a);
        return s(e) || (e = h(a, e, d)), e;
      }
      var f = i(a, c);
      if (f)
        return f;
      var o = Object.keys(c),
          p = g(o);
      if (a.showHidden && (o = Object.getOwnPropertyNames(c)), y(c) && (o.indexOf("message") >= 0 || o.indexOf("description") >= 0))
        return j(c);
      if (0 === o.length) {
        if (z(c)) {
          var q = c.name ? ": " + c.name : "";
          return a.stylize("[Function" + q + "]", "special");
        }
        if (v(c))
          return a.stylize(RegExp.prototype.toString.call(c), "regexp");
        if (x(c))
          return a.stylize(Date.prototype.toString.call(c), "date");
        if (y(c))
          return j(c);
      }
      var r = "",
          t = !1,
          u = ["{", "}"];
      if (n(c) && (t = !0, u = ["[", "]"]), z(c)) {
        var w = c.name ? ": " + c.name : "";
        r = " [Function" + w + "]";
      }
      if (v(c) && (r = " " + RegExp.prototype.toString.call(c)), x(c) && (r = " " + Date.prototype.toUTCString.call(c)), y(c) && (r = " " + j(c)), 0 === o.length && (!t || 0 == c.length))
        return u[0] + r + u[1];
      if (0 > d)
        return v(c) ? a.stylize(RegExp.prototype.toString.call(c), "regexp") : a.stylize("[Object]", "special");
      a.seen.push(c);
      var A;
      return A = t ? k(a, c, d, p, o) : o.map(function(b) {
        return l(a, c, d, p, b, t);
      }), a.seen.pop(), m(A, r, u);
    }
    function i(a, b) {
      if (u(b))
        return a.stylize("undefined", "undefined");
      if (s(b)) {
        var c = "'" + JSON.stringify(b).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
        return a.stylize(c, "string");
      }
      return r(b) ? a.stylize("" + b, "number") : o(b) ? a.stylize("" + b, "boolean") : p(b) ? a.stylize("null", "null") : void 0;
    }
    function j(a) {
      return "[" + Error.prototype.toString.call(a) + "]";
    }
    function k(a, b, c, d, e) {
      for (var f = [],
          g = 0,
          h = b.length; h > g; ++g)
        E(b, String(g)) ? f.push(l(a, b, c, d, String(g), !0)) : f.push("");
      return e.forEach(function(e) {
        e.match(/^\d+$/) || f.push(l(a, b, c, d, e, !0));
      }), f;
    }
    function l(a, b, c, d, e, f) {
      var g,
          i,
          j;
      if (j = Object.getOwnPropertyDescriptor(b, e) || {value: b[e]}, j.get ? i = j.set ? a.stylize("[Getter/Setter]", "special") : a.stylize("[Getter]", "special") : j.set && (i = a.stylize("[Setter]", "special")), E(d, e) || (g = "[" + e + "]"), i || (a.seen.indexOf(j.value) < 0 ? (i = p(c) ? h(a, j.value, null) : h(a, j.value, c - 1), i.indexOf("\n") > -1 && (i = f ? i.split("\n").map(function(a) {
        return "  " + a;
      }).join("\n").substr(2) : "\n" + i.split("\n").map(function(a) {
        return "   " + a;
      }).join("\n"))) : i = a.stylize("[Circular]", "special")), u(g)) {
        if (f && e.match(/^\d+$/))
          return i;
        g = JSON.stringify("" + e), g.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (g = g.substr(1, g.length - 2), g = a.stylize(g, "name")) : (g = g.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"), g = a.stylize(g, "string"));
      }
      return g + ": " + i;
    }
    function m(a, b, c) {
      var d = 0,
          e = a.reduce(function(a, b) {
            return d++, b.indexOf("\n") >= 0 && d++, a + b.replace(/\u001b\[\d\d?m/g, "").length + 1;
          }, 0);
      return e > 60 ? c[0] + ("" === b ? "" : b + "\n ") + " " + a.join(",\n  ") + " " + c[1] : c[0] + b + " " + a.join(", ") + " " + c[1];
    }
    function n(a) {
      return Array.isArray(a);
    }
    function o(a) {
      return "boolean" == typeof a;
    }
    function p(a) {
      return null === a;
    }
    function q(a) {
      return null == a;
    }
    function r(a) {
      return "number" == typeof a;
    }
    function s(a) {
      return "string" == typeof a;
    }
    function t(a) {
      return "symbol" == typeof a;
    }
    function u(a) {
      return void 0 === a;
    }
    function v(a) {
      return w(a) && "[object RegExp]" === B(a);
    }
    function w(a) {
      return "object" == typeof a && null !== a;
    }
    function x(a) {
      return w(a) && "[object Date]" === B(a);
    }
    function y(a) {
      return w(a) && ("[object Error]" === B(a) || a instanceof Error);
    }
    function z(a) {
      return "function" == typeof a;
    }
    function A(a) {
      return null === a || "boolean" == typeof a || "number" == typeof a || "string" == typeof a || "symbol" == typeof a || "undefined" == typeof a;
    }
    function B(a) {
      return Object.prototype.toString.call(a);
    }
    function C(a) {
      return 10 > a ? "0" + a.toString(10) : a.toString(10);
    }
    function D() {
      var a = new Date,
          b = [C(a.getHours()), C(a.getMinutes()), C(a.getSeconds())].join(":");
      return [a.getDate(), K[a.getMonth()], b].join(" ");
    }
    function E(a, b) {
      return Object.prototype.hasOwnProperty.call(a, b);
    }
    var F = this,
        G = a("3"),
        H = /%[sdj%]/g;
    b.format = function(a) {
      if (!s(a)) {
        for (var b = [],
            c = 0; c < arguments.length; c++)
          b.push(d(arguments[c]));
        return b.join(" ");
      }
      for (var c = 1,
          e = arguments,
          f = e.length,
          g = String(a).replace(H, function(a) {
            if ("%%" === a)
              return "%";
            if (c >= f)
              return a;
            switch (a) {
              case "%s":
                return String(e[c++]);
              case "%d":
                return Number(e[c++]);
              case "%j":
                try {
                  return JSON.stringify(e[c++]);
                } catch (b) {
                  return "[Circular]";
                }
              default:
                return a;
            }
          }),
          h = e[c]; f > c; h = e[++c])
        g += p(h) || !w(h) ? " " + h : " " + d(h);
      return g;
    }, b.deprecate = function(a, c) {
      function d() {
        if (!e) {
          if (G.throwDeprecation)
            throw new Error(c);
          G.traceDeprecation ? console.trace(c) : console.error(c), e = !0;
        }
        return a.apply(this, arguments);
      }
      if (u(F.process))
        return function() {
          return b.deprecate(a, c).apply(this, arguments);
        };
      if (G.noDeprecation === !0)
        return a;
      var e = !1;
      return d;
    };
    var I,
        J = {};
    b.debuglog = function(a) {
      if (u(I) && (I = G.env.NODE_DEBUG || ""), a = a.toUpperCase(), !J[a])
        if (new RegExp("\\b" + a + "\\b", "i").test(I)) {
          var c = G.pid;
          J[a] = function() {
            var d = b.format.apply(b, arguments);
            console.error("%s %d: %s", a, c, d);
          };
        } else
          J[a] = function() {};
      return J[a];
    }, b.inspect = d, d.colors = {
      bold: [1, 22],
      italic: [3, 23],
      underline: [4, 24],
      inverse: [7, 27],
      white: [37, 39],
      grey: [90, 39],
      black: [30, 39],
      blue: [34, 39],
      cyan: [36, 39],
      green: [32, 39],
      magenta: [35, 39],
      red: [31, 39],
      yellow: [33, 39]
    }, d.styles = {
      special: "cyan",
      number: "yellow",
      "boolean": "yellow",
      undefined: "grey",
      "null": "bold",
      string: "green",
      date: "magenta",
      regexp: "red"
    }, b.isArray = n, b.isBoolean = o, b.isNull = p, b.isNullOrUndefined = q, b.isNumber = r, b.isString = s, b.isSymbol = t, b.isUndefined = u, b.isRegExp = v, b.isObject = w, b.isDate = x, b.isError = y, b.isFunction = z, b.isPrimitive = A, b.isBuffer = a("193");
    var K = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
    return b.log = function() {
      console.log("%s - %s", D(), b.format.apply(b, arguments));
    }, "function" == typeof Object.create ? b.inherits = function(a, b) {
      a.super_ = b, a.prototype = Object.create(b.prototype, {constructor: {
          value: a,
          enumerable: !1,
          writable: !0,
          configurable: !0
        }});
    } : b.inherits = function(a, b) {
      a.super_ = b;
      var c = function() {};
      c.prototype = b.prototype, a.prototype = new c, a.prototype.constructor = a;
    }, b._extend = function(a, b) {
      if (!b || !w(b))
        return a;
      for (var c = Object.keys(b),
          d = c.length; d--; )
        a[c[d]] = b[c[d]];
      return a;
    }, c.exports;
  }), a.registerDynamic("4d", ["4", "2c", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      for (var b = arguments.length,
          c = Array(b > 1 ? b - 1 : 0),
          d = 1; b > d; d++)
        c[d - 1] = arguments[d];
      var f = i[a];
      if (!f)
        throw new ReferenceError("Unknown message " + JSON.stringify(a));
      return c = e(c), f.replace(/\$(\d+)/g, function(a, b) {
        return c[b - 1];
      });
    }
    function e(a) {
      return a.map(function(a) {
        if (null != a && a.inspect)
          return a.inspect();
        try {
          return JSON.stringify(a) || a + "";
        } catch (b) {
          return h.inspect(a);
        }
      });
    }
    var f = (a("3"), a("4")["default"]);
    b.__esModule = !0, b.get = d, b.parseArgs = e;
    var g = a("2c"),
        h = f(g),
        i = {
          tailCallReassignmentDeopt: "Function reference has been reassigned, so it will probably be dereferenced, therefore we can't optimise this with confidence",
          classesIllegalBareSuper: "Illegal use of bare super",
          classesIllegalSuperCall: "Direct super call is illegal in non-constructor, use super.$1() instead",
          scopeDuplicateDeclaration: "Duplicate declaration $1",
          settersNoRest: "Setters aren't allowed to have a rest",
          noAssignmentsInForHead: "No assignments allowed in for-in/of head",
          expectedMemberExpressionOrIdentifier: "Expected type MemberExpression or Identifier",
          invalidParentForThisNode: "We don't know how to handle this node within the current parent - please open an issue",
          readOnly: "$1 is read-only",
          unknownForHead: "Unknown node type $1 in ForStatement",
          didYouMean: "Did you mean $1?",
          codeGeneratorDeopt: "Note: The code generator has deoptimised the styling of $1 as it exceeds the max of $2.",
          missingTemplatesDirectory: "no templates directory - this is most likely the result of a broken `npm publish`. Please report to https://github.com/babel/babel/issues",
          unsupportedOutputType: "Unsupported output type $1",
          illegalMethodName: "Illegal method name $1",
          lostTrackNodePath: "We lost track of this node's position, likely because the AST was directly manipulated",
          modulesIllegalExportName: "Illegal export $1",
          modulesDuplicateDeclarations: "Duplicate module declarations with the same source but in different scopes",
          undeclaredVariable: "Reference to undeclared variable $1",
          undeclaredVariableType: "Referencing a type alias outside of a type annotation",
          undeclaredVariableSuggestion: "Reference to undeclared variable $1 - did you mean $2?",
          traverseNeedsParent: "You must pass a scope and parentPath unless traversing a Program/File. Instead of that you tried to traverse a $1 node without passing scope and parentPath.",
          traverseVerifyRootFunction: "You passed `traverse()` a function when it expected a visitor object, are you sure you didn't mean `{ enter: Function }`?",
          traverseVerifyVisitorProperty: "You passed `traverse()` a visitor object with the property $1 that has the invalid property $2",
          traverseVerifyNodeType: "You gave us a visitor for the node type $1 but it's not a valid type",
          pluginNotObject: "Plugin $2 specified in $1 was expected to return an object when invoked but returned $3",
          pluginNotFunction: "Plugin $2 specified in $1 was expected to return a function but returned $3",
          pluginUnknown: "Unknown plugin $1 specified in $2 at $3, attempted to resolve relative to $4",
          pluginInvalidProperty: "Plugin $2 specified in $1 provided an invalid property of $3"
        };
    return b.MESSAGES = i, c.exports;
  }), a.registerDynamic("18c", ["9", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("9")["default"]);
    b.__esModule = !0;
    var e = function() {
      function a(b) {
        var c = b.existing,
            e = b.identifier,
            f = b.scope,
            g = b.path,
            h = b.kind;
        d(this, a), this.identifier = e, this.scope = f, this.path = g, this.kind = h, this.constantViolations = [], this.constant = !0, this.referencePaths = [], this.referenced = !1, this.references = 0, this.clearValue(), c && (this.constantViolations = [].concat(c.path, c.constantViolations, this.constantViolations));
      }
      return a.prototype.deoptValue = function() {
        this.clearValue(), this.hasDeoptedValue = !0;
      }, a.prototype.setValue = function(a) {
        this.hasDeoptedValue || (this.hasValue = !0, this.value = a);
      }, a.prototype.clearValue = function() {
        this.hasDeoptedValue = !1, this.hasValue = !1, this.value = null;
      }, a.prototype.reassign = function(a) {
        this.constant = !1, this.constantViolations.push(a);
      }, a.prototype.reference = function(a) {
        this.referenced = !0, this.references++, this.referencePaths.push(a);
      }, a.prototype.dereference = function() {
        this.references--, this.referenced = !!this.references;
      }, a;
    }();
    return b["default"] = e, c.exports = b["default"], c.exports;
  }), a.registerDynamic("194", [], !1, function() {
    return {
      builtin: {
        Array: !1,
        ArrayBuffer: !1,
        Boolean: !1,
        constructor: !1,
        DataView: !1,
        Date: !1,
        decodeURI: !1,
        decodeURIComponent: !1,
        encodeURI: !1,
        encodeURIComponent: !1,
        Error: !1,
        escape: !1,
        eval: !1,
        EvalError: !1,
        Float32Array: !1,
        Float64Array: !1,
        Function: !1,
        hasOwnProperty: !1,
        Infinity: !1,
        Int16Array: !1,
        Int32Array: !1,
        Int8Array: !1,
        isFinite: !1,
        isNaN: !1,
        isPrototypeOf: !1,
        JSON: !1,
        Map: !1,
        Math: !1,
        NaN: !1,
        Number: !1,
        Object: !1,
        parseFloat: !1,
        parseInt: !1,
        Promise: !1,
        propertyIsEnumerable: !1,
        Proxy: !1,
        RangeError: !1,
        ReferenceError: !1,
        Reflect: !1,
        RegExp: !1,
        Set: !1,
        String: !1,
        Symbol: !1,
        SyntaxError: !1,
        System: !1,
        toLocaleString: !1,
        toString: !1,
        TypeError: !1,
        Uint16Array: !1,
        Uint32Array: !1,
        Uint8Array: !1,
        Uint8ClampedArray: !1,
        undefined: !1,
        unescape: !1,
        URIError: !1,
        valueOf: !1,
        WeakMap: !1,
        WeakSet: !1
      },
      es5: {
        Array: !1,
        Boolean: !1,
        constructor: !1,
        Date: !1,
        decodeURI: !1,
        decodeURIComponent: !1,
        encodeURI: !1,
        encodeURIComponent: !1,
        Error: !1,
        escape: !1,
        eval: !1,
        EvalError: !1,
        Float32Array: !1,
        Float64Array: !1,
        Function: !1,
        hasOwnProperty: !1,
        Infinity: !1,
        isFinite: !1,
        isNaN: !1,
        isPrototypeOf: !1,
        JSON: !1,
        Math: !1,
        NaN: !1,
        Number: !1,
        Object: !1,
        parseFloat: !1,
        parseInt: !1,
        propertyIsEnumerable: !1,
        RangeError: !1,
        ReferenceError: !1,
        RegExp: !1,
        String: !1,
        SyntaxError: !1,
        toLocaleString: !1,
        toString: !1,
        TypeError: !1,
        undefined: !1,
        unescape: !1,
        URIError: !1,
        valueOf: !1
      },
      es6: {
        Array: !1,
        ArrayBuffer: !1,
        Boolean: !1,
        constructor: !1,
        DataView: !1,
        Date: !1,
        decodeURI: !1,
        decodeURIComponent: !1,
        encodeURI: !1,
        encodeURIComponent: !1,
        Error: !1,
        escape: !1,
        eval: !1,
        EvalError: !1,
        Float32Array: !1,
        Float64Array: !1,
        Function: !1,
        hasOwnProperty: !1,
        Infinity: !1,
        Int16Array: !1,
        Int32Array: !1,
        Int8Array: !1,
        isFinite: !1,
        isNaN: !1,
        isPrototypeOf: !1,
        JSON: !1,
        Map: !1,
        Math: !1,
        NaN: !1,
        Number: !1,
        Object: !1,
        parseFloat: !1,
        parseInt: !1,
        Promise: !1,
        propertyIsEnumerable: !1,
        Proxy: !1,
        RangeError: !1,
        ReferenceError: !1,
        Reflect: !1,
        RegExp: !1,
        Set: !1,
        String: !1,
        Symbol: !1,
        SyntaxError: !1,
        System: !1,
        toLocaleString: !1,
        toString: !1,
        TypeError: !1,
        Uint16Array: !1,
        Uint32Array: !1,
        Uint8Array: !1,
        Uint8ClampedArray: !1,
        undefined: !1,
        unescape: !1,
        URIError: !1,
        valueOf: !1,
        WeakMap: !1,
        WeakSet: !1
      },
      browser: {
        addEventListener: !1,
        alert: !1,
        AnalyserNode: !1,
        AnimationEvent: !1,
        applicationCache: !1,
        ApplicationCache: !1,
        ApplicationCacheErrorEvent: !1,
        atob: !1,
        Attr: !1,
        Audio: !1,
        AudioBuffer: !1,
        AudioBufferSourceNode: !1,
        AudioContext: !1,
        AudioDestinationNode: !1,
        AudioListener: !1,
        AudioNode: !1,
        AudioParam: !1,
        AudioProcessingEvent: !1,
        AutocompleteErrorEvent: !1,
        BarProp: !1,
        BatteryManager: !1,
        BeforeUnloadEvent: !1,
        BiquadFilterNode: !1,
        Blob: !1,
        blur: !1,
        btoa: !1,
        Cache: !1,
        caches: !1,
        CacheStorage: !1,
        cancelAnimationFrame: !1,
        CanvasGradient: !1,
        CanvasPattern: !1,
        CanvasRenderingContext2D: !1,
        CDATASection: !1,
        ChannelMergerNode: !1,
        ChannelSplitterNode: !1,
        CharacterData: !1,
        clearInterval: !1,
        clearTimeout: !1,
        clientInformation: !1,
        ClientRect: !1,
        ClientRectList: !1,
        ClipboardEvent: !1,
        close: !1,
        closed: !1,
        CloseEvent: !1,
        Comment: !1,
        CompositionEvent: !1,
        confirm: !1,
        console: !1,
        ConvolverNode: !1,
        crypto: !1,
        Crypto: !1,
        CryptoKey: !1,
        CSS: !1,
        CSSFontFaceRule: !1,
        CSSImportRule: !1,
        CSSKeyframeRule: !1,
        CSSKeyframesRule: !1,
        CSSMediaRule: !1,
        CSSPageRule: !1,
        CSSRule: !1,
        CSSRuleList: !1,
        CSSStyleDeclaration: !1,
        CSSStyleRule: !1,
        CSSStyleSheet: !1,
        CSSSupportsRule: !1,
        CSSUnknownRule: !1,
        CSSViewportRule: !1,
        CustomEvent: !1,
        DataTransfer: !1,
        DataTransferItem: !1,
        DataTransferItemList: !1,
        Debug: !1,
        defaultStatus: !1,
        defaultstatus: !1,
        DelayNode: !1,
        DeviceMotionEvent: !1,
        DeviceOrientationEvent: !1,
        devicePixelRatio: !1,
        dispatchEvent: !1,
        document: !1,
        Document: !1,
        DocumentFragment: !1,
        DocumentType: !1,
        DOMError: !1,
        DOMException: !1,
        DOMImplementation: !1,
        DOMParser: !1,
        DOMSettableTokenList: !1,
        DOMStringList: !1,
        DOMStringMap: !1,
        DOMTokenList: !1,
        DragEvent: !1,
        DynamicsCompressorNode: !1,
        Element: !1,
        ElementTimeControl: !1,
        ErrorEvent: !1,
        event: !1,
        Event: !1,
        EventSource: !1,
        EventTarget: !1,
        external: !1,
        fetch: !1,
        File: !1,
        FileError: !1,
        FileList: !1,
        FileReader: !1,
        find: !1,
        focus: !1,
        FocusEvent: !1,
        FontFace: !1,
        FormData: !1,
        frameElement: !1,
        frames: !1,
        GainNode: !1,
        Gamepad: !1,
        GamepadButton: !1,
        GamepadEvent: !1,
        getComputedStyle: !1,
        getSelection: !1,
        HashChangeEvent: !1,
        Headers: !1,
        history: !1,
        History: !1,
        HTMLAllCollection: !1,
        HTMLAnchorElement: !1,
        HTMLAppletElement: !1,
        HTMLAreaElement: !1,
        HTMLAudioElement: !1,
        HTMLBaseElement: !1,
        HTMLBlockquoteElement: !1,
        HTMLBodyElement: !1,
        HTMLBRElement: !1,
        HTMLButtonElement: !1,
        HTMLCanvasElement: !1,
        HTMLCollection: !1,
        HTMLContentElement: !1,
        HTMLDataListElement: !1,
        HTMLDetailsElement: !1,
        HTMLDialogElement: !1,
        HTMLDirectoryElement: !1,
        HTMLDivElement: !1,
        HTMLDListElement: !1,
        HTMLDocument: !1,
        HTMLElement: !1,
        HTMLEmbedElement: !1,
        HTMLFieldSetElement: !1,
        HTMLFontElement: !1,
        HTMLFormControlsCollection: !1,
        HTMLFormElement: !1,
        HTMLFrameElement: !1,
        HTMLFrameSetElement: !1,
        HTMLHeadElement: !1,
        HTMLHeadingElement: !1,
        HTMLHRElement: !1,
        HTMLHtmlElement: !1,
        HTMLIFrameElement: !1,
        HTMLImageElement: !1,
        HTMLInputElement: !1,
        HTMLIsIndexElement: !1,
        HTMLKeygenElement: !1,
        HTMLLabelElement: !1,
        HTMLLayerElement: !1,
        HTMLLegendElement: !1,
        HTMLLIElement: !1,
        HTMLLinkElement: !1,
        HTMLMapElement: !1,
        HTMLMarqueeElement: !1,
        HTMLMediaElement: !1,
        HTMLMenuElement: !1,
        HTMLMetaElement: !1,
        HTMLMeterElement: !1,
        HTMLModElement: !1,
        HTMLObjectElement: !1,
        HTMLOListElement: !1,
        HTMLOptGroupElement: !1,
        HTMLOptionElement: !1,
        HTMLOptionsCollection: !1,
        HTMLOutputElement: !1,
        HTMLParagraphElement: !1,
        HTMLParamElement: !1,
        HTMLPictureElement: !1,
        HTMLPreElement: !1,
        HTMLProgressElement: !1,
        HTMLQuoteElement: !1,
        HTMLScriptElement: !1,
        HTMLSelectElement: !1,
        HTMLShadowElement: !1,
        HTMLSourceElement: !1,
        HTMLSpanElement: !1,
        HTMLStyleElement: !1,
        HTMLTableCaptionElement: !1,
        HTMLTableCellElement: !1,
        HTMLTableColElement: !1,
        HTMLTableElement: !1,
        HTMLTableRowElement: !1,
        HTMLTableSectionElement: !1,
        HTMLTemplateElement: !1,
        HTMLTextAreaElement: !1,
        HTMLTitleElement: !1,
        HTMLTrackElement: !1,
        HTMLUListElement: !1,
        HTMLUnknownElement: !1,
        HTMLVideoElement: !1,
        IDBCursor: !1,
        IDBCursorWithValue: !1,
        IDBDatabase: !1,
        IDBEnvironment: !1,
        IDBFactory: !1,
        IDBIndex: !1,
        IDBKeyRange: !1,
        IDBObjectStore: !1,
        IDBOpenDBRequest: !1,
        IDBRequest: !1,
        IDBTransaction: !1,
        IDBVersionChangeEvent: !1,
        Image: !1,
        ImageBitmap: !1,
        ImageData: !1,
        indexedDB: !1,
        innerHeight: !1,
        innerWidth: !1,
        InputEvent: !1,
        InputMethodContext: !1,
        Intl: !1,
        KeyboardEvent: !1,
        length: !1,
        localStorage: !1,
        location: !1,
        Location: !1,
        locationbar: !1,
        matchMedia: !1,
        MediaElementAudioSourceNode: !1,
        MediaEncryptedEvent: !1,
        MediaError: !1,
        MediaKeyError: !1,
        MediaKeyEvent: !1,
        MediaKeyMessageEvent: !1,
        MediaKeys: !1,
        MediaKeySession: !1,
        MediaKeyStatusMap: !1,
        MediaKeySystemAccess: !1,
        MediaList: !1,
        MediaQueryList: !1,
        MediaQueryListEvent: !1,
        MediaSource: !1,
        MediaStreamAudioDestinationNode: !1,
        MediaStreamAudioSourceNode: !1,
        MediaStreamEvent: !1,
        MediaStreamTrack: !1,
        menubar: !1,
        MessageChannel: !1,
        MessageEvent: !1,
        MessagePort: !1,
        MIDIAccess: !1,
        MIDIConnectionEvent: !1,
        MIDIInput: !1,
        MIDIInputMap: !1,
        MIDIMessageEvent: !1,
        MIDIOutput: !1,
        MIDIOutputMap: !1,
        MIDIPort: !1,
        MimeType: !1,
        MimeTypeArray: !1,
        MouseEvent: !1,
        moveBy: !1,
        moveTo: !1,
        MutationEvent: !1,
        MutationObserver: !1,
        MutationRecord: !1,
        name: !1,
        NamedNodeMap: !1,
        navigator: !1,
        Navigator: !1,
        Node: !1,
        NodeFilter: !1,
        NodeIterator: !1,
        NodeList: !1,
        Notification: !1,
        OfflineAudioCompletionEvent: !1,
        OfflineAudioContext: !1,
        offscreenBuffering: !1,
        onbeforeunload: !0,
        onblur: !0,
        onerror: !0,
        onfocus: !0,
        onload: !0,
        onresize: !0,
        onunload: !0,
        open: !1,
        openDatabase: !1,
        opener: !1,
        opera: !1,
        Option: !1,
        OscillatorNode: !1,
        outerHeight: !1,
        outerWidth: !1,
        PageTransitionEvent: !1,
        pageXOffset: !1,
        pageYOffset: !1,
        parent: !1,
        Path2D: !1,
        performance: !1,
        Performance: !1,
        PerformanceEntry: !1,
        PerformanceMark: !1,
        PerformanceMeasure: !1,
        PerformanceNavigation: !1,
        PerformanceResourceTiming: !1,
        PerformanceTiming: !1,
        PeriodicWave: !1,
        Permissions: !1,
        PermissionStatus: !1,
        personalbar: !1,
        Plugin: !1,
        PluginArray: !1,
        PopStateEvent: !1,
        postMessage: !1,
        print: !1,
        ProcessingInstruction: !1,
        ProgressEvent: !1,
        prompt: !1,
        PushManager: !1,
        PushSubscription: !1,
        RadioNodeList: !1,
        Range: !1,
        ReadableByteStream: !1,
        ReadableStream: !1,
        removeEventListener: !1,
        Request: !1,
        requestAnimationFrame: !1,
        resizeBy: !1,
        resizeTo: !1,
        Response: !1,
        RTCIceCandidate: !1,
        RTCSessionDescription: !1,
        screen: !1,
        Screen: !1,
        screenLeft: !1,
        ScreenOrientation: !1,
        screenTop: !1,
        screenX: !1,
        screenY: !1,
        ScriptProcessorNode: !1,
        scroll: !1,
        scrollbars: !1,
        scrollBy: !1,
        scrollTo: !1,
        scrollX: !1,
        scrollY: !1,
        SecurityPolicyViolationEvent: !1,
        Selection: !1,
        self: !1,
        ServiceWorker: !1,
        ServiceWorkerContainer: !1,
        ServiceWorkerRegistration: !1,
        sessionStorage: !1,
        setInterval: !1,
        setTimeout: !1,
        ShadowRoot: !1,
        SharedWorker: !1,
        showModalDialog: !1,
        speechSynthesis: !1,
        SpeechSynthesisEvent: !1,
        SpeechSynthesisUtterance: !1,
        status: !1,
        statusbar: !1,
        stop: !1,
        Storage: !1,
        StorageEvent: !1,
        styleMedia: !1,
        StyleSheet: !1,
        StyleSheetList: !1,
        SubtleCrypto: !1,
        SVGAElement: !1,
        SVGAltGlyphDefElement: !1,
        SVGAltGlyphElement: !1,
        SVGAltGlyphItemElement: !1,
        SVGAngle: !1,
        SVGAnimateColorElement: !1,
        SVGAnimatedAngle: !1,
        SVGAnimatedBoolean: !1,
        SVGAnimatedEnumeration: !1,
        SVGAnimatedInteger: !1,
        SVGAnimatedLength: !1,
        SVGAnimatedLengthList: !1,
        SVGAnimatedNumber: !1,
        SVGAnimatedNumberList: !1,
        SVGAnimatedPathData: !1,
        SVGAnimatedPoints: !1,
        SVGAnimatedPreserveAspectRatio: !1,
        SVGAnimatedRect: !1,
        SVGAnimatedString: !1,
        SVGAnimatedTransformList: !1,
        SVGAnimateElement: !1,
        SVGAnimateMotionElement: !1,
        SVGAnimateTransformElement: !1,
        SVGAnimationElement: !1,
        SVGCircleElement: !1,
        SVGClipPathElement: !1,
        SVGColor: !1,
        SVGColorProfileElement: !1,
        SVGColorProfileRule: !1,
        SVGComponentTransferFunctionElement: !1,
        SVGCSSRule: !1,
        SVGCursorElement: !1,
        SVGDefsElement: !1,
        SVGDescElement: !1,
        SVGDiscardElement: !1,
        SVGDocument: !1,
        SVGElement: !1,
        SVGElementInstance: !1,
        SVGElementInstanceList: !1,
        SVGEllipseElement: !1,
        SVGEvent: !1,
        SVGExternalResourcesRequired: !1,
        SVGFEBlendElement: !1,
        SVGFEColorMatrixElement: !1,
        SVGFEComponentTransferElement: !1,
        SVGFECompositeElement: !1,
        SVGFEConvolveMatrixElement: !1,
        SVGFEDiffuseLightingElement: !1,
        SVGFEDisplacementMapElement: !1,
        SVGFEDistantLightElement: !1,
        SVGFEDropShadowElement: !1,
        SVGFEFloodElement: !1,
        SVGFEFuncAElement: !1,
        SVGFEFuncBElement: !1,
        SVGFEFuncGElement: !1,
        SVGFEFuncRElement: !1,
        SVGFEGaussianBlurElement: !1,
        SVGFEImageElement: !1,
        SVGFEMergeElement: !1,
        SVGFEMergeNodeElement: !1,
        SVGFEMorphologyElement: !1,
        SVGFEOffsetElement: !1,
        SVGFEPointLightElement: !1,
        SVGFESpecularLightingElement: !1,
        SVGFESpotLightElement: !1,
        SVGFETileElement: !1,
        SVGFETurbulenceElement: !1,
        SVGFilterElement: !1,
        SVGFilterPrimitiveStandardAttributes: !1,
        SVGFitToViewBox: !1,
        SVGFontElement: !1,
        SVGFontFaceElement: !1,
        SVGFontFaceFormatElement: !1,
        SVGFontFaceNameElement: !1,
        SVGFontFaceSrcElement: !1,
        SVGFontFaceUriElement: !1,
        SVGForeignObjectElement: !1,
        SVGGElement: !1,
        SVGGeometryElement: !1,
        SVGGlyphElement: !1,
        SVGGlyphRefElement: !1,
        SVGGradientElement: !1,
        SVGGraphicsElement: !1,
        SVGHKernElement: !1,
        SVGICCColor: !1,
        SVGImageElement: !1,
        SVGLangSpace: !1,
        SVGLength: !1,
        SVGLengthList: !1,
        SVGLinearGradientElement: !1,
        SVGLineElement: !1,
        SVGLocatable: !1,
        SVGMarkerElement: !1,
        SVGMaskElement: !1,
        SVGMatrix: !1,
        SVGMetadataElement: !1,
        SVGMissingGlyphElement: !1,
        SVGMPathElement: !1,
        SVGNumber: !1,
        SVGNumberList: !1,
        SVGPaint: !1,
        SVGPathElement: !1,
        SVGPathSeg: !1,
        SVGPathSegArcAbs: !1,
        SVGPathSegArcRel: !1,
        SVGPathSegClosePath: !1,
        SVGPathSegCurvetoCubicAbs: !1,
        SVGPathSegCurvetoCubicRel: !1,
        SVGPathSegCurvetoCubicSmoothAbs: !1,
        SVGPathSegCurvetoCubicSmoothRel: !1,
        SVGPathSegCurvetoQuadraticAbs: !1,
        SVGPathSegCurvetoQuadraticRel: !1,
        SVGPathSegCurvetoQuadraticSmoothAbs: !1,
        SVGPathSegCurvetoQuadraticSmoothRel: !1,
        SVGPathSegLinetoAbs: !1,
        SVGPathSegLinetoHorizontalAbs: !1,
        SVGPathSegLinetoHorizontalRel: !1,
        SVGPathSegLinetoRel: !1,
        SVGPathSegLinetoVerticalAbs: !1,
        SVGPathSegLinetoVerticalRel: !1,
        SVGPathSegList: !1,
        SVGPathSegMovetoAbs: !1,
        SVGPathSegMovetoRel: !1,
        SVGPatternElement: !1,
        SVGPoint: !1,
        SVGPointList: !1,
        SVGPolygonElement: !1,
        SVGPolylineElement: !1,
        SVGPreserveAspectRatio: !1,
        SVGRadialGradientElement: !1,
        SVGRect: !1,
        SVGRectElement: !1,
        SVGRenderingIntent: !1,
        SVGScriptElement: !1,
        SVGSetElement: !1,
        SVGStopElement: !1,
        SVGStringList: !1,
        SVGStylable: !1,
        SVGStyleElement: !1,
        SVGSVGElement: !1,
        SVGSwitchElement: !1,
        SVGSymbolElement: !1,
        SVGTests: !1,
        SVGTextContentElement: !1,
        SVGTextElement: !1,
        SVGTextPathElement: !1,
        SVGTextPositioningElement: !1,
        SVGTitleElement: !1,
        SVGTransform: !1,
        SVGTransformable: !1,
        SVGTransformList: !1,
        SVGTRefElement: !1,
        SVGTSpanElement: !1,
        SVGUnitTypes: !1,
        SVGURIReference: !1,
        SVGUseElement: !1,
        SVGViewElement: !1,
        SVGViewSpec: !1,
        SVGVKernElement: !1,
        SVGZoomAndPan: !1,
        SVGZoomEvent: !1,
        Text: !1,
        TextDecoder: !1,
        TextEncoder: !1,
        TextEvent: !1,
        TextMetrics: !1,
        TextTrack: !1,
        TextTrackCue: !1,
        TextTrackCueList: !1,
        TextTrackList: !1,
        TimeEvent: !1,
        TimeRanges: !1,
        toolbar: !1,
        top: !1,
        Touch: !1,
        TouchEvent: !1,
        TouchList: !1,
        TrackEvent: !1,
        TransitionEvent: !1,
        TreeWalker: !1,
        UIEvent: !1,
        URL: !1,
        ValidityState: !1,
        VTTCue: !1,
        WaveShaperNode: !1,
        WebGLActiveInfo: !1,
        WebGLBuffer: !1,
        WebGLContextEvent: !1,
        WebGLFramebuffer: !1,
        WebGLProgram: !1,
        WebGLRenderbuffer: !1,
        WebGLRenderingContext: !1,
        WebGLShader: !1,
        WebGLShaderPrecisionFormat: !1,
        WebGLTexture: !1,
        WebGLUniformLocation: !1,
        WebSocket: !1,
        WheelEvent: !1,
        window: !1,
        Window: !1,
        Worker: !1,
        XDomainRequest: !1,
        XMLDocument: !1,
        XMLHttpRequest: !1,
        XMLHttpRequestEventTarget: !1,
        XMLHttpRequestProgressEvent: !1,
        XMLHttpRequestUpload: !1,
        XMLSerializer: !1,
        XPathEvaluator: !1,
        XPathException: !1,
        XPathExpression: !1,
        XPathNamespace: !1,
        XPathNSResolver: !1,
        XPathResult: !1,
        XSLTProcessor: !1
      },
      worker: {
        applicationCache: !1,
        atob: !1,
        Blob: !1,
        BroadcastChannel: !1,
        btoa: !1,
        Cache: !1,
        caches: !1,
        clearInterval: !1,
        clearTimeout: !1,
        close: !0,
        console: !1,
        fetch: !1,
        FileReaderSync: !1,
        FormData: !1,
        Headers: !1,
        IDBCursor: !1,
        IDBCursorWithValue: !1,
        IDBDatabase: !1,
        IDBFactory: !1,
        IDBIndex: !1,
        IDBKeyRange: !1,
        IDBObjectStore: !1,
        IDBOpenDBRequest: !1,
        IDBRequest: !1,
        IDBTransaction: !1,
        IDBVersionChangeEvent: !1,
        ImageData: !1,
        importScripts: !0,
        indexedDB: !1,
        location: !1,
        MessageChannel: !1,
        MessagePort: !1,
        name: !1,
        navigator: !1,
        Notification: !1,
        onclose: !0,
        onconnect: !0,
        onerror: !0,
        onlanguagechange: !0,
        onmessage: !0,
        onoffline: !0,
        ononline: !0,
        onrejectionhandled: !0,
        onunhandledrejection: !0,
        performance: !1,
        Performance: !1,
        PerformanceEntry: !1,
        PerformanceMark: !1,
        PerformanceMeasure: !1,
        PerformanceNavigation: !1,
        PerformanceResourceTiming: !1,
        PerformanceTiming: !1,
        postMessage: !0,
        Promise: !1,
        Request: !1,
        Response: !1,
        self: !0,
        ServiceWorkerRegistration: !1,
        setInterval: !1,
        setTimeout: !1,
        TextDecoder: !1,
        TextEncoder: !1,
        URL: !1,
        WebSocket: !1,
        Worker: !1,
        XMLHttpRequest: !1
      },
      node: {
        __dirname: !1,
        __filename: !1,
        arguments: !1,
        Buffer: !1,
        clearImmediate: !1,
        clearInterval: !1,
        clearTimeout: !1,
        console: !1,
        exports: !0,
        GLOBAL: !1,
        global: !1,
        module: !1,
        process: !1,
        require: !1,
        root: !1,
        setImmediate: !1,
        setInterval: !1,
        setTimeout: !1
      },
      commonjs: {
        exports: !0,
        module: !1,
        require: !1,
        global: !1
      },
      amd: {
        define: !1,
        require: !1
      },
      mocha: {
        after: !1,
        afterEach: !1,
        before: !1,
        beforeEach: !1,
        context: !1,
        describe: !1,
        it: !1,
        mocha: !1,
        setup: !1,
        specify: !1,
        suite: !1,
        suiteSetup: !1,
        suiteTeardown: !1,
        teardown: !1,
        test: !1,
        xcontext: !1,
        xdescribe: !1,
        xit: !1,
        xspecify: !1
      },
      jasmine: {
        afterAll: !1,
        afterEach: !1,
        beforeAll: !1,
        beforeEach: !1,
        describe: !1,
        expect: !1,
        fail: !1,
        fdescribe: !1,
        fit: !1,
        it: !1,
        jasmine: !1,
        pending: !1,
        runs: !1,
        spyOn: !1,
        waits: !1,
        waitsFor: !1,
        xdescribe: !1,
        xit: !1
      },
      jest: {
        afterEach: !1,
        beforeEach: !1,
        describe: !1,
        expect: !1,
        it: !1,
        jest: !1,
        pit: !1,
        require: !1,
        xdescribe: !1,
        xit: !1
      },
      qunit: {
        asyncTest: !1,
        deepEqual: !1,
        equal: !1,
        expect: !1,
        module: !1,
        notDeepEqual: !1,
        notEqual: !1,
        notOk: !1,
        notPropEqual: !1,
        notStrictEqual: !1,
        ok: !1,
        propEqual: !1,
        QUnit: !1,
        raises: !1,
        start: !1,
        stop: !1,
        strictEqual: !1,
        test: !1,
        "throws": !1
      },
      phantomjs: {
        console: !0,
        exports: !0,
        phantom: !0,
        require: !0,
        WebPage: !0
      },
      couch: {
        emit: !1,
        exports: !1,
        getRow: !1,
        log: !1,
        module: !1,
        provides: !1,
        require: !1,
        respond: !1,
        send: !1,
        start: !1,
        sum: !1
      },
      rhino: {
        defineClass: !1,
        deserialize: !1,
        gc: !1,
        help: !1,
        importClass: !1,
        importPackage: !1,
        java: !1,
        load: !1,
        loadClass: !1,
        Packages: !1,
        print: !1,
        quit: !1,
        readFile: !1,
        readUrl: !1,
        runCommand: !1,
        seal: !1,
        serialize: !1,
        spawn: !1,
        sync: !1,
        toint32: !1,
        version: !1
      },
      nashorn: {
        __DIR__: !1,
        __FILE__: !1,
        __LINE__: !1,
        com: !1,
        edu: !1,
        exit: !1,
        Java: !1,
        java: !1,
        javafx: !1,
        JavaImporter: !1,
        javax: !1,
        JSAdapter: !1,
        load: !1,
        loadWithNewGlobal: !1,
        org: !1,
        Packages: !1,
        print: !1,
        quit: !1
      },
      wsh: {
        ActiveXObject: !0,
        Enumerator: !0,
        GetObject: !0,
        ScriptEngine: !0,
        ScriptEngineBuildVersion: !0,
        ScriptEngineMajorVersion: !0,
        ScriptEngineMinorVersion: !0,
        VBArray: !0,
        WScript: !0,
        WSH: !0,
        XDomainRequest: !0
      },
      jquery: {
        $: !1,
        jQuery: !1
      },
      yui: {
        Y: !1,
        YUI: !1,
        YUI_config: !1
      },
      shelljs: {
        cat: !1,
        cd: !1,
        chmod: !1,
        config: !1,
        cp: !1,
        dirs: !1,
        echo: !1,
        env: !1,
        error: !1,
        exec: !1,
        exit: !1,
        find: !1,
        grep: !1,
        ls: !1,
        ln: !1,
        mkdir: !1,
        mv: !1,
        popd: !1,
        pushd: !1,
        pwd: !1,
        rm: !1,
        sed: !1,
        target: !1,
        tempdir: !1,
        test: !1,
        which: !1
      },
      prototypejs: {
        $: !1,
        $$: !1,
        $A: !1,
        $break: !1,
        $continue: !1,
        $F: !1,
        $H: !1,
        $R: !1,
        $w: !1,
        Abstract: !1,
        Ajax: !1,
        Autocompleter: !1,
        Builder: !1,
        Class: !1,
        Control: !1,
        Draggable: !1,
        Draggables: !1,
        Droppables: !1,
        Effect: !1,
        Element: !1,
        Enumerable: !1,
        Event: !1,
        Field: !1,
        Form: !1,
        Hash: !1,
        Insertion: !1,
        ObjectRange: !1,
        PeriodicalExecuter: !1,
        Position: !1,
        Prototype: !1,
        Scriptaculous: !1,
        Selector: !1,
        Sortable: !1,
        SortableObserver: !1,
        Sound: !1,
        Template: !1,
        Toggle: !1,
        Try: !1
      },
      meteor: {
        $: !1,
        _: !1,
        Accounts: !1,
        App: !1,
        Assets: !1,
        Blaze: !1,
        check: !1,
        Cordova: !1,
        DDP: !1,
        DDPServer: !1,
        Deps: !1,
        EJSON: !1,
        Email: !1,
        HTTP: !1,
        Log: !1,
        Match: !1,
        Meteor: !1,
        Mongo: !1,
        MongoInternals: !1,
        Npm: !1,
        Package: !1,
        Plugin: !1,
        process: !1,
        Random: !1,
        ReactiveDict: !1,
        ReactiveVar: !1,
        Router: !1,
        Session: !1,
        share: !1,
        Spacebars: !1,
        Template: !1,
        Tinytest: !1,
        Tracker: !1,
        UI: !1,
        Utils: !1,
        WebApp: !1,
        WebAppInternals: !1
      },
      mongo: {
        _isWindows: !1,
        _rand: !1,
        BulkWriteResult: !1,
        cat: !1,
        cd: !1,
        connect: !1,
        db: !1,
        getHostName: !1,
        getMemInfo: !1,
        hostname: !1,
        listFiles: !1,
        load: !1,
        ls: !1,
        md5sumFile: !1,
        mkdir: !1,
        Mongo: !1,
        ObjectId: !1,
        PlanCache: !1,
        print: !1,
        printjson: !1,
        pwd: !1,
        quit: !1,
        removeFile: !1,
        rs: !1,
        sh: !1,
        UUID: !1,
        version: !1,
        WriteResult: !1
      },
      applescript: {
        $: !1,
        Application: !1,
        Automation: !1,
        console: !1,
        delay: !1,
        Library: !1,
        ObjC: !1,
        ObjectSpecifier: !1,
        Path: !1,
        Progress: !1,
        Ref: !1
      },
      serviceworker: {
        caches: !1,
        Cache: !1,
        CacheStorage: !1,
        Client: !1,
        clients: !1,
        Clients: !1,
        ExtendableEvent: !1,
        ExtendableMessageEvent: !1,
        FetchEvent: !1,
        importScripts: !1,
        registration: !1,
        self: !1,
        ServiceWorker: !1,
        ServiceWorkerContainer: !1,
        ServiceWorkerGlobalScope: !1,
        ServiceWorkerMessageEvent: !1,
        ServiceWorkerRegistration: !1,
        skipWaiting: !1,
        WindowClient: !1
      },
      atomtest: {
        advanceClock: !1,
        fakeClearInterval: !1,
        fakeClearTimeout: !1,
        fakeSetInterval: !1,
        fakeSetTimeout: !1,
        resetTimeouts: !1,
        waitsForPromise: !1
      },
      embertest: {
        andThen: !1,
        click: !1,
        currentPath: !1,
        currentRouteName: !1,
        currentURL: !1,
        fillIn: !1,
        find: !1,
        findWithAssert: !1,
        keyEvent: !1,
        pauseTest: !1,
        triggerEvent: !1,
        visit: !1
      },
      protractor: {
        $: !1,
        $$: !1,
        browser: !1,
        By: !1,
        by: !1,
        DartObject: !1,
        element: !1,
        protractor: !1
      },
      "shared-node-browser": {
        clearInterval: !1,
        clearTimeout: !1,
        console: !1,
        setInterval: !1,
        setTimeout: !1
      },
      webextensions: {
        browser: !1,
        chrome: !1,
        opr: !1
      },
      greasemonkey: {
        GM_addStyle: !1,
        GM_deleteValue: !1,
        GM_getResourceText: !1,
        GM_getResourceURL: !1,
        GM_getValue: !1,
        GM_info: !1,
        GM_listValues: !1,
        GM_log: !1,
        GM_openInTab: !1,
        GM_registerMenuCommand: !1,
        GM_setClipboard: !1,
        GM_setValue: !1,
        GM_xmlhttpRequest: !1,
        unsafeWindow: !1
      }
    };
  }), a.registerDynamic("195", ["194", "3"], !0, function(a, b, c) {
    a("3");
    return c.exports = a("194"), c.exports;
  }), a.registerDynamic("177", ["9", "b9", "c", "79", "a", "4", "29", "84", "18b", "14", "7e", "4d", "18c", "195", "5", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a, b, c) {
      var d = a[D];
      if (d) {
        if (e(d, b))
          return d;
      } else if (!a[E])
        return void(a[D] = c);
      return f(a, b, c, d);
    }
    function e(a, b) {
      return a.parent === b ? !0 : void 0;
    }
    function f(a, b, c, d) {
      var f = a[E] = a[E] || [];
      d && (f.push(d), a[D] = null);
      for (var g = f,
          h = Array.isArray(g),
          j = 0,
          g = h ? g : i(g); ; ) {
        var k;
        if (h) {
          if (j >= g.length)
            break;
          k = g[j++];
        } else {
          if (j = g.next(), j.done)
            break;
          k = j.value;
        }
        var l = k;
        if (e(l, b))
          return l;
      }
      f.push(c);
    }
    var g = (a("3"), a("9")["default"]),
        h = a("b9")["default"],
        i = a("c")["default"],
        j = a("79")["default"],
        k = a("a")["default"],
        l = a("4")["default"];
    b.__esModule = !0;
    var m = a("29"),
        n = k(m),
        o = a("84"),
        p = k(o),
        q = a("18b"),
        r = k(q),
        s = a("14"),
        t = k(s),
        u = a("7e"),
        v = k(u),
        w = a("4d"),
        x = l(w),
        y = a("18c"),
        z = k(y),
        A = a("195"),
        B = (k(A), a("5")),
        C = l(B),
        D = h(),
        E = h(),
        F = {
          For: function(a) {
            for (var b = C.FOR_INIT_KEYS,
                c = Array.isArray(b),
                d = 0,
                b = c ? b : i(b); ; ) {
              var e;
              if (c) {
                if (d >= b.length)
                  break;
                e = b[d++];
              } else {
                if (d = b.next(), d.done)
                  break;
                e = d.value;
              }
              var f = e,
                  g = a.get(f);
              g.isVar() && a.scope.getFunctionParent().registerBinding("var", g);
            }
          },
          Declaration: function(a) {
            a.isBlockScoped() || a.isExportDeclaration() && a.get("declaration").isDeclaration() || a.scope.getFunctionParent().registerDeclaration(a);
          },
          ReferencedIdentifier: function(a, b) {
            b.references.push(a);
          },
          ForXStatement: function(a, b) {
            var c = a.get("left");
            (c.isPattern() || c.isIdentifier()) && b.constantViolations.push(c);
          },
          ExportDeclaration: {exit: function(a) {
              var b = a.node,
                  c = a.scope,
                  d = b.declaration;
              if (C.isClassDeclaration(d) || C.isFunctionDeclaration(d)) {
                var e = d.id;
                if (!e)
                  return;
                var f = c.getBinding(e.name);
                f && f.reference();
              } else if (C.isVariableDeclaration(d))
                for (var g = d.declarations,
                    h = Array.isArray(g),
                    j = 0,
                    g = h ? g : i(g); ; ) {
                  var k;
                  if (h) {
                    if (j >= g.length)
                      break;
                    k = g[j++];
                  } else {
                    if (j = g.next(), j.done)
                      break;
                    k = j.value;
                  }
                  var l = k,
                      m = C.getBindingIdentifiers(l);
                  for (var n in m) {
                    var f = c.getBinding(n);
                    f && f.reference();
                  }
                }
            }},
          LabeledStatement: function(a) {
            a.scope.getProgramParent().addGlobal(a.node), a.scope.getBlockParent().registerDeclaration(a);
          },
          AssignmentExpression: function(a, b) {
            b.assignments.push(a);
          },
          UpdateExpression: function(a, b) {
            b.constantViolations.push(a.get("argument"));
          },
          UnaryExpression: function(a, b) {
            "delete" === a.node.operator && b.constantViolations.push(a.get("argument"));
          },
          BlockScoped: function(a) {
            var b = a.scope;
            b.path === a && (b = b.parent), b.getBlockParent().registerDeclaration(a);
          },
          ClassDeclaration: function(a) {
            var b = a.node.id;
            if (b) {
              var c = b.name;
              a.scope.bindings[c] = a.scope.getBinding(c);
            }
          },
          Block: function(a) {
            for (var b = a.get("body"),
                c = b,
                d = Array.isArray(c),
                e = 0,
                c = d ? c : i(c); ; ) {
              var f;
              if (d) {
                if (e >= c.length)
                  break;
                f = c[e++];
              } else {
                if (e = c.next(), e.done)
                  break;
                f = e.value;
              }
              var g = f;
              g.isFunctionDeclaration() && a.scope.getBlockParent().registerDeclaration(g);
            }
          }
        },
        G = 0,
        H = function() {
          function a(b, c) {
            if (g(this, a), c && c.block === b.node)
              return c;
            var e = d(b.node, c, this);
            return e ? e : (this.uid = G++, this.parent = c, this.hub = b.hub, this.parentBlock = b.parent, this.block = b.node, void(this.path = b));
          }
          return a.prototype.traverse = function(a, b, c) {
            t["default"](a, b, this, c, this.path);
          }, a.prototype.generateDeclaredUidIdentifier = function() {
            var a = arguments.length <= 0 || void 0 === arguments[0] ? "temp" : arguments[0],
                b = this.generateUidIdentifier(a);
            return this.push({id: b}), b;
          }, a.prototype.generateUidIdentifier = function() {
            var a = arguments.length <= 0 || void 0 === arguments[0] ? "temp" : arguments[0];
            return C.identifier(this.generateUid(a));
          }, a.prototype.generateUid = function() {
            var a = arguments.length <= 0 || void 0 === arguments[0] ? "temp" : arguments[0];
            a = C.toIdentifier(a).replace(/^_+/, "").replace(/[0-9]+$/g, "");
            var b = void 0,
                c = 0;
            do
              b = this._generateUid(a, c), c++;
 while (this.hasBinding(b) || this.hasGlobal(b) || this.hasReference(b));
            var d = this.getProgramParent();
            return d.references[b] = !0, d.uids[b] = !0, b;
          }, a.prototype._generateUid = function(a, b) {
            var c = a;
            return b > 1 && (c += b), "_" + c;
          }, a.prototype.generateUidIdentifierBasedOnNode = function(a, b) {
            var c = a;
            C.isAssignmentExpression(a) ? c = a.left : C.isVariableDeclarator(a) ? c = a.id : (C.isObjectProperty(c) || C.isObjectMethod(c)) && (c = c.key);
            var d = [],
                e = function g(a) {
                  if (C.isModuleDeclaration(a))
                    if (a.source)
                      g(a.source);
                    else if (a.specifiers && a.specifiers.length)
                      for (var b = a.specifiers,
                          c = Array.isArray(b),
                          e = 0,
                          b = c ? b : i(b); ; ) {
                        var f;
                        if (c) {
                          if (e >= b.length)
                            break;
                          f = b[e++];
                        } else {
                          if (e = b.next(), e.done)
                            break;
                          f = e.value;
                        }
                        var h = f;
                        g(h);
                      }
                    else
                      a.declaration && g(a.declaration);
                  else if (C.isModuleSpecifier(a))
                    g(a.local);
                  else if (C.isMemberExpression(a))
                    g(a.object), g(a.property);
                  else if (C.isIdentifier(a))
                    d.push(a.name);
                  else if (C.isLiteral(a))
                    d.push(a.value);
                  else if (C.isCallExpression(a))
                    g(a.callee);
                  else if (C.isObjectExpression(a) || C.isObjectPattern(a))
                    for (var j = a.properties,
                        k = Array.isArray(j),
                        l = 0,
                        j = k ? j : i(j); ; ) {
                      var m;
                      if (k) {
                        if (l >= j.length)
                          break;
                        m = j[l++];
                      } else {
                        if (l = j.next(), l.done)
                          break;
                        m = l.value;
                      }
                      var n = m;
                      g(n.key || n.argument);
                    }
                };
            e(c);
            var f = d.join("$");
            return f = f.replace(/^_/, "") || b || "ref", this.generateUidIdentifier(f.slice(0, 20));
          }, a.prototype.isStatic = function(a) {
            if (C.isThisExpression(a) || C.isSuper(a))
              return !0;
            if (C.isIdentifier(a)) {
              var b = this.getBinding(a.name);
              return b ? b.constant : this.hasBinding(a.name);
            }
            return !1;
          }, a.prototype.maybeGenerateMemoised = function(a, b) {
            if (this.isStatic(a))
              return null;
            var c = this.generateUidIdentifierBasedOnNode(a);
            return b || this.push({id: c}), c;
          }, a.prototype.checkBlockScopedCollisions = function(a, b, c, d) {
            if ("param" !== b && ("hoisted" !== b || "let" !== a.kind)) {
              var e = !1;
              if (e || (e = "let" === b || "let" === a.kind || "const" === a.kind || "module" === a.kind), e || (e = "param" === a.kind && ("let" === b || "const" === b)), e)
                throw this.hub.file.buildCodeFrameError(d, x.get("scopeDuplicateDeclaration", c), TypeError);
            }
          }, a.prototype.rename = function(a, b, c) {
            var d = this.getBinding(a);
            return d ? (b = b || this.generateUidIdentifier(a).name, new r["default"](d, a, b).rename(c)) : void 0;
          }, a.prototype._renameFromMap = function(a, b, c, d) {
            a[b] && (a[c] = d, a[b] = null);
          }, a.prototype.dump = function() {
            var a = p["default"]("-", 60);
            console.log(a);
            var b = this;
            do {
              console.log("#", b.block.type);
              for (var c in b.bindings) {
                var d = b.bindings[c];
                console.log(" -", c, {
                  constant: d.constant,
                  references: d.references,
                  violations: d.constantViolations.length,
                  kind: d.kind
                });
              }
            } while (b = b.parent);
            console.log(a);
          }, a.prototype.toArray = function(a, b) {
            var c = this.hub.file;
            if (C.isIdentifier(a)) {
              var d = this.getBinding(a.name);
              if (d && d.constant && d.path.isGenericType("Array"))
                return a;
            }
            if (C.isArrayExpression(a))
              return a;
            if (C.isIdentifier(a, {name: "arguments"}))
              return C.callExpression(C.memberExpression(C.memberExpression(C.memberExpression(C.identifier("Array"), C.identifier("prototype")), C.identifier("slice")), C.identifier("call")), [a]);
            var e = "toArray",
                f = [a];
            return b === !0 ? e = "toConsumableArray" : b && (f.push(C.numericLiteral(b)), e = "slicedToArray"), C.callExpression(c.addHelper(e), f);
          }, a.prototype.registerDeclaration = function(a) {
            if (a.isLabeledStatement())
              this.registerBinding("label", a);
            else if (a.isFunctionDeclaration())
              this.registerBinding("hoisted", a.get("id"), a);
            else if (a.isVariableDeclaration())
              for (var b = a.get("declarations"),
                  c = b,
                  d = Array.isArray(c),
                  e = 0,
                  c = d ? c : i(c); ; ) {
                var f;
                if (d) {
                  if (e >= c.length)
                    break;
                  f = c[e++];
                } else {
                  if (e = c.next(), e.done)
                    break;
                  f = e.value;
                }
                var g = f;
                this.registerBinding(a.node.kind, g);
              }
            else if (a.isClassDeclaration())
              this.registerBinding("let", a);
            else if (a.isImportDeclaration())
              for (var h = a.get("specifiers"),
                  j = h,
                  k = Array.isArray(j),
                  l = 0,
                  j = k ? j : i(j); ; ) {
                var m;
                if (k) {
                  if (l >= j.length)
                    break;
                  m = j[l++];
                } else {
                  if (l = j.next(), l.done)
                    break;
                  m = l.value;
                }
                var n = m;
                this.registerBinding("module", n);
              }
            else if (a.isExportDeclaration()) {
              var g = a.get("declaration");
              (g.isClassDeclaration() || g.isFunctionDeclaration() || g.isVariableDeclaration()) && this.registerDeclaration(g);
            } else
              this.registerBinding("unknown", a);
          }, a.prototype.buildUndefinedNode = function() {
            return this.hasBinding("undefined") ? C.unaryExpression("void", C.numericLiteral(0), !0) : C.identifier("undefined");
          }, a.prototype.registerConstantViolation = function(a) {
            var b = a.getBindingIdentifiers();
            for (var c in b) {
              var d = this.getBinding(c);
              d && d.reassign(a);
            }
          }, a.prototype.registerBinding = function(a, b) {
            var c = arguments.length <= 2 || void 0 === arguments[2] ? b : arguments[2];
            return function() {
              if (!a)
                throw new ReferenceError("no `kind`");
              if (b.isVariableDeclaration())
                for (var d = b.get("declarations"),
                    e = d,
                    f = Array.isArray(e),
                    g = 0,
                    e = f ? e : i(e); ; ) {
                  var h;
                  if (f) {
                    if (g >= e.length)
                      break;
                    h = e[g++];
                  } else {
                    if (g = e.next(), g.done)
                      break;
                    h = g.value;
                  }
                  var j = h;
                  this.registerBinding(a, j);
                }
              else {
                var k = this.getProgramParent(),
                    l = b.getBindingIdentifiers(!0);
                for (var m in l)
                  for (var n = l[m],
                      o = Array.isArray(n),
                      p = 0,
                      n = o ? n : i(n); ; ) {
                    var q;
                    if (o) {
                      if (p >= n.length)
                        break;
                      q = n[p++];
                    } else {
                      if (p = n.next(), p.done)
                        break;
                      q = p.value;
                    }
                    var r = q,
                        s = this.getOwnBinding(m);
                    if (s) {
                      if (s.identifier === r)
                        continue;
                      this.checkBlockScopedCollisions(s, a, m, r);
                    }
                    k.references[m] = !0, this.bindings[m] = new z["default"]({
                      identifier: r,
                      existing: s,
                      scope: this,
                      path: c,
                      kind: a
                    });
                  }
              }
            }.apply(this, arguments);
          }, a.prototype.addGlobal = function(a) {
            this.globals[a.name] = a;
          }, a.prototype.hasUid = function(a) {
            var b = this;
            do
              if (b.uids[a])
                return !0;
 while (b = b.parent);
            return !1;
          }, a.prototype.hasGlobal = function(a) {
            var b = this;
            do
              if (b.globals[a])
                return !0;
 while (b = b.parent);
            return !1;
          }, a.prototype.hasReference = function(a) {
            var b = this;
            do
              if (b.references[a])
                return !0;
 while (b = b.parent);
            return !1;
          }, a.prototype.isPure = function(a, b) {
            if (C.isIdentifier(a)) {
              var c = this.getBinding(a.name);
              return c ? b ? c.constant : !0 : !1;
            }
            if (C.isClass(a))
              return a.superClass && !this.isPure(a.superClass, b) ? !1 : this.isPure(a.body, b);
            if (C.isClassBody(a)) {
              for (var d = a.body,
                  e = Array.isArray(d),
                  f = 0,
                  d = e ? d : i(d); ; ) {
                var g;
                if (e) {
                  if (f >= d.length)
                    break;
                  g = d[f++];
                } else {
                  if (f = d.next(), f.done)
                    break;
                  g = f.value;
                }
                var h = g;
                if (!this.isPure(h, b))
                  return !1;
              }
              return !0;
            }
            if (C.isBinary(a))
              return this.isPure(a.left, b) && this.isPure(a.right, b);
            if (C.isArrayExpression(a)) {
              for (var j = a.elements,
                  k = Array.isArray(j),
                  l = 0,
                  j = k ? j : i(j); ; ) {
                var m;
                if (k) {
                  if (l >= j.length)
                    break;
                  m = j[l++];
                } else {
                  if (l = j.next(), l.done)
                    break;
                  m = l.value;
                }
                var n = m;
                if (!this.isPure(n, b))
                  return !1;
              }
              return !0;
            }
            if (C.isObjectExpression(a)) {
              for (var o = a.properties,
                  p = Array.isArray(o),
                  q = 0,
                  o = p ? o : i(o); ; ) {
                var r;
                if (p) {
                  if (q >= o.length)
                    break;
                  r = o[q++];
                } else {
                  if (q = o.next(), q.done)
                    break;
                  r = q.value;
                }
                var s = r;
                if (!this.isPure(s, b))
                  return !1;
              }
              return !0;
            }
            return C.isClassMethod(a) ? a.computed && !this.isPure(a.key, b) ? !1 : "get" === a.kind || "set" === a.kind ? !1 : !0 : C.isClassProperty(a) || C.isObjectProperty(a) ? a.computed && !this.isPure(a.key, b) ? !1 : this.isPure(a.value, b) : C.isUnaryExpression(a) ? this.isPure(a.argument, b) : C.isPureish(a);
          }, a.prototype.setData = function(a, b) {
            return this.data[a] = b;
          }, a.prototype.getData = function(a) {
            var b = this;
            do {
              var c = b.data[a];
              if (null != c)
                return c;
            } while (b = b.parent);
          }, a.prototype.removeData = function(a) {
            var b = this;
            do {
              var c = b.data[a];
              null != c && (b.data[a] = null);
            } while (b = b.parent);
          }, a.prototype.init = function() {
            this.references || this.crawl();
          }, a.prototype.crawl = function() {
            var a = this.path;
            if (this.references = j(null), this.bindings = j(null), this.globals = j(null), this.uids = j(null), this.data = j(null), a.isLoop())
              for (var b = C.FOR_INIT_KEYS,
                  c = Array.isArray(b),
                  d = 0,
                  b = c ? b : i(b); ; ) {
                var e;
                if (c) {
                  if (d >= b.length)
                    break;
                  e = b[d++];
                } else {
                  if (d = b.next(), d.done)
                    break;
                  e = d.value;
                }
                var f = e,
                    g = a.get(f);
                g.isBlockScoped() && this.registerBinding(g.node.kind, g);
              }
            if (a.isFunctionExpression() && a.has("id") && (a.get("id").node[C.NOT_LOCAL_BINDING] || this.registerBinding("local", a.get("id"), a)), a.isClassExpression() && a.has("id") && (a.get("id").node[C.NOT_LOCAL_BINDING] || this.registerBinding("local", a)), a.isFunction())
              for (var h = a.get("params"),
                  k = h,
                  l = Array.isArray(k),
                  m = 0,
                  k = l ? k : i(k); ; ) {
                var n;
                if (l) {
                  if (m >= k.length)
                    break;
                  n = k[m++];
                } else {
                  if (m = k.next(), m.done)
                    break;
                  n = m.value;
                }
                var o = n;
                this.registerBinding("param", o);
              }
            a.isCatchClause() && this.registerBinding("let", a);
            var p = this.getProgramParent();
            if (!p.crawling) {
              var q = {
                references: [],
                constantViolations: [],
                assignments: []
              };
              this.crawling = !0, a.traverse(F, q), this.crawling = !1;
              for (var r = q.assignments,
                  s = Array.isArray(r),
                  t = 0,
                  r = s ? r : i(r); ; ) {
                var u;
                if (s) {
                  if (t >= r.length)
                    break;
                  u = r[t++];
                } else {
                  if (t = r.next(), t.done)
                    break;
                  u = t.value;
                }
                var v = u,
                    w = v.getBindingIdentifiers(),
                    x = void 0;
                for (var y in w)
                  v.scope.getBinding(y) || (x = x || v.scope.getProgramParent(), x.addGlobal(w[y]));
                v.scope.registerConstantViolation(v);
              }
              for (var z = q.references,
                  A = Array.isArray(z),
                  B = 0,
                  z = A ? z : i(z); ; ) {
                var D;
                if (A) {
                  if (B >= z.length)
                    break;
                  D = z[B++];
                } else {
                  if (B = z.next(), B.done)
                    break;
                  D = B.value;
                }
                var E = D,
                    G = E.scope.getBinding(E.node.name);
                G ? G.reference(E) : E.scope.getProgramParent().addGlobal(E.node);
              }
              for (var H = q.constantViolations,
                  I = Array.isArray(H),
                  J = 0,
                  H = I ? H : i(H); ; ) {
                var K;
                if (I) {
                  if (J >= H.length)
                    break;
                  K = H[J++];
                } else {
                  if (J = H.next(), J.done)
                    break;
                  K = J.value;
                }
                var L = K;
                L.scope.registerConstantViolation(L);
              }
            }
          }, a.prototype.push = function(a) {
            var b = this.path;
            b.isBlockStatement() || b.isProgram() || (b = this.getBlockParent().path), b.isSwitchStatement() && (b = this.getFunctionParent().path), (b.isLoop() || b.isCatchClause() || b.isFunction()) && (C.ensureBlock(b.node), b = b.get("body"));
            var c = a.unique,
                d = a.kind || "var",
                e = null == a._blockHoist ? 2 : a._blockHoist,
                f = "declaration:" + d + ":" + e,
                g = !c && b.getData(f);
            if (!g) {
              var h = C.variableDeclaration(d, []);
              h._generated = !0, h._blockHoist = e;
              var i = b.unshiftContainer("body", [h]);
              g = i[0], c || b.setData(f, g);
            }
            var j = C.variableDeclarator(a.id, a.init);
            g.node.declarations.push(j), this.registerBinding(d, g.get("declarations").pop());
          }, a.prototype.getProgramParent = function() {
            var a = this;
            do
              if (a.path.isProgram())
                return a;
 while (a = a.parent);
            throw new Error("We couldn't find a Function or Program...");
          }, a.prototype.getFunctionParent = function() {
            var a = this;
            do
              if (a.path.isFunctionParent())
                return a;
 while (a = a.parent);
            throw new Error("We couldn't find a Function or Program...");
          }, a.prototype.getBlockParent = function() {
            var a = this;
            do
              if (a.path.isBlockParent())
                return a;
 while (a = a.parent);
            throw new Error("We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...");
          }, a.prototype.getAllBindings = function() {
            var a = j(null),
                b = this;
            do
              v["default"](a, b.bindings), b = b.parent;
 while (b);
            return a;
          }, a.prototype.getAllBindingsOfKind = function() {
            for (var a = j(null),
                b = arguments,
                c = Array.isArray(b),
                d = 0,
                b = c ? b : i(b); ; ) {
              var e;
              if (c) {
                if (d >= b.length)
                  break;
                e = b[d++];
              } else {
                if (d = b.next(), d.done)
                  break;
                e = d.value;
              }
              var f = e,
                  g = this;
              do {
                for (var h in g.bindings) {
                  var k = g.bindings[h];
                  k.kind === f && (a[h] = k);
                }
                g = g.parent;
              } while (g);
            }
            return a;
          }, a.prototype.bindingIdentifierEquals = function(a, b) {
            return this.getBindingIdentifier(a) === b;
          }, a.prototype.getBinding = function(a) {
            var b = this;
            do {
              var c = b.getOwnBinding(a);
              if (c)
                return c;
            } while (b = b.parent);
          }, a.prototype.getOwnBinding = function(a) {
            return this.bindings[a];
          }, a.prototype.getBindingIdentifier = function(a) {
            var b = this.getBinding(a);
            return b && b.identifier;
          }, a.prototype.getOwnBindingIdentifier = function(a) {
            var b = this.bindings[a];
            return b && b.identifier;
          }, a.prototype.hasOwnBinding = function(a) {
            return !!this.getOwnBinding(a);
          }, a.prototype.hasBinding = function(b, c) {
            return b ? this.hasOwnBinding(b) ? !0 : this.parentHasBinding(b, c) ? !0 : this.hasUid(b) ? !0 : !c && n["default"](a.globals, b) ? !0 : !c && n["default"](a.contextVariables, b) ? !0 : !1 : !1;
          }, a.prototype.parentHasBinding = function(a, b) {
            return this.parent && this.parent.hasBinding(a, b);
          }, a.prototype.moveBindingTo = function(a, b) {
            var c = this.getBinding(a);
            c && (c.scope.removeOwnBinding(a), c.scope = b, b.bindings[a] = c);
          }, a.prototype.removeOwnBinding = function(a) {
            delete this.bindings[a];
          }, a.prototype.removeBinding = function(a) {
            var b = this.getBinding(a);
            b && b.scope.removeOwnBinding(a);
            var c = this;
            do
              c.uids[a] && (c.uids[a] = !1);
 while (c = c.parent);
          }, a;
        }();
    return b["default"] = H, c.exports = b["default"], c.exports;
  }), a.registerDynamic("9", ["3"], !0, function(a, b, c) {
    "use strict";
    a("3");
    return b["default"] = function(a, b) {
      if (!(a instanceof b))
        throw new TypeError("Cannot call a class as a function");
    }, b.__esModule = !0, c.exports;
  }), a.registerDynamic("196", ["9", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), a("9")["default"]);
    b.__esModule = !0;
    var e = function f(a, b) {
      d(this, f), this.file = a, this.options = b;
    };
    return b["default"] = e, c.exports = b["default"], c.exports;
  }), a.registerDynamic("14", ["c", "14a", "a", "4", "b4", "14b", "155", "4d", "29", "5", "14c", "177", "196", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a, b, c, e, f) {
      if (a) {
        if (b || (b = {}), !b.noScope && !c && "Program" !== a.type && "File" !== a.type)
          throw new Error(p.get("traverseNeedsParent", a.type));
        n.explode(b), d.node(a, b, c, e, f);
      }
    }
    function e(a, b) {
      a.node.type === b.type && (b.has = !0, a.skip());
    }
    var f = (a("3"), a("c")["default"]),
        g = a("14a")["default"],
        h = a("a")["default"],
        i = a("4")["default"],
        j = a("b4")["default"];
    b.__esModule = !0, b["default"] = d;
    var k = a("14b"),
        l = h(k),
        m = a("155"),
        n = i(m),
        o = a("4d"),
        p = i(o),
        q = a("29"),
        r = h(q),
        s = a("5"),
        t = i(s),
        u = a("14c");
    b.NodePath = j(u);
    var v = a("177");
    b.Scope = j(v);
    var w = a("196");
    b.Hub = j(w), b.visitors = n, d.visitors = n, d.verify = n.verify, d.explode = n.explode, d.NodePath = a("14c"), d.Scope = a("177"), d.Hub = a("196"), d.cheap = function(a, b) {
      if (a) {
        var c = t.VISITOR_KEYS[a.type];
        if (c) {
          b(a);
          for (var e = c,
              g = Array.isArray(e),
              h = 0,
              e = g ? e : f(e); ; ) {
            var i;
            if (g) {
              if (h >= e.length)
                break;
              i = e[h++];
            } else {
              if (h = e.next(), h.done)
                break;
              i = h.value;
            }
            var j = i,
                k = a[j];
            if (Array.isArray(k))
              for (var l = k,
                  m = Array.isArray(l),
                  n = 0,
                  l = m ? l : f(l); ; ) {
                var o;
                if (m) {
                  if (n >= l.length)
                    break;
                  o = l[n++];
                } else {
                  if (n = l.next(), n.done)
                    break;
                  o = n.value;
                }
                var p = o;
                d.cheap(p, b);
              }
            else
              d.cheap(k, b);
          }
        }
      }
    }, d.node = function(a, b, c, d, e, g) {
      var h = t.VISITOR_KEYS[a.type];
      if (h)
        for (var i = new l["default"](c, b, d, e),
            j = h,
            k = Array.isArray(j),
            m = 0,
            j = k ? j : f(j); ; ) {
          var n;
          if (k) {
            if (m >= j.length)
              break;
            n = j[m++];
          } else {
            if (m = j.next(), m.done)
              break;
            n = m.value;
          }
          var o = n;
          if ((!g || !g[o]) && i.visit(a, o))
            return;
        }
    };
    var x = t.COMMENT_KEYS.concat(["tokens", "comments", "start", "end", "loc", "raw", "rawValue"]);
    return d.clearNode = function(a) {
      for (var b = x,
          c = Array.isArray(b),
          d = 0,
          b = c ? b : f(b); ; ) {
        var e;
        if (c) {
          if (d >= b.length)
            break;
          e = b[d++];
        } else {
          if (d = b.next(), d.done)
            break;
          e = d.value;
        }
        var h = e;
        null != a[h] && (a[h] = void 0);
      }
      for (var h in a)
        "_" === h[0] && null != a[h] && (a[h] = void 0);
      for (var i = g(a),
          j = i,
          k = Array.isArray(j),
          l = 0,
          j = k ? j : f(j); ; ) {
        var m;
        if (k) {
          if (l >= j.length)
            break;
          m = j[l++];
        } else {
          if (l = j.next(), l.done)
            break;
          m = l.value;
        }
        var n = m;
        a[n] = null;
      }
    }, d.removeProperties = function(a) {
      return d.cheap(a, d.clearNode), a;
    }, d.hasType = function(a, b, c, f) {
      if (r["default"](f, a.type))
        return !1;
      if (a.type === c)
        return !0;
      var g = {
        has: !1,
        type: c
      };
      return d(a, {
        blacklist: f,
        enter: e
      }, b, g), g.has;
    }, c.exports;
  }), a.registerDynamic("197", ["c", "146", "a", "4", "40", "a8", "2f", "2e", "14", "5", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      var b = arguments.length <= 1 || void 0 === arguments[1] ? a.key || a.property : arguments[1];
      return function() {
        return a.computed || B.isIdentifier(b) && (b = B.stringLiteral(b.name)), b;
      }();
    }
    function e(a, b) {
      function c(a) {
        for (var f = !1,
            g = [],
            h = a,
            i = Array.isArray(h),
            j = 0,
            h = i ? h : m(h); ; ) {
          var k;
          if (i) {
            if (j >= h.length)
              break;
            k = h[j++];
          } else {
            if (j = h.next(), j.done)
              break;
            k = j.value;
          }
          var l = k;
          if (B.isExpression(l))
            g.push(l);
          else if (B.isExpressionStatement(l))
            g.push(l.expression);
          else {
            if (B.isVariableDeclaration(l)) {
              if ("var" !== l.kind)
                return e = !0;
              for (var n = l.declarations,
                  o = Array.isArray(n),
                  p = 0,
                  n = o ? n : m(n); ; ) {
                var q;
                if (o) {
                  if (p >= n.length)
                    break;
                  q = n[p++];
                } else {
                  if (p = n.next(), p.done)
                    break;
                  q = p.value;
                }
                var r = q,
                    s = B.getBindingIdentifiers(r);
                for (var t in s)
                  d.push({
                    kind: l.kind,
                    id: s[t]
                  });
                r.init && g.push(B.assignmentExpression("=", r.id, r.init));
              }
              f = !0;
              continue;
            }
            if (B.isIfStatement(l)) {
              var u = l.consequent ? c([l.consequent]) : b.buildUndefinedNode(),
                  v = l.alternate ? c([l.alternate]) : b.buildUndefinedNode();
              if (!u || !v)
                return e = !0;
              g.push(B.conditionalExpression(l.test, u, v));
            } else {
              if (!B.isBlockStatement(l)) {
                if (B.isEmptyStatement(l)) {
                  f = !0;
                  continue;
                }
                return e = !0;
              }
              g.push(c(l.body));
            }
          }
          f = !1;
        }
        return (f || 0 === g.length) && g.push(b.buildUndefinedNode()), 1 === g.length ? g[0] : B.sequenceExpression(g);
      }
      if (a && a.length) {
        var d = [],
            e = !1,
            f = c(a);
        if (!e) {
          for (var g = 0; g < d.length; g++)
            b.push(d[g]);
          return f;
        }
      }
    }
    function f(a) {
      var b = arguments.length <= 1 || void 0 === arguments[1] ? a.key : arguments[1];
      return function() {
        var c = void 0;
        return "method" === a.kind ? f.increment() + "" : (c = B.isIdentifier(b) ? b.name : B.isStringLiteral(b) ? JSON.stringify(b.value) : JSON.stringify(z["default"].removeProperties(B.cloneDeep(b))), a.computed && (c = "[" + c + "]"), a["static"] && (c = "static:" + c), c);
      }();
    }
    function g(a) {
      return a += "", a = a.replace(/[^a-zA-Z0-9$_]/g, "-"), a = a.replace(/^[-0-9]+/, ""), a = a.replace(/[-\s]+(.)?/g, function(a, b) {
        return b ? b.toUpperCase() : "";
      }), B.isValidIdentifier(a) || (a = "_" + a), a || "_";
    }
    function h(a) {
      return a = g(a), ("eval" === a || "arguments" === a) && (a = "_" + a), a;
    }
    function i(a, b) {
      if (B.isStatement(a))
        return a;
      var c = !1,
          d = void 0;
      if (B.isClass(a))
        c = !0, d = "ClassDeclaration";
      else if (B.isFunction(a))
        c = !0, d = "FunctionDeclaration";
      else if (B.isAssignmentExpression(a))
        return B.expressionStatement(a);
      if (c && !a.id && (d = !1), !d) {
        if (b)
          return !1;
        throw new Error("cannot turn " + a.type + " to a statement");
      }
      return a.type = d, a;
    }
    function j(a) {
      if (B.isExpressionStatement(a) && (a = a.expression), B.isClass(a) ? a.type = "ClassExpression" : B.isFunction(a) && (a.type = "FunctionExpression"), B.isExpression(a))
        return a;
      throw new Error("cannot turn " + a.type + " to an expression");
    }
    function k(a, b) {
      return B.isBlockStatement(a) ? a : (B.isEmptyStatement(a) && (a = []), Array.isArray(a) || (B.isStatement(a) || (a = B.isFunction(b) ? B.returnStatement(a) : B.expressionStatement(a)), a = [a]), B.blockStatement(a));
    }
    function l(a) {
      if (void 0 === a)
        return B.identifier("undefined");
      if (a === !0 || a === !1)
        return B.booleanLiteral(a);
      if (null === a)
        return B.nullLiteral();
      if (x["default"](a))
        return B.stringLiteral(a);
      if (t["default"](a))
        return B.numericLiteral(a);
      if (v["default"](a)) {
        var b = a.source,
            c = a.toString().match(/\/([a-z]+|)$/)[1];
        return B.regExpLiteral(b, c);
      }
      if (Array.isArray(a))
        return B.arrayExpression(a.map(B.valueToNode));
      if (r["default"](a)) {
        var d = [];
        for (var e in a) {
          var f = void 0;
          f = B.isValidIdentifier(e) ? B.identifier(e) : B.stringLiteral(e), d.push(B.objectProperty(f, B.valueToNode(a[e])));
        }
        return B.objectExpression(d);
      }
      throw new Error("don't know how to turn this value into a node");
    }
    var m = (a("3"), a("c")["default"]),
        n = a("146")["default"],
        o = a("a")["default"],
        p = a("4")["default"];
    b.__esModule = !0, b.toComputedKey = d, b.toSequenceExpression = e, b.toKeyAlias = f, b.toIdentifier = g, b.toBindingIdentifierName = h, b.toStatement = i, b.toExpression = j, b.toBlock = k, b.valueToNode = l;
    var q = a("40"),
        r = o(q),
        s = a("a8"),
        t = o(s),
        u = a("2f"),
        v = o(u),
        w = a("2e"),
        x = o(w),
        y = a("14"),
        z = o(y),
        A = a("5"),
        B = p(A);
    return f.uid = 0, f.increment = function() {
      return f.uid >= n ? f.uid = 0 : f.uid++;
    }, c.exports;
  }), a.registerDynamic("4", ["3"], !0, function(a, b, c) {
    "use strict";
    a("3");
    return b["default"] = function(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b["default"] = a, b;
    }, b.__esModule = !0, c.exports;
  }), a.registerDynamic("198", ["4", "5", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      var b = e(a);
      return 1 === b.length ? b[0] : i.unionTypeAnnotation(b);
    }
    function e(a) {
      for (var b = {},
          c = {},
          d = [],
          f = [],
          g = 0; g < a.length; g++) {
        var h = a[g];
        if (h && !(f.indexOf(h) >= 0)) {
          if (i.isAnyTypeAnnotation(h))
            return [h];
          if (i.isFlowBaseAnnotation(h))
            c[h.type] = h;
          else if (i.isUnionTypeAnnotation(h))
            d.indexOf(h.types) < 0 && (a = a.concat(h.types), d.push(h.types));
          else if (i.isGenericTypeAnnotation(h)) {
            var j = h.id.name;
            if (b[j]) {
              var k = b[j];
              k.typeParameters ? h.typeParameters && (k.typeParameters.params = e(k.typeParameters.params.concat(h.typeParameters.params))) : k = h.typeParameters;
            } else
              b[j] = h;
          } else
            f.push(h);
        }
      }
      for (var l in c)
        f.push(c[l]);
      for (var m in b)
        f.push(b[m]);
      return f;
    }
    function f(a) {
      if ("string" === a)
        return i.stringTypeAnnotation();
      if ("number" === a)
        return i.numberTypeAnnotation();
      if ("undefined" === a)
        return i.voidTypeAnnotation();
      if ("boolean" === a)
        return i.booleanTypeAnnotation();
      if ("function" === a)
        return i.genericTypeAnnotation(i.identifier("Function"));
      if ("object" === a)
        return i.genericTypeAnnotation(i.identifier("Object"));
      if ("symbol" === a)
        return i.genericTypeAnnotation(i.identifier("Symbol"));
      throw new Error("Invalid typeof value");
    }
    var g = (a("3"), a("4")["default"]);
    b.__esModule = !0, b.createUnionTypeAnnotation = d, b.removeTypeDuplicates = e, b.createTypeAnnotationBasedOnTypeof = f;
    var h = a("5"),
        i = g(h);
    return c.exports;
  }), a.registerDynamic("5", ["82", "c", "a", "4", "112", "113", "114", "115", "4f", "a4", "133", "13c", "136", "13d", "135", "13e", "142", "197", "198", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      var b = R["is" + a] = function(b, c) {
        return R.is(a, b, c);
      };
      R["assert" + a] = function(c, d) {
        if (d = d || {}, !b(c, d))
          throw new Error("Expected type " + JSON.stringify(a) + " with option " + JSON.stringify(d));
      };
    }
    function e(a, b, c) {
      if (!b)
        return !1;
      var d = f(b.type, a);
      return d ? "undefined" == typeof c ? !0 : R.shallowEqual(b, c) : !1;
    }
    function f(a, b) {
      if (a === b)
        return !0;
      var c = R.FLIPPED_ALIAS_KEYS[b];
      if (c) {
        if (c[0] === a)
          return !0;
        for (var d = c,
            e = Array.isArray(d),
            f = 0,
            d = e ? d : z(d); ; ) {
          var g;
          if (e) {
            if (f >= d.length)
              break;
            g = d[f++];
          } else {
            if (f = d.next(), f.done)
              break;
            g = f.value;
          }
          var h = g;
          if (a === h)
            return !0;
        }
      }
      return !1;
    }
    function g(a, b, c) {
      if (a) {
        var d = R.NODE_FIELDS[a.type];
        if (d) {
          var e = d[b];
          e && e.validate && (e.optional && null == c || e.validate(a, b, c));
        }
      }
    }
    function h(a, b) {
      for (var c = y(b),
          d = c,
          e = Array.isArray(d),
          f = 0,
          d = e ? d : z(d); ; ) {
        var g;
        if (e) {
          if (f >= d.length)
            break;
          g = d[f++];
        } else {
          if (f = d.next(), f.done)
            break;
          g = f.value;
        }
        var h = g;
        if (a[h] !== b[h])
          return !1;
      }
      return !0;
    }
    function i(a, b, c) {
      return a.object = R.memberExpression(a.object, a.property, a.computed), a.property = b, a.computed = !!c, a;
    }
    function j(a, b) {
      return a.object = R.memberExpression(b, a.object), a;
    }
    function k(a) {
      var b = arguments.length <= 1 || void 0 === arguments[1] ? "body" : arguments[1];
      return a[b] = R.toBlock(a[b], a);
    }
    function l(a) {
      var b = {};
      for (var c in a)
        "_" !== c[0] && (b[c] = a[c]);
      return b;
    }
    function m(a) {
      var b = l(a);
      return delete b.loc, b;
    }
    function n(a) {
      var b = {};
      for (var c in a)
        if ("_" !== c[0]) {
          var d = a[c];
          d && (d.type ? d = R.cloneDeep(d) : Array.isArray(d) && (d = d.map(R.cloneDeep))), b[c] = d;
        }
      return b;
    }
    function o(a, b) {
      var c = a.split(".");
      return function(a) {
        if (!R.isMemberExpression(a))
          return !1;
        for (var d = [a],
            e = 0; d.length; ) {
          var f = d.shift();
          if (b && e === c.length)
            return !0;
          if (R.isIdentifier(f)) {
            if (c[e] !== f.name)
              return !1;
          } else {
            if (!R.isStringLiteral(f)) {
              if (R.isMemberExpression(f)) {
                if (f.computed && !R.isStringLiteral(f.property))
                  return !1;
                d.push(f.object), d.push(f.property);
                continue;
              }
              return !1;
            }
            if (c[e] !== f.value)
              return !1;
          }
          if (++e > c.length)
            return !1;
        }
        return !0;
      };
    }
    function p(a) {
      for (var b = R.COMMENT_KEYS,
          c = Array.isArray(b),
          d = 0,
          b = c ? b : z(b); ; ) {
        var e;
        if (c) {
          if (d >= b.length)
            break;
          e = b[d++];
        } else {
          if (d = b.next(), d.done)
            break;
          e = d.value;
        }
        var f = e;
        delete a[f];
      }
      return a;
    }
    function q(a, b) {
      return r(a, b), s(a, b), t(a, b), a;
    }
    function r(a, b) {
      u("trailingComments", a, b);
    }
    function s(a, b) {
      u("leadingComments", a, b);
    }
    function t(a, b) {
      u("innerComments", a, b);
    }
    function u(a, b, c) {
      b && c && (b[a] = N["default"](H["default"]([].concat(b[a], c[a]))));
    }
    function v(a, b) {
      if (!a || !b)
        return a;
      for (var c = R.INHERIT_KEYS.optional,
          d = Array.isArray(c),
          e = 0,
          c = d ? c : z(c); ; ) {
        var f;
        if (d) {
          if (e >= c.length)
            break;
          f = c[e++];
        } else {
          if (e = c.next(), e.done)
            break;
          f = e.value;
        }
        var g = f;
        null == a[g] && (a[g] = b[g]);
      }
      for (var g in b)
        "_" === g[0] && (a[g] = b[g]);
      for (var h = R.INHERIT_KEYS.force,
          i = Array.isArray(h),
          j = 0,
          h = i ? h : z(h); ; ) {
        var k;
        if (i) {
          if (j >= h.length)
            break;
          k = h[j++];
        } else {
          if (j = h.next(), j.done)
            break;
          k = j.value;
        }
        var g = k;
        a[g] = b[g];
      }
      return R.inheritsComments(a, b), a;
    }
    function w(a) {
      if (!x(a))
        throw new TypeError("Not a valid node " + (a && a.type));
    }
    function x(a) {
      return !(!a || !O.VISITOR_KEYS[a.type]);
    }
    var y = (a("3"), a("82")["default"]),
        z = a("c")["default"],
        A = a("a")["default"],
        B = a("4")["default"],
        C = a("112")["default"],
        D = a("113")["default"];
    b.__esModule = !0, b.is = e, b.isType = f, b.validate = g, b.shallowEqual = h, b.appendToMemberExpression = i, b.prependToMemberExpression = j, b.ensureBlock = k, b.clone = l, b.cloneWithoutLoc = m, b.cloneDeep = n, b.buildMatchMemberExpression = o, b.removeComments = p, b.inheritsComments = q, b.inheritTrailingComments = r, b.inheritLeadingComments = s, b.inheritInnerComments = t, b.inherits = v, b.assertNode = w, b.isNode = x;
    var E = a("114"),
        F = A(E),
        G = a("115"),
        H = A(G),
        I = a("4f"),
        J = A(I),
        K = a("a4"),
        L = A(K),
        M = a("133"),
        N = A(M);
    a("13c");
    var O = a("136"),
        P = a("13d"),
        Q = B(P),
        R = b,
        S = a("135");
    C(b, D(S, C)), b.VISITOR_KEYS = O.VISITOR_KEYS, b.ALIAS_KEYS = O.ALIAS_KEYS, b.NODE_FIELDS = O.NODE_FIELDS, b.BUILDER_KEYS = O.BUILDER_KEYS, b.DEPRECATED_KEYS = O.DEPRECATED_KEYS, b.react = Q;
    for (var T in R.VISITOR_KEYS)
      d(T);
    R.FLIPPED_ALIAS_KEYS = {}, L["default"](R.ALIAS_KEYS, function(a, b) {
      L["default"](a, function(a) {
        var c = R.FLIPPED_ALIAS_KEYS[a] = R.FLIPPED_ALIAS_KEYS[a] || [];
        c.push(b);
      });
    }), L["default"](R.FLIPPED_ALIAS_KEYS, function(a, b) {
      R[b.toUpperCase() + "_TYPES"] = a, d(b);
    });
    var U = y(R.VISITOR_KEYS).concat(y(R.FLIPPED_ALIAS_KEYS)).concat(y(R.DEPRECATED_KEYS));
    b.TYPES = U, L["default"](R.BUILDER_KEYS, function(a, b) {
      function c() {
        if (arguments.length > a.length)
          throw new Error("t." + b + ": Too many arguments passed. Received " + arguments.length + " but can receive no more than " + a.length);
        var c = {};
        c.type = b;
        for (var d = 0,
            e = a,
            f = Array.isArray(e),
            h = 0,
            e = f ? e : z(e); ; ) {
          var i;
          if (f) {
            if (h >= e.length)
              break;
            i = e[h++];
          } else {
            if (h = e.next(), h.done)
              break;
            i = h.value;
          }
          var j = i,
              k = R.NODE_FIELDS[b][j],
              l = arguments[d++];
          void 0 === l && (l = J["default"](k["default"])), c[j] = l;
        }
        for (var j in c)
          g(c, j, c[j]);
        return c;
      }
      R[b] = c, R[b[0].toLowerCase() + b.slice(1)] = c;
    });
    var V = function(a) {
      var b = function(b) {
        return function() {
          return console.trace("The node type " + a + " has been renamed to " + c), b.apply(this, arguments);
        };
      },
          c = R.DEPRECATED_KEYS[a];
      R[a] = R[a[0].toLowerCase() + a.slice(1)] = b(R[c]), R["is" + a] = b(R["is" + c]), R["assert" + a] = b(R["assert" + c]);
    };
    for (var T in R.DEPRECATED_KEYS)
      V(T);
    F["default"](R), F["default"](R.VISITOR_KEYS);
    var W = a("13e");
    C(b, D(W, C));
    var X = a("142");
    C(b, D(X, C));
    var Y = a("197");
    C(b, D(Y, C));
    var Z = a("198");
    return C(b, D(Z, C)), c.exports;
  }), a.registerDynamic("106", ["4", "5", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a, b) {
      return h.memberExpression(b || h.identifier("regeneratorRuntime"), h.identifier(a), !1);
    }
    function e(a) {
      return a.isReferenced() || a.parentPath.isAssignmentExpression({left: a.node});
    }
    var f = (a("3"), a("4")["default"]);
    b.__esModule = !0, b.runtimeProperty = d, b.isReference = e;
    var g = a("5"),
        h = f(g);
    return c.exports;
  }), a.registerDynamic("105", ["3"], !0, function(a, b, c) {
    "use strict";
    function d(a, b, c) {
      if (l)
        try {
          l.call(k, a, b, {value: c});
        } catch (d) {
          a[b] = c;
        }
      else
        a[b] = c;
    }
    function e(a) {
      return a && (d(a, "call", a.call), d(a, "apply", a.apply)), a;
    }
    function f(a) {
      return m ? m.call(k, a) : (q.prototype = a || null, new q);
    }
    function g() {
      do
        var a = h(p.call(o.call(r(), 36), 2));
 while (n.call(s, a));
      return s[a] = a;
    }
    function h(a) {
      var b = {};
      return b[a] = !0, Object.keys(b)[0];
    }
    function i(a) {
      return f(null);
    }
    function j(a) {
      function b(b) {
        function c(c, d) {
          return c === h ? d ? f = null : f || (f = a(b)) : void 0;
        }
        var f;
        d(b, e, c);
      }
      function c(a) {
        return n.call(a, e) || b(a), a[e](h);
      }
      var e = g(),
          h = f(null);
      return a = a || i, c.forget = function(a) {
        n.call(a, e) && a[e](h, !0);
      }, c;
    }
    var k = (a("3"), Object),
        l = Object.defineProperty,
        m = Object.create;
    e(l), e(m);
    var n = e(Object.prototype.hasOwnProperty),
        o = e(Number.prototype.toString),
        p = e(String.prototype.slice),
        q = function() {},
        r = Math.random,
        s = f(null);
    d(b, "makeUniqueKey", g);
    var t = Object.getOwnPropertyNames;
    return Object.getOwnPropertyNames = function(a) {
      for (var b = t(a),
          c = 0,
          d = 0,
          e = b.length; e > c; ++c)
        n.call(s, b[c]) || (c > d && (b[d] = b[c]), ++d);
      return b.length = d, b;
    }, d(b, "makeAccessor", j), c.exports;
  }), a.registerDynamic("199", ["a", "4", "102", "5", "100", "103", "106", "105", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a, b) {
      var c = a.node;
      if (l.assertFunction(c), c.id || (c.id = a.scope.parent.generateUidIdentifier("callee")), c.generator && l.isFunctionDeclaration(c)) {
        var d = a.findParent(function(a) {
          return a.isProgram() || a.isBlockStatement();
        });
        if (!d)
          return c.id;
        var f = e(d, b),
            g = f.declarations[0].id,
            h = f.declarations[0].init.callee.object;
        l.assertArrayExpression(h);
        var i = h.elements.length;
        return h.elements.push(c.id), l.memberExpression(g, l.numericLiteral(i), !0);
      }
      return c.id;
    }
    function e(a, b) {
      var c = a.node;
      j["default"].ok(Array.isArray(c.body));
      var d = q(c);
      return d.decl ? d.decl : (d.decl = l.variableDeclaration("var", [l.variableDeclarator(a.scope.generateUidIdentifier("marked"), l.callExpression(l.memberExpression(l.arrayExpression([]), l.identifier("map"), !1), [p.runtimeProperty("mark", b.file.get("regeneratorIdentifier"))]))]), a.unshiftContainer("body", d.decl), d.decl);
    }
    function f(a, b) {
      var c = {
        didRenameArguments: !1,
        argsId: b
      };
      return a.traverse(r, c), c.didRenameArguments;
    }
    var g = (a("3"), a("a")["default"]),
        h = a("4")["default"],
        i = a("102"),
        j = g(i),
        k = a("5"),
        l = h(k),
        m = a("100"),
        n = a("103"),
        o = a("106"),
        p = h(o),
        q = a("105").makeAccessor();
    b.visitor = {Function: {exit: function(a, b) {
          var c = a.node;
          if (c.generator) {
            if (c.async) {
              if (b.opts.asyncGenerators === !1)
                return;
            } else if (b.opts.generators === !1)
              return;
          } else {
            if (!c.async)
              return;
            if (b.opts.async === !1)
              return;
          }
          var e = a.scope.generateUidIdentifier("context"),
              g = a.scope.generateUidIdentifier("args");
          a.ensureBlock();
          var h = a.get("body");
          c.async && h.traverse(t), h.traverse(s, {context: e});
          var i = [],
              j = [];
          h.get("body").forEach(function(a) {
            var b = a.node;
            b && null != b._blockHoist ? i.push(b) : j.push(b);
          }), i.length > 0 && (h.node.body = j);
          var k = d(a, b);
          l.assertIdentifier(c.id);
          var o = l.identifier(c.id.name + "$"),
              q = m.hoist(a),
              r = f(a, g);
          r && (q = q || l.variableDeclaration("var", []), q.declarations.push(l.variableDeclarator(g, l.identifier("arguments"))));
          var u = new n.Emitter(e);
          u.explode(a.get("body")), q && q.declarations.length > 0 && i.push(q);
          var v = [u.getContextFunction(o), c.generator ? k : l.nullLiteral(), l.thisExpression()],
              w = u.getTryLocsList();
          w && v.push(w);
          var x = l.callExpression(p.runtimeProperty(c.async ? "async" : "wrap", b.file.get("regeneratorIdentifier")), v);
          i.push(l.returnStatement(x)), c.body = l.blockStatement(i);
          var y = c.generator;
          y && (c.generator = !1), c.async && (c.async = !1), y && l.isExpression(c) && a.replaceWith(l.callExpression(p.runtimeProperty("mark", b.file.get("regeneratorIdentifier")), [c])), a.requeue();
        }}};
    var r = {
      "FunctionExpression|FunctionDeclaration": function(a) {
        a.skip();
      },
      Identifier: function(a, b) {
        "arguments" === a.node.name && p.isReference(a) && (a.replaceWith(b.argsId), b.didRenameArguments = !0);
      }
    },
        s = {MetaProperty: function(a) {
            var b = a.node;
            "function" === b.meta.name && "sent" === b.property.name && a.replaceWith(l.memberExpression(this.context, l.identifier("_sent")));
          }},
        t = {
          Function: function(a) {
            a.skip();
          },
          AwaitExpression: function(a, b) {
            var c = a.node.argument;
            a.replaceWith(l.yieldExpression(l.callExpression(p.runtimeProperty("awrap", b.file.get("regeneratorIdentifier")), [c]), !1));
          }
        };
    return c.exports;
  }), a.registerDynamic("@system-env", [], !1, function() {
    return {
      production: !0,
      browser: !0,
      node: !1
    };
  }), a.registerDynamic("3", ["@system-env"], !0, function(a, b, c) {
    function d() {
      l = !1, h.length ? k = h.concat(k) : m = -1, k.length && e();
    }
    function e() {
      if (!l) {
        var a = setTimeout(d);
        l = !0;
        for (var b = k.length; b; ) {
          for (h = k, k = []; ++m < b; )
            h && h[m].run();
          m = -1, b = k.length;
        }
        h = null, l = !1, clearTimeout(a);
      }
    }
    function f(a, b) {
      this.fun = a, this.array = b;
    }
    function g() {}
    var h,
        i = a("@system-env").production,
        j = c.exports = {},
        k = [],
        l = !1,
        m = -1;
    return j.nextTick = function(a) {
      var b = new Array(arguments.length - 1);
      if (arguments.length > 1)
        for (var c = 1; c < arguments.length; c++)
          b[c - 1] = arguments[c];
      k.push(new f(a, b)), 1 !== k.length || l || setTimeout(e, 0);
    }, f.prototype.run = function() {
      this.fun.apply(null, this.array);
    }, j.title = "browser", j.browser = !0, j.env = {NODE_ENV: i ? "production" : "development"}, j.argv = [], j.version = "", j.versions = {}, j.on = g, j.addListener = g, j.once = g, j.off = g, j.removeListener = g, j.removeAllListeners = g, j.emit = g, j.binding = function(a) {
      throw new Error("process.binding is not supported");
    }, j.cwd = function() {
      return "/";
    }, j.chdir = function(a) {
      throw new Error("process.chdir is not supported");
    }, j.umask = function() {
      return 0;
    }, c.exports;
  }), a.registerDynamic("19a", ["199", "3"], !0, function(a, b, c) {
    "use strict";
    a("3");
    return b.__esModule = !0, b["default"] = function() {
      return a("199");
    }, c.exports = b["default"], c.exports;
  }), a.register("1", ["b6", "b8", "bb", "bd", "c6", "ca", "cb", "cc", "cd", "ce", "cf", "db", "dc", "dd", "de", "df", "e0", "ea", "eb", "ec", "f1", "f2", "fe", "19a"], function(a) {
    "use strict";
    var b,
        c,
        d,
        e,
        f,
        g,
        h,
        i,
        j,
        k,
        l,
        m,
        n,
        o,
        p,
        q,
        r,
        s,
        t,
        u,
        v,
        w,
        x,
        y,
        z,
        A,
        B,
        C,
        D;
    return {
      setters: [function(a) {
        b = a;
      }, function(a) {
        c = a["default"];
      }, function(a) {
        e = a["default"];
      }, function(a) {
        g = a["default"];
      }, function(b) {
        a({presetStage3: b["default"]});
      }, function(b) {
        a({presetStage2: b["default"]});
      }, function(a) {
        i = a["default"];
      }, function(a) {
        j = a["default"];
      }, function(a) {
        k = a["default"];
      }, function(a) {
        l = a["default"];
      }, function(a) {
        m = a["default"];
      }, function(a) {
        n = a["default"];
      }, function(a) {
        o = a["default"];
      }, function(a) {
        p = a["default"];
      }, function(a) {
        q = a["default"];
      }, function(a) {
        r = a["default"];
      }, function(a) {
        s = a["default"];
      }, function(a) {
        t = a["default"];
      }, function(a) {
        u = a["default"];
      }, function(a) {
        v = a["default"];
      }, function(a) {
        w = a["default"];
      }, function(a) {
        x = a["default"];
      }, function(a) {
        y = a["default"];
      }, function(a) {
        z = a["default"];
      }],
      execute: function() {
        a("babel", b), d = {plugins: [c]}, a("modulesRegister", d), f = {plugins: [e]}, a("externalHelpers", f), h = {plugins: [[g, {polyfill: !1}]]}, a("runtimeTransform", h), A = [i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y], B = [z, {
          async: !1,
          asyncGenerators: !1
        }], C = {plugins: $traceurRuntime.spread(A, [B])}, a("presetES2015", C), D = {plugins: $traceurRuntime.spread(A, [c, B])}, a("presetES2015Register", D);
      }
    };
  });
})(function(a) {
  define("npm:systemjs-plugin-babel@0.0.8/systemjs-babel-browser.js", [], a);
});

})();
System.registerDynamic("npm:systemjs-plugin-babel@0.0.8.json", [], false, function() {
  return {
    "main": "plugin-babel.js",
    "meta": {
      "./plugin-babel.js": {
        "format": "cjs"
      }
    },
    "map": {
      "systemjs-babel-build": {
        "browser": "./systemjs-babel-browser.js"
      }
    }
  };
});

System.registerDynamic("npm:systemjs-plugin-babel@0.0.8/plugin-babel.js", ["systemjs-babel-build"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var babel = $__require('systemjs-babel-build').babel;
  var es2015 = $__require('systemjs-babel-build').presetES2015;
  var es2015Register = $__require('systemjs-babel-build').presetES2015Register;
  var modulesRegister = $__require('systemjs-babel-build').modulesRegister;
  var stage3 = $__require('systemjs-babel-build').presetStage3;
  var stage2 = $__require('systemjs-babel-build').presetStage2;
  var externalHelpers = $__require('systemjs-babel-build').externalHelpers;
  var runtimeTransform = $__require('systemjs-babel-build').runtimeTransform;
  var babelRuntimePath;
  var modularHelpersPath = System.decanonicalize('./babel-helpers/', module.id);
  var externalHelpersPath = System.decanonicalize('./babel-helpers.js', module.id);
  var regeneratorRuntimePath = System.decanonicalize('./regenerator-runtime.js', module.id);
  if (modularHelpersPath.substr(modularHelpersPath.length - 3, 3) == '.js')
    modularHelpersPath = modularHelpersPath.substr(0, modularHelpersPath.length - 3);
  if (System.getCanonicalName) {
    modularHelpersPath = System.getCanonicalName(modularHelpersPath);
    externalHelpersPath = System.getCanonicalName(externalHelpersPath);
    regeneratorRuntimePath = System.getCanonicalName(regeneratorRuntimePath);
  }
  SystemJS._loader.loadedTranspilerRuntime = true;
  function prepend(a, b) {
    for (var p in b)
      if (!(p in a))
        a[p] = b[p];
    return a;
  }
  var defaultBabelOptions = {
    modularRuntime: true,
    sourceMaps: true,
    es2015: true,
    stage3: true,
    stage2: true
  };
  exports.translate = function(load) {
    if (load.metadata.format == 'global' || load.metadata.format == 'amd' || load.metadata.format == 'json')
      throw new TypeError('plugin-babel cannot transpile ' + load.metadata.format + ' modules. Ensure "' + load.name + '" is configured not to use this loader.');
    var loader = this;
    var pluginLoader = loader.pluginLoader || loader;
    var babelOptions = {};
    if (load.metadata.babelOptions)
      prepend(babelOptions, load.metadata.babelOptions);
    if (loader.babelOptions)
      prepend(babelOptions, loader.babelOptions);
    prepend(babelOptions, defaultBabelOptions);
    var pluginAndPresetModuleLoads = [];
    if (babelOptions.presets)
      babelOptions.presets.forEach(function(preset) {
        if (typeof preset == 'string')
          pluginAndPresetModuleLoads.push(pluginLoader['import'](preset, module.id));
      });
    if (babelOptions.plugins)
      babelOptions.plugins.forEach(function(plugin) {
        if (typeof plugin == 'string')
          pluginAndPresetModuleLoads.push(pluginLoader['import'](plugin, module.id));
        else if (plugin instanceof Array && typeof plugin[0] == 'string')
          pluginAndPresetModuleLoads.push(pluginLoader['import'](plugin[0], module.id));
      });
    return Promise.all(pluginAndPresetModuleLoads).then(function(pluginAndPresetModules) {
      var curPluginOrPresetModule = 0;
      var presets = [];
      var plugins = [];
      if (babelOptions.stage3)
        presets.push(stage3);
      if (babelOptions.stage2)
        presets.push(stage2);
      if (babelOptions.modularRuntime) {
        if (load.metadata.format == 'cjs')
          throw new TypeError('plugin-babel does not support modular runtime for CJS module transpilations. Set babelOptions.modularRuntime: false if needed.');
        presets.push(runtimeTransform);
      } else {
        if (load.metadata.format == 'cjs')
          load.source = 'var babelHelpers = require("' + externalHelpersPath + '");' + load.source;
        else
          load.source = 'import babelHelpers from "' + externalHelpersPath + '";' + load.source;
        presets.push(externalHelpers);
      }
      if (babelOptions.es2015)
        presets.push((loader.builder || load.metadata.format == 'cjs') ? es2015 : es2015Register);
      else if (!(loader.builder || load.metadata.format == 'cjs'))
        presets.push(modulesRegister);
      if (babelOptions.presets)
        babelOptions.presets.forEach(function(preset) {
          if (typeof preset == 'string')
            presets.push(pluginAndPresetModules[curPluginOrPresetModule++]);
          else
            presets.push(preset);
        });
      if (babelOptions.plugins)
        babelOptions.plugins.forEach(function(plugin) {
          if (typeof plugin == 'string')
            plugins.push(pluginAndPresetModules[curPluginOrPresetModule++]);
          else if (plugin instanceof Array && typeof plugin[0] == 'string')
            plugins.push([pluginAndPresetModules[curPluginOrPresetModule++], plugin[1]]);
          else
            plugins.push(plugin);
        });
      var output = babel.transform(load.source, {
        babelrc: false,
        plugins: plugins,
        presets: presets,
        filename: load.address,
        sourceMaps: babelOptions.sourceMaps,
        inputSourceMap: load.metadata.sourceMap,
        code: true,
        ast: true,
        resolveModuleSource: function(m) {
          if (m.substr(0, 22) == 'babel-runtime/helpers/') {
            m = modularHelpersPath + m.substr(22) + '.js';
          } else if (m == 'babel-runtime/regenerator') {
            m = regeneratorRuntimePath;
          } else if (m.substr(0, 14) == 'babel-runtime/') {
            if (!babelRuntimePath) {
              babelRuntimePath = System.decanonicalize('babel-runtime/', module.id);
              if (babelRuntimePath.substr(babelRuntimePath.length - 3, 3) == '.js')
                babelRuntimePath = babelRuntimePath.substr(0, babelRuntimePath.length - 3);
              if (loader.getCanonicalName)
                babelRuntimePath = loader.getCanonicalName(babelRuntimePath);
              if (babelRuntimePath == 'babel-runtime/')
                throw new Error('The babel-runtime module must be mapped to support modular helpers and builtins. If using jspm run jspm install npm:babel-runtime.');
            }
            m = babelRuntimePath + m.substr(14) + '.js';
          }
          return m;
        }
      });
      if (!babelOptions.modularRuntime)
        load.metadata.deps.push(externalHelpersPath);
      if (!load.metadata.format || load.metadata.format == 'detect')
        load.metadata.format = loader.builder ? 'esm' : 'register';
      load.metadata.sourceMap = output.map;
      return output.code;
    });
  };
  return module.exports;
});

System.registerDynamic("npm:babel-types@6.9.1/lib/retrievers.js", ["babel-runtime/core-js/object/create", "./index"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  var _create = $__require('babel-runtime/core-js/object/create');
  var _create2 = _interopRequireDefault(_create);
  exports.getBindingIdentifiers = getBindingIdentifiers;
  exports.getOuterBindingIdentifiers = getOuterBindingIdentifiers;
  var _index = $__require('./index');
  var t = _interopRequireWildcard(_index);
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj.default = obj;
      return newObj;
    }
  }
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function getBindingIdentifiers(node, duplicates, outerOnly) {
    var search = [].concat(node);
    var ids = (0, _create2.default)(null);
    while (search.length) {
      var id = search.shift();
      if (!id)
        continue;
      var keys = t.getBindingIdentifiers.keys[id.type];
      if (t.isIdentifier(id)) {
        if (duplicates) {
          var _ids = ids[id.name] = ids[id.name] || [];
          _ids.push(id);
        } else {
          ids[id.name] = id;
        }
        continue;
      }
      if (t.isExportDeclaration(id)) {
        if (t.isDeclaration(node.declaration)) {
          search.push(node.declaration);
        }
        continue;
      }
      if (outerOnly) {
        if (t.isFunctionDeclaration(id)) {
          search.push(id.id);
          continue;
        }
        if (t.isFunctionExpression(id)) {
          continue;
        }
      }
      if (keys) {
        for (var i = 0; i < keys.length; i++) {
          var key = keys[i];
          if (id[key]) {
            search = search.concat(id[key]);
          }
        }
      }
    }
    return ids;
  }
  getBindingIdentifiers.keys = {
    DeclareClass: ["id"],
    DeclareFunction: ["id"],
    DeclareModule: ["id"],
    DeclareVariable: ["id"],
    InterfaceDeclaration: ["id"],
    TypeAlias: ["id"],
    CatchClause: ["param"],
    LabeledStatement: ["label"],
    UnaryExpression: ["argument"],
    AssignmentExpression: ["left"],
    ImportSpecifier: ["local"],
    ImportNamespaceSpecifier: ["local"],
    ImportDefaultSpecifier: ["local"],
    ImportDeclaration: ["specifiers"],
    ExportSpecifier: ["exported"],
    ExportNamespaceSpecifier: ["exported"],
    ExportDefaultSpecifier: ["exported"],
    FunctionDeclaration: ["id", "params"],
    FunctionExpression: ["id", "params"],
    ClassDeclaration: ["id"],
    ClassExpression: ["id"],
    RestElement: ["argument"],
    UpdateExpression: ["argument"],
    RestProperty: ["argument"],
    ObjectProperty: ["value"],
    AssignmentPattern: ["left"],
    ArrayPattern: ["elements"],
    ObjectPattern: ["properties"],
    VariableDeclaration: ["declarations"],
    VariableDeclarator: ["id"]
  };
  function getOuterBindingIdentifiers(node, duplicates) {
    return getBindingIdentifiers(node, duplicates, true);
  }
  return module.exports;
});

System.registerDynamic("npm:babel-types@6.9.1/lib/validators.js", ["babel-runtime/core-js/get-iterator", "./retrievers", "esutils", "./index", "./constants"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  var _getIterator2 = $__require('babel-runtime/core-js/get-iterator');
  var _getIterator3 = _interopRequireDefault(_getIterator2);
  exports.isBinding = isBinding;
  exports.isReferenced = isReferenced;
  exports.isValidIdentifier = isValidIdentifier;
  exports.isLet = isLet;
  exports.isBlockScoped = isBlockScoped;
  exports.isVar = isVar;
  exports.isSpecifierDefault = isSpecifierDefault;
  exports.isScope = isScope;
  exports.isImmutable = isImmutable;
  var _retrievers = $__require('./retrievers');
  var _esutils = $__require('esutils');
  var _esutils2 = _interopRequireDefault(_esutils);
  var _index = $__require('./index');
  var t = _interopRequireWildcard(_index);
  var _constants = $__require('./constants');
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj.default = obj;
      return newObj;
    }
  }
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function isBinding(node, parent) {
    var keys = _retrievers.getBindingIdentifiers.keys[parent.type];
    if (keys) {
      for (var i = 0; i < keys.length; i++) {
        var key = keys[i];
        var val = parent[key];
        if (Array.isArray(val)) {
          if (val.indexOf(node) >= 0)
            return true;
        } else {
          if (val === node)
            return true;
        }
      }
    }
    return false;
  }
  function isReferenced(node, parent) {
    switch (parent.type) {
      case "BindExpression":
        return parent.object === node || parent.callee === node;
      case "MemberExpression":
      case "JSXMemberExpression":
        if (parent.property === node && parent.computed) {
          return true;
        } else if (parent.object === node) {
          return true;
        } else {
          return false;
        }
      case "MetaProperty":
        return false;
      case "ObjectProperty":
        if (parent.key === node) {
          return parent.computed;
        }
      case "VariableDeclarator":
        return parent.id !== node;
      case "ArrowFunctionExpression":
      case "FunctionDeclaration":
      case "FunctionExpression":
        for (var _iterator = parent.params,
            _isArray = Array.isArray(_iterator),
            _i = 0,
            _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator); ; ) {
          var _ref;
          if (_isArray) {
            if (_i >= _iterator.length)
              break;
            _ref = _iterator[_i++];
          } else {
            _i = _iterator.next();
            if (_i.done)
              break;
            _ref = _i.value;
          }
          var param = _ref;
          if (param === node)
            return false;
        }
        return parent.id !== node;
      case "ExportSpecifier":
        if (parent.source) {
          return false;
        } else {
          return parent.local === node;
        }
      case "ExportNamespaceSpecifier":
      case "ExportDefaultSpecifier":
        return false;
      case "JSXAttribute":
        return parent.name !== node;
      case "ClassProperty":
        return parent.value === node;
      case "ImportDefaultSpecifier":
      case "ImportNamespaceSpecifier":
      case "ImportSpecifier":
        return false;
      case "ClassDeclaration":
      case "ClassExpression":
        return parent.id !== node;
      case "ClassMethod":
      case "ObjectMethod":
        return parent.key === node && parent.computed;
      case "LabeledStatement":
        return false;
      case "CatchClause":
        return parent.param !== node;
      case "RestElement":
        return false;
      case "AssignmentExpression":
        return parent.right === node;
      case "AssignmentPattern":
        return parent.right === node;
      case "ObjectPattern":
      case "ArrayPattern":
        return false;
    }
    return true;
  }
  function isValidIdentifier(name) {
    if (typeof name !== "string" || _esutils2.default.keyword.isReservedWordES6(name, true)) {
      return false;
    } else {
      return _esutils2.default.keyword.isIdentifierNameES6(name);
    }
  }
  function isLet(node) {
    return t.isVariableDeclaration(node) && (node.kind !== "var" || node[_constants.BLOCK_SCOPED_SYMBOL]);
  }
  function isBlockScoped(node) {
    return t.isFunctionDeclaration(node) || t.isClassDeclaration(node) || t.isLet(node);
  }
  function isVar(node) {
    return t.isVariableDeclaration(node, {kind: "var"}) && !node[_constants.BLOCK_SCOPED_SYMBOL];
  }
  function isSpecifierDefault(specifier) {
    return t.isImportDefaultSpecifier(specifier) || t.isIdentifier(specifier.imported || specifier.exported, {name: "default"});
  }
  function isScope(node, parent) {
    if (t.isBlockStatement(node) && t.isFunction(parent, {body: node})) {
      return false;
    }
    return t.isScopable(node);
  }
  function isImmutable(node) {
    if (t.isType(node.type, "Immutable"))
      return true;
    if (t.isIdentifier(node)) {
      if (node.name === "undefined") {
        return true;
      } else {
        return false;
      }
    }
    return false;
  }
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/es6.number.max-safe-integer.js", ["./_export", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var $export = $__require('./_export');
  $export($export.S, 'Number', {MAX_SAFE_INTEGER: 0x1fffffffffffff});
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/fn/number/max-safe-integer.js", ["../../modules/es6.number.max-safe-integer", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  $__require('../../modules/es6.number.max-safe-integer');
  module.exports = 0x1fffffffffffff;
  return module.exports;
});

System.registerDynamic("npm:babel-runtime@6.9.2/core-js/number/max-safe-integer.js", ["core-js/library/fn/number/max-safe-integer"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  module.exports = {
    "default": $__require('core-js/library/fn/number/max-safe-integer'),
    __esModule: true
  };
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/isPlainObject.js", ["./_getPrototype", "./_isHostObject", "./isObjectLike"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var getPrototype = $__require('./_getPrototype'),
      isHostObject = $__require('./_isHostObject'),
      isObjectLike = $__require('./isObjectLike');
  var objectTag = '[object Object]';
  var objectProto = Object.prototype;
  var funcToString = Function.prototype.toString;
  var hasOwnProperty = objectProto.hasOwnProperty;
  var objectCtorString = funcToString.call(Object);
  var objectToString = objectProto.toString;
  function isPlainObject(value) {
    if (!isObjectLike(value) || objectToString.call(value) != objectTag || isHostObject(value)) {
      return false;
    }
    var proto = getPrototype(value);
    if (proto === null) {
      return true;
    }
    var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
    return (typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);
  }
  module.exports = isPlainObject;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/isNumber.js", ["./isObjectLike"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var isObjectLike = $__require('./isObjectLike');
  var numberTag = '[object Number]';
  var objectProto = Object.prototype;
  var objectToString = objectProto.toString;
  function isNumber(value) {
    return typeof value == 'number' || (isObjectLike(value) && objectToString.call(value) == numberTag);
  }
  module.exports = isNumber;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/isRegExp.js", ["./isObject"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var isObject = $__require('./isObject');
  var regexpTag = '[object RegExp]';
  var objectProto = Object.prototype;
  var objectToString = objectProto.toString;
  function isRegExp(value) {
    return isObject(value) && objectToString.call(value) == regexpTag;
  }
  module.exports = isRegExp;
  return module.exports;
});

System.registerDynamic("npm:babel-types@6.9.1/lib/converters.js", ["babel-runtime/core-js/number/max-safe-integer", "babel-runtime/core-js/json/stringify", "babel-runtime/core-js/get-iterator", "lodash/isPlainObject", "lodash/isNumber", "lodash/isRegExp", "lodash/isString", "./index", "babel-traverse"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  var _maxSafeInteger = $__require('babel-runtime/core-js/number/max-safe-integer');
  var _maxSafeInteger2 = _interopRequireDefault(_maxSafeInteger);
  var _stringify = $__require('babel-runtime/core-js/json/stringify');
  var _stringify2 = _interopRequireDefault(_stringify);
  var _getIterator2 = $__require('babel-runtime/core-js/get-iterator');
  var _getIterator3 = _interopRequireDefault(_getIterator2);
  exports.toComputedKey = toComputedKey;
  exports.toSequenceExpression = toSequenceExpression;
  exports.toKeyAlias = toKeyAlias;
  exports.toIdentifier = toIdentifier;
  exports.toBindingIdentifierName = toBindingIdentifierName;
  exports.toStatement = toStatement;
  exports.toExpression = toExpression;
  exports.toBlock = toBlock;
  exports.valueToNode = valueToNode;
  var _isPlainObject = $__require('lodash/isPlainObject');
  var _isPlainObject2 = _interopRequireDefault(_isPlainObject);
  var _isNumber = $__require('lodash/isNumber');
  var _isNumber2 = _interopRequireDefault(_isNumber);
  var _isRegExp = $__require('lodash/isRegExp');
  var _isRegExp2 = _interopRequireDefault(_isRegExp);
  var _isString = $__require('lodash/isString');
  var _isString2 = _interopRequireDefault(_isString);
  var _index = $__require('./index');
  var t = _interopRequireWildcard(_index);
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj.default = obj;
      return newObj;
    }
  }
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function toComputedKey(node) {
    var key = arguments.length <= 1 || arguments[1] === undefined ? node.key || node.property : arguments[1];
    if (!node.computed) {
      if (t.isIdentifier(key))
        key = t.stringLiteral(key.name);
    }
    return key;
  }
  function toSequenceExpression(nodes, scope) {
    if (!nodes || !nodes.length)
      return;
    var declars = [];
    var bailed = false;
    var result = convert(nodes);
    if (bailed)
      return;
    for (var i = 0; i < declars.length; i++) {
      scope.push(declars[i]);
    }
    return result;
    function convert(nodes) {
      var ensureLastUndefined = false;
      var exprs = [];
      for (var _iterator = nodes,
          _isArray = Array.isArray(_iterator),
          _i = 0,
          _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator); ; ) {
        var _ref;
        if (_isArray) {
          if (_i >= _iterator.length)
            break;
          _ref = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done)
            break;
          _ref = _i.value;
        }
        var node = _ref;
        if (t.isExpression(node)) {
          exprs.push(node);
        } else if (t.isExpressionStatement(node)) {
          exprs.push(node.expression);
        } else if (t.isVariableDeclaration(node)) {
          if (node.kind !== "var")
            return bailed = true;
          for (var _iterator2 = node.declarations,
              _isArray2 = Array.isArray(_iterator2),
              _i2 = 0,
              _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2); ; ) {
            var _ref2;
            if (_isArray2) {
              if (_i2 >= _iterator2.length)
                break;
              _ref2 = _iterator2[_i2++];
            } else {
              _i2 = _iterator2.next();
              if (_i2.done)
                break;
              _ref2 = _i2.value;
            }
            var declar = _ref2;
            var bindings = t.getBindingIdentifiers(declar);
            for (var key in bindings) {
              declars.push({
                kind: node.kind,
                id: bindings[key]
              });
            }
            if (declar.init) {
              exprs.push(t.assignmentExpression("=", declar.id, declar.init));
            }
          }
          ensureLastUndefined = true;
          continue;
        } else if (t.isIfStatement(node)) {
          var consequent = node.consequent ? convert([node.consequent]) : scope.buildUndefinedNode();
          var alternate = node.alternate ? convert([node.alternate]) : scope.buildUndefinedNode();
          if (!consequent || !alternate)
            return bailed = true;
          exprs.push(t.conditionalExpression(node.test, consequent, alternate));
        } else if (t.isBlockStatement(node)) {
          exprs.push(convert(node.body));
        } else if (t.isEmptyStatement(node)) {
          ensureLastUndefined = true;
          continue;
        } else {
          return bailed = true;
        }
        ensureLastUndefined = false;
      }
      if (ensureLastUndefined || exprs.length === 0) {
        exprs.push(scope.buildUndefinedNode());
      }
      if (exprs.length === 1) {
        return exprs[0];
      } else {
        return t.sequenceExpression(exprs);
      }
    }
  }
  var traverse = void 0;
  function toKeyAlias(node) {
    var key = arguments.length <= 1 || arguments[1] === undefined ? node.key : arguments[1];
    if (!traverse)
      traverse = $__require('babel-traverse').default;
    var alias = void 0;
    if (node.kind === "method") {
      return toKeyAlias.increment() + "";
    } else if (t.isIdentifier(key)) {
      alias = key.name;
    } else if (t.isStringLiteral(key)) {
      alias = (0, _stringify2.default)(key.value);
    } else {
      alias = (0, _stringify2.default)(traverse.removeProperties(t.cloneDeep(key)));
    }
    if (node.computed) {
      alias = "[" + alias + "]";
    }
    if (node.static) {
      alias = "static:" + alias;
    }
    return alias;
  }
  toKeyAlias.uid = 0;
  toKeyAlias.increment = function() {
    if (toKeyAlias.uid >= _maxSafeInteger2.default) {
      return toKeyAlias.uid = 0;
    } else {
      return toKeyAlias.uid++;
    }
  };
  function toIdentifier(name) {
    name = name + "";
    name = name.replace(/[^a-zA-Z0-9$_]/g, "-");
    name = name.replace(/^[-0-9]+/, "");
    name = name.replace(/[-\s]+(.)?/g, function(match, c) {
      return c ? c.toUpperCase() : "";
    });
    if (!t.isValidIdentifier(name)) {
      name = "_" + name;
    }
    return name || "_";
  }
  function toBindingIdentifierName(name) {
    name = toIdentifier(name);
    if (name === "eval" || name === "arguments")
      name = "_" + name;
    return name;
  }
  function toStatement(node, ignore) {
    if (t.isStatement(node)) {
      return node;
    }
    var mustHaveId = false;
    var newType = void 0;
    if (t.isClass(node)) {
      mustHaveId = true;
      newType = "ClassDeclaration";
    } else if (t.isFunction(node)) {
      mustHaveId = true;
      newType = "FunctionDeclaration";
    } else if (t.isAssignmentExpression(node)) {
      return t.expressionStatement(node);
    }
    if (mustHaveId && !node.id) {
      newType = false;
    }
    if (!newType) {
      if (ignore) {
        return false;
      } else {
        throw new Error("cannot turn " + node.type + " to a statement");
      }
    }
    node.type = newType;
    return node;
  }
  function toExpression(node) {
    if (t.isExpressionStatement(node)) {
      node = node.expression;
    }
    if (t.isClass(node)) {
      node.type = "ClassExpression";
    } else if (t.isFunction(node)) {
      node.type = "FunctionExpression";
    }
    if (t.isExpression(node)) {
      return node;
    } else {
      throw new Error("cannot turn " + node.type + " to an expression");
    }
  }
  function toBlock(node, parent) {
    if (t.isBlockStatement(node)) {
      return node;
    }
    if (t.isEmptyStatement(node)) {
      node = [];
    }
    if (!Array.isArray(node)) {
      if (!t.isStatement(node)) {
        if (t.isFunction(parent)) {
          node = t.returnStatement(node);
        } else {
          node = t.expressionStatement(node);
        }
      }
      node = [node];
    }
    return t.blockStatement(node);
  }
  function valueToNode(value) {
    if (value === undefined) {
      return t.identifier("undefined");
    }
    if (value === true || value === false) {
      return t.booleanLiteral(value);
    }
    if (value === null) {
      return t.nullLiteral();
    }
    if ((0, _isString2.default)(value)) {
      return t.stringLiteral(value);
    }
    if ((0, _isNumber2.default)(value)) {
      return t.numericLiteral(value);
    }
    if ((0, _isRegExp2.default)(value)) {
      var pattern = value.source;
      var flags = value.toString().match(/\/([a-z]+|)$/)[1];
      return t.regExpLiteral(pattern, flags);
    }
    if (Array.isArray(value)) {
      return t.arrayExpression(value.map(t.valueToNode));
    }
    if ((0, _isPlainObject2.default)(value)) {
      var props = [];
      for (var key in value) {
        var nodeKey = void 0;
        if (t.isValidIdentifier(key)) {
          nodeKey = t.identifier(key);
        } else {
          nodeKey = t.stringLiteral(key);
        }
        props.push(t.objectProperty(nodeKey, t.valueToNode(value[key])));
      }
      return t.objectExpression(props);
    }
    throw new Error("don't know how to turn this value into a node");
  }
  return module.exports;
});

System.registerDynamic("npm:babel-types@6.9.1/lib/flow.js", ["./index"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  exports.createUnionTypeAnnotation = createUnionTypeAnnotation;
  exports.removeTypeDuplicates = removeTypeDuplicates;
  exports.createTypeAnnotationBasedOnTypeof = createTypeAnnotationBasedOnTypeof;
  var _index = $__require('./index');
  var t = _interopRequireWildcard(_index);
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj.default = obj;
      return newObj;
    }
  }
  function createUnionTypeAnnotation(types) {
    var flattened = removeTypeDuplicates(types);
    if (flattened.length === 1) {
      return flattened[0];
    } else {
      return t.unionTypeAnnotation(flattened);
    }
  }
  function removeTypeDuplicates(nodes) {
    var generics = {};
    var bases = {};
    var typeGroups = [];
    var types = [];
    for (var i = 0; i < nodes.length; i++) {
      var node = nodes[i];
      if (!node)
        continue;
      if (types.indexOf(node) >= 0) {
        continue;
      }
      if (t.isAnyTypeAnnotation(node)) {
        return [node];
      }
      if (t.isFlowBaseAnnotation(node)) {
        bases[node.type] = node;
        continue;
      }
      if (t.isUnionTypeAnnotation(node)) {
        if (typeGroups.indexOf(node.types) < 0) {
          nodes = nodes.concat(node.types);
          typeGroups.push(node.types);
        }
        continue;
      }
      if (t.isGenericTypeAnnotation(node)) {
        var name = node.id.name;
        if (generics[name]) {
          var existing = generics[name];
          if (existing.typeParameters) {
            if (node.typeParameters) {
              existing.typeParameters.params = removeTypeDuplicates(existing.typeParameters.params.concat(node.typeParameters.params));
            }
          } else {
            existing = node.typeParameters;
          }
        } else {
          generics[name] = node;
        }
        continue;
      }
      types.push(node);
    }
    for (var type in bases) {
      types.push(bases[type]);
    }
    for (var _name in generics) {
      types.push(generics[_name]);
    }
    return types;
  }
  function createTypeAnnotationBasedOnTypeof(type) {
    if (type === "string") {
      return t.stringTypeAnnotation();
    } else if (type === "number") {
      return t.numberTypeAnnotation();
    } else if (type === "undefined") {
      return t.voidTypeAnnotation();
    } else if (type === "boolean") {
      return t.booleanTypeAnnotation();
    } else if (type === "function") {
      return t.genericTypeAnnotation(t.identifier("Function"));
    } else if (type === "object") {
      return t.genericTypeAnnotation(t.identifier("Object"));
    } else if (type === "symbol") {
      return t.genericTypeAnnotation(t.identifier("Symbol"));
    } else {
      throw new Error("Invalid typeof value");
    }
  }
  return module.exports;
});

System.registerDynamic("npm:to-fast-properties@1.0.2.json", [], false, function() {
  return {
    "main": "index",
    "format": "cjs",
    "meta": {
      "*.json": {
        "format": "json"
      }
    }
  };
});

System.registerDynamic("npm:to-fast-properties@1.0.2/index.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  module.exports = function toFastProperties(obj) {
    function f() {}
    f.prototype = obj;
    new f();
    return;
    eval(obj);
  };
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/compact.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  function compact(array) {
    var index = -1,
        length = array ? array.length : 0,
        resIndex = 0,
        result = [];
    while (++index < length) {
      var value = array[index];
      if (value) {
        result[resIndex++] = value;
      }
    }
    return result;
  }
  module.exports = compact;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_createBaseFor.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  function createBaseFor(fromRight) {
    return function(object, iteratee, keysFunc) {
      var index = -1,
          iterable = Object(object),
          props = keysFunc(object),
          length = props.length;
      while (length--) {
        var key = props[fromRight ? length : ++index];
        if (iteratee(iterable[key], key, iterable) === false) {
          break;
        }
      }
      return object;
    };
  }
  module.exports = createBaseFor;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_baseFor.js", ["./_createBaseFor"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var createBaseFor = $__require('./_createBaseFor');
  var baseFor = createBaseFor();
  module.exports = baseFor;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_baseForOwn.js", ["./_baseFor", "./keys"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var baseFor = $__require('./_baseFor'),
      keys = $__require('./keys');
  function baseForOwn(object, iteratee) {
    return object && baseFor(object, iteratee, keys);
  }
  module.exports = baseForOwn;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_createBaseEach.js", ["./isArrayLike"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var isArrayLike = $__require('./isArrayLike');
  function createBaseEach(eachFunc, fromRight) {
    return function(collection, iteratee) {
      if (collection == null) {
        return collection;
      }
      if (!isArrayLike(collection)) {
        return eachFunc(collection, iteratee);
      }
      var length = collection.length,
          index = fromRight ? length : -1,
          iterable = Object(collection);
      while ((fromRight ? index-- : ++index < length)) {
        if (iteratee(iterable[index], index, iterable) === false) {
          break;
        }
      }
      return collection;
    };
  }
  module.exports = createBaseEach;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_baseEach.js", ["./_baseForOwn", "./_createBaseEach"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var baseForOwn = $__require('./_baseForOwn'),
      createBaseEach = $__require('./_createBaseEach');
  var baseEach = createBaseEach(baseForOwn);
  module.exports = baseEach;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_baseIsMatch.js", ["./_Stack", "./_baseIsEqual"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var Stack = $__require('./_Stack'),
      baseIsEqual = $__require('./_baseIsEqual');
  var UNORDERED_COMPARE_FLAG = 1,
      PARTIAL_COMPARE_FLAG = 2;
  function baseIsMatch(object, source, matchData, customizer) {
    var index = matchData.length,
        length = index,
        noCustomizer = !customizer;
    if (object == null) {
      return !length;
    }
    object = Object(object);
    while (index--) {
      var data = matchData[index];
      if ((noCustomizer && data[2]) ? data[1] !== object[data[0]] : !(data[0] in object)) {
        return false;
      }
    }
    while (++index < length) {
      data = matchData[index];
      var key = data[0],
          objValue = object[key],
          srcValue = data[1];
      if (noCustomizer && data[2]) {
        if (objValue === undefined && !(key in object)) {
          return false;
        }
      } else {
        var stack = new Stack;
        if (customizer) {
          var result = customizer(objValue, srcValue, key, object, source, stack);
        }
        if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack) : result)) {
          return false;
        }
      }
    }
    return true;
  }
  module.exports = baseIsMatch;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_getMatchData.js", ["./_isStrictComparable", "./keys"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var isStrictComparable = $__require('./_isStrictComparable'),
      keys = $__require('./keys');
  function getMatchData(object) {
    var result = keys(object),
        length = result.length;
    while (length--) {
      var key = result[length],
          value = object[key];
      result[length] = [key, value, isStrictComparable(value)];
    }
    return result;
  }
  module.exports = getMatchData;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_baseMatches.js", ["./_baseIsMatch", "./_getMatchData", "./_matchesStrictComparable"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var baseIsMatch = $__require('./_baseIsMatch'),
      getMatchData = $__require('./_getMatchData'),
      matchesStrictComparable = $__require('./_matchesStrictComparable');
  function baseMatches(source) {
    var matchData = getMatchData(source);
    if (matchData.length == 1 && matchData[0][2]) {
      return matchesStrictComparable(matchData[0][0], matchData[0][1]);
    }
    return function(object) {
      return object === source || baseIsMatch(object, source, matchData);
    };
  }
  module.exports = baseMatches;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_arraySome.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  function arraySome(array, predicate) {
    var index = -1,
        length = array ? array.length : 0;
    while (++index < length) {
      if (predicate(array[index], index, array)) {
        return true;
      }
    }
    return false;
  }
  module.exports = arraySome;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_equalArrays.js", ["./_SetCache", "./_arraySome"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var SetCache = $__require('./_SetCache'),
      arraySome = $__require('./_arraySome');
  var UNORDERED_COMPARE_FLAG = 1,
      PARTIAL_COMPARE_FLAG = 2;
  function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {
    var isPartial = bitmask & PARTIAL_COMPARE_FLAG,
        arrLength = array.length,
        othLength = other.length;
    if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
      return false;
    }
    var stacked = stack.get(array);
    if (stacked) {
      return stacked == other;
    }
    var index = -1,
        result = true,
        seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;
    stack.set(array, other);
    while (++index < arrLength) {
      var arrValue = array[index],
          othValue = other[index];
      if (customizer) {
        var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
      }
      if (compared !== undefined) {
        if (compared) {
          continue;
        }
        result = false;
        break;
      }
      if (seen) {
        if (!arraySome(other, function(othValue, othIndex) {
          if (!seen.has(othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {
            return seen.add(othIndex);
          }
        })) {
          result = false;
          break;
        }
      } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {
        result = false;
        break;
      }
    }
    stack['delete'](array);
    return result;
  }
  module.exports = equalArrays;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_equalByTag.js", ["./_Symbol", "./_Uint8Array", "./_equalArrays", "./_mapToArray", "./_setToArray"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var Symbol = $__require('./_Symbol'),
      Uint8Array = $__require('./_Uint8Array'),
      equalArrays = $__require('./_equalArrays'),
      mapToArray = $__require('./_mapToArray'),
      setToArray = $__require('./_setToArray');
  var UNORDERED_COMPARE_FLAG = 1,
      PARTIAL_COMPARE_FLAG = 2;
  var boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      errorTag = '[object Error]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]';
  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]';
  var symbolProto = Symbol ? Symbol.prototype : undefined,
      symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;
  function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {
    switch (tag) {
      case dataViewTag:
        if ((object.byteLength != other.byteLength) || (object.byteOffset != other.byteOffset)) {
          return false;
        }
        object = object.buffer;
        other = other.buffer;
      case arrayBufferTag:
        if ((object.byteLength != other.byteLength) || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
          return false;
        }
        return true;
      case boolTag:
      case dateTag:
        return +object == +other;
      case errorTag:
        return object.name == other.name && object.message == other.message;
      case numberTag:
        return (object != +object) ? other != +other : object == +other;
      case regexpTag:
      case stringTag:
        return object == (other + '');
      case mapTag:
        var convert = mapToArray;
      case setTag:
        var isPartial = bitmask & PARTIAL_COMPARE_FLAG;
        convert || (convert = setToArray);
        if (object.size != other.size && !isPartial) {
          return false;
        }
        var stacked = stack.get(object);
        if (stacked) {
          return stacked == other;
        }
        bitmask |= UNORDERED_COMPARE_FLAG;
        stack.set(object, other);
        return equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);
      case symbolTag:
        if (symbolValueOf) {
          return symbolValueOf.call(object) == symbolValueOf.call(other);
        }
    }
    return false;
  }
  module.exports = equalByTag;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_equalObjects.js", ["./_baseHas", "./keys"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var baseHas = $__require('./_baseHas'),
      keys = $__require('./keys');
  var PARTIAL_COMPARE_FLAG = 2;
  function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {
    var isPartial = bitmask & PARTIAL_COMPARE_FLAG,
        objProps = keys(object),
        objLength = objProps.length,
        othProps = keys(other),
        othLength = othProps.length;
    if (objLength != othLength && !isPartial) {
      return false;
    }
    var index = objLength;
    while (index--) {
      var key = objProps[index];
      if (!(isPartial ? key in other : baseHas(other, key))) {
        return false;
      }
    }
    var stacked = stack.get(object);
    if (stacked) {
      return stacked == other;
    }
    var result = true;
    stack.set(object, other);
    var skipCtor = isPartial;
    while (++index < objLength) {
      key = objProps[index];
      var objValue = object[key],
          othValue = other[key];
      if (customizer) {
        var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
      }
      if (!(compared === undefined ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack)) : compared)) {
        result = false;
        break;
      }
      skipCtor || (skipCtor = key == 'constructor');
    }
    if (result && !skipCtor) {
      var objCtor = object.constructor,
          othCtor = other.constructor;
      if (objCtor != othCtor && ('constructor' in object && 'constructor' in other) && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {
        result = false;
      }
    }
    stack['delete'](object);
    return result;
  }
  module.exports = equalObjects;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/isTypedArray.js", ["./isLength", "./isObjectLike"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var isLength = $__require('./isLength'),
      isObjectLike = $__require('./isObjectLike');
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      objectTag = '[object Object]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      weakMapTag = '[object WeakMap]';
  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
  var objectProto = Object.prototype;
  var objectToString = objectProto.toString;
  function isTypedArray(value) {
    return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objectToString.call(value)];
  }
  module.exports = isTypedArray;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_baseIsEqualDeep.js", ["./_Stack", "./_equalArrays", "./_equalByTag", "./_equalObjects", "./_getTag", "./isArray", "./_isHostObject", "./isTypedArray"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var Stack = $__require('./_Stack'),
      equalArrays = $__require('./_equalArrays'),
      equalByTag = $__require('./_equalByTag'),
      equalObjects = $__require('./_equalObjects'),
      getTag = $__require('./_getTag'),
      isArray = $__require('./isArray'),
      isHostObject = $__require('./_isHostObject'),
      isTypedArray = $__require('./isTypedArray');
  var PARTIAL_COMPARE_FLAG = 2;
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      objectTag = '[object Object]';
  var objectProto = Object.prototype;
  var hasOwnProperty = objectProto.hasOwnProperty;
  function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {
    var objIsArr = isArray(object),
        othIsArr = isArray(other),
        objTag = arrayTag,
        othTag = arrayTag;
    if (!objIsArr) {
      objTag = getTag(object);
      objTag = objTag == argsTag ? objectTag : objTag;
    }
    if (!othIsArr) {
      othTag = getTag(other);
      othTag = othTag == argsTag ? objectTag : othTag;
    }
    var objIsObj = objTag == objectTag && !isHostObject(object),
        othIsObj = othTag == objectTag && !isHostObject(other),
        isSameTag = objTag == othTag;
    if (isSameTag && !objIsObj) {
      stack || (stack = new Stack);
      return (objIsArr || isTypedArray(object)) ? equalArrays(object, other, equalFunc, customizer, bitmask, stack) : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);
    }
    if (!(bitmask & PARTIAL_COMPARE_FLAG)) {
      var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
          othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');
      if (objIsWrapped || othIsWrapped) {
        var objUnwrapped = objIsWrapped ? object.value() : object,
            othUnwrapped = othIsWrapped ? other.value() : other;
        stack || (stack = new Stack);
        return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);
      }
    }
    if (!isSameTag) {
      return false;
    }
    stack || (stack = new Stack);
    return equalObjects(object, other, equalFunc, customizer, bitmask, stack);
  }
  module.exports = baseIsEqualDeep;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_baseIsEqual.js", ["./_baseIsEqualDeep", "./isObject", "./isObjectLike"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var baseIsEqualDeep = $__require('./_baseIsEqualDeep'),
      isObject = $__require('./isObject'),
      isObjectLike = $__require('./isObjectLike');
  function baseIsEqual(value, other, customizer, bitmask, stack) {
    if (value === other) {
      return true;
    }
    if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {
      return value !== value && other !== other;
    }
    return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);
  }
  module.exports = baseIsEqual;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/get.js", ["./_baseGet"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var baseGet = $__require('./_baseGet');
  function get(object, path, defaultValue) {
    var result = object == null ? undefined : baseGet(object, path);
    return result === undefined ? defaultValue : result;
  }
  module.exports = get;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_baseHasIn.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  function baseHasIn(object, key) {
    return object != null && key in Object(object);
  }
  module.exports = baseHasIn;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_hasPath.js", ["./_castPath", "./isArguments", "./isArray", "./_isIndex", "./_isKey", "./isLength", "./isString", "./_toKey"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var castPath = $__require('./_castPath'),
      isArguments = $__require('./isArguments'),
      isArray = $__require('./isArray'),
      isIndex = $__require('./_isIndex'),
      isKey = $__require('./_isKey'),
      isLength = $__require('./isLength'),
      isString = $__require('./isString'),
      toKey = $__require('./_toKey');
  function hasPath(object, path, hasFunc) {
    path = isKey(path, object) ? [path] : castPath(path);
    var result,
        index = -1,
        length = path.length;
    while (++index < length) {
      var key = toKey(path[index]);
      if (!(result = object != null && hasFunc(object, key))) {
        break;
      }
      object = object[key];
    }
    if (result) {
      return result;
    }
    var length = object ? object.length : 0;
    return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isString(object) || isArguments(object));
  }
  module.exports = hasPath;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/hasIn.js", ["./_baseHasIn", "./_hasPath"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var baseHasIn = $__require('./_baseHasIn'),
      hasPath = $__require('./_hasPath');
  function hasIn(object, path) {
    return object != null && hasPath(object, path, baseHasIn);
  }
  module.exports = hasIn;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_isStrictComparable.js", ["./isObject"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var isObject = $__require('./isObject');
  function isStrictComparable(value) {
    return value === value && !isObject(value);
  }
  module.exports = isStrictComparable;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_matchesStrictComparable.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  function matchesStrictComparable(key, srcValue) {
    return function(object) {
      if (object == null) {
        return false;
      }
      return object[key] === srcValue && (srcValue !== undefined || (key in Object(object)));
    };
  }
  module.exports = matchesStrictComparable;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_baseMatchesProperty.js", ["./_baseIsEqual", "./get", "./hasIn", "./_isKey", "./_isStrictComparable", "./_matchesStrictComparable", "./_toKey"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var baseIsEqual = $__require('./_baseIsEqual'),
      get = $__require('./get'),
      hasIn = $__require('./hasIn'),
      isKey = $__require('./_isKey'),
      isStrictComparable = $__require('./_isStrictComparable'),
      matchesStrictComparable = $__require('./_matchesStrictComparable'),
      toKey = $__require('./_toKey');
  var UNORDERED_COMPARE_FLAG = 1,
      PARTIAL_COMPARE_FLAG = 2;
  function baseMatchesProperty(path, srcValue) {
    if (isKey(path) && isStrictComparable(srcValue)) {
      return matchesStrictComparable(toKey(path), srcValue);
    }
    return function(object) {
      var objValue = get(object, path);
      return (objValue === undefined && objValue === srcValue) ? hasIn(object, path) : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);
    };
  }
  module.exports = baseMatchesProperty;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/identity.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  function identity(value) {
    return value;
  }
  module.exports = identity;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/memoize.js", ["./_MapCache"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var MapCache = $__require('./_MapCache');
  var FUNC_ERROR_TEXT = 'Expected a function';
  function memoize(func, resolver) {
    if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {
      throw new TypeError(FUNC_ERROR_TEXT);
    }
    var memoized = function() {
      var args = arguments,
          key = resolver ? resolver.apply(this, args) : args[0],
          cache = memoized.cache;
      if (cache.has(key)) {
        return cache.get(key);
      }
      var result = func.apply(this, args);
      memoized.cache = cache.set(key, result);
      return result;
    };
    memoized.cache = new (memoize.Cache || MapCache);
    return memoized;
  }
  memoize.Cache = MapCache;
  module.exports = memoize;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_stringToPath.js", ["./memoize", "./toString"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var memoize = $__require('./memoize'),
      toString = $__require('./toString');
  var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(\.|\[\])(?:\4|$))/g;
  var reEscapeChar = /\\(\\)?/g;
  var stringToPath = memoize(function(string) {
    var result = [];
    toString(string).replace(rePropName, function(match, number, quote, string) {
      result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
    });
    return result;
  });
  module.exports = stringToPath;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_castPath.js", ["./isArray", "./_stringToPath"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var isArray = $__require('./isArray'),
      stringToPath = $__require('./_stringToPath');
  function castPath(value) {
    return isArray(value) ? value : stringToPath(value);
  }
  module.exports = castPath;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_baseGet.js", ["./_castPath", "./_isKey", "./_toKey"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var castPath = $__require('./_castPath'),
      isKey = $__require('./_isKey'),
      toKey = $__require('./_toKey');
  function baseGet(object, path) {
    path = isKey(path, object) ? [path] : castPath(path);
    var index = 0,
        length = path.length;
    while (object != null && index < length) {
      object = object[toKey(path[index++])];
    }
    return (index && index == length) ? object : undefined;
  }
  module.exports = baseGet;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_basePropertyDeep.js", ["./_baseGet"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var baseGet = $__require('./_baseGet');
  function basePropertyDeep(path) {
    return function(object) {
      return baseGet(object, path);
    };
  }
  module.exports = basePropertyDeep;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_isKey.js", ["./isArray", "./isSymbol"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var isArray = $__require('./isArray'),
      isSymbol = $__require('./isSymbol');
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
      reIsPlainProp = /^\w*$/;
  function isKey(value, object) {
    if (isArray(value)) {
      return false;
    }
    var type = typeof value;
    if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {
      return true;
    }
    return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || (object != null && value in Object(object));
  }
  module.exports = isKey;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_toKey.js", ["./isSymbol"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var isSymbol = $__require('./isSymbol');
  var INFINITY = 1 / 0;
  function toKey(value) {
    if (typeof value == 'string' || isSymbol(value)) {
      return value;
    }
    var result = (value + '');
    return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
  }
  module.exports = toKey;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/property.js", ["./_baseProperty", "./_basePropertyDeep", "./_isKey", "./_toKey"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var baseProperty = $__require('./_baseProperty'),
      basePropertyDeep = $__require('./_basePropertyDeep'),
      isKey = $__require('./_isKey'),
      toKey = $__require('./_toKey');
  function property(path) {
    return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
  }
  module.exports = property;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_baseIteratee.js", ["./_baseMatches", "./_baseMatchesProperty", "./identity", "./isArray", "./property"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var baseMatches = $__require('./_baseMatches'),
      baseMatchesProperty = $__require('./_baseMatchesProperty'),
      identity = $__require('./identity'),
      isArray = $__require('./isArray'),
      property = $__require('./property');
  function baseIteratee(value) {
    if (typeof value == 'function') {
      return value;
    }
    if (value == null) {
      return identity;
    }
    if (typeof value == 'object') {
      return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
    }
    return property(value);
  }
  module.exports = baseIteratee;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/forEach.js", ["./_arrayEach", "./_baseEach", "./_baseIteratee", "./isArray"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var arrayEach = $__require('./_arrayEach'),
      baseEach = $__require('./_baseEach'),
      baseIteratee = $__require('./_baseIteratee'),
      isArray = $__require('./isArray');
  function forEach(collection, iteratee) {
    var func = isArray(collection) ? arrayEach : baseEach;
    return func(collection, baseIteratee(iteratee, 3));
  }
  module.exports = forEach;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/each.js", ["./forEach"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  module.exports = $__require('./forEach');
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_setCacheAdd.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var HASH_UNDEFINED = '__lodash_hash_undefined__';
  function setCacheAdd(value) {
    this.__data__.set(value, HASH_UNDEFINED);
    return this;
  }
  module.exports = setCacheAdd;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_setCacheHas.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  function setCacheHas(value) {
    return this.__data__.has(value);
  }
  module.exports = setCacheHas;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_SetCache.js", ["./_MapCache", "./_setCacheAdd", "./_setCacheHas"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var MapCache = $__require('./_MapCache'),
      setCacheAdd = $__require('./_setCacheAdd'),
      setCacheHas = $__require('./_setCacheHas');
  function SetCache(values) {
    var index = -1,
        length = values ? values.length : 0;
    this.__data__ = new MapCache;
    while (++index < length) {
      this.add(values[index]);
    }
  }
  SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
  SetCache.prototype.has = setCacheHas;
  module.exports = SetCache;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_arrayIncludes.js", ["./_baseIndexOf"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var baseIndexOf = $__require('./_baseIndexOf');
  function arrayIncludes(array, value) {
    var length = array ? array.length : 0;
    return !!length && baseIndexOf(array, value, 0) > -1;
  }
  module.exports = arrayIncludes;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_arrayIncludesWith.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  function arrayIncludesWith(array, value, comparator) {
    var index = -1,
        length = array ? array.length : 0;
    while (++index < length) {
      if (comparator(value, array[index])) {
        return true;
      }
    }
    return false;
  }
  module.exports = arrayIncludesWith;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_cacheHas.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  function cacheHas(cache, key) {
    return cache.has(key);
  }
  module.exports = cacheHas;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/noop.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  function noop() {}
  module.exports = noop;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_createSet.js", ["./_Set", "./noop", "./_setToArray"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var Set = $__require('./_Set'),
      noop = $__require('./noop'),
      setToArray = $__require('./_setToArray');
  var INFINITY = 1 / 0;
  var createSet = !(Set && (1 / setToArray(new Set([, -0]))[1]) == INFINITY) ? noop : function(values) {
    return new Set(values);
  };
  module.exports = createSet;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_baseUniq.js", ["./_SetCache", "./_arrayIncludes", "./_arrayIncludesWith", "./_cacheHas", "./_createSet", "./_setToArray"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var SetCache = $__require('./_SetCache'),
      arrayIncludes = $__require('./_arrayIncludes'),
      arrayIncludesWith = $__require('./_arrayIncludesWith'),
      cacheHas = $__require('./_cacheHas'),
      createSet = $__require('./_createSet'),
      setToArray = $__require('./_setToArray');
  var LARGE_ARRAY_SIZE = 200;
  function baseUniq(array, iteratee, comparator) {
    var index = -1,
        includes = arrayIncludes,
        length = array.length,
        isCommon = true,
        result = [],
        seen = result;
    if (comparator) {
      isCommon = false;
      includes = arrayIncludesWith;
    } else if (length >= LARGE_ARRAY_SIZE) {
      var set = iteratee ? null : createSet(array);
      if (set) {
        return setToArray(set);
      }
      isCommon = false;
      includes = cacheHas;
      seen = new SetCache;
    } else {
      seen = iteratee ? [] : result;
    }
    outer: while (++index < length) {
      var value = array[index],
          computed = iteratee ? iteratee(value) : value;
      value = (comparator || value !== 0) ? value : 0;
      if (isCommon && computed === computed) {
        var seenIndex = seen.length;
        while (seenIndex--) {
          if (seen[seenIndex] === computed) {
            continue outer;
          }
        }
        if (iteratee) {
          seen.push(computed);
        }
        result.push(value);
      } else if (!includes(seen, computed, comparator)) {
        if (seen !== result) {
          seen.push(computed);
        }
        result.push(value);
      }
    }
    return result;
  }
  module.exports = baseUniq;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/uniq.js", ["./_baseUniq"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var baseUniq = $__require('./_baseUniq');
  function uniq(array) {
    return (array && array.length) ? baseUniq(array) : [];
  }
  module.exports = uniq;
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/fn/symbol/for.js", ["../../modules/es6.symbol", "../../modules/_core", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  $__require('../../modules/es6.symbol');
  module.exports = $__require('../../modules/_core').Symbol['for'];
  return module.exports;
});

System.registerDynamic("npm:babel-runtime@6.9.2/core-js/symbol/for.js", ["core-js/library/fn/symbol/for"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  module.exports = {
    "default": $__require('core-js/library/fn/symbol/for'),
    __esModule: true
  };
  return module.exports;
});

System.registerDynamic("npm:babel-types@6.9.1/lib/constants.js", ["babel-runtime/core-js/symbol/for"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  exports.NOT_LOCAL_BINDING = exports.BLOCK_SCOPED_SYMBOL = exports.INHERIT_KEYS = exports.UNARY_OPERATORS = exports.STRING_UNARY_OPERATORS = exports.NUMBER_UNARY_OPERATORS = exports.BOOLEAN_UNARY_OPERATORS = exports.BINARY_OPERATORS = exports.NUMBER_BINARY_OPERATORS = exports.BOOLEAN_BINARY_OPERATORS = exports.COMPARISON_BINARY_OPERATORS = exports.EQUALITY_BINARY_OPERATORS = exports.BOOLEAN_NUMBER_BINARY_OPERATORS = exports.UPDATE_OPERATORS = exports.LOGICAL_OPERATORS = exports.COMMENT_KEYS = exports.FOR_INIT_KEYS = exports.FLATTENABLE_KEYS = exports.STATEMENT_OR_BLOCK_KEYS = undefined;
  var _for = $__require('babel-runtime/core-js/symbol/for');
  var _for2 = _interopRequireDefault(_for);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  var STATEMENT_OR_BLOCK_KEYS = exports.STATEMENT_OR_BLOCK_KEYS = ["consequent", "body", "alternate"];
  var FLATTENABLE_KEYS = exports.FLATTENABLE_KEYS = ["body", "expressions"];
  var FOR_INIT_KEYS = exports.FOR_INIT_KEYS = ["left", "init"];
  var COMMENT_KEYS = exports.COMMENT_KEYS = ["leadingComments", "trailingComments", "innerComments"];
  var LOGICAL_OPERATORS = exports.LOGICAL_OPERATORS = ["||", "&&"];
  var UPDATE_OPERATORS = exports.UPDATE_OPERATORS = ["++", "--"];
  var BOOLEAN_NUMBER_BINARY_OPERATORS = exports.BOOLEAN_NUMBER_BINARY_OPERATORS = [">", "<", ">=", "<="];
  var EQUALITY_BINARY_OPERATORS = exports.EQUALITY_BINARY_OPERATORS = ["==", "===", "!=", "!=="];
  var COMPARISON_BINARY_OPERATORS = exports.COMPARISON_BINARY_OPERATORS = [].concat(EQUALITY_BINARY_OPERATORS, ["in", "instanceof"]);
  var BOOLEAN_BINARY_OPERATORS = exports.BOOLEAN_BINARY_OPERATORS = [].concat(COMPARISON_BINARY_OPERATORS, BOOLEAN_NUMBER_BINARY_OPERATORS);
  var NUMBER_BINARY_OPERATORS = exports.NUMBER_BINARY_OPERATORS = ["-", "/", "%", "*", "**", "&", "|", ">>", ">>>", "<<", "^"];
  var BINARY_OPERATORS = exports.BINARY_OPERATORS = ["+"].concat(NUMBER_BINARY_OPERATORS, BOOLEAN_BINARY_OPERATORS);
  var BOOLEAN_UNARY_OPERATORS = exports.BOOLEAN_UNARY_OPERATORS = ["delete", "!"];
  var NUMBER_UNARY_OPERATORS = exports.NUMBER_UNARY_OPERATORS = ["+", "-", "++", "--", "~"];
  var STRING_UNARY_OPERATORS = exports.STRING_UNARY_OPERATORS = ["typeof"];
  var UNARY_OPERATORS = exports.UNARY_OPERATORS = ["void"].concat(BOOLEAN_UNARY_OPERATORS, NUMBER_UNARY_OPERATORS, STRING_UNARY_OPERATORS);
  var INHERIT_KEYS = exports.INHERIT_KEYS = {
    optional: ["typeAnnotation", "typeParameters", "returnType"],
    force: ["start", "loc", "end"]
  };
  var BLOCK_SCOPED_SYMBOL = exports.BLOCK_SCOPED_SYMBOL = (0, _for2.default)("var used to be block scoped");
  var NOT_LOCAL_BINDING = exports.NOT_LOCAL_BINDING = (0, _for2.default)("should not be considered a local binding");
  return module.exports;
});

System.registerDynamic("npm:babel-types@6.9.1/lib/definitions/core.js", ["../index", "../constants", "./index"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  var _index = $__require('../index');
  var t = _interopRequireWildcard(_index);
  var _constants = $__require('../constants');
  var _index2 = $__require('./index');
  var _index3 = _interopRequireDefault(_index2);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj.default = obj;
      return newObj;
    }
  }
  (0, _index3.default)("ArrayExpression", {
    fields: {elements: {
        validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeOrValueType)("null", "Expression", "SpreadElement"))),
        default: []
      }},
    visitor: ["elements"],
    aliases: ["Expression"]
  });
  (0, _index3.default)("AssignmentExpression", {
    fields: {
      operator: {validate: (0, _index2.assertValueType)("string")},
      left: {validate: (0, _index2.assertNodeType)("LVal")},
      right: {validate: (0, _index2.assertNodeType)("Expression")}
    },
    builder: ["operator", "left", "right"],
    visitor: ["left", "right"],
    aliases: ["Expression"]
  });
  (0, _index3.default)("BinaryExpression", {
    builder: ["operator", "left", "right"],
    fields: {
      operator: {validate: _index2.assertOneOf.apply(undefined, _constants.BINARY_OPERATORS)},
      left: {validate: (0, _index2.assertNodeType)("Expression")},
      right: {validate: (0, _index2.assertNodeType)("Expression")}
    },
    visitor: ["left", "right"],
    aliases: ["Binary", "Expression"]
  });
  (0, _index3.default)("Directive", {
    visitor: ["value"],
    fields: {value: {validate: (0, _index2.assertNodeType)("DirectiveLiteral")}}
  });
  (0, _index3.default)("DirectiveLiteral", {
    builder: ["value"],
    fields: {value: {validate: (0, _index2.assertValueType)("string")}}
  });
  (0, _index3.default)("BlockStatement", {
    builder: ["body", "directives"],
    visitor: ["directives", "body"],
    fields: {
      directives: {
        validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Directive"))),
        default: []
      },
      body: {validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Statement")))}
    },
    aliases: ["Scopable", "BlockParent", "Block", "Statement"]
  });
  (0, _index3.default)("BreakStatement", {
    visitor: ["label"],
    fields: {label: {
        validate: (0, _index2.assertNodeType)("Identifier"),
        optional: true
      }},
    aliases: ["Statement", "Terminatorless", "CompletionStatement"]
  });
  (0, _index3.default)("CallExpression", {
    visitor: ["callee", "arguments"],
    fields: {
      callee: {validate: (0, _index2.assertNodeType)("Expression")},
      arguments: {validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Expression", "SpreadElement")))}
    },
    aliases: ["Expression"]
  });
  (0, _index3.default)("CatchClause", {
    visitor: ["param", "body"],
    fields: {
      param: {validate: (0, _index2.assertNodeType)("Identifier")},
      body: {validate: (0, _index2.assertNodeType)("BlockStatement")}
    },
    aliases: ["Scopable"]
  });
  (0, _index3.default)("ConditionalExpression", {
    visitor: ["test", "consequent", "alternate"],
    fields: {
      test: {validate: (0, _index2.assertNodeType)("Expression")},
      consequent: {validate: (0, _index2.assertNodeType)("Expression")},
      alternate: {validate: (0, _index2.assertNodeType)("Expression")}
    },
    aliases: ["Expression", "Conditional"]
  });
  (0, _index3.default)("ContinueStatement", {
    visitor: ["label"],
    fields: {label: {
        validate: (0, _index2.assertNodeType)("Identifier"),
        optional: true
      }},
    aliases: ["Statement", "Terminatorless", "CompletionStatement"]
  });
  (0, _index3.default)("DebuggerStatement", {aliases: ["Statement"]});
  (0, _index3.default)("DoWhileStatement", {
    visitor: ["test", "body"],
    fields: {
      test: {validate: (0, _index2.assertNodeType)("Expression")},
      body: {validate: (0, _index2.assertNodeType)("Statement")}
    },
    aliases: ["Statement", "BlockParent", "Loop", "While", "Scopable"]
  });
  (0, _index3.default)("EmptyStatement", {aliases: ["Statement"]});
  (0, _index3.default)("ExpressionStatement", {
    visitor: ["expression"],
    fields: {expression: {validate: (0, _index2.assertNodeType)("Expression")}},
    aliases: ["Statement", "ExpressionWrapper"]
  });
  (0, _index3.default)("File", {
    builder: ["program", "comments", "tokens"],
    visitor: ["program"],
    fields: {program: {validate: (0, _index2.assertNodeType)("Program")}}
  });
  (0, _index3.default)("ForInStatement", {
    visitor: ["left", "right", "body"],
    aliases: ["Scopable", "Statement", "For", "BlockParent", "Loop", "ForXStatement"],
    fields: {
      left: {validate: (0, _index2.assertNodeType)("VariableDeclaration", "LVal")},
      right: {validate: (0, _index2.assertNodeType)("Expression")},
      body: {validate: (0, _index2.assertNodeType)("Statement")}
    }
  });
  (0, _index3.default)("ForStatement", {
    visitor: ["init", "test", "update", "body"],
    aliases: ["Scopable", "Statement", "For", "BlockParent", "Loop"],
    fields: {
      init: {
        validate: (0, _index2.assertNodeType)("VariableDeclaration", "Expression"),
        optional: true
      },
      test: {
        validate: (0, _index2.assertNodeType)("Expression"),
        optional: true
      },
      update: {
        validate: (0, _index2.assertNodeType)("Expression"),
        optional: true
      },
      body: {validate: (0, _index2.assertNodeType)("Statement")}
    }
  });
  (0, _index3.default)("FunctionDeclaration", {
    builder: ["id", "params", "body", "generator", "async"],
    visitor: ["id", "params", "body", "returnType", "typeParameters"],
    fields: {
      id: {validate: (0, _index2.assertNodeType)("Identifier")},
      params: {validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("LVal")))},
      body: {validate: (0, _index2.assertNodeType)("BlockStatement")},
      generator: {
        default: false,
        validate: (0, _index2.assertValueType)("boolean")
      },
      async: {
        default: false,
        validate: (0, _index2.assertValueType)("boolean")
      }
    },
    aliases: ["Scopable", "Function", "BlockParent", "FunctionParent", "Statement", "Pureish", "Declaration"]
  });
  (0, _index3.default)("FunctionExpression", {
    inherits: "FunctionDeclaration",
    aliases: ["Scopable", "Function", "BlockParent", "FunctionParent", "Expression", "Pureish"],
    fields: {
      id: {
        validate: (0, _index2.assertNodeType)("Identifier"),
        optional: true
      },
      params: {validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("LVal")))},
      body: {validate: (0, _index2.assertNodeType)("BlockStatement")},
      generator: {
        default: false,
        validate: (0, _index2.assertValueType)("boolean")
      },
      async: {
        default: false,
        validate: (0, _index2.assertValueType)("boolean")
      }
    }
  });
  (0, _index3.default)("Identifier", {
    builder: ["name"],
    visitor: ["typeAnnotation"],
    aliases: ["Expression", "LVal"],
    fields: {
      name: {validate: function validate(node, key, val) {
          if (!t.isValidIdentifier(val)) {}
        }},
      decorators: {validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Decorator")))}
    }
  });
  (0, _index3.default)("IfStatement", {
    visitor: ["test", "consequent", "alternate"],
    aliases: ["Statement", "Conditional"],
    fields: {
      test: {validate: (0, _index2.assertNodeType)("Expression")},
      consequent: {validate: (0, _index2.assertNodeType)("Statement")},
      alternate: {
        optional: true,
        validate: (0, _index2.assertNodeType)("Statement")
      }
    }
  });
  (0, _index3.default)("LabeledStatement", {
    visitor: ["label", "body"],
    aliases: ["Statement"],
    fields: {
      label: {validate: (0, _index2.assertNodeType)("Identifier")},
      body: {validate: (0, _index2.assertNodeType)("Statement")}
    }
  });
  (0, _index3.default)("StringLiteral", {
    builder: ["value"],
    fields: {value: {validate: (0, _index2.assertValueType)("string")}},
    aliases: ["Expression", "Pureish", "Literal", "Immutable"]
  });
  (0, _index3.default)("NumericLiteral", {
    builder: ["value"],
    deprecatedAlias: "NumberLiteral",
    fields: {value: {validate: (0, _index2.assertValueType)("number")}},
    aliases: ["Expression", "Pureish", "Literal", "Immutable"]
  });
  (0, _index3.default)("NullLiteral", {aliases: ["Expression", "Pureish", "Literal", "Immutable"]});
  (0, _index3.default)("BooleanLiteral", {
    builder: ["value"],
    fields: {value: {validate: (0, _index2.assertValueType)("boolean")}},
    aliases: ["Expression", "Pureish", "Literal", "Immutable"]
  });
  (0, _index3.default)("RegExpLiteral", {
    builder: ["pattern", "flags"],
    deprecatedAlias: "RegexLiteral",
    aliases: ["Expression", "Literal"],
    fields: {
      pattern: {validate: (0, _index2.assertValueType)("string")},
      flags: {
        validate: (0, _index2.assertValueType)("string"),
        default: ""
      }
    }
  });
  (0, _index3.default)("LogicalExpression", {
    builder: ["operator", "left", "right"],
    visitor: ["left", "right"],
    aliases: ["Binary", "Expression"],
    fields: {
      operator: {validate: _index2.assertOneOf.apply(undefined, _constants.LOGICAL_OPERATORS)},
      left: {validate: (0, _index2.assertNodeType)("Expression")},
      right: {validate: (0, _index2.assertNodeType)("Expression")}
    }
  });
  (0, _index3.default)("MemberExpression", {
    builder: ["object", "property", "computed"],
    visitor: ["object", "property"],
    aliases: ["Expression", "LVal"],
    fields: {
      object: {validate: (0, _index2.assertNodeType)("Expression")},
      property: {validate: function validate(node, key, val) {
          var expectedType = node.computed ? "Expression" : "Identifier";
          (0, _index2.assertNodeType)(expectedType)(node, key, val);
        }},
      computed: {default: false}
    }
  });
  (0, _index3.default)("NewExpression", {
    visitor: ["callee", "arguments"],
    aliases: ["Expression"],
    fields: {
      callee: {validate: (0, _index2.assertNodeType)("Expression")},
      arguments: {validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Expression", "SpreadElement")))}
    }
  });
  (0, _index3.default)("Program", {
    visitor: ["directives", "body"],
    builder: ["body", "directives"],
    fields: {
      directives: {
        validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Directive"))),
        default: []
      },
      body: {validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Statement")))}
    },
    aliases: ["Scopable", "BlockParent", "Block", "FunctionParent"]
  });
  (0, _index3.default)("ObjectExpression", {
    visitor: ["properties"],
    aliases: ["Expression"],
    fields: {properties: {validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("ObjectMethod", "ObjectProperty", "SpreadProperty")))}}
  });
  (0, _index3.default)("ObjectMethod", {
    builder: ["kind", "key", "params", "body", "computed"],
    fields: {
      kind: {
        validate: (0, _index2.chain)((0, _index2.assertValueType)("string"), (0, _index2.assertOneOf)("method", "get", "set")),
        default: "method"
      },
      computed: {
        validate: (0, _index2.assertValueType)("boolean"),
        default: false
      },
      key: {validate: function validate(node, key, val) {
          var expectedTypes = node.computed ? ["Expression"] : ["Identifier", "StringLiteral", "NumericLiteral"];
          _index2.assertNodeType.apply(undefined, expectedTypes)(node, key, val);
        }},
      decorators: {validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Decorator")))},
      body: {validate: (0, _index2.assertNodeType)("BlockStatement")},
      generator: {
        default: false,
        validate: (0, _index2.assertValueType)("boolean")
      },
      async: {
        default: false,
        validate: (0, _index2.assertValueType)("boolean")
      }
    },
    visitor: ["key", "params", "body", "decorators", "returnType", "typeParameters"],
    aliases: ["UserWhitespacable", "Function", "Scopable", "BlockParent", "FunctionParent", "Method", "ObjectMember"]
  });
  (0, _index3.default)("ObjectProperty", {
    builder: ["key", "value", "computed", "shorthand", "decorators"],
    fields: {
      computed: {
        validate: (0, _index2.assertValueType)("boolean"),
        default: false
      },
      key: {validate: function validate(node, key, val) {
          var expectedTypes = node.computed ? ["Expression"] : ["Identifier", "StringLiteral", "NumericLiteral"];
          _index2.assertNodeType.apply(undefined, expectedTypes)(node, key, val);
        }},
      value: {validate: (0, _index2.assertNodeType)("Expression")},
      shorthand: {
        validate: (0, _index2.assertValueType)("boolean"),
        default: false
      },
      decorators: {
        validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Decorator"))),
        optional: true
      }
    },
    visitor: ["key", "value", "decorators"],
    aliases: ["UserWhitespacable", "Property", "ObjectMember"]
  });
  (0, _index3.default)("RestElement", {
    visitor: ["argument", "typeAnnotation"],
    aliases: ["LVal"],
    fields: {
      argument: {validate: (0, _index2.assertNodeType)("LVal")},
      decorators: {validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Decorator")))}
    }
  });
  (0, _index3.default)("ReturnStatement", {
    visitor: ["argument"],
    aliases: ["Statement", "Terminatorless", "CompletionStatement"],
    fields: {argument: {
        validate: (0, _index2.assertNodeType)("Expression"),
        optional: true
      }}
  });
  (0, _index3.default)("SequenceExpression", {
    visitor: ["expressions"],
    fields: {expressions: {validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Expression")))}},
    aliases: ["Expression"]
  });
  (0, _index3.default)("SwitchCase", {
    visitor: ["test", "consequent"],
    fields: {
      test: {
        validate: (0, _index2.assertNodeType)("Expression"),
        optional: true
      },
      consequent: {validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Statement")))}
    }
  });
  (0, _index3.default)("SwitchStatement", {
    visitor: ["discriminant", "cases"],
    aliases: ["Statement", "BlockParent", "Scopable"],
    fields: {
      discriminant: {validate: (0, _index2.assertNodeType)("Expression")},
      cases: {validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("SwitchCase")))}
    }
  });
  (0, _index3.default)("ThisExpression", {aliases: ["Expression"]});
  (0, _index3.default)("ThrowStatement", {
    visitor: ["argument"],
    aliases: ["Statement", "Terminatorless", "CompletionStatement"],
    fields: {argument: {validate: (0, _index2.assertNodeType)("Expression")}}
  });
  (0, _index3.default)("TryStatement", {
    visitor: ["block", "handler", "finalizer"],
    aliases: ["Statement"],
    fields: {
      body: {validate: (0, _index2.assertNodeType)("BlockStatement")},
      handler: {
        optional: true,
        handler: (0, _index2.assertNodeType)("BlockStatement")
      },
      finalizer: {
        optional: true,
        validate: (0, _index2.assertNodeType)("BlockStatement")
      }
    }
  });
  (0, _index3.default)("UnaryExpression", {
    builder: ["operator", "argument", "prefix"],
    fields: {
      prefix: {default: true},
      argument: {validate: (0, _index2.assertNodeType)("Expression")},
      operator: {validate: _index2.assertOneOf.apply(undefined, _constants.UNARY_OPERATORS)}
    },
    visitor: ["argument"],
    aliases: ["UnaryLike", "Expression"]
  });
  (0, _index3.default)("UpdateExpression", {
    builder: ["operator", "argument", "prefix"],
    fields: {
      prefix: {default: false},
      argument: {validate: (0, _index2.assertNodeType)("Expression")},
      operator: {validate: _index2.assertOneOf.apply(undefined, _constants.UPDATE_OPERATORS)}
    },
    visitor: ["argument"],
    aliases: ["Expression"]
  });
  (0, _index3.default)("VariableDeclaration", {
    builder: ["kind", "declarations"],
    visitor: ["declarations"],
    aliases: ["Statement", "Declaration"],
    fields: {
      kind: {validate: (0, _index2.chain)((0, _index2.assertValueType)("string"), (0, _index2.assertOneOf)("var", "let", "const"))},
      declarations: {validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("VariableDeclarator")))}
    }
  });
  (0, _index3.default)("VariableDeclarator", {
    visitor: ["id", "init"],
    fields: {
      id: {validate: (0, _index2.assertNodeType)("LVal")},
      init: {
        optional: true,
        validate: (0, _index2.assertNodeType)("Expression")
      }
    }
  });
  (0, _index3.default)("WhileStatement", {
    visitor: ["test", "body"],
    aliases: ["Statement", "BlockParent", "Loop", "While", "Scopable"],
    fields: {
      test: {validate: (0, _index2.assertNodeType)("Expression")},
      body: {validate: (0, _index2.assertNodeType)("BlockStatement", "Statement")}
    }
  });
  (0, _index3.default)("WithStatement", {
    visitor: ["object", "body"],
    aliases: ["Statement"],
    fields: {
      object: {object: (0, _index2.assertNodeType)("Expression")},
      body: {validate: (0, _index2.assertNodeType)("BlockStatement", "Statement")}
    }
  });
  return module.exports;
});

System.registerDynamic("npm:babel-types@6.9.1/lib/definitions/es2015.js", ["./index"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  var _index = $__require('./index');
  var _index2 = _interopRequireDefault(_index);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  (0, _index2.default)("AssignmentPattern", {
    visitor: ["left", "right"],
    aliases: ["Pattern", "LVal"],
    fields: {
      left: {validate: (0, _index.assertNodeType)("Identifier")},
      right: {validate: (0, _index.assertNodeType)("Expression")},
      decorators: {validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("Decorator")))}
    }
  });
  (0, _index2.default)("ArrayPattern", {
    visitor: ["elements", "typeAnnotation"],
    aliases: ["Pattern", "LVal"],
    fields: {
      elements: {validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("Expression")))},
      decorators: {validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("Decorator")))}
    }
  });
  (0, _index2.default)("ArrowFunctionExpression", {
    builder: ["params", "body", "async"],
    visitor: ["params", "body", "returnType"],
    aliases: ["Scopable", "Function", "BlockParent", "FunctionParent", "Expression", "Pureish"],
    fields: {
      params: {validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("LVal")))},
      body: {validate: (0, _index.assertNodeType)("BlockStatement", "Expression")},
      async: {
        validate: (0, _index.assertValueType)("boolean"),
        default: false
      }
    }
  });
  (0, _index2.default)("ClassBody", {
    visitor: ["body"],
    fields: {body: {validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("ClassMethod", "ClassProperty")))}}
  });
  (0, _index2.default)("ClassDeclaration", {
    builder: ["id", "superClass", "body", "decorators"],
    visitor: ["id", "body", "superClass", "mixins", "typeParameters", "superTypeParameters", "implements", "decorators"],
    aliases: ["Scopable", "Class", "Statement", "Declaration", "Pureish"],
    fields: {
      id: {validate: (0, _index.assertNodeType)("Identifier")},
      body: {validate: (0, _index.assertNodeType)("ClassBody")},
      superClass: {
        optional: true,
        validate: (0, _index.assertNodeType)("Expression")
      },
      decorators: {validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("Decorator")))}
    }
  });
  (0, _index2.default)("ClassExpression", {
    inherits: "ClassDeclaration",
    aliases: ["Scopable", "Class", "Expression", "Pureish"],
    fields: {
      id: {
        optional: true,
        validate: (0, _index.assertNodeType)("Identifier")
      },
      body: {validate: (0, _index.assertNodeType)("ClassBody")},
      superClass: {
        optional: true,
        validate: (0, _index.assertNodeType)("Expression")
      },
      decorators: {validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("Decorator")))}
    }
  });
  (0, _index2.default)("ExportAllDeclaration", {
    visitor: ["source"],
    aliases: ["Statement", "Declaration", "ModuleDeclaration", "ExportDeclaration"],
    fields: {source: {validate: (0, _index.assertNodeType)("StringLiteral")}}
  });
  (0, _index2.default)("ExportDefaultDeclaration", {
    visitor: ["declaration"],
    aliases: ["Statement", "Declaration", "ModuleDeclaration", "ExportDeclaration"],
    fields: {declaration: {validate: (0, _index.assertNodeType)("FunctionDeclaration", "ClassDeclaration", "Expression")}}
  });
  (0, _index2.default)("ExportNamedDeclaration", {
    visitor: ["declaration", "specifiers", "source"],
    aliases: ["Statement", "Declaration", "ModuleDeclaration", "ExportDeclaration"],
    fields: {
      declaration: {
        validate: (0, _index.assertNodeType)("Declaration"),
        optional: true
      },
      specifiers: {validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("ExportSpecifier")))},
      source: {
        validate: (0, _index.assertNodeType)("StringLiteral"),
        optional: true
      }
    }
  });
  (0, _index2.default)("ExportSpecifier", {
    visitor: ["local", "exported"],
    aliases: ["ModuleSpecifier"],
    fields: {
      local: {validate: (0, _index.assertNodeType)("Identifier")},
      exported: {validate: (0, _index.assertNodeType)("Identifier")}
    }
  });
  (0, _index2.default)("ForOfStatement", {
    visitor: ["left", "right", "body"],
    aliases: ["Scopable", "Statement", "For", "BlockParent", "Loop", "ForXStatement"],
    fields: {
      left: {validate: (0, _index.assertNodeType)("VariableDeclaration", "LVal")},
      right: {validate: (0, _index.assertNodeType)("Expression")},
      body: {validate: (0, _index.assertNodeType)("Statement")}
    }
  });
  (0, _index2.default)("ImportDeclaration", {
    visitor: ["specifiers", "source"],
    aliases: ["Statement", "Declaration", "ModuleDeclaration"],
    fields: {
      specifiers: {validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("ImportSpecifier", "ImportDefaultSpecifier", "ImportNamespaceSpecifier")))},
      source: {validate: (0, _index.assertNodeType)("StringLiteral")}
    }
  });
  (0, _index2.default)("ImportDefaultSpecifier", {
    visitor: ["local"],
    aliases: ["ModuleSpecifier"],
    fields: {local: {validate: (0, _index.assertNodeType)("Identifier")}}
  });
  (0, _index2.default)("ImportNamespaceSpecifier", {
    visitor: ["local"],
    aliases: ["ModuleSpecifier"],
    fields: {local: {validate: (0, _index.assertNodeType)("Identifier")}}
  });
  (0, _index2.default)("ImportSpecifier", {
    visitor: ["local", "imported"],
    aliases: ["ModuleSpecifier"],
    fields: {
      local: {validate: (0, _index.assertNodeType)("Identifier")},
      imported: {validate: (0, _index.assertNodeType)("Identifier")}
    }
  });
  (0, _index2.default)("MetaProperty", {
    visitor: ["meta", "property"],
    aliases: ["Expression"],
    fields: {
      meta: {validate: (0, _index.assertValueType)("string")},
      property: {validate: (0, _index.assertValueType)("string")}
    }
  });
  (0, _index2.default)("ClassMethod", {
    aliases: ["Function", "Scopable", "BlockParent", "FunctionParent", "Method"],
    builder: ["kind", "key", "params", "body", "computed", "static"],
    visitor: ["key", "params", "body", "decorators", "returnType", "typeParameters"],
    fields: {
      kind: {
        validate: (0, _index.chain)((0, _index.assertValueType)("string"), (0, _index.assertOneOf)("get", "set", "method", "constructor")),
        default: "method"
      },
      computed: {
        default: false,
        validate: (0, _index.assertValueType)("boolean")
      },
      static: {
        default: false,
        validate: (0, _index.assertValueType)("boolean")
      },
      key: {validate: function validate(node, key, val) {
          var expectedTypes = node.computed ? ["Expression"] : ["Identifier", "StringLiteral", "NumericLiteral"];
          _index.assertNodeType.apply(undefined, expectedTypes)(node, key, val);
        }},
      params: {validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("LVal")))},
      body: {validate: (0, _index.assertNodeType)("BlockStatement")},
      generator: {
        default: false,
        validate: (0, _index.assertValueType)("boolean")
      },
      async: {
        default: false,
        validate: (0, _index.assertValueType)("boolean")
      }
    }
  });
  (0, _index2.default)("ObjectPattern", {
    visitor: ["properties", "typeAnnotation"],
    aliases: ["Pattern", "LVal"],
    fields: {
      properties: {validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("RestProperty", "Property")))},
      decorators: {validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("Decorator")))}
    }
  });
  (0, _index2.default)("SpreadElement", {
    visitor: ["argument"],
    aliases: ["UnaryLike"],
    fields: {argument: {validate: (0, _index.assertNodeType)("Expression")}}
  });
  (0, _index2.default)("Super", {aliases: ["Expression"]});
  (0, _index2.default)("TaggedTemplateExpression", {
    visitor: ["tag", "quasi"],
    aliases: ["Expression"],
    fields: {
      tag: {validate: (0, _index.assertNodeType)("Expression")},
      quasi: {validate: (0, _index.assertNodeType)("TemplateLiteral")}
    }
  });
  (0, _index2.default)("TemplateElement", {
    builder: ["value", "tail"],
    fields: {
      value: {},
      tail: {
        validate: (0, _index.assertValueType)("boolean"),
        default: false
      }
    }
  });
  (0, _index2.default)("TemplateLiteral", {
    visitor: ["quasis", "expressions"],
    aliases: ["Expression", "Literal"],
    fields: {
      quasis: {validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("TemplateElement")))},
      expressions: {validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("Expression")))}
    }
  });
  (0, _index2.default)("YieldExpression", {
    builder: ["argument", "delegate"],
    visitor: ["argument"],
    aliases: ["Expression", "Terminatorless"],
    fields: {
      delegate: {
        validate: (0, _index.assertValueType)("boolean"),
        default: false
      },
      argument: {
        optional: true,
        validate: (0, _index.assertNodeType)("Expression")
      }
    }
  });
  return module.exports;
});

System.registerDynamic("npm:babel-types@6.9.1/lib/definitions/flow.js", ["./index"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  var _index = $__require('./index');
  var _index2 = _interopRequireDefault(_index);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  (0, _index2.default)("AnyTypeAnnotation", {
    aliases: ["Flow", "FlowBaseAnnotation"],
    fields: {}
  });
  (0, _index2.default)("ArrayTypeAnnotation", {
    visitor: ["elementType"],
    aliases: ["Flow"],
    fields: {}
  });
  (0, _index2.default)("BooleanTypeAnnotation", {
    aliases: ["Flow", "FlowBaseAnnotation"],
    fields: {}
  });
  (0, _index2.default)("BooleanLiteralTypeAnnotation", {
    aliases: ["Flow"],
    fields: {}
  });
  (0, _index2.default)("NullLiteralTypeAnnotation", {
    aliases: ["Flow", "FlowBaseAnnotation"],
    fields: {}
  });
  (0, _index2.default)("ClassImplements", {
    visitor: ["id", "typeParameters"],
    aliases: ["Flow"],
    fields: {}
  });
  (0, _index2.default)("ClassProperty", {
    visitor: ["key", "value", "typeAnnotation", "decorators"],
    aliases: ["Flow", "Property"],
    fields: {}
  });
  (0, _index2.default)("DeclareClass", {
    visitor: ["id", "typeParameters", "extends", "body"],
    aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
    fields: {}
  });
  (0, _index2.default)("DeclareFunction", {
    visitor: ["id"],
    aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
    fields: {}
  });
  (0, _index2.default)("DeclareInterface", {
    visitor: ["id", "typeParameters", "extends", "body"],
    aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
    fields: {}
  });
  (0, _index2.default)("DeclareModule", {
    visitor: ["id", "body"],
    aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
    fields: {}
  });
  (0, _index2.default)("DeclareTypeAlias", {
    visitor: ["id", "typeParameters", "right"],
    aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
    fields: {}
  });
  (0, _index2.default)("DeclareVariable", {
    visitor: ["id"],
    aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
    fields: {}
  });
  (0, _index2.default)("ExistentialTypeParam", {aliases: ["Flow"]});
  (0, _index2.default)("FunctionTypeAnnotation", {
    visitor: ["typeParameters", "params", "rest", "returnType"],
    aliases: ["Flow"],
    fields: {}
  });
  (0, _index2.default)("FunctionTypeParam", {
    visitor: ["name", "typeAnnotation"],
    aliases: ["Flow"],
    fields: {}
  });
  (0, _index2.default)("GenericTypeAnnotation", {
    visitor: ["id", "typeParameters"],
    aliases: ["Flow"],
    fields: {}
  });
  (0, _index2.default)("InterfaceExtends", {
    visitor: ["id", "typeParameters"],
    aliases: ["Flow"],
    fields: {}
  });
  (0, _index2.default)("InterfaceDeclaration", {
    visitor: ["id", "typeParameters", "extends", "body"],
    aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
    fields: {}
  });
  (0, _index2.default)("IntersectionTypeAnnotation", {
    visitor: ["types"],
    aliases: ["Flow"],
    fields: {}
  });
  (0, _index2.default)("MixedTypeAnnotation", {aliases: ["Flow", "FlowBaseAnnotation"]});
  (0, _index2.default)("NullableTypeAnnotation", {
    visitor: ["typeAnnotation"],
    aliases: ["Flow"],
    fields: {}
  });
  (0, _index2.default)("NumericLiteralTypeAnnotation", {
    aliases: ["Flow"],
    fields: {}
  });
  (0, _index2.default)("NumberTypeAnnotation", {
    aliases: ["Flow", "FlowBaseAnnotation"],
    fields: {}
  });
  (0, _index2.default)("StringLiteralTypeAnnotation", {
    aliases: ["Flow"],
    fields: {}
  });
  (0, _index2.default)("StringTypeAnnotation", {
    aliases: ["Flow", "FlowBaseAnnotation"],
    fields: {}
  });
  (0, _index2.default)("ThisTypeAnnotation", {
    aliases: ["Flow", "FlowBaseAnnotation"],
    fields: {}
  });
  (0, _index2.default)("TupleTypeAnnotation", {
    visitor: ["types"],
    aliases: ["Flow"],
    fields: {}
  });
  (0, _index2.default)("TypeofTypeAnnotation", {
    visitor: ["argument"],
    aliases: ["Flow"],
    fields: {}
  });
  (0, _index2.default)("TypeAlias", {
    visitor: ["id", "typeParameters", "right"],
    aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
    fields: {}
  });
  (0, _index2.default)("TypeAnnotation", {
    visitor: ["typeAnnotation"],
    aliases: ["Flow"],
    fields: {}
  });
  (0, _index2.default)("TypeCastExpression", {
    visitor: ["expression", "typeAnnotation"],
    aliases: ["Flow", "ExpressionWrapper", "Expression"],
    fields: {}
  });
  (0, _index2.default)("TypeParameterDeclaration", {
    visitor: ["params"],
    aliases: ["Flow"],
    fields: {}
  });
  (0, _index2.default)("TypeParameterInstantiation", {
    visitor: ["params"],
    aliases: ["Flow"],
    fields: {}
  });
  (0, _index2.default)("ObjectTypeAnnotation", {
    visitor: ["properties", "indexers", "callProperties"],
    aliases: ["Flow"],
    fields: {}
  });
  (0, _index2.default)("ObjectTypeCallProperty", {
    visitor: ["value"],
    aliases: ["Flow", "UserWhitespacable"],
    fields: {}
  });
  (0, _index2.default)("ObjectTypeIndexer", {
    visitor: ["id", "key", "value"],
    aliases: ["Flow", "UserWhitespacable"],
    fields: {}
  });
  (0, _index2.default)("ObjectTypeProperty", {
    visitor: ["key", "value"],
    aliases: ["Flow", "UserWhitespacable"],
    fields: {}
  });
  (0, _index2.default)("QualifiedTypeIdentifier", {
    visitor: ["id", "qualification"],
    aliases: ["Flow"],
    fields: {}
  });
  (0, _index2.default)("UnionTypeAnnotation", {
    visitor: ["types"],
    aliases: ["Flow"],
    fields: {}
  });
  (0, _index2.default)("VoidTypeAnnotation", {
    aliases: ["Flow", "FlowBaseAnnotation"],
    fields: {}
  });
  return module.exports;
});

System.registerDynamic("npm:babel-types@6.9.1/lib/definitions/jsx.js", ["./index"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  var _index = $__require('./index');
  var _index2 = _interopRequireDefault(_index);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  (0, _index2.default)("JSXAttribute", {
    visitor: ["name", "value"],
    aliases: ["JSX", "Immutable"],
    fields: {
      name: {validate: (0, _index.assertNodeType)("JSXIdentifier", "JSXNamespacedName")},
      value: {
        optional: true,
        validate: (0, _index.assertNodeType)("JSXElement", "StringLiteral", "JSXExpressionContainer")
      }
    }
  });
  (0, _index2.default)("JSXClosingElement", {
    visitor: ["name"],
    aliases: ["JSX", "Immutable"],
    fields: {name: {validate: (0, _index.assertNodeType)("JSXIdentifier", "JSXMemberExpression")}}
  });
  (0, _index2.default)("JSXElement", {
    builder: ["openingElement", "closingElement", "children", "selfClosing"],
    visitor: ["openingElement", "children", "closingElement"],
    aliases: ["JSX", "Immutable", "Expression"],
    fields: {
      openingElement: {validate: (0, _index.assertNodeType)("JSXOpeningElement")},
      closingElement: {
        optional: true,
        validate: (0, _index.assertNodeType)("JSXClosingElement")
      },
      children: {validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("JSXText", "JSXExpressionContainer", "JSXElement")))}
    }
  });
  (0, _index2.default)("JSXEmptyExpression", {aliases: ["JSX", "Expression"]});
  (0, _index2.default)("JSXExpressionContainer", {
    visitor: ["expression"],
    aliases: ["JSX", "Immutable"],
    fields: {expression: {validate: (0, _index.assertNodeType)("Expression")}}
  });
  (0, _index2.default)("JSXIdentifier", {
    builder: ["name"],
    aliases: ["JSX", "Expression"],
    fields: {name: {validate: (0, _index.assertValueType)("string")}}
  });
  (0, _index2.default)("JSXMemberExpression", {
    visitor: ["object", "property"],
    aliases: ["JSX", "Expression"],
    fields: {
      object: {validate: (0, _index.assertNodeType)("JSXMemberExpression", "JSXIdentifier")},
      property: {validate: (0, _index.assertNodeType)("JSXIdentifier")}
    }
  });
  (0, _index2.default)("JSXNamespacedName", {
    visitor: ["namespace", "name"],
    aliases: ["JSX"],
    fields: {
      namespace: {validate: (0, _index.assertNodeType)("JSXIdentifier")},
      name: {validate: (0, _index.assertNodeType)("JSXIdentifier")}
    }
  });
  (0, _index2.default)("JSXOpeningElement", {
    builder: ["name", "attributes", "selfClosing"],
    visitor: ["name", "attributes"],
    aliases: ["JSX", "Immutable"],
    fields: {
      name: {validate: (0, _index.assertNodeType)("JSXIdentifier", "JSXMemberExpression")},
      selfClosing: {
        default: false,
        validate: (0, _index.assertValueType)("boolean")
      },
      attributes: {validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("JSXAttribute", "JSXSpreadAttribute")))}
    }
  });
  (0, _index2.default)("JSXSpreadAttribute", {
    visitor: ["argument"],
    aliases: ["JSX"],
    fields: {argument: {validate: (0, _index.assertNodeType)("Expression")}}
  });
  (0, _index2.default)("JSXText", {
    aliases: ["JSX", "Immutable"],
    builder: ["value"],
    fields: {value: {validate: (0, _index.assertValueType)("string")}}
  });
  return module.exports;
});

System.registerDynamic("npm:babel-types@6.9.1/lib/definitions/misc.js", ["./index"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  var _index = $__require('./index');
  var _index2 = _interopRequireDefault(_index);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  (0, _index2.default)("Noop", {visitor: []});
  (0, _index2.default)("ParenthesizedExpression", {
    visitor: ["expression"],
    aliases: ["Expression", "ExpressionWrapper"],
    fields: {expression: {validate: (0, _index.assertNodeType)("Expression")}}
  });
  return module.exports;
});

System.registerDynamic("npm:babel-types@6.9.1/lib/definitions/experimental.js", ["./index"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  var _index = $__require('./index');
  var _index2 = _interopRequireDefault(_index);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  (0, _index2.default)("AwaitExpression", {
    builder: ["argument"],
    visitor: ["argument"],
    aliases: ["Expression", "Terminatorless"],
    fields: {argument: {validate: (0, _index.assertNodeType)("Expression")}}
  });
  (0, _index2.default)("BindExpression", {
    visitor: ["object", "callee"],
    aliases: ["Expression"],
    fields: {}
  });
  (0, _index2.default)("Decorator", {
    visitor: ["expression"],
    fields: {expression: {validate: (0, _index.assertNodeType)("Expression")}}
  });
  (0, _index2.default)("DoExpression", {
    visitor: ["body"],
    aliases: ["Expression"],
    fields: {body: {validate: (0, _index.assertNodeType)("BlockStatement")}}
  });
  (0, _index2.default)("ExportDefaultSpecifier", {
    visitor: ["exported"],
    aliases: ["ModuleSpecifier"],
    fields: {exported: {validate: (0, _index.assertNodeType)("Identifier")}}
  });
  (0, _index2.default)("ExportNamespaceSpecifier", {
    visitor: ["exported"],
    aliases: ["ModuleSpecifier"],
    fields: {exported: {validate: (0, _index.assertNodeType)("Identifier")}}
  });
  (0, _index2.default)("RestProperty", {
    visitor: ["argument"],
    aliases: ["UnaryLike"],
    fields: {argument: {validate: (0, _index.assertNodeType)("LVal")}}
  });
  (0, _index2.default)("SpreadProperty", {
    visitor: ["argument"],
    aliases: ["UnaryLike"],
    fields: {argument: {validate: (0, _index.assertNodeType)("Expression")}}
  });
  return module.exports;
});

System.registerDynamic("npm:babel-types@6.9.1/lib/definitions/init.js", ["./index", "./core", "./es2015", "./flow", "./jsx", "./misc", "./experimental"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  $__require('./index');
  $__require('./core');
  $__require('./es2015');
  $__require('./flow');
  $__require('./jsx');
  $__require('./misc');
  $__require('./experimental');
  return module.exports;
});

System.registerDynamic("npm:babel-types@6.9.1/lib/definitions/index.js", ["babel-runtime/core-js/get-iterator", "babel-runtime/core-js/json/stringify", "babel-runtime/helpers/typeof", "../index"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  exports.DEPRECATED_KEYS = exports.BUILDER_KEYS = exports.NODE_FIELDS = exports.ALIAS_KEYS = exports.VISITOR_KEYS = undefined;
  var _getIterator2 = $__require('babel-runtime/core-js/get-iterator');
  var _getIterator3 = _interopRequireDefault(_getIterator2);
  var _stringify = $__require('babel-runtime/core-js/json/stringify');
  var _stringify2 = _interopRequireDefault(_stringify);
  var _typeof2 = $__require('babel-runtime/helpers/typeof');
  var _typeof3 = _interopRequireDefault(_typeof2);
  exports.assertEach = assertEach;
  exports.assertOneOf = assertOneOf;
  exports.assertNodeType = assertNodeType;
  exports.assertNodeOrValueType = assertNodeOrValueType;
  exports.assertValueType = assertValueType;
  exports.chain = chain;
  exports.default = defineType;
  var _index = $__require('../index');
  var t = _interopRequireWildcard(_index);
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj.default = obj;
      return newObj;
    }
  }
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  var VISITOR_KEYS = exports.VISITOR_KEYS = {};
  var ALIAS_KEYS = exports.ALIAS_KEYS = {};
  var NODE_FIELDS = exports.NODE_FIELDS = {};
  var BUILDER_KEYS = exports.BUILDER_KEYS = {};
  var DEPRECATED_KEYS = exports.DEPRECATED_KEYS = {};
  function getType(val) {
    if (Array.isArray(val)) {
      return "array";
    } else if (val === null) {
      return "null";
    } else if (val === undefined) {
      return "undefined";
    } else {
      return typeof val === "undefined" ? "undefined" : (0, _typeof3.default)(val);
    }
  }
  function assertEach(callback) {
    function validator(node, key, val) {
      if (!Array.isArray(val))
        return;
      for (var i = 0; i < val.length; i++) {
        callback(node, key + "[" + i + "]", val[i]);
      }
    }
    validator.each = callback;
    return validator;
  }
  function assertOneOf() {
    for (var _len = arguments.length,
        vals = Array(_len),
        _key = 0; _key < _len; _key++) {
      vals[_key] = arguments[_key];
    }
    function validate(node, key, val) {
      if (vals.indexOf(val) < 0) {
        throw new TypeError("Property " + key + " expected value to be one of " + (0, _stringify2.default)(vals) + " but got " + (0, _stringify2.default)(val));
      }
    }
    validate.oneOf = vals;
    return validate;
  }
  function assertNodeType() {
    for (var _len2 = arguments.length,
        types = Array(_len2),
        _key2 = 0; _key2 < _len2; _key2++) {
      types[_key2] = arguments[_key2];
    }
    function validate(node, key, val) {
      var valid = false;
      for (var _iterator = types,
          _isArray = Array.isArray(_iterator),
          _i = 0,
          _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator); ; ) {
        var _ref;
        if (_isArray) {
          if (_i >= _iterator.length)
            break;
          _ref = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done)
            break;
          _ref = _i.value;
        }
        var type = _ref;
        if (t.is(type, val)) {
          valid = true;
          break;
        }
      }
      if (!valid) {
        throw new TypeError("Property " + key + " of " + node.type + " expected node to be of a type " + (0, _stringify2.default)(types) + " " + ("but instead got " + (0, _stringify2.default)(val && val.type)));
      }
    }
    validate.oneOfNodeTypes = types;
    return validate;
  }
  function assertNodeOrValueType() {
    for (var _len3 = arguments.length,
        types = Array(_len3),
        _key3 = 0; _key3 < _len3; _key3++) {
      types[_key3] = arguments[_key3];
    }
    function validate(node, key, val) {
      var valid = false;
      for (var _iterator2 = types,
          _isArray2 = Array.isArray(_iterator2),
          _i2 = 0,
          _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2); ; ) {
        var _ref2;
        if (_isArray2) {
          if (_i2 >= _iterator2.length)
            break;
          _ref2 = _iterator2[_i2++];
        } else {
          _i2 = _iterator2.next();
          if (_i2.done)
            break;
          _ref2 = _i2.value;
        }
        var type = _ref2;
        if (getType(val) === type || t.is(type, val)) {
          valid = true;
          break;
        }
      }
      if (!valid) {
        throw new TypeError("Property " + key + " of " + node.type + " expected node to be of a type " + (0, _stringify2.default)(types) + " " + ("but instead got " + (0, _stringify2.default)(val && val.type)));
      }
    }
    validate.oneOfNodeOrValueTypes = types;
    return validate;
  }
  function assertValueType(type) {
    function validate(node, key, val) {
      var valid = getType(val) === type;
      if (!valid) {
        throw new TypeError("Property " + key + " expected type of " + type + " but got " + getType(val));
      }
    }
    validate.type = type;
    return validate;
  }
  function chain() {
    for (var _len4 = arguments.length,
        fns = Array(_len4),
        _key4 = 0; _key4 < _len4; _key4++) {
      fns[_key4] = arguments[_key4];
    }
    function validate() {
      for (var _iterator3 = fns,
          _isArray3 = Array.isArray(_iterator3),
          _i3 = 0,
          _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3); ; ) {
        var _ref3;
        if (_isArray3) {
          if (_i3 >= _iterator3.length)
            break;
          _ref3 = _iterator3[_i3++];
        } else {
          _i3 = _iterator3.next();
          if (_i3.done)
            break;
          _ref3 = _i3.value;
        }
        var fn = _ref3;
        fn.apply(undefined, arguments);
      }
    }
    validate.chainOf = fns;
    return validate;
  }
  function defineType(type) {
    var opts = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
    var inherits = opts.inherits && store[opts.inherits] || {};
    opts.fields = opts.fields || inherits.fields || {};
    opts.visitor = opts.visitor || inherits.visitor || [];
    opts.aliases = opts.aliases || inherits.aliases || [];
    opts.builder = opts.builder || inherits.builder || opts.visitor || [];
    if (opts.deprecatedAlias) {
      DEPRECATED_KEYS[opts.deprecatedAlias] = type;
    }
    for (var _iterator4 = opts.visitor.concat(opts.builder),
        _isArray4 = Array.isArray(_iterator4),
        _i4 = 0,
        _iterator4 = _isArray4 ? _iterator4 : (0, _getIterator3.default)(_iterator4); ; ) {
      var _ref4;
      if (_isArray4) {
        if (_i4 >= _iterator4.length)
          break;
        _ref4 = _iterator4[_i4++];
      } else {
        _i4 = _iterator4.next();
        if (_i4.done)
          break;
        _ref4 = _i4.value;
      }
      var _key5 = _ref4;
      opts.fields[_key5] = opts.fields[_key5] || {};
    }
    for (var key in opts.fields) {
      var field = opts.fields[key];
      if (field.default === undefined) {
        field.default = null;
      } else if (!field.validate) {
        field.validate = assertValueType(getType(field.default));
      }
    }
    VISITOR_KEYS[type] = opts.visitor;
    BUILDER_KEYS[type] = opts.builder;
    NODE_FIELDS[type] = opts.fields;
    ALIAS_KEYS[type] = opts.aliases;
    store[type] = opts;
  }
  var store = {};
  return module.exports;
});

System.registerDynamic("npm:babel-types@6.9.1/lib/react.js", ["./index"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  exports.isReactComponent = undefined;
  exports.isCompatTag = isCompatTag;
  exports.buildChildren = buildChildren;
  var _index = $__require('./index');
  var t = _interopRequireWildcard(_index);
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj.default = obj;
      return newObj;
    }
  }
  var isReactComponent = exports.isReactComponent = t.buildMatchMemberExpression("React.Component");
  function isCompatTag(tagName) {
    return !!tagName && /^[a-z]|\-/.test(tagName);
  }
  function cleanJSXElementLiteralChild(child, args) {
    var lines = child.value.split(/\r\n|\n|\r/);
    var lastNonEmptyLine = 0;
    for (var i = 0; i < lines.length; i++) {
      if (lines[i].match(/[^ \t]/)) {
        lastNonEmptyLine = i;
      }
    }
    var str = "";
    for (var _i = 0; _i < lines.length; _i++) {
      var line = lines[_i];
      var isFirstLine = _i === 0;
      var isLastLine = _i === lines.length - 1;
      var isLastNonEmptyLine = _i === lastNonEmptyLine;
      var trimmedLine = line.replace(/\t/g, " ");
      if (!isFirstLine) {
        trimmedLine = trimmedLine.replace(/^[ ]+/, "");
      }
      if (!isLastLine) {
        trimmedLine = trimmedLine.replace(/[ ]+$/, "");
      }
      if (trimmedLine) {
        if (!isLastNonEmptyLine) {
          trimmedLine += " ";
        }
        str += trimmedLine;
      }
    }
    if (str)
      args.push(t.stringLiteral(str));
  }
  function buildChildren(node) {
    var elems = [];
    for (var i = 0; i < node.children.length; i++) {
      var child = node.children[i];
      if (t.isJSXText(child)) {
        cleanJSXElementLiteralChild(child, elems);
        continue;
      }
      if (t.isJSXExpressionContainer(child))
        child = child.expression;
      if (t.isJSXEmptyExpression(child))
        continue;
      elems.push(child);
    }
    return elems;
  }
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/fn/object/get-own-property-symbols.js", ["../../modules/es6.symbol", "../../modules/_core", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  $__require('../../modules/es6.symbol');
  module.exports = $__require('../../modules/_core').Object.getOwnPropertySymbols;
  return module.exports;
});

System.registerDynamic("npm:babel-runtime@6.9.2/core-js/object/get-own-property-symbols.js", ["core-js/library/fn/object/get-own-property-symbols"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  module.exports = {
    "default": $__require('core-js/library/fn/object/get-own-property-symbols'),
    __esModule: true
  };
  return module.exports;
});

System.registerDynamic("npm:babel-traverse@6.9.0/lib/hub.js", ["babel-runtime/helpers/classCallCheck", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  var _classCallCheck2 = $__require('babel-runtime/helpers/classCallCheck');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  var Hub = function Hub(file, options) {
    (0, _classCallCheck3.default)(this, Hub);
    this.file = file;
    this.options = options;
  };
  exports.default = Hub;
  module.exports = exports["default"];
  return module.exports;
});

System.registerDynamic("npm:ms@0.7.1.json", [], false, function() {
  return {
    "main": "./index",
    "format": "cjs"
  };
});

System.registerDynamic("npm:ms@0.7.1/index.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var s = 1000;
  var m = s * 60;
  var h = m * 60;
  var d = h * 24;
  var y = d * 365.25;
  module.exports = function(val, options) {
    options = options || {};
    if ('string' == typeof val)
      return parse(val);
    return options.long ? long(val) : short(val);
  };
  function parse(str) {
    str = '' + str;
    if (str.length > 10000)
      return;
    var match = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);
    if (!match)
      return;
    var n = parseFloat(match[1]);
    var type = (match[2] || 'ms').toLowerCase();
    switch (type) {
      case 'years':
      case 'year':
      case 'yrs':
      case 'yr':
      case 'y':
        return n * y;
      case 'days':
      case 'day':
      case 'd':
        return n * d;
      case 'hours':
      case 'hour':
      case 'hrs':
      case 'hr':
      case 'h':
        return n * h;
      case 'minutes':
      case 'minute':
      case 'mins':
      case 'min':
      case 'm':
        return n * m;
      case 'seconds':
      case 'second':
      case 'secs':
      case 'sec':
      case 's':
        return n * s;
      case 'milliseconds':
      case 'millisecond':
      case 'msecs':
      case 'msec':
      case 'ms':
        return n;
    }
  }
  function short(ms) {
    if (ms >= d)
      return Math.round(ms / d) + 'd';
    if (ms >= h)
      return Math.round(ms / h) + 'h';
    if (ms >= m)
      return Math.round(ms / m) + 'm';
    if (ms >= s)
      return Math.round(ms / s) + 's';
    return ms + 'ms';
  }
  function long(ms) {
    return plural(ms, d, 'day') || plural(ms, h, 'hour') || plural(ms, m, 'minute') || plural(ms, s, 'second') || ms + ' ms';
  }
  function plural(ms, n, name) {
    if (ms < n)
      return;
    if (ms < n * 1.5)
      return Math.floor(ms / n) + ' ' + name;
    return Math.ceil(ms / n) + ' ' + name + 's';
  }
  return module.exports;
});

System.registerDynamic("npm:debug@2.2.0/debug.js", ["ms"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  exports = module.exports = debug;
  exports.coerce = coerce;
  exports.disable = disable;
  exports.enable = enable;
  exports.enabled = enabled;
  exports.humanize = $__require('ms');
  exports.names = [];
  exports.skips = [];
  exports.formatters = {};
  var prevColor = 0;
  var prevTime;
  function selectColor() {
    return exports.colors[prevColor++ % exports.colors.length];
  }
  function debug(namespace) {
    function disabled() {}
    disabled.enabled = false;
    function enabled() {
      var self = enabled;
      var curr = +new Date();
      var ms = curr - (prevTime || curr);
      self.diff = ms;
      self.prev = prevTime;
      self.curr = curr;
      prevTime = curr;
      if (null == self.useColors)
        self.useColors = exports.useColors();
      if (null == self.color && self.useColors)
        self.color = selectColor();
      var args = Array.prototype.slice.call(arguments);
      args[0] = exports.coerce(args[0]);
      if ('string' !== typeof args[0]) {
        args = ['%o'].concat(args);
      }
      var index = 0;
      args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {
        if (match === '%%')
          return match;
        index++;
        var formatter = exports.formatters[format];
        if ('function' === typeof formatter) {
          var val = args[index];
          match = formatter.call(self, val);
          args.splice(index, 1);
          index--;
        }
        return match;
      });
      if ('function' === typeof exports.formatArgs) {
        args = exports.formatArgs.apply(self, args);
      }
      var logFn = enabled.log || exports.log || console.log.bind(console);
      logFn.apply(self, args);
    }
    enabled.enabled = true;
    var fn = exports.enabled(namespace) ? enabled : disabled;
    fn.namespace = namespace;
    return fn;
  }
  function enable(namespaces) {
    exports.save(namespaces);
    var split = (namespaces || '').split(/[\s,]+/);
    var len = split.length;
    for (var i = 0; i < len; i++) {
      if (!split[i])
        continue;
      namespaces = split[i].replace(/\*/g, '.*?');
      if (namespaces[0] === '-') {
        exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
      } else {
        exports.names.push(new RegExp('^' + namespaces + '$'));
      }
    }
  }
  function disable() {
    exports.enable('');
  }
  function enabled(name) {
    var i,
        len;
    for (i = 0, len = exports.skips.length; i < len; i++) {
      if (exports.skips[i].test(name)) {
        return false;
      }
    }
    for (i = 0, len = exports.names.length; i < len; i++) {
      if (exports.names[i].test(name)) {
        return true;
      }
    }
    return false;
  }
  function coerce(val) {
    if (val instanceof Error)
      return val.stack || val.message;
    return val;
  }
  return module.exports;
});

System.registerDynamic("npm:debug@2.2.0.json", [], false, function() {
  return {
    "main": "browser.js",
    "format": "cjs"
  };
});

System.registerDynamic("npm:debug@2.2.0/browser.js", ["./debug"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  exports = module.exports = $__require('./debug');
  exports.log = log;
  exports.formatArgs = formatArgs;
  exports.save = save;
  exports.load = load;
  exports.useColors = useColors;
  exports.storage = 'undefined' != typeof chrome && 'undefined' != typeof chrome.storage ? chrome.storage.local : localstorage();
  exports.colors = ['lightseagreen', 'forestgreen', 'goldenrod', 'dodgerblue', 'darkorchid', 'crimson'];
  function useColors() {
    return ('WebkitAppearance' in document.documentElement.style) || (window.console && (console.firebug || (console.exception && console.table))) || (navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31);
  }
  exports.formatters.j = function(v) {
    return JSON.stringify(v);
  };
  function formatArgs() {
    var args = arguments;
    var useColors = this.useColors;
    args[0] = (useColors ? '%c' : '') + this.namespace + (useColors ? ' %c' : ' ') + args[0] + (useColors ? '%c ' : ' ') + '+' + exports.humanize(this.diff);
    if (!useColors)
      return args;
    var c = 'color: ' + this.color;
    args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));
    var index = 0;
    var lastC = 0;
    args[0].replace(/%[a-z%]/g, function(match) {
      if ('%%' === match)
        return;
      index++;
      if ('%c' === match) {
        lastC = index;
      }
    });
    args.splice(lastC, 0, c);
    return args;
  }
  function log() {
    return 'object' === typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);
  }
  function save(namespaces) {
    try {
      if (null == namespaces) {
        exports.storage.removeItem('debug');
      } else {
        exports.storage.debug = namespaces;
      }
    } catch (e) {}
  }
  function load() {
    var r;
    try {
      r = exports.storage.debug;
    } catch (e) {}
    return r;
  }
  exports.enable(load());
  function localstorage() {
    try {
      return window.localStorage;
    } catch (e) {}
  }
  return module.exports;
});

System.registerDynamic("npm:invariant@2.2.1.json", [], false, function() {
  return {
    "main": "invariant.js",
    "format": "cjs",
    "meta": {
      "*": {
        "globals": {
          "process": "process"
        }
      },
      "*.json": {
        "format": "json"
      }
    },
    "map": {
      "./invariant.js": {
        "browser": "./browser.js"
      }
    }
  };
});

System.registerDynamic("npm:invariant@2.2.1/browser.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var invariant = function(condition, format, a, b, c, d, e, f) {
    if ("production" !== 'production') {
      if (format === undefined) {
        throw new Error('invariant requires an error message argument');
      }
    }
    if (!condition) {
      var error;
      if (format === undefined) {
        error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
      } else {
        var args = [a, b, c, d, e, f];
        var argIndex = 0;
        error = new Error(format.replace(/%s/g, function() {
          return args[argIndex++];
        }));
        error.name = 'Invariant Violation';
      }
      error.framesToPop = 1;
      throw error;
    }
  };
  module.exports = invariant;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/assign.js", ["./_assignValue", "./_copyObject", "./_createAssigner", "./isArrayLike", "./_isPrototype", "./keys"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var assignValue = $__require('./_assignValue'),
      copyObject = $__require('./_copyObject'),
      createAssigner = $__require('./_createAssigner'),
      isArrayLike = $__require('./isArrayLike'),
      isPrototype = $__require('./_isPrototype'),
      keys = $__require('./keys');
  var objectProto = Object.prototype;
  var hasOwnProperty = objectProto.hasOwnProperty;
  var propertyIsEnumerable = objectProto.propertyIsEnumerable;
  var nonEnumShadows = !propertyIsEnumerable.call({'valueOf': 1}, 'valueOf');
  var assign = createAssigner(function(object, source) {
    if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {
      copyObject(source, keys(source), object);
      return;
    }
    for (var key in source) {
      if (hasOwnProperty.call(source, key)) {
        assignValue(object, key, source[key]);
      }
    }
  });
  module.exports = assign;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_baseRepeat.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var MAX_SAFE_INTEGER = 9007199254740991;
  var nativeFloor = Math.floor;
  function baseRepeat(string, n) {
    var result = '';
    if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
      return result;
    }
    do {
      if (n % 2) {
        result += string;
      }
      n = nativeFloor(n / 2);
      if (n) {
        string += string;
      }
    } while (n);
    return result;
  }
  module.exports = baseRepeat;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_baseToString.js", ["./_Symbol", "./isSymbol"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var Symbol = $__require('./_Symbol'),
      isSymbol = $__require('./isSymbol');
  var INFINITY = 1 / 0;
  var symbolProto = Symbol ? Symbol.prototype : undefined,
      symbolToString = symbolProto ? symbolProto.toString : undefined;
  function baseToString(value) {
    if (typeof value == 'string') {
      return value;
    }
    if (isSymbol(value)) {
      return symbolToString ? symbolToString.call(value) : '';
    }
    var result = (value + '');
    return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
  }
  module.exports = baseToString;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/toString.js", ["./_baseToString"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var baseToString = $__require('./_baseToString');
  function toString(value) {
    return value == null ? '' : baseToString(value);
  }
  module.exports = toString;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/repeat.js", ["./_baseRepeat", "./_isIterateeCall", "./toInteger", "./toString"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var baseRepeat = $__require('./_baseRepeat'),
      isIterateeCall = $__require('./_isIterateeCall'),
      toInteger = $__require('./toInteger'),
      toString = $__require('./toString');
  function repeat(string, n, guard) {
    if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {
      n = 1;
    } else {
      n = toInteger(n);
    }
    return baseRepeat(toString(string), n);
  }
  module.exports = repeat;
  return module.exports;
});

System.registerDynamic("npm:babel-traverse@6.9.0/lib/scope/lib/renamer.js", ["babel-runtime/helpers/classCallCheck", "../binding", "babel-types", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  var _classCallCheck2 = $__require('babel-runtime/helpers/classCallCheck');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _binding = $__require('../binding');
  var _binding2 = _interopRequireDefault(_binding);
  var _babelTypes = $__require('babel-types');
  var t = _interopRequireWildcard(_babelTypes);
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj.default = obj;
      return newObj;
    }
  }
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  var renameVisitor = {
    ReferencedIdentifier: function ReferencedIdentifier(_ref, state) {
      var node = _ref.node;
      if (node.name === state.oldName) {
        node.name = state.newName;
      }
    },
    Scope: function Scope(path, state) {
      if (!path.scope.bindingIdentifierEquals(state.oldName, state.binding.identifier)) {
        path.skip();
      }
    },
    "AssignmentExpression|Declaration": function AssignmentExpressionDeclaration(path, state) {
      var ids = path.getOuterBindingIdentifiers();
      for (var name in ids) {
        if (name === state.oldName)
          ids[name].name = state.newName;
      }
    }
  };
  var Renamer = function() {
    function Renamer(binding, oldName, newName) {
      (0, _classCallCheck3.default)(this, Renamer);
      this.newName = newName;
      this.oldName = oldName;
      this.binding = binding;
    }
    Renamer.prototype.maybeConvertFromExportDeclaration = function maybeConvertFromExportDeclaration(parentDeclar) {
      var exportDeclar = parentDeclar.parentPath.isExportDeclaration() && parentDeclar.parentPath;
      if (!exportDeclar)
        return;
      var isDefault = exportDeclar.isExportDefaultDeclaration();
      if (isDefault && (parentDeclar.isFunctionDeclaration() || parentDeclar.isClassDeclaration()) && !parentDeclar.node.id) {
        parentDeclar.node.id = parentDeclar.scope.generateUidIdentifier("default");
      }
      var bindingIdentifiers = parentDeclar.getOuterBindingIdentifiers();
      var specifiers = [];
      for (var name in bindingIdentifiers) {
        var localName = name === this.oldName ? this.newName : name;
        var exportedName = isDefault ? "default" : name;
        specifiers.push(t.exportSpecifier(t.identifier(localName), t.identifier(exportedName)));
      }
      var aliasDeclar = t.exportNamedDeclaration(null, specifiers);
      if (parentDeclar.isFunctionDeclaration()) {
        aliasDeclar._blockHoist = 3;
      }
      exportDeclar.insertAfter(aliasDeclar);
      exportDeclar.replaceWith(parentDeclar.node);
    };
    Renamer.prototype.maybeConvertFromClassFunctionDeclaration = function maybeConvertFromClassFunctionDeclaration(path) {
      return;
      if (!path.isFunctionDeclaration() && !path.isClassDeclaration())
        return;
      if (this.binding.kind !== "hoisted")
        return;
      path.node.id = t.identifier(this.oldName);
      path.node._blockHoist = 3;
      path.replaceWith(t.variableDeclaration("let", [t.variableDeclarator(t.identifier(this.newName), t.toExpression(path.node))]));
    };
    Renamer.prototype.maybeConvertFromClassFunctionExpression = function maybeConvertFromClassFunctionExpression(path) {
      return;
      if (!path.isFunctionExpression() && !path.isClassExpression())
        return;
      if (this.binding.kind !== "local")
        return;
      path.node.id = t.identifier(this.oldName);
      this.binding.scope.parent.push({id: t.identifier(this.newName)});
      path.replaceWith(t.assignmentExpression("=", t.identifier(this.newName), path.node));
    };
    Renamer.prototype.rename = function rename(block) {
      var binding = this.binding;
      var oldName = this.oldName;
      var newName = this.newName;
      var scope = binding.scope;
      var path = binding.path;
      var parentDeclar = path.find(function(path) {
        return path.isDeclaration() || path.isFunctionExpression();
      });
      if (parentDeclar) {
        this.maybeConvertFromExportDeclaration(parentDeclar);
      }
      scope.traverse(block || scope.block, renameVisitor, this);
      if (!block) {
        scope.removeOwnBinding(oldName);
        scope.bindings[newName] = binding;
        this.binding.identifier.name = newName;
      }
      if (binding.type === "hoisted") {}
      if (parentDeclar) {
        this.maybeConvertFromClassFunctionDeclaration(parentDeclar);
        this.maybeConvertFromClassFunctionExpression(parentDeclar);
      }
    };
    return Renamer;
  }();
  exports.default = Renamer;
  module.exports = exports["default"];
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_assignInDefaults.js", ["./eq"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var eq = $__require('./eq');
  var objectProto = Object.prototype;
  var hasOwnProperty = objectProto.hasOwnProperty;
  function assignInDefaults(objValue, srcValue, key, object) {
    if (objValue === undefined || (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
      return srcValue;
    }
    return objValue;
  }
  module.exports = assignInDefaults;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_isIterateeCall.js", ["./eq", "./isArrayLike", "./_isIndex", "./isObject"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var eq = $__require('./eq'),
      isArrayLike = $__require('./isArrayLike'),
      isIndex = $__require('./_isIndex'),
      isObject = $__require('./isObject');
  function isIterateeCall(value, index, object) {
    if (!isObject(object)) {
      return false;
    }
    var type = typeof index;
    if (type == 'number' ? (isArrayLike(object) && isIndex(index, object.length)) : (type == 'string' && index in object)) {
      return eq(object[index], value);
    }
    return false;
  }
  module.exports = isIterateeCall;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_createAssigner.js", ["./_isIterateeCall", "./rest"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var isIterateeCall = $__require('./_isIterateeCall'),
      rest = $__require('./rest');
  function createAssigner(assigner) {
    return rest(function(object, sources) {
      var index = -1,
          length = sources.length,
          customizer = length > 1 ? sources[length - 1] : undefined,
          guard = length > 2 ? sources[2] : undefined;
      customizer = (assigner.length > 3 && typeof customizer == 'function') ? (length--, customizer) : undefined;
      if (guard && isIterateeCall(sources[0], sources[1], guard)) {
        customizer = length < 3 ? undefined : customizer;
        length = 1;
      }
      object = Object(object);
      while (++index < length) {
        var source = sources[index];
        if (source) {
          assigner(object, source, index, customizer);
        }
      }
      return object;
    });
  }
  module.exports = createAssigner;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_Reflect.js", ["./_root"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var root = $__require('./_root');
  var Reflect = root.Reflect;
  module.exports = Reflect;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_iteratorToArray.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  function iteratorToArray(iterator) {
    var data,
        result = [];
    while (!(data = iterator.next()).done) {
      result.push(data.value);
    }
    return result;
  }
  module.exports = iteratorToArray;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_baseKeysIn.js", ["./_Reflect", "./_iteratorToArray"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var Reflect = $__require('./_Reflect'),
      iteratorToArray = $__require('./_iteratorToArray');
  var objectProto = Object.prototype;
  var enumerate = Reflect ? Reflect.enumerate : undefined,
      propertyIsEnumerable = objectProto.propertyIsEnumerable;
  function baseKeysIn(object) {
    object = object == null ? object : Object(object);
    var result = [];
    for (var key in object) {
      result.push(key);
    }
    return result;
  }
  if (enumerate && !propertyIsEnumerable.call({'valueOf': 1}, 'valueOf')) {
    baseKeysIn = function(object) {
      return iteratorToArray(enumerate(object));
    };
  }
  module.exports = baseKeysIn;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/keysIn.js", ["./_baseKeysIn", "./_indexKeys", "./_isIndex", "./_isPrototype"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var baseKeysIn = $__require('./_baseKeysIn'),
      indexKeys = $__require('./_indexKeys'),
      isIndex = $__require('./_isIndex'),
      isPrototype = $__require('./_isPrototype');
  var objectProto = Object.prototype;
  var hasOwnProperty = objectProto.hasOwnProperty;
  function keysIn(object) {
    var index = -1,
        isProto = isPrototype(object),
        props = baseKeysIn(object),
        propsLength = props.length,
        indexes = indexKeys(object),
        skipIndexes = !!indexes,
        result = indexes || [],
        length = result.length;
    while (++index < propsLength) {
      var key = props[index];
      if (!(skipIndexes && (key == 'length' || isIndex(key, length))) && !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
        result.push(key);
      }
    }
    return result;
  }
  module.exports = keysIn;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/assignInWith.js", ["./_copyObject", "./_createAssigner", "./keysIn"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var copyObject = $__require('./_copyObject'),
      createAssigner = $__require('./_createAssigner'),
      keysIn = $__require('./keysIn');
  var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
    copyObject(source, keysIn(source), object, customizer);
  });
  module.exports = assignInWith;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_apply.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  function apply(func, thisArg, args) {
    var length = args.length;
    switch (length) {
      case 0:
        return func.call(thisArg);
      case 1:
        return func.call(thisArg, args[0]);
      case 2:
        return func.call(thisArg, args[0], args[1]);
      case 3:
        return func.call(thisArg, args[0], args[1], args[2]);
    }
    return func.apply(thisArg, args);
  }
  module.exports = apply;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/rest.js", ["./_apply", "./toInteger"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var apply = $__require('./_apply'),
      toInteger = $__require('./toInteger');
  var FUNC_ERROR_TEXT = 'Expected a function';
  var nativeMax = Math.max;
  function rest(func, start) {
    if (typeof func != 'function') {
      throw new TypeError(FUNC_ERROR_TEXT);
    }
    start = nativeMax(start === undefined ? (func.length - 1) : toInteger(start), 0);
    return function() {
      var args = arguments,
          index = -1,
          length = nativeMax(args.length - start, 0),
          array = Array(length);
      while (++index < length) {
        array[index] = args[start + index];
      }
      switch (start) {
        case 0:
          return func.call(this, array);
        case 1:
          return func.call(this, args[0], array);
        case 2:
          return func.call(this, args[0], args[1], array);
      }
      var otherArgs = Array(start + 1);
      index = -1;
      while (++index < start) {
        otherArgs[index] = args[index];
      }
      otherArgs[start] = array;
      return apply(func, this, otherArgs);
    };
  }
  module.exports = rest;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/defaults.js", ["./_apply", "./_assignInDefaults", "./assignInWith", "./rest"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var apply = $__require('./_apply'),
      assignInDefaults = $__require('./_assignInDefaults'),
      assignInWith = $__require('./assignInWith'),
      rest = $__require('./rest');
  var defaults = rest(function(args) {
    args.push(undefined, assignInDefaults);
    return apply(assignInWith, undefined, args);
  });
  module.exports = defaults;
  return module.exports;
});

System.registerDynamic("npm:babel-traverse@6.9.0/lib/scope/binding.js", ["babel-runtime/helpers/classCallCheck", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  var _classCallCheck2 = $__require('babel-runtime/helpers/classCallCheck');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  var Binding = function() {
    function Binding(_ref) {
      var existing = _ref.existing;
      var identifier = _ref.identifier;
      var scope = _ref.scope;
      var path = _ref.path;
      var kind = _ref.kind;
      (0, _classCallCheck3.default)(this, Binding);
      this.identifier = identifier;
      this.scope = scope;
      this.path = path;
      this.kind = kind;
      this.constantViolations = [];
      this.constant = true;
      this.referencePaths = [];
      this.referenced = false;
      this.references = 0;
      this.clearValue();
      if (existing) {
        this.constantViolations = [].concat(existing.path, existing.constantViolations, this.constantViolations);
      }
    }
    Binding.prototype.deoptValue = function deoptValue() {
      this.clearValue();
      this.hasDeoptedValue = true;
    };
    Binding.prototype.setValue = function setValue(value) {
      if (this.hasDeoptedValue)
        return;
      this.hasValue = true;
      this.value = value;
    };
    Binding.prototype.clearValue = function clearValue() {
      this.hasDeoptedValue = false;
      this.hasValue = false;
      this.value = null;
    };
    Binding.prototype.reassign = function reassign(path) {
      this.constant = false;
      if (this.constantViolations.indexOf(path) !== -1) {
        return;
      }
      this.constantViolations.push(path);
    };
    Binding.prototype.reference = function reference(path) {
      if (this.referencePaths.indexOf(path) !== -1) {
        return;
      }
      this.referenced = true;
      this.references++;
      this.referencePaths.push(path);
    };
    Binding.prototype.dereference = function dereference() {
      this.references--;
      this.referenced = !!this.references;
    };
    return Binding;
  }();
  exports.default = Binding;
  module.exports = exports["default"];
  return module.exports;
});

System.registerDynamic("npm:globals@8.18.0/globals.json", [], false, function() {
  return {
    "builtin": {
      "Array": false,
      "ArrayBuffer": false,
      "Boolean": false,
      "constructor": false,
      "DataView": false,
      "Date": false,
      "decodeURI": false,
      "decodeURIComponent": false,
      "encodeURI": false,
      "encodeURIComponent": false,
      "Error": false,
      "escape": false,
      "eval": false,
      "EvalError": false,
      "Float32Array": false,
      "Float64Array": false,
      "Function": false,
      "hasOwnProperty": false,
      "Infinity": false,
      "Int16Array": false,
      "Int32Array": false,
      "Int8Array": false,
      "isFinite": false,
      "isNaN": false,
      "isPrototypeOf": false,
      "JSON": false,
      "Map": false,
      "Math": false,
      "NaN": false,
      "Number": false,
      "Object": false,
      "parseFloat": false,
      "parseInt": false,
      "Promise": false,
      "propertyIsEnumerable": false,
      "Proxy": false,
      "RangeError": false,
      "ReferenceError": false,
      "Reflect": false,
      "RegExp": false,
      "Set": false,
      "String": false,
      "Symbol": false,
      "SyntaxError": false,
      "System": false,
      "toLocaleString": false,
      "toString": false,
      "TypeError": false,
      "Uint16Array": false,
      "Uint32Array": false,
      "Uint8Array": false,
      "Uint8ClampedArray": false,
      "undefined": false,
      "unescape": false,
      "URIError": false,
      "valueOf": false,
      "WeakMap": false,
      "WeakSet": false
    },
    "es5": {
      "Array": false,
      "Boolean": false,
      "constructor": false,
      "Date": false,
      "decodeURI": false,
      "decodeURIComponent": false,
      "encodeURI": false,
      "encodeURIComponent": false,
      "Error": false,
      "escape": false,
      "eval": false,
      "EvalError": false,
      "Float32Array": false,
      "Float64Array": false,
      "Function": false,
      "hasOwnProperty": false,
      "Infinity": false,
      "isFinite": false,
      "isNaN": false,
      "isPrototypeOf": false,
      "JSON": false,
      "Math": false,
      "NaN": false,
      "Number": false,
      "Object": false,
      "parseFloat": false,
      "parseInt": false,
      "propertyIsEnumerable": false,
      "RangeError": false,
      "ReferenceError": false,
      "RegExp": false,
      "String": false,
      "SyntaxError": false,
      "toLocaleString": false,
      "toString": false,
      "TypeError": false,
      "undefined": false,
      "unescape": false,
      "URIError": false,
      "valueOf": false
    },
    "es6": {
      "Array": false,
      "ArrayBuffer": false,
      "Boolean": false,
      "constructor": false,
      "DataView": false,
      "Date": false,
      "decodeURI": false,
      "decodeURIComponent": false,
      "encodeURI": false,
      "encodeURIComponent": false,
      "Error": false,
      "escape": false,
      "eval": false,
      "EvalError": false,
      "Float32Array": false,
      "Float64Array": false,
      "Function": false,
      "hasOwnProperty": false,
      "Infinity": false,
      "Int16Array": false,
      "Int32Array": false,
      "Int8Array": false,
      "isFinite": false,
      "isNaN": false,
      "isPrototypeOf": false,
      "JSON": false,
      "Map": false,
      "Math": false,
      "NaN": false,
      "Number": false,
      "Object": false,
      "parseFloat": false,
      "parseInt": false,
      "Promise": false,
      "propertyIsEnumerable": false,
      "Proxy": false,
      "RangeError": false,
      "ReferenceError": false,
      "Reflect": false,
      "RegExp": false,
      "Set": false,
      "String": false,
      "Symbol": false,
      "SyntaxError": false,
      "System": false,
      "toLocaleString": false,
      "toString": false,
      "TypeError": false,
      "Uint16Array": false,
      "Uint32Array": false,
      "Uint8Array": false,
      "Uint8ClampedArray": false,
      "undefined": false,
      "unescape": false,
      "URIError": false,
      "valueOf": false,
      "WeakMap": false,
      "WeakSet": false
    },
    "browser": {
      "addEventListener": false,
      "alert": false,
      "AnalyserNode": false,
      "AnimationEvent": false,
      "applicationCache": false,
      "ApplicationCache": false,
      "ApplicationCacheErrorEvent": false,
      "atob": false,
      "Attr": false,
      "Audio": false,
      "AudioBuffer": false,
      "AudioBufferSourceNode": false,
      "AudioContext": false,
      "AudioDestinationNode": false,
      "AudioListener": false,
      "AudioNode": false,
      "AudioParam": false,
      "AudioProcessingEvent": false,
      "AutocompleteErrorEvent": false,
      "BarProp": false,
      "BatteryManager": false,
      "BeforeUnloadEvent": false,
      "BiquadFilterNode": false,
      "Blob": false,
      "blur": false,
      "btoa": false,
      "Cache": false,
      "caches": false,
      "CacheStorage": false,
      "cancelAnimationFrame": false,
      "CanvasGradient": false,
      "CanvasPattern": false,
      "CanvasRenderingContext2D": false,
      "CDATASection": false,
      "ChannelMergerNode": false,
      "ChannelSplitterNode": false,
      "CharacterData": false,
      "clearInterval": false,
      "clearTimeout": false,
      "clientInformation": false,
      "ClientRect": false,
      "ClientRectList": false,
      "ClipboardEvent": false,
      "close": false,
      "closed": false,
      "CloseEvent": false,
      "Comment": false,
      "CompositionEvent": false,
      "confirm": false,
      "console": false,
      "ConvolverNode": false,
      "crypto": false,
      "Crypto": false,
      "CryptoKey": false,
      "CSS": false,
      "CSSFontFaceRule": false,
      "CSSImportRule": false,
      "CSSKeyframeRule": false,
      "CSSKeyframesRule": false,
      "CSSMediaRule": false,
      "CSSPageRule": false,
      "CSSRule": false,
      "CSSRuleList": false,
      "CSSStyleDeclaration": false,
      "CSSStyleRule": false,
      "CSSStyleSheet": false,
      "CSSSupportsRule": false,
      "CSSUnknownRule": false,
      "CSSViewportRule": false,
      "CustomEvent": false,
      "DataTransfer": false,
      "DataTransferItem": false,
      "DataTransferItemList": false,
      "Debug": false,
      "defaultStatus": false,
      "defaultstatus": false,
      "DelayNode": false,
      "DeviceMotionEvent": false,
      "DeviceOrientationEvent": false,
      "devicePixelRatio": false,
      "dispatchEvent": false,
      "document": false,
      "Document": false,
      "DocumentFragment": false,
      "DocumentType": false,
      "DOMError": false,
      "DOMException": false,
      "DOMImplementation": false,
      "DOMParser": false,
      "DOMSettableTokenList": false,
      "DOMStringList": false,
      "DOMStringMap": false,
      "DOMTokenList": false,
      "DragEvent": false,
      "DynamicsCompressorNode": false,
      "Element": false,
      "ElementTimeControl": false,
      "ErrorEvent": false,
      "event": false,
      "Event": false,
      "EventSource": false,
      "EventTarget": false,
      "external": false,
      "fetch": false,
      "File": false,
      "FileError": false,
      "FileList": false,
      "FileReader": false,
      "find": false,
      "focus": false,
      "FocusEvent": false,
      "FontFace": false,
      "FormData": false,
      "frameElement": false,
      "frames": false,
      "GainNode": false,
      "Gamepad": false,
      "GamepadButton": false,
      "GamepadEvent": false,
      "getComputedStyle": false,
      "getSelection": false,
      "HashChangeEvent": false,
      "Headers": false,
      "history": false,
      "History": false,
      "HTMLAllCollection": false,
      "HTMLAnchorElement": false,
      "HTMLAppletElement": false,
      "HTMLAreaElement": false,
      "HTMLAudioElement": false,
      "HTMLBaseElement": false,
      "HTMLBlockquoteElement": false,
      "HTMLBodyElement": false,
      "HTMLBRElement": false,
      "HTMLButtonElement": false,
      "HTMLCanvasElement": false,
      "HTMLCollection": false,
      "HTMLContentElement": false,
      "HTMLDataListElement": false,
      "HTMLDetailsElement": false,
      "HTMLDialogElement": false,
      "HTMLDirectoryElement": false,
      "HTMLDivElement": false,
      "HTMLDListElement": false,
      "HTMLDocument": false,
      "HTMLElement": false,
      "HTMLEmbedElement": false,
      "HTMLFieldSetElement": false,
      "HTMLFontElement": false,
      "HTMLFormControlsCollection": false,
      "HTMLFormElement": false,
      "HTMLFrameElement": false,
      "HTMLFrameSetElement": false,
      "HTMLHeadElement": false,
      "HTMLHeadingElement": false,
      "HTMLHRElement": false,
      "HTMLHtmlElement": false,
      "HTMLIFrameElement": false,
      "HTMLImageElement": false,
      "HTMLInputElement": false,
      "HTMLIsIndexElement": false,
      "HTMLKeygenElement": false,
      "HTMLLabelElement": false,
      "HTMLLayerElement": false,
      "HTMLLegendElement": false,
      "HTMLLIElement": false,
      "HTMLLinkElement": false,
      "HTMLMapElement": false,
      "HTMLMarqueeElement": false,
      "HTMLMediaElement": false,
      "HTMLMenuElement": false,
      "HTMLMetaElement": false,
      "HTMLMeterElement": false,
      "HTMLModElement": false,
      "HTMLObjectElement": false,
      "HTMLOListElement": false,
      "HTMLOptGroupElement": false,
      "HTMLOptionElement": false,
      "HTMLOptionsCollection": false,
      "HTMLOutputElement": false,
      "HTMLParagraphElement": false,
      "HTMLParamElement": false,
      "HTMLPictureElement": false,
      "HTMLPreElement": false,
      "HTMLProgressElement": false,
      "HTMLQuoteElement": false,
      "HTMLScriptElement": false,
      "HTMLSelectElement": false,
      "HTMLShadowElement": false,
      "HTMLSourceElement": false,
      "HTMLSpanElement": false,
      "HTMLStyleElement": false,
      "HTMLTableCaptionElement": false,
      "HTMLTableCellElement": false,
      "HTMLTableColElement": false,
      "HTMLTableElement": false,
      "HTMLTableRowElement": false,
      "HTMLTableSectionElement": false,
      "HTMLTemplateElement": false,
      "HTMLTextAreaElement": false,
      "HTMLTitleElement": false,
      "HTMLTrackElement": false,
      "HTMLUListElement": false,
      "HTMLUnknownElement": false,
      "HTMLVideoElement": false,
      "IDBCursor": false,
      "IDBCursorWithValue": false,
      "IDBDatabase": false,
      "IDBEnvironment": false,
      "IDBFactory": false,
      "IDBIndex": false,
      "IDBKeyRange": false,
      "IDBObjectStore": false,
      "IDBOpenDBRequest": false,
      "IDBRequest": false,
      "IDBTransaction": false,
      "IDBVersionChangeEvent": false,
      "Image": false,
      "ImageBitmap": false,
      "ImageData": false,
      "indexedDB": false,
      "innerHeight": false,
      "innerWidth": false,
      "InputEvent": false,
      "InputMethodContext": false,
      "Intl": false,
      "KeyboardEvent": false,
      "length": false,
      "localStorage": false,
      "location": false,
      "Location": false,
      "locationbar": false,
      "matchMedia": false,
      "MediaElementAudioSourceNode": false,
      "MediaEncryptedEvent": false,
      "MediaError": false,
      "MediaKeyError": false,
      "MediaKeyEvent": false,
      "MediaKeyMessageEvent": false,
      "MediaKeys": false,
      "MediaKeySession": false,
      "MediaKeyStatusMap": false,
      "MediaKeySystemAccess": false,
      "MediaList": false,
      "MediaQueryList": false,
      "MediaQueryListEvent": false,
      "MediaSource": false,
      "MediaStreamAudioDestinationNode": false,
      "MediaStreamAudioSourceNode": false,
      "MediaStreamEvent": false,
      "MediaStreamTrack": false,
      "menubar": false,
      "MessageChannel": false,
      "MessageEvent": false,
      "MessagePort": false,
      "MIDIAccess": false,
      "MIDIConnectionEvent": false,
      "MIDIInput": false,
      "MIDIInputMap": false,
      "MIDIMessageEvent": false,
      "MIDIOutput": false,
      "MIDIOutputMap": false,
      "MIDIPort": false,
      "MimeType": false,
      "MimeTypeArray": false,
      "MouseEvent": false,
      "moveBy": false,
      "moveTo": false,
      "MutationEvent": false,
      "MutationObserver": false,
      "MutationRecord": false,
      "name": false,
      "NamedNodeMap": false,
      "navigator": false,
      "Navigator": false,
      "Node": false,
      "NodeFilter": false,
      "NodeIterator": false,
      "NodeList": false,
      "Notification": false,
      "OfflineAudioCompletionEvent": false,
      "OfflineAudioContext": false,
      "offscreenBuffering": false,
      "onbeforeunload": true,
      "onblur": true,
      "onerror": true,
      "onfocus": true,
      "onload": true,
      "onresize": true,
      "onunload": true,
      "open": false,
      "openDatabase": false,
      "opener": false,
      "opera": false,
      "Option": false,
      "OscillatorNode": false,
      "outerHeight": false,
      "outerWidth": false,
      "PageTransitionEvent": false,
      "pageXOffset": false,
      "pageYOffset": false,
      "parent": false,
      "Path2D": false,
      "performance": false,
      "Performance": false,
      "PerformanceEntry": false,
      "PerformanceMark": false,
      "PerformanceMeasure": false,
      "PerformanceNavigation": false,
      "PerformanceResourceTiming": false,
      "PerformanceTiming": false,
      "PeriodicWave": false,
      "Permissions": false,
      "PermissionStatus": false,
      "personalbar": false,
      "Plugin": false,
      "PluginArray": false,
      "PopStateEvent": false,
      "postMessage": false,
      "print": false,
      "ProcessingInstruction": false,
      "ProgressEvent": false,
      "prompt": false,
      "PushManager": false,
      "PushSubscription": false,
      "RadioNodeList": false,
      "Range": false,
      "ReadableByteStream": false,
      "ReadableStream": false,
      "removeEventListener": false,
      "Request": false,
      "requestAnimationFrame": false,
      "resizeBy": false,
      "resizeTo": false,
      "Response": false,
      "RTCIceCandidate": false,
      "RTCSessionDescription": false,
      "screen": false,
      "Screen": false,
      "screenLeft": false,
      "ScreenOrientation": false,
      "screenTop": false,
      "screenX": false,
      "screenY": false,
      "ScriptProcessorNode": false,
      "scroll": false,
      "scrollbars": false,
      "scrollBy": false,
      "scrollTo": false,
      "scrollX": false,
      "scrollY": false,
      "SecurityPolicyViolationEvent": false,
      "Selection": false,
      "self": false,
      "ServiceWorker": false,
      "ServiceWorkerContainer": false,
      "ServiceWorkerRegistration": false,
      "sessionStorage": false,
      "setInterval": false,
      "setTimeout": false,
      "ShadowRoot": false,
      "SharedWorker": false,
      "showModalDialog": false,
      "speechSynthesis": false,
      "SpeechSynthesisEvent": false,
      "SpeechSynthesisUtterance": false,
      "status": false,
      "statusbar": false,
      "stop": false,
      "Storage": false,
      "StorageEvent": false,
      "styleMedia": false,
      "StyleSheet": false,
      "StyleSheetList": false,
      "SubtleCrypto": false,
      "SVGAElement": false,
      "SVGAltGlyphDefElement": false,
      "SVGAltGlyphElement": false,
      "SVGAltGlyphItemElement": false,
      "SVGAngle": false,
      "SVGAnimateColorElement": false,
      "SVGAnimatedAngle": false,
      "SVGAnimatedBoolean": false,
      "SVGAnimatedEnumeration": false,
      "SVGAnimatedInteger": false,
      "SVGAnimatedLength": false,
      "SVGAnimatedLengthList": false,
      "SVGAnimatedNumber": false,
      "SVGAnimatedNumberList": false,
      "SVGAnimatedPathData": false,
      "SVGAnimatedPoints": false,
      "SVGAnimatedPreserveAspectRatio": false,
      "SVGAnimatedRect": false,
      "SVGAnimatedString": false,
      "SVGAnimatedTransformList": false,
      "SVGAnimateElement": false,
      "SVGAnimateMotionElement": false,
      "SVGAnimateTransformElement": false,
      "SVGAnimationElement": false,
      "SVGCircleElement": false,
      "SVGClipPathElement": false,
      "SVGColor": false,
      "SVGColorProfileElement": false,
      "SVGColorProfileRule": false,
      "SVGComponentTransferFunctionElement": false,
      "SVGCSSRule": false,
      "SVGCursorElement": false,
      "SVGDefsElement": false,
      "SVGDescElement": false,
      "SVGDiscardElement": false,
      "SVGDocument": false,
      "SVGElement": false,
      "SVGElementInstance": false,
      "SVGElementInstanceList": false,
      "SVGEllipseElement": false,
      "SVGEvent": false,
      "SVGExternalResourcesRequired": false,
      "SVGFEBlendElement": false,
      "SVGFEColorMatrixElement": false,
      "SVGFEComponentTransferElement": false,
      "SVGFECompositeElement": false,
      "SVGFEConvolveMatrixElement": false,
      "SVGFEDiffuseLightingElement": false,
      "SVGFEDisplacementMapElement": false,
      "SVGFEDistantLightElement": false,
      "SVGFEDropShadowElement": false,
      "SVGFEFloodElement": false,
      "SVGFEFuncAElement": false,
      "SVGFEFuncBElement": false,
      "SVGFEFuncGElement": false,
      "SVGFEFuncRElement": false,
      "SVGFEGaussianBlurElement": false,
      "SVGFEImageElement": false,
      "SVGFEMergeElement": false,
      "SVGFEMergeNodeElement": false,
      "SVGFEMorphologyElement": false,
      "SVGFEOffsetElement": false,
      "SVGFEPointLightElement": false,
      "SVGFESpecularLightingElement": false,
      "SVGFESpotLightElement": false,
      "SVGFETileElement": false,
      "SVGFETurbulenceElement": false,
      "SVGFilterElement": false,
      "SVGFilterPrimitiveStandardAttributes": false,
      "SVGFitToViewBox": false,
      "SVGFontElement": false,
      "SVGFontFaceElement": false,
      "SVGFontFaceFormatElement": false,
      "SVGFontFaceNameElement": false,
      "SVGFontFaceSrcElement": false,
      "SVGFontFaceUriElement": false,
      "SVGForeignObjectElement": false,
      "SVGGElement": false,
      "SVGGeometryElement": false,
      "SVGGlyphElement": false,
      "SVGGlyphRefElement": false,
      "SVGGradientElement": false,
      "SVGGraphicsElement": false,
      "SVGHKernElement": false,
      "SVGICCColor": false,
      "SVGImageElement": false,
      "SVGLangSpace": false,
      "SVGLength": false,
      "SVGLengthList": false,
      "SVGLinearGradientElement": false,
      "SVGLineElement": false,
      "SVGLocatable": false,
      "SVGMarkerElement": false,
      "SVGMaskElement": false,
      "SVGMatrix": false,
      "SVGMetadataElement": false,
      "SVGMissingGlyphElement": false,
      "SVGMPathElement": false,
      "SVGNumber": false,
      "SVGNumberList": false,
      "SVGPaint": false,
      "SVGPathElement": false,
      "SVGPathSeg": false,
      "SVGPathSegArcAbs": false,
      "SVGPathSegArcRel": false,
      "SVGPathSegClosePath": false,
      "SVGPathSegCurvetoCubicAbs": false,
      "SVGPathSegCurvetoCubicRel": false,
      "SVGPathSegCurvetoCubicSmoothAbs": false,
      "SVGPathSegCurvetoCubicSmoothRel": false,
      "SVGPathSegCurvetoQuadraticAbs": false,
      "SVGPathSegCurvetoQuadraticRel": false,
      "SVGPathSegCurvetoQuadraticSmoothAbs": false,
      "SVGPathSegCurvetoQuadraticSmoothRel": false,
      "SVGPathSegLinetoAbs": false,
      "SVGPathSegLinetoHorizontalAbs": false,
      "SVGPathSegLinetoHorizontalRel": false,
      "SVGPathSegLinetoRel": false,
      "SVGPathSegLinetoVerticalAbs": false,
      "SVGPathSegLinetoVerticalRel": false,
      "SVGPathSegList": false,
      "SVGPathSegMovetoAbs": false,
      "SVGPathSegMovetoRel": false,
      "SVGPatternElement": false,
      "SVGPoint": false,
      "SVGPointList": false,
      "SVGPolygonElement": false,
      "SVGPolylineElement": false,
      "SVGPreserveAspectRatio": false,
      "SVGRadialGradientElement": false,
      "SVGRect": false,
      "SVGRectElement": false,
      "SVGRenderingIntent": false,
      "SVGScriptElement": false,
      "SVGSetElement": false,
      "SVGStopElement": false,
      "SVGStringList": false,
      "SVGStylable": false,
      "SVGStyleElement": false,
      "SVGSVGElement": false,
      "SVGSwitchElement": false,
      "SVGSymbolElement": false,
      "SVGTests": false,
      "SVGTextContentElement": false,
      "SVGTextElement": false,
      "SVGTextPathElement": false,
      "SVGTextPositioningElement": false,
      "SVGTitleElement": false,
      "SVGTransform": false,
      "SVGTransformable": false,
      "SVGTransformList": false,
      "SVGTRefElement": false,
      "SVGTSpanElement": false,
      "SVGUnitTypes": false,
      "SVGURIReference": false,
      "SVGUseElement": false,
      "SVGViewElement": false,
      "SVGViewSpec": false,
      "SVGVKernElement": false,
      "SVGZoomAndPan": false,
      "SVGZoomEvent": false,
      "Text": false,
      "TextDecoder": false,
      "TextEncoder": false,
      "TextEvent": false,
      "TextMetrics": false,
      "TextTrack": false,
      "TextTrackCue": false,
      "TextTrackCueList": false,
      "TextTrackList": false,
      "TimeEvent": false,
      "TimeRanges": false,
      "toolbar": false,
      "top": false,
      "Touch": false,
      "TouchEvent": false,
      "TouchList": false,
      "TrackEvent": false,
      "TransitionEvent": false,
      "TreeWalker": false,
      "UIEvent": false,
      "URL": false,
      "ValidityState": false,
      "VTTCue": false,
      "WaveShaperNode": false,
      "WebGLActiveInfo": false,
      "WebGLBuffer": false,
      "WebGLContextEvent": false,
      "WebGLFramebuffer": false,
      "WebGLProgram": false,
      "WebGLRenderbuffer": false,
      "WebGLRenderingContext": false,
      "WebGLShader": false,
      "WebGLShaderPrecisionFormat": false,
      "WebGLTexture": false,
      "WebGLUniformLocation": false,
      "WebSocket": false,
      "WheelEvent": false,
      "window": false,
      "Window": false,
      "Worker": false,
      "XDomainRequest": false,
      "XMLDocument": false,
      "XMLHttpRequest": false,
      "XMLHttpRequestEventTarget": false,
      "XMLHttpRequestProgressEvent": false,
      "XMLHttpRequestUpload": false,
      "XMLSerializer": false,
      "XPathEvaluator": false,
      "XPathException": false,
      "XPathExpression": false,
      "XPathNamespace": false,
      "XPathNSResolver": false,
      "XPathResult": false,
      "XSLTProcessor": false
    },
    "worker": {
      "applicationCache": false,
      "atob": false,
      "Blob": false,
      "BroadcastChannel": false,
      "btoa": false,
      "Cache": false,
      "caches": false,
      "clearInterval": false,
      "clearTimeout": false,
      "close": true,
      "console": false,
      "fetch": false,
      "FileReaderSync": false,
      "FormData": false,
      "Headers": false,
      "IDBCursor": false,
      "IDBCursorWithValue": false,
      "IDBDatabase": false,
      "IDBFactory": false,
      "IDBIndex": false,
      "IDBKeyRange": false,
      "IDBObjectStore": false,
      "IDBOpenDBRequest": false,
      "IDBRequest": false,
      "IDBTransaction": false,
      "IDBVersionChangeEvent": false,
      "ImageData": false,
      "importScripts": true,
      "indexedDB": false,
      "location": false,
      "MessageChannel": false,
      "MessagePort": false,
      "name": false,
      "navigator": false,
      "Notification": false,
      "onclose": true,
      "onconnect": true,
      "onerror": true,
      "onlanguagechange": true,
      "onmessage": true,
      "onoffline": true,
      "ononline": true,
      "onrejectionhandled": true,
      "onunhandledrejection": true,
      "performance": false,
      "Performance": false,
      "PerformanceEntry": false,
      "PerformanceMark": false,
      "PerformanceMeasure": false,
      "PerformanceNavigation": false,
      "PerformanceResourceTiming": false,
      "PerformanceTiming": false,
      "postMessage": true,
      "Promise": false,
      "Request": false,
      "Response": false,
      "self": true,
      "ServiceWorkerRegistration": false,
      "setInterval": false,
      "setTimeout": false,
      "TextDecoder": false,
      "TextEncoder": false,
      "URL": false,
      "WebSocket": false,
      "Worker": false,
      "XMLHttpRequest": false
    },
    "node": {
      "__dirname": false,
      "__filename": false,
      "arguments": false,
      "Buffer": false,
      "clearImmediate": false,
      "clearInterval": false,
      "clearTimeout": false,
      "console": false,
      "exports": true,
      "GLOBAL": false,
      "global": false,
      "module": false,
      "process": false,
      "require": false,
      "root": false,
      "setImmediate": false,
      "setInterval": false,
      "setTimeout": false
    },
    "commonjs": {
      "exports": true,
      "module": false,
      "require": false,
      "global": false
    },
    "amd": {
      "define": false,
      "require": false
    },
    "mocha": {
      "after": false,
      "afterEach": false,
      "before": false,
      "beforeEach": false,
      "context": false,
      "describe": false,
      "it": false,
      "mocha": false,
      "setup": false,
      "specify": false,
      "suite": false,
      "suiteSetup": false,
      "suiteTeardown": false,
      "teardown": false,
      "test": false,
      "xcontext": false,
      "xdescribe": false,
      "xit": false,
      "xspecify": false
    },
    "jasmine": {
      "afterAll": false,
      "afterEach": false,
      "beforeAll": false,
      "beforeEach": false,
      "describe": false,
      "expect": false,
      "fail": false,
      "fdescribe": false,
      "fit": false,
      "it": false,
      "jasmine": false,
      "pending": false,
      "runs": false,
      "spyOn": false,
      "waits": false,
      "waitsFor": false,
      "xdescribe": false,
      "xit": false
    },
    "jest": {
      "afterEach": false,
      "beforeEach": false,
      "describe": false,
      "expect": false,
      "it": false,
      "jest": false,
      "pit": false,
      "require": false,
      "xdescribe": false,
      "xit": false
    },
    "qunit": {
      "asyncTest": false,
      "deepEqual": false,
      "equal": false,
      "expect": false,
      "module": false,
      "notDeepEqual": false,
      "notEqual": false,
      "notOk": false,
      "notPropEqual": false,
      "notStrictEqual": false,
      "ok": false,
      "propEqual": false,
      "QUnit": false,
      "raises": false,
      "start": false,
      "stop": false,
      "strictEqual": false,
      "test": false,
      "throws": false
    },
    "phantomjs": {
      "console": true,
      "exports": true,
      "phantom": true,
      "require": true,
      "WebPage": true
    },
    "couch": {
      "emit": false,
      "exports": false,
      "getRow": false,
      "log": false,
      "module": false,
      "provides": false,
      "require": false,
      "respond": false,
      "send": false,
      "start": false,
      "sum": false
    },
    "rhino": {
      "defineClass": false,
      "deserialize": false,
      "gc": false,
      "help": false,
      "importClass": false,
      "importPackage": false,
      "java": false,
      "load": false,
      "loadClass": false,
      "Packages": false,
      "print": false,
      "quit": false,
      "readFile": false,
      "readUrl": false,
      "runCommand": false,
      "seal": false,
      "serialize": false,
      "spawn": false,
      "sync": false,
      "toint32": false,
      "version": false
    },
    "nashorn": {
      "__DIR__": false,
      "__FILE__": false,
      "__LINE__": false,
      "com": false,
      "edu": false,
      "exit": false,
      "Java": false,
      "java": false,
      "javafx": false,
      "JavaImporter": false,
      "javax": false,
      "JSAdapter": false,
      "load": false,
      "loadWithNewGlobal": false,
      "org": false,
      "Packages": false,
      "print": false,
      "quit": false
    },
    "wsh": {
      "ActiveXObject": true,
      "Enumerator": true,
      "GetObject": true,
      "ScriptEngine": true,
      "ScriptEngineBuildVersion": true,
      "ScriptEngineMajorVersion": true,
      "ScriptEngineMinorVersion": true,
      "VBArray": true,
      "WScript": true,
      "WSH": true,
      "XDomainRequest": true
    },
    "jquery": {
      "$": false,
      "jQuery": false
    },
    "yui": {
      "Y": false,
      "YUI": false,
      "YUI_config": false
    },
    "shelljs": {
      "cat": false,
      "cd": false,
      "chmod": false,
      "config": false,
      "cp": false,
      "dirs": false,
      "echo": false,
      "env": false,
      "error": false,
      "exec": false,
      "exit": false,
      "find": false,
      "grep": false,
      "ls": false,
      "ln": false,
      "mkdir": false,
      "mv": false,
      "popd": false,
      "pushd": false,
      "pwd": false,
      "rm": false,
      "sed": false,
      "target": false,
      "tempdir": false,
      "test": false,
      "which": false
    },
    "prototypejs": {
      "$": false,
      "$$": false,
      "$A": false,
      "$break": false,
      "$continue": false,
      "$F": false,
      "$H": false,
      "$R": false,
      "$w": false,
      "Abstract": false,
      "Ajax": false,
      "Autocompleter": false,
      "Builder": false,
      "Class": false,
      "Control": false,
      "Draggable": false,
      "Draggables": false,
      "Droppables": false,
      "Effect": false,
      "Element": false,
      "Enumerable": false,
      "Event": false,
      "Field": false,
      "Form": false,
      "Hash": false,
      "Insertion": false,
      "ObjectRange": false,
      "PeriodicalExecuter": false,
      "Position": false,
      "Prototype": false,
      "Scriptaculous": false,
      "Selector": false,
      "Sortable": false,
      "SortableObserver": false,
      "Sound": false,
      "Template": false,
      "Toggle": false,
      "Try": false
    },
    "meteor": {
      "$": false,
      "_": false,
      "Accounts": false,
      "App": false,
      "Assets": false,
      "Blaze": false,
      "check": false,
      "Cordova": false,
      "DDP": false,
      "DDPServer": false,
      "Deps": false,
      "EJSON": false,
      "Email": false,
      "HTTP": false,
      "Log": false,
      "Match": false,
      "Meteor": false,
      "Mongo": false,
      "MongoInternals": false,
      "Npm": false,
      "Package": false,
      "Plugin": false,
      "process": false,
      "Random": false,
      "ReactiveDict": false,
      "ReactiveVar": false,
      "Router": false,
      "Session": false,
      "share": false,
      "Spacebars": false,
      "Template": false,
      "Tinytest": false,
      "Tracker": false,
      "UI": false,
      "Utils": false,
      "WebApp": false,
      "WebAppInternals": false
    },
    "mongo": {
      "_isWindows": false,
      "_rand": false,
      "BulkWriteResult": false,
      "cat": false,
      "cd": false,
      "connect": false,
      "db": false,
      "getHostName": false,
      "getMemInfo": false,
      "hostname": false,
      "listFiles": false,
      "load": false,
      "ls": false,
      "md5sumFile": false,
      "mkdir": false,
      "Mongo": false,
      "ObjectId": false,
      "PlanCache": false,
      "print": false,
      "printjson": false,
      "pwd": false,
      "quit": false,
      "removeFile": false,
      "rs": false,
      "sh": false,
      "UUID": false,
      "version": false,
      "WriteResult": false
    },
    "applescript": {
      "$": false,
      "Application": false,
      "Automation": false,
      "console": false,
      "delay": false,
      "Library": false,
      "ObjC": false,
      "ObjectSpecifier": false,
      "Path": false,
      "Progress": false,
      "Ref": false
    },
    "serviceworker": {
      "caches": false,
      "Cache": false,
      "CacheStorage": false,
      "Client": false,
      "clients": false,
      "Clients": false,
      "ExtendableEvent": false,
      "ExtendableMessageEvent": false,
      "FetchEvent": false,
      "importScripts": false,
      "registration": false,
      "self": false,
      "ServiceWorker": false,
      "ServiceWorkerContainer": false,
      "ServiceWorkerGlobalScope": false,
      "ServiceWorkerMessageEvent": false,
      "ServiceWorkerRegistration": false,
      "skipWaiting": false,
      "WindowClient": false
    },
    "atomtest": {
      "advanceClock": false,
      "fakeClearInterval": false,
      "fakeClearTimeout": false,
      "fakeSetInterval": false,
      "fakeSetTimeout": false,
      "resetTimeouts": false,
      "waitsForPromise": false
    },
    "embertest": {
      "andThen": false,
      "click": false,
      "currentPath": false,
      "currentRouteName": false,
      "currentURL": false,
      "fillIn": false,
      "find": false,
      "findWithAssert": false,
      "keyEvent": false,
      "pauseTest": false,
      "triggerEvent": false,
      "visit": false
    },
    "protractor": {
      "$": false,
      "$$": false,
      "browser": false,
      "By": false,
      "by": false,
      "DartObject": false,
      "element": false,
      "protractor": false
    },
    "shared-node-browser": {
      "clearInterval": false,
      "clearTimeout": false,
      "console": false,
      "setInterval": false,
      "setTimeout": false
    },
    "webextensions": {
      "browser": false,
      "chrome": false,
      "opr": false
    },
    "greasemonkey": {
      "GM_addStyle": false,
      "GM_deleteValue": false,
      "GM_getResourceText": false,
      "GM_getResourceURL": false,
      "GM_getValue": false,
      "GM_info": false,
      "GM_listValues": false,
      "GM_log": false,
      "GM_openInTab": false,
      "GM_registerMenuCommand": false,
      "GM_setClipboard": false,
      "GM_setValue": false,
      "GM_xmlhttpRequest": false,
      "unsafeWindow": false
    }
  };
});

System.registerDynamic("npm:globals@8.18.0.json", [], false, function() {
  return {
    "main": "index",
    "format": "cjs",
    "meta": {
      "*": {
        "globals": {
          "process": "process"
        }
      },
      "*.json": {
        "format": "json"
      },
      "globals.json": true
    }
  };
});

System.registerDynamic("npm:globals@8.18.0/index.js", ["./globals.json", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  module.exports = $__require('./globals.json');
  return module.exports;
});

System.registerDynamic("npm:babel-traverse@6.9.0/lib/scope/index.js", ["babel-runtime/core-js/object/keys", "babel-runtime/core-js/object/create", "babel-runtime/helpers/classCallCheck", "babel-runtime/core-js/get-iterator", "lodash/includes", "lodash/repeat", "./lib/renamer", "../index", "lodash/defaults", "babel-messages", "./binding", "globals", "babel-types", "../cache", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  var _keys = $__require('babel-runtime/core-js/object/keys');
  var _keys2 = _interopRequireDefault(_keys);
  var _create = $__require('babel-runtime/core-js/object/create');
  var _create2 = _interopRequireDefault(_create);
  var _classCallCheck2 = $__require('babel-runtime/helpers/classCallCheck');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _getIterator2 = $__require('babel-runtime/core-js/get-iterator');
  var _getIterator3 = _interopRequireDefault(_getIterator2);
  var _includes = $__require('lodash/includes');
  var _includes2 = _interopRequireDefault(_includes);
  var _repeat = $__require('lodash/repeat');
  var _repeat2 = _interopRequireDefault(_repeat);
  var _renamer = $__require('./lib/renamer');
  var _renamer2 = _interopRequireDefault(_renamer);
  var _index = $__require('../index');
  var _index2 = _interopRequireDefault(_index);
  var _defaults = $__require('lodash/defaults');
  var _defaults2 = _interopRequireDefault(_defaults);
  var _babelMessages = $__require('babel-messages');
  var messages = _interopRequireWildcard(_babelMessages);
  var _binding2 = $__require('./binding');
  var _binding3 = _interopRequireDefault(_binding2);
  var _globals = $__require('globals');
  var _globals2 = _interopRequireDefault(_globals);
  var _babelTypes = $__require('babel-types');
  var t = _interopRequireWildcard(_babelTypes);
  var _cache = $__require('../cache');
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj.default = obj;
      return newObj;
    }
  }
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  var _crawlCallsCount = 0;
  function getCache(path, parentScope, self) {
    var scopes = _cache.scope.get(path.node) || [];
    for (var _iterator = scopes,
        _isArray = Array.isArray(_iterator),
        _i = 0,
        _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator); ; ) {
      var _ref;
      if (_isArray) {
        if (_i >= _iterator.length)
          break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done)
          break;
        _ref = _i.value;
      }
      var scope = _ref;
      if (scope.parent === parentScope && scope.path === path)
        return scope;
    }
    scopes.push(self);
    if (!_cache.scope.has(path.node)) {
      _cache.scope.set(path.node, scopes);
    }
  }
  var collectorVisitor = {
    For: function For(path) {
      for (var _iterator2 = t.FOR_INIT_KEYS,
          _isArray2 = Array.isArray(_iterator2),
          _i2 = 0,
          _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2); ; ) {
        var _ref2;
        if (_isArray2) {
          if (_i2 >= _iterator2.length)
            break;
          _ref2 = _iterator2[_i2++];
        } else {
          _i2 = _iterator2.next();
          if (_i2.done)
            break;
          _ref2 = _i2.value;
        }
        var key = _ref2;
        var declar = path.get(key);
        if (declar.isVar())
          path.scope.getFunctionParent().registerBinding("var", declar);
      }
    },
    Declaration: function Declaration(path) {
      if (path.isBlockScoped())
        return;
      if (path.isExportDeclaration() && path.get("declaration").isDeclaration())
        return;
      path.scope.getFunctionParent().registerDeclaration(path);
    },
    ReferencedIdentifier: function ReferencedIdentifier(path, state) {
      state.references.push(path);
    },
    ForXStatement: function ForXStatement(path, state) {
      var left = path.get("left");
      if (left.isPattern() || left.isIdentifier()) {
        state.constantViolations.push(left);
      }
    },
    ExportDeclaration: {exit: function exit(_ref3) {
        var node = _ref3.node;
        var scope = _ref3.scope;
        var declar = node.declaration;
        if (t.isClassDeclaration(declar) || t.isFunctionDeclaration(declar)) {
          var _id = declar.id;
          if (!_id)
            return;
          var binding = scope.getBinding(_id.name);
          if (binding)
            binding.reference();
        } else if (t.isVariableDeclaration(declar)) {
          for (var _iterator3 = declar.declarations,
              _isArray3 = Array.isArray(_iterator3),
              _i3 = 0,
              _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3); ; ) {
            var _ref4;
            if (_isArray3) {
              if (_i3 >= _iterator3.length)
                break;
              _ref4 = _iterator3[_i3++];
            } else {
              _i3 = _iterator3.next();
              if (_i3.done)
                break;
              _ref4 = _i3.value;
            }
            var decl = _ref4;
            var ids = t.getBindingIdentifiers(decl);
            for (var name in ids) {
              var _binding = scope.getBinding(name);
              if (_binding)
                _binding.reference();
            }
          }
        }
      }},
    LabeledStatement: function LabeledStatement(path) {
      path.scope.getProgramParent().addGlobal(path.node);
      path.scope.getBlockParent().registerDeclaration(path);
    },
    AssignmentExpression: function AssignmentExpression(path, state) {
      state.assignments.push(path);
    },
    UpdateExpression: function UpdateExpression(path, state) {
      state.constantViolations.push(path.get("argument"));
    },
    UnaryExpression: function UnaryExpression(path, state) {
      if (path.node.operator === "delete") {
        state.constantViolations.push(path.get("argument"));
      }
    },
    BlockScoped: function BlockScoped(path) {
      var scope = path.scope;
      if (scope.path === path)
        scope = scope.parent;
      scope.getBlockParent().registerDeclaration(path);
    },
    ClassDeclaration: function ClassDeclaration(path) {
      var id = path.node.id;
      if (!id)
        return;
      var name = id.name;
      path.scope.bindings[name] = path.scope.getBinding(name);
    },
    Block: function Block(path) {
      var paths = path.get("body");
      for (var _iterator4 = paths,
          _isArray4 = Array.isArray(_iterator4),
          _i4 = 0,
          _iterator4 = _isArray4 ? _iterator4 : (0, _getIterator3.default)(_iterator4); ; ) {
        var _ref5;
        if (_isArray4) {
          if (_i4 >= _iterator4.length)
            break;
          _ref5 = _iterator4[_i4++];
        } else {
          _i4 = _iterator4.next();
          if (_i4.done)
            break;
          _ref5 = _i4.value;
        }
        var bodyPath = _ref5;
        if (bodyPath.isFunctionDeclaration()) {
          path.scope.getBlockParent().registerDeclaration(bodyPath);
        }
      }
    }
  };
  var uid = 0;
  var Scope = function() {
    function Scope(path, parentScope) {
      (0, _classCallCheck3.default)(this, Scope);
      if (parentScope && parentScope.block === path.node) {
        return parentScope;
      }
      var cached = getCache(path, parentScope, this);
      if (cached)
        return cached;
      this.uid = uid++;
      this.parent = parentScope;
      this.hub = path.hub;
      this.parentBlock = path.parent;
      this.block = path.node;
      this.path = path;
    }
    Scope.prototype.traverse = function traverse(node, opts, state) {
      (0, _index2.default)(node, opts, this, state, this.path);
    };
    Scope.prototype.generateDeclaredUidIdentifier = function generateDeclaredUidIdentifier() {
      var name = arguments.length <= 0 || arguments[0] === undefined ? "temp" : arguments[0];
      var id = this.generateUidIdentifier(name);
      this.push({id: id});
      return id;
    };
    Scope.prototype.generateUidIdentifier = function generateUidIdentifier() {
      var name = arguments.length <= 0 || arguments[0] === undefined ? "temp" : arguments[0];
      return t.identifier(this.generateUid(name));
    };
    Scope.prototype.generateUid = function generateUid() {
      var name = arguments.length <= 0 || arguments[0] === undefined ? "temp" : arguments[0];
      name = t.toIdentifier(name).replace(/^_+/, "").replace(/[0-9]+$/g, "");
      var uid = void 0;
      var i = 0;
      do {
        uid = this._generateUid(name, i);
        i++;
      } while (this.hasBinding(uid) || this.hasGlobal(uid) || this.hasReference(uid));
      var program = this.getProgramParent();
      program.references[uid] = true;
      program.uids[uid] = true;
      return uid;
    };
    Scope.prototype._generateUid = function _generateUid(name, i) {
      var id = name;
      if (i > 1)
        id += i;
      return ("_" + id);
    };
    Scope.prototype.generateUidIdentifierBasedOnNode = function generateUidIdentifierBasedOnNode(parent, defaultName) {
      var node = parent;
      if (t.isAssignmentExpression(parent)) {
        node = parent.left;
      } else if (t.isVariableDeclarator(parent)) {
        node = parent.id;
      } else if (t.isObjectProperty(node) || t.isObjectMethod(node)) {
        node = node.key;
      }
      var parts = [];
      var add = function add(node) {
        if (t.isModuleDeclaration(node)) {
          if (node.source) {
            add(node.source);
          } else if (node.specifiers && node.specifiers.length) {
            for (var _iterator5 = node.specifiers,
                _isArray5 = Array.isArray(_iterator5),
                _i5 = 0,
                _iterator5 = _isArray5 ? _iterator5 : (0, _getIterator3.default)(_iterator5); ; ) {
              var _ref6;
              if (_isArray5) {
                if (_i5 >= _iterator5.length)
                  break;
                _ref6 = _iterator5[_i5++];
              } else {
                _i5 = _iterator5.next();
                if (_i5.done)
                  break;
                _ref6 = _i5.value;
              }
              var specifier = _ref6;
              add(specifier);
            }
          } else if (node.declaration) {
            add(node.declaration);
          }
        } else if (t.isModuleSpecifier(node)) {
          add(node.local);
        } else if (t.isMemberExpression(node)) {
          add(node.object);
          add(node.property);
        } else if (t.isIdentifier(node)) {
          parts.push(node.name);
        } else if (t.isLiteral(node)) {
          parts.push(node.value);
        } else if (t.isCallExpression(node)) {
          add(node.callee);
        } else if (t.isObjectExpression(node) || t.isObjectPattern(node)) {
          for (var _iterator6 = node.properties,
              _isArray6 = Array.isArray(_iterator6),
              _i6 = 0,
              _iterator6 = _isArray6 ? _iterator6 : (0, _getIterator3.default)(_iterator6); ; ) {
            var _ref7;
            if (_isArray6) {
              if (_i6 >= _iterator6.length)
                break;
              _ref7 = _iterator6[_i6++];
            } else {
              _i6 = _iterator6.next();
              if (_i6.done)
                break;
              _ref7 = _i6.value;
            }
            var prop = _ref7;
            add(prop.key || prop.argument);
          }
        }
      };
      add(node);
      var id = parts.join("$");
      id = id.replace(/^_/, "") || defaultName || "ref";
      return this.generateUidIdentifier(id.slice(0, 20));
    };
    Scope.prototype.isStatic = function isStatic(node) {
      if (t.isThisExpression(node) || t.isSuper(node)) {
        return true;
      }
      if (t.isIdentifier(node)) {
        var binding = this.getBinding(node.name);
        if (binding) {
          return binding.constant;
        } else {
          return this.hasBinding(node.name);
        }
      }
      return false;
    };
    Scope.prototype.maybeGenerateMemoised = function maybeGenerateMemoised(node, dontPush) {
      if (this.isStatic(node)) {
        return null;
      } else {
        var _id2 = this.generateUidIdentifierBasedOnNode(node);
        if (!dontPush)
          this.push({id: _id2});
        return _id2;
      }
    };
    Scope.prototype.checkBlockScopedCollisions = function checkBlockScopedCollisions(local, kind, name, id) {
      if (kind === "param")
        return;
      if (kind === "hoisted" && local.kind === "let")
        return;
      var duplicate = false;
      if (!duplicate)
        duplicate = kind === "let" || local.kind === "let" || local.kind === "const" || local.kind === "module";
      if (!duplicate)
        duplicate = local.kind === "param" && (kind === "let" || kind === "const");
      if (duplicate) {
        throw this.hub.file.buildCodeFrameError(id, messages.get("scopeDuplicateDeclaration", name), TypeError);
      }
    };
    Scope.prototype.rename = function rename(oldName, newName, block) {
      var binding = this.getBinding(oldName);
      if (binding) {
        newName = newName || this.generateUidIdentifier(oldName).name;
        return new _renamer2.default(binding, oldName, newName).rename(block);
      }
    };
    Scope.prototype._renameFromMap = function _renameFromMap(map, oldName, newName, value) {
      if (map[oldName]) {
        map[newName] = value;
        map[oldName] = null;
      }
    };
    Scope.prototype.dump = function dump() {
      var sep = (0, _repeat2.default)("-", 60);
      console.log(sep);
      var scope = this;
      do {
        console.log("#", scope.block.type);
        for (var name in scope.bindings) {
          var binding = scope.bindings[name];
          console.log(" -", name, {
            constant: binding.constant,
            references: binding.references,
            violations: binding.constantViolations.length,
            kind: binding.kind
          });
        }
      } while (scope = scope.parent);
      console.log(sep);
    };
    Scope.prototype.toArray = function toArray(node, i) {
      var file = this.hub.file;
      if (t.isIdentifier(node)) {
        var binding = this.getBinding(node.name);
        if (binding && binding.constant && binding.path.isGenericType("Array"))
          return node;
      }
      if (t.isArrayExpression(node)) {
        return node;
      }
      if (t.isIdentifier(node, {name: "arguments"})) {
        return t.callExpression(t.memberExpression(t.memberExpression(t.memberExpression(t.identifier("Array"), t.identifier("prototype")), t.identifier("slice")), t.identifier("call")), [node]);
      }
      var helperName = "toArray";
      var args = [node];
      if (i === true) {
        helperName = "toConsumableArray";
      } else if (i) {
        args.push(t.numericLiteral(i));
        helperName = "slicedToArray";
      }
      return t.callExpression(file.addHelper(helperName), args);
    };
    Scope.prototype.registerDeclaration = function registerDeclaration(path) {
      if (path.isLabeledStatement()) {
        this.registerBinding("label", path);
      } else if (path.isFunctionDeclaration()) {
        this.registerBinding("hoisted", path.get("id"), path);
      } else if (path.isVariableDeclaration()) {
        var declarations = path.get("declarations");
        for (var _iterator7 = declarations,
            _isArray7 = Array.isArray(_iterator7),
            _i7 = 0,
            _iterator7 = _isArray7 ? _iterator7 : (0, _getIterator3.default)(_iterator7); ; ) {
          var _ref8;
          if (_isArray7) {
            if (_i7 >= _iterator7.length)
              break;
            _ref8 = _iterator7[_i7++];
          } else {
            _i7 = _iterator7.next();
            if (_i7.done)
              break;
            _ref8 = _i7.value;
          }
          var declar = _ref8;
          this.registerBinding(path.node.kind, declar);
        }
      } else if (path.isClassDeclaration()) {
        this.registerBinding("let", path);
      } else if (path.isImportDeclaration()) {
        var specifiers = path.get("specifiers");
        for (var _iterator8 = specifiers,
            _isArray8 = Array.isArray(_iterator8),
            _i8 = 0,
            _iterator8 = _isArray8 ? _iterator8 : (0, _getIterator3.default)(_iterator8); ; ) {
          var _ref9;
          if (_isArray8) {
            if (_i8 >= _iterator8.length)
              break;
            _ref9 = _iterator8[_i8++];
          } else {
            _i8 = _iterator8.next();
            if (_i8.done)
              break;
            _ref9 = _i8.value;
          }
          var specifier = _ref9;
          this.registerBinding("module", specifier);
        }
      } else if (path.isExportDeclaration()) {
        var _declar = path.get("declaration");
        if (_declar.isClassDeclaration() || _declar.isFunctionDeclaration() || _declar.isVariableDeclaration()) {
          this.registerDeclaration(_declar);
        }
      } else {
        this.registerBinding("unknown", path);
      }
    };
    Scope.prototype.buildUndefinedNode = function buildUndefinedNode() {
      if (this.hasBinding("undefined")) {
        return t.unaryExpression("void", t.numericLiteral(0), true);
      } else {
        return t.identifier("undefined");
      }
    };
    Scope.prototype.registerConstantViolation = function registerConstantViolation(path) {
      var ids = path.getBindingIdentifiers();
      for (var name in ids) {
        var binding = this.getBinding(name);
        if (binding)
          binding.reassign(path);
      }
    };
    Scope.prototype.registerBinding = function registerBinding(kind, path) {
      var bindingPath = arguments.length <= 2 || arguments[2] === undefined ? path : arguments[2];
      if (!kind)
        throw new ReferenceError("no `kind`");
      if (path.isVariableDeclaration()) {
        var declarators = path.get("declarations");
        for (var _iterator9 = declarators,
            _isArray9 = Array.isArray(_iterator9),
            _i9 = 0,
            _iterator9 = _isArray9 ? _iterator9 : (0, _getIterator3.default)(_iterator9); ; ) {
          var _ref10;
          if (_isArray9) {
            if (_i9 >= _iterator9.length)
              break;
            _ref10 = _iterator9[_i9++];
          } else {
            _i9 = _iterator9.next();
            if (_i9.done)
              break;
            _ref10 = _i9.value;
          }
          var declar = _ref10;
          this.registerBinding(kind, declar);
        }
        return;
      }
      var parent = this.getProgramParent();
      var ids = path.getBindingIdentifiers(true);
      for (var name in ids) {
        for (var _iterator10 = ids[name],
            _isArray10 = Array.isArray(_iterator10),
            _i10 = 0,
            _iterator10 = _isArray10 ? _iterator10 : (0, _getIterator3.default)(_iterator10); ; ) {
          var _ref11;
          if (_isArray10) {
            if (_i10 >= _iterator10.length)
              break;
            _ref11 = _iterator10[_i10++];
          } else {
            _i10 = _iterator10.next();
            if (_i10.done)
              break;
            _ref11 = _i10.value;
          }
          var _id3 = _ref11;
          var local = this.getOwnBinding(name);
          if (local) {
            if (local.identifier === _id3)
              continue;
            this.checkBlockScopedCollisions(local, kind, name, _id3);
          }
          if (local && local.path.isFlow())
            local = null;
          parent.references[name] = true;
          this.bindings[name] = new _binding3.default({
            identifier: _id3,
            existing: local,
            scope: this,
            path: bindingPath,
            kind: kind
          });
        }
      }
    };
    Scope.prototype.addGlobal = function addGlobal(node) {
      this.globals[node.name] = node;
    };
    Scope.prototype.hasUid = function hasUid(name) {
      var scope = this;
      do {
        if (scope.uids[name])
          return true;
      } while (scope = scope.parent);
      return false;
    };
    Scope.prototype.hasGlobal = function hasGlobal(name) {
      var scope = this;
      do {
        if (scope.globals[name])
          return true;
      } while (scope = scope.parent);
      return false;
    };
    Scope.prototype.hasReference = function hasReference(name) {
      var scope = this;
      do {
        if (scope.references[name])
          return true;
      } while (scope = scope.parent);
      return false;
    };
    Scope.prototype.isPure = function isPure(node, constantsOnly) {
      if (t.isIdentifier(node)) {
        var binding = this.getBinding(node.name);
        if (!binding)
          return false;
        if (constantsOnly)
          return binding.constant;
        return true;
      } else if (t.isClass(node)) {
        if (node.superClass && !this.isPure(node.superClass, constantsOnly))
          return false;
        return this.isPure(node.body, constantsOnly);
      } else if (t.isClassBody(node)) {
        for (var _iterator11 = node.body,
            _isArray11 = Array.isArray(_iterator11),
            _i11 = 0,
            _iterator11 = _isArray11 ? _iterator11 : (0, _getIterator3.default)(_iterator11); ; ) {
          var _ref12;
          if (_isArray11) {
            if (_i11 >= _iterator11.length)
              break;
            _ref12 = _iterator11[_i11++];
          } else {
            _i11 = _iterator11.next();
            if (_i11.done)
              break;
            _ref12 = _i11.value;
          }
          var method = _ref12;
          if (!this.isPure(method, constantsOnly))
            return false;
        }
        return true;
      } else if (t.isBinary(node)) {
        return this.isPure(node.left, constantsOnly) && this.isPure(node.right, constantsOnly);
      } else if (t.isArrayExpression(node)) {
        for (var _iterator12 = node.elements,
            _isArray12 = Array.isArray(_iterator12),
            _i12 = 0,
            _iterator12 = _isArray12 ? _iterator12 : (0, _getIterator3.default)(_iterator12); ; ) {
          var _ref13;
          if (_isArray12) {
            if (_i12 >= _iterator12.length)
              break;
            _ref13 = _iterator12[_i12++];
          } else {
            _i12 = _iterator12.next();
            if (_i12.done)
              break;
            _ref13 = _i12.value;
          }
          var elem = _ref13;
          if (!this.isPure(elem, constantsOnly))
            return false;
        }
        return true;
      } else if (t.isObjectExpression(node)) {
        for (var _iterator13 = node.properties,
            _isArray13 = Array.isArray(_iterator13),
            _i13 = 0,
            _iterator13 = _isArray13 ? _iterator13 : (0, _getIterator3.default)(_iterator13); ; ) {
          var _ref14;
          if (_isArray13) {
            if (_i13 >= _iterator13.length)
              break;
            _ref14 = _iterator13[_i13++];
          } else {
            _i13 = _iterator13.next();
            if (_i13.done)
              break;
            _ref14 = _i13.value;
          }
          var prop = _ref14;
          if (!this.isPure(prop, constantsOnly))
            return false;
        }
        return true;
      } else if (t.isClassMethod(node)) {
        if (node.computed && !this.isPure(node.key, constantsOnly))
          return false;
        if (node.kind === "get" || node.kind === "set")
          return false;
        return true;
      } else if (t.isClassProperty(node) || t.isObjectProperty(node)) {
        if (node.computed && !this.isPure(node.key, constantsOnly))
          return false;
        return this.isPure(node.value, constantsOnly);
      } else if (t.isUnaryExpression(node)) {
        return this.isPure(node.argument, constantsOnly);
      } else {
        return t.isPureish(node);
      }
    };
    Scope.prototype.setData = function setData(key, val) {
      return this.data[key] = val;
    };
    Scope.prototype.getData = function getData(key) {
      var scope = this;
      do {
        var data = scope.data[key];
        if (data != null)
          return data;
      } while (scope = scope.parent);
    };
    Scope.prototype.removeData = function removeData(key) {
      var scope = this;
      do {
        var data = scope.data[key];
        if (data != null)
          scope.data[key] = null;
      } while (scope = scope.parent);
    };
    Scope.prototype.init = function init() {
      if (!this.references)
        this.crawl();
    };
    Scope.prototype.crawl = function crawl() {
      _crawlCallsCount++;
      this._crawl();
      _crawlCallsCount--;
    };
    Scope.prototype._crawl = function _crawl() {
      var path = this.path;
      this.references = (0, _create2.default)(null);
      this.bindings = (0, _create2.default)(null);
      this.globals = (0, _create2.default)(null);
      this.uids = (0, _create2.default)(null);
      this.data = (0, _create2.default)(null);
      if (path.isLoop()) {
        for (var _iterator14 = t.FOR_INIT_KEYS,
            _isArray14 = Array.isArray(_iterator14),
            _i14 = 0,
            _iterator14 = _isArray14 ? _iterator14 : (0, _getIterator3.default)(_iterator14); ; ) {
          var _ref15;
          if (_isArray14) {
            if (_i14 >= _iterator14.length)
              break;
            _ref15 = _iterator14[_i14++];
          } else {
            _i14 = _iterator14.next();
            if (_i14.done)
              break;
            _ref15 = _i14.value;
          }
          var key = _ref15;
          var node = path.get(key);
          if (node.isBlockScoped())
            this.registerBinding(node.node.kind, node);
        }
      }
      if (path.isFunctionExpression() && path.has("id")) {
        if (!path.get("id").node[t.NOT_LOCAL_BINDING]) {
          this.registerBinding("local", path.get("id"), path);
        }
      }
      if (path.isClassExpression() && path.has("id")) {
        if (!path.get("id").node[t.NOT_LOCAL_BINDING]) {
          this.registerBinding("local", path);
        }
      }
      if (path.isFunction()) {
        var params = path.get("params");
        for (var _iterator15 = params,
            _isArray15 = Array.isArray(_iterator15),
            _i15 = 0,
            _iterator15 = _isArray15 ? _iterator15 : (0, _getIterator3.default)(_iterator15); ; ) {
          var _ref16;
          if (_isArray15) {
            if (_i15 >= _iterator15.length)
              break;
            _ref16 = _iterator15[_i15++];
          } else {
            _i15 = _iterator15.next();
            if (_i15.done)
              break;
            _ref16 = _i15.value;
          }
          var param = _ref16;
          this.registerBinding("param", param);
        }
      }
      if (path.isCatchClause()) {
        this.registerBinding("let", path);
      }
      var parent = this.getProgramParent();
      if (parent.crawling)
        return;
      var state = {
        references: [],
        constantViolations: [],
        assignments: []
      };
      this.crawling = true;
      path.traverse(collectorVisitor, state);
      this.crawling = false;
      for (var _iterator16 = state.assignments,
          _isArray16 = Array.isArray(_iterator16),
          _i16 = 0,
          _iterator16 = _isArray16 ? _iterator16 : (0, _getIterator3.default)(_iterator16); ; ) {
        var _ref17;
        if (_isArray16) {
          if (_i16 >= _iterator16.length)
            break;
          _ref17 = _iterator16[_i16++];
        } else {
          _i16 = _iterator16.next();
          if (_i16.done)
            break;
          _ref17 = _i16.value;
        }
        var _path = _ref17;
        var ids = _path.getBindingIdentifiers();
        var programParent = void 0;
        for (var name in ids) {
          if (_path.scope.getBinding(name))
            continue;
          programParent = programParent || _path.scope.getProgramParent();
          programParent.addGlobal(ids[name]);
        }
        _path.scope.registerConstantViolation(_path);
      }
      for (var _iterator17 = state.references,
          _isArray17 = Array.isArray(_iterator17),
          _i17 = 0,
          _iterator17 = _isArray17 ? _iterator17 : (0, _getIterator3.default)(_iterator17); ; ) {
        var _ref18;
        if (_isArray17) {
          if (_i17 >= _iterator17.length)
            break;
          _ref18 = _iterator17[_i17++];
        } else {
          _i17 = _iterator17.next();
          if (_i17.done)
            break;
          _ref18 = _i17.value;
        }
        var ref = _ref18;
        var binding = ref.scope.getBinding(ref.node.name);
        if (binding) {
          binding.reference(ref);
        } else {
          ref.scope.getProgramParent().addGlobal(ref.node);
        }
      }
      for (var _iterator18 = state.constantViolations,
          _isArray18 = Array.isArray(_iterator18),
          _i18 = 0,
          _iterator18 = _isArray18 ? _iterator18 : (0, _getIterator3.default)(_iterator18); ; ) {
        var _ref19;
        if (_isArray18) {
          if (_i18 >= _iterator18.length)
            break;
          _ref19 = _iterator18[_i18++];
        } else {
          _i18 = _iterator18.next();
          if (_i18.done)
            break;
          _ref19 = _i18.value;
        }
        var _path2 = _ref19;
        _path2.scope.registerConstantViolation(_path2);
      }
    };
    Scope.prototype.push = function push(opts) {
      var path = this.path;
      if (!path.isBlockStatement() && !path.isProgram()) {
        path = this.getBlockParent().path;
      }
      if (path.isSwitchStatement()) {
        path = this.getFunctionParent().path;
      }
      if (path.isLoop() || path.isCatchClause() || path.isFunction()) {
        t.ensureBlock(path.node);
        path = path.get("body");
      }
      var unique = opts.unique;
      var kind = opts.kind || "var";
      var blockHoist = opts._blockHoist == null ? 2 : opts._blockHoist;
      var dataKey = "declaration:" + kind + ":" + blockHoist;
      var declarPath = !unique && path.getData(dataKey);
      if (!declarPath) {
        var declar = t.variableDeclaration(kind, []);
        declar._generated = true;
        declar._blockHoist = blockHoist;
        var _path$unshiftContaine = path.unshiftContainer("body", [declar]);
        declarPath = _path$unshiftContaine[0];
        if (!unique)
          path.setData(dataKey, declarPath);
      }
      var declarator = t.variableDeclarator(opts.id, opts.init);
      declarPath.node.declarations.push(declarator);
      this.registerBinding(kind, declarPath.get("declarations").pop());
    };
    Scope.prototype.getProgramParent = function getProgramParent() {
      var scope = this;
      do {
        if (scope.path.isProgram()) {
          return scope;
        }
      } while (scope = scope.parent);
      throw new Error("We couldn't find a Function or Program...");
    };
    Scope.prototype.getFunctionParent = function getFunctionParent() {
      var scope = this;
      do {
        if (scope.path.isFunctionParent()) {
          return scope;
        }
      } while (scope = scope.parent);
      throw new Error("We couldn't find a Function or Program...");
    };
    Scope.prototype.getBlockParent = function getBlockParent() {
      var scope = this;
      do {
        if (scope.path.isBlockParent()) {
          return scope;
        }
      } while (scope = scope.parent);
      throw new Error("We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...");
    };
    Scope.prototype.getAllBindings = function getAllBindings() {
      var ids = (0, _create2.default)(null);
      var scope = this;
      do {
        (0, _defaults2.default)(ids, scope.bindings);
        scope = scope.parent;
      } while (scope);
      return ids;
    };
    Scope.prototype.getAllBindingsOfKind = function getAllBindingsOfKind() {
      var ids = (0, _create2.default)(null);
      for (var _iterator19 = arguments,
          _isArray19 = Array.isArray(_iterator19),
          _i19 = 0,
          _iterator19 = _isArray19 ? _iterator19 : (0, _getIterator3.default)(_iterator19); ; ) {
        var _ref20;
        if (_isArray19) {
          if (_i19 >= _iterator19.length)
            break;
          _ref20 = _iterator19[_i19++];
        } else {
          _i19 = _iterator19.next();
          if (_i19.done)
            break;
          _ref20 = _i19.value;
        }
        var kind = _ref20;
        var scope = this;
        do {
          for (var name in scope.bindings) {
            var binding = scope.bindings[name];
            if (binding.kind === kind)
              ids[name] = binding;
          }
          scope = scope.parent;
        } while (scope);
      }
      return ids;
    };
    Scope.prototype.bindingIdentifierEquals = function bindingIdentifierEquals(name, node) {
      return this.getBindingIdentifier(name) === node;
    };
    Scope.prototype.warnOnFlowBinding = function warnOnFlowBinding(binding) {
      if (_crawlCallsCount === 0 && binding && binding.path.isFlow()) {
        console.warn("\n        You or one of the Babel plugins you are using are using Flow declarations as bindings.\n        Support for this will be removed in version 6.8. To find out the caller, grep for this\n        message and change it to a `console.trace()`.\n      ");
      }
      return binding;
    };
    Scope.prototype.getBinding = function getBinding(name) {
      var scope = this;
      do {
        var binding = scope.getOwnBinding(name);
        if (binding)
          return this.warnOnFlowBinding(binding);
      } while (scope = scope.parent);
    };
    Scope.prototype.getOwnBinding = function getOwnBinding(name) {
      return this.warnOnFlowBinding(this.bindings[name]);
    };
    Scope.prototype.getBindingIdentifier = function getBindingIdentifier(name) {
      var info = this.getBinding(name);
      return info && info.identifier;
    };
    Scope.prototype.getOwnBindingIdentifier = function getOwnBindingIdentifier(name) {
      var binding = this.bindings[name];
      return binding && binding.identifier;
    };
    Scope.prototype.hasOwnBinding = function hasOwnBinding(name) {
      return !!this.getOwnBinding(name);
    };
    Scope.prototype.hasBinding = function hasBinding(name, noGlobals) {
      if (!name)
        return false;
      if (this.hasOwnBinding(name))
        return true;
      if (this.parentHasBinding(name, noGlobals))
        return true;
      if (this.hasUid(name))
        return true;
      if (!noGlobals && (0, _includes2.default)(Scope.globals, name))
        return true;
      if (!noGlobals && (0, _includes2.default)(Scope.contextVariables, name))
        return true;
      return false;
    };
    Scope.prototype.parentHasBinding = function parentHasBinding(name, noGlobals) {
      return this.parent && this.parent.hasBinding(name, noGlobals);
    };
    Scope.prototype.moveBindingTo = function moveBindingTo(name, scope) {
      var info = this.getBinding(name);
      if (info) {
        info.scope.removeOwnBinding(name);
        info.scope = scope;
        scope.bindings[name] = info;
      }
    };
    Scope.prototype.removeOwnBinding = function removeOwnBinding(name) {
      delete this.bindings[name];
    };
    Scope.prototype.removeBinding = function removeBinding(name) {
      var info = this.getBinding(name);
      if (info) {
        info.scope.removeOwnBinding(name);
      }
      var scope = this;
      do {
        if (scope.uids[name]) {
          scope.uids[name] = false;
        }
      } while (scope = scope.parent);
    };
    return Scope;
  }();
  Scope.globals = (0, _keys2.default)(_globals2.default.builtin);
  Scope.contextVariables = ["arguments", "undefined", "Infinity", "NaN"];
  exports.default = Scope;
  module.exports = exports["default"];
  return module.exports;
});

System.registerDynamic("npm:babel-traverse@6.9.0/lib/path/ancestry.js", ["babel-runtime/core-js/get-iterator", "babel-types", "./index", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  var _getIterator2 = $__require('babel-runtime/core-js/get-iterator');
  var _getIterator3 = _interopRequireDefault(_getIterator2);
  exports.findParent = findParent;
  exports.find = find;
  exports.getFunctionParent = getFunctionParent;
  exports.getStatementParent = getStatementParent;
  exports.getEarliestCommonAncestorFrom = getEarliestCommonAncestorFrom;
  exports.getDeepestCommonAncestorFrom = getDeepestCommonAncestorFrom;
  exports.getAncestry = getAncestry;
  exports.inType = inType;
  exports.inShadow = inShadow;
  var _babelTypes = $__require('babel-types');
  var t = _interopRequireWildcard(_babelTypes);
  var _index = $__require('./index');
  var _index2 = _interopRequireDefault(_index);
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj.default = obj;
      return newObj;
    }
  }
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function findParent(callback) {
    var path = this;
    while (path = path.parentPath) {
      if (callback(path))
        return path;
    }
    return null;
  }
  function find(callback) {
    var path = this;
    do {
      if (callback(path))
        return path;
    } while (path = path.parentPath);
    return null;
  }
  function getFunctionParent() {
    return this.findParent(function(path) {
      return path.isFunction() || path.isProgram();
    });
  }
  function getStatementParent() {
    var path = this;
    do {
      if (Array.isArray(path.container)) {
        return path;
      }
    } while (path = path.parentPath);
  }
  function getEarliestCommonAncestorFrom(paths) {
    return this.getDeepestCommonAncestorFrom(paths, function(deepest, i, ancestries) {
      var earliest = void 0;
      var keys = t.VISITOR_KEYS[deepest.type];
      for (var _iterator = ancestries,
          _isArray = Array.isArray(_iterator),
          _i = 0,
          _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator); ; ) {
        var _ref;
        if (_isArray) {
          if (_i >= _iterator.length)
            break;
          _ref = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done)
            break;
          _ref = _i.value;
        }
        var ancestry = _ref;
        var path = ancestry[i + 1];
        if (!earliest) {
          earliest = path;
          continue;
        }
        if (path.listKey && earliest.listKey === path.listKey) {
          if (path.key < earliest.key) {
            earliest = path;
            continue;
          }
        }
        var earliestKeyIndex = keys.indexOf(earliest.parentKey);
        var currentKeyIndex = keys.indexOf(path.parentKey);
        if (earliestKeyIndex > currentKeyIndex) {
          earliest = path;
        }
      }
      return earliest;
    });
  }
  function getDeepestCommonAncestorFrom(paths, filter) {
    var _this = this;
    if (!paths.length) {
      return this;
    }
    if (paths.length === 1) {
      return paths[0];
    }
    var minDepth = Infinity;
    var lastCommonIndex = void 0,
        lastCommon = void 0;
    var ancestries = paths.map(function(path) {
      var ancestry = [];
      do {
        ancestry.unshift(path);
      } while ((path = path.parentPath) && path !== _this);
      if (ancestry.length < minDepth) {
        minDepth = ancestry.length;
      }
      return ancestry;
    });
    var first = ancestries[0];
    depthLoop: for (var i = 0; i < minDepth; i++) {
      var shouldMatch = first[i];
      for (var _iterator2 = ancestries,
          _isArray2 = Array.isArray(_iterator2),
          _i2 = 0,
          _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2); ; ) {
        var _ref2;
        if (_isArray2) {
          if (_i2 >= _iterator2.length)
            break;
          _ref2 = _iterator2[_i2++];
        } else {
          _i2 = _iterator2.next();
          if (_i2.done)
            break;
          _ref2 = _i2.value;
        }
        var ancestry = _ref2;
        if (ancestry[i] !== shouldMatch) {
          break depthLoop;
        }
      }
      lastCommonIndex = i;
      lastCommon = shouldMatch;
    }
    if (lastCommon) {
      if (filter) {
        return filter(lastCommon, lastCommonIndex, ancestries);
      } else {
        return lastCommon;
      }
    } else {
      throw new Error("Couldn't find intersection");
    }
  }
  function getAncestry() {
    var path = this;
    var paths = [];
    do {
      paths.push(path);
    } while (path = path.parentPath);
    return paths;
  }
  function inType() {
    var path = this;
    while (path) {
      for (var _iterator3 = arguments,
          _isArray3 = Array.isArray(_iterator3),
          _i3 = 0,
          _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3); ; ) {
        var _ref3;
        if (_isArray3) {
          if (_i3 >= _iterator3.length)
            break;
          _ref3 = _iterator3[_i3++];
        } else {
          _i3 = _iterator3.next();
          if (_i3.done)
            break;
          _ref3 = _i3.value;
        }
        var type = _ref3;
        if (path.node.type === type)
          return true;
      }
      path = path.parentPath;
    }
    return false;
  }
  function inShadow(key) {
    var parentFn = this.isFunction() ? this : this.findParent(function(p) {
      return p.isFunction();
    });
    if (!parentFn)
      return;
    if (parentFn.isFunctionExpression() || parentFn.isFunctionDeclaration()) {
      var shadow = parentFn.node.shadow;
      if (shadow && (!key || shadow[key] !== false)) {
        return parentFn;
      }
    } else if (parentFn.isArrowFunctionExpression()) {
      return parentFn;
    }
    return null;
  }
  return module.exports;
});

System.registerDynamic("npm:babel-traverse@6.9.0/lib/path/inference/inferer-reference.js", ["babel-runtime/core-js/get-iterator", "babel-types", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  var _getIterator2 = $__require('babel-runtime/core-js/get-iterator');
  var _getIterator3 = _interopRequireDefault(_getIterator2);
  exports.default = function(node) {
    if (!this.isReferenced())
      return;
    var binding = this.scope.getBinding(node.name);
    if (binding) {
      if (binding.identifier.typeAnnotation) {
        return binding.identifier.typeAnnotation;
      } else {
        return getTypeAnnotationBindingConstantViolations(this, node.name);
      }
    }
    if (node.name === "undefined") {
      return t.voidTypeAnnotation();
    } else if (node.name === "NaN" || node.name === "Infinity") {
      return t.numberTypeAnnotation();
    } else if (node.name === "arguments") {}
  };
  var _babelTypes = $__require('babel-types');
  var t = _interopRequireWildcard(_babelTypes);
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj.default = obj;
      return newObj;
    }
  }
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function getTypeAnnotationBindingConstantViolations(path, name) {
    var binding = path.scope.getBinding(name);
    var types = [];
    path.typeAnnotation = t.unionTypeAnnotation(types);
    var functionConstantViolations = [];
    var constantViolations = getConstantViolationsBefore(binding, path, functionConstantViolations);
    var testType = getConditionalAnnotation(path, name);
    if (testType) {
      (function() {
        var testConstantViolations = getConstantViolationsBefore(binding, testType.ifStatement);
        constantViolations = constantViolations.filter(function(path) {
          return testConstantViolations.indexOf(path) < 0;
        });
        types.push(testType.typeAnnotation);
      })();
    }
    if (constantViolations.length) {
      constantViolations = constantViolations.concat(functionConstantViolations);
      for (var _iterator = constantViolations,
          _isArray = Array.isArray(_iterator),
          _i = 0,
          _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator); ; ) {
        var _ref;
        if (_isArray) {
          if (_i >= _iterator.length)
            break;
          _ref = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done)
            break;
          _ref = _i.value;
        }
        var violation = _ref;
        types.push(violation.getTypeAnnotation());
      }
    }
    if (types.length) {
      return t.createUnionTypeAnnotation(types);
    }
  }
  function getConstantViolationsBefore(binding, path, functions) {
    var violations = binding.constantViolations.slice();
    violations.unshift(binding.path);
    return violations.filter(function(violation) {
      violation = violation.resolve();
      var status = violation._guessExecutionStatusRelativeTo(path);
      if (functions && status === "function")
        functions.push(violation);
      return status === "before";
    });
  }
  function inferAnnotationFromBinaryExpression(name, path) {
    var operator = path.node.operator;
    var right = path.get("right").resolve();
    var left = path.get("left").resolve();
    var target = void 0;
    if (left.isIdentifier({name: name})) {
      target = right;
    } else if (right.isIdentifier({name: name})) {
      target = left;
    }
    if (target) {
      if (operator === "===") {
        return target.getTypeAnnotation();
      } else if (t.BOOLEAN_NUMBER_BINARY_OPERATORS.indexOf(operator) >= 0) {
        return t.numberTypeAnnotation();
      } else {
        return;
      }
    } else {
      if (operator !== "===")
        return;
    }
    var typeofPath = void 0;
    var typePath = void 0;
    if (left.isUnaryExpression({operator: "typeof"})) {
      typeofPath = left;
      typePath = right;
    } else if (right.isUnaryExpression({operator: "typeof"})) {
      typeofPath = right;
      typePath = left;
    }
    if (!typePath && !typeofPath)
      return;
    typePath = typePath.resolve();
    if (!typePath.isLiteral())
      return;
    var typeValue = typePath.node.value;
    if (typeof typeValue !== "string")
      return;
    if (!typeofPath.get("argument").isIdentifier({name: name}))
      return;
    return t.createTypeAnnotationBasedOnTypeof(typePath.node.value);
  }
  function getParentConditionalPath(path) {
    var parentPath = void 0;
    while (parentPath = path.parentPath) {
      if (parentPath.isIfStatement() || parentPath.isConditionalExpression()) {
        if (path.key === "test") {
          return;
        } else {
          return parentPath;
        }
      } else {
        path = parentPath;
      }
    }
  }
  function getConditionalAnnotation(path, name) {
    var ifStatement = getParentConditionalPath(path);
    if (!ifStatement)
      return;
    var test = ifStatement.get("test");
    var paths = [test];
    var types = [];
    do {
      var _path = paths.shift().resolve();
      if (_path.isLogicalExpression()) {
        paths.push(_path.get("left"));
        paths.push(_path.get("right"));
      }
      if (_path.isBinaryExpression()) {
        var type = inferAnnotationFromBinaryExpression(name, _path);
        if (type)
          types.push(type);
      }
    } while (paths.length);
    if (types.length) {
      return {
        typeAnnotation: t.createUnionTypeAnnotation(types),
        ifStatement: ifStatement
      };
    } else {
      return getConditionalAnnotation(ifStatement, name);
    }
  }
  module.exports = exports["default"];
  return module.exports;
});

System.registerDynamic("npm:babel-traverse@6.9.0/lib/path/inference/inferers.js", ["./inferer-reference", "babel-types", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  exports.Class = exports.Function = exports.Identifier = undefined;
  var _infererReference = $__require('./inferer-reference');
  Object.defineProperty(exports, "Identifier", {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_infererReference).default;
    }
  });
  exports.VariableDeclarator = VariableDeclarator;
  exports.TypeCastExpression = TypeCastExpression;
  exports.NewExpression = NewExpression;
  exports.TemplateLiteral = TemplateLiteral;
  exports.UnaryExpression = UnaryExpression;
  exports.BinaryExpression = BinaryExpression;
  exports.LogicalExpression = LogicalExpression;
  exports.ConditionalExpression = ConditionalExpression;
  exports.SequenceExpression = SequenceExpression;
  exports.AssignmentExpression = AssignmentExpression;
  exports.UpdateExpression = UpdateExpression;
  exports.StringLiteral = StringLiteral;
  exports.NumericLiteral = NumericLiteral;
  exports.BooleanLiteral = BooleanLiteral;
  exports.NullLiteral = NullLiteral;
  exports.RegExpLiteral = RegExpLiteral;
  exports.ObjectExpression = ObjectExpression;
  exports.ArrayExpression = ArrayExpression;
  exports.RestElement = RestElement;
  exports.CallExpression = CallExpression;
  exports.TaggedTemplateExpression = TaggedTemplateExpression;
  var _babelTypes = $__require('babel-types');
  var t = _interopRequireWildcard(_babelTypes);
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj.default = obj;
      return newObj;
    }
  }
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function VariableDeclarator() {
    var id = this.get("id");
    if (id.isIdentifier()) {
      return this.get("init").getTypeAnnotation();
    } else {
      return;
    }
  }
  function TypeCastExpression(node) {
    return node.typeAnnotation;
  }
  TypeCastExpression.validParent = true;
  function NewExpression(node) {
    if (this.get("callee").isIdentifier()) {
      return t.genericTypeAnnotation(node.callee);
    }
  }
  function TemplateLiteral() {
    return t.stringTypeAnnotation();
  }
  function UnaryExpression(node) {
    var operator = node.operator;
    if (operator === "void") {
      return t.voidTypeAnnotation();
    } else if (t.NUMBER_UNARY_OPERATORS.indexOf(operator) >= 0) {
      return t.numberTypeAnnotation();
    } else if (t.STRING_UNARY_OPERATORS.indexOf(operator) >= 0) {
      return t.stringTypeAnnotation();
    } else if (t.BOOLEAN_UNARY_OPERATORS.indexOf(operator) >= 0) {
      return t.booleanTypeAnnotation();
    }
  }
  function BinaryExpression(node) {
    var operator = node.operator;
    if (t.NUMBER_BINARY_OPERATORS.indexOf(operator) >= 0) {
      return t.numberTypeAnnotation();
    } else if (t.BOOLEAN_BINARY_OPERATORS.indexOf(operator) >= 0) {
      return t.booleanTypeAnnotation();
    } else if (operator === "+") {
      var right = this.get("right");
      var left = this.get("left");
      if (left.isBaseType("number") && right.isBaseType("number")) {
        return t.numberTypeAnnotation();
      } else if (left.isBaseType("string") || right.isBaseType("string")) {
        return t.stringTypeAnnotation();
      }
      return t.unionTypeAnnotation([t.stringTypeAnnotation(), t.numberTypeAnnotation()]);
    }
  }
  function LogicalExpression() {
    return t.createUnionTypeAnnotation([this.get("left").getTypeAnnotation(), this.get("right").getTypeAnnotation()]);
  }
  function ConditionalExpression() {
    return t.createUnionTypeAnnotation([this.get("consequent").getTypeAnnotation(), this.get("alternate").getTypeAnnotation()]);
  }
  function SequenceExpression() {
    return this.get("expressions").pop().getTypeAnnotation();
  }
  function AssignmentExpression() {
    return this.get("right").getTypeAnnotation();
  }
  function UpdateExpression(node) {
    var operator = node.operator;
    if (operator === "++" || operator === "--") {
      return t.numberTypeAnnotation();
    }
  }
  function StringLiteral() {
    return t.stringTypeAnnotation();
  }
  function NumericLiteral() {
    return t.numberTypeAnnotation();
  }
  function BooleanLiteral() {
    return t.booleanTypeAnnotation();
  }
  function NullLiteral() {
    return t.nullLiteralTypeAnnotation();
  }
  function RegExpLiteral() {
    return t.genericTypeAnnotation(t.identifier("RegExp"));
  }
  function ObjectExpression() {
    return t.genericTypeAnnotation(t.identifier("Object"));
  }
  function ArrayExpression() {
    return t.genericTypeAnnotation(t.identifier("Array"));
  }
  function RestElement() {
    return ArrayExpression();
  }
  RestElement.validParent = true;
  function Func() {
    return t.genericTypeAnnotation(t.identifier("Function"));
  }
  exports.Function = Func;
  exports.Class = Func;
  function CallExpression() {
    return resolveCall(this.get("callee"));
  }
  function TaggedTemplateExpression() {
    return resolveCall(this.get("tag"));
  }
  function resolveCall(callee) {
    callee = callee.resolve();
    if (callee.isFunction()) {
      if (callee.is("async")) {
        if (callee.is("generator")) {
          return t.genericTypeAnnotation(t.identifier("AsyncIterator"));
        } else {
          return t.genericTypeAnnotation(t.identifier("Promise"));
        }
      } else {
        if (callee.node.returnType) {
          return callee.node.returnType;
        } else {}
      }
    }
  }
  return module.exports;
});

System.registerDynamic("npm:babel-traverse@6.9.0/lib/path/inference/index.js", ["babel-runtime/core-js/get-iterator", "./inferers", "babel-types", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  var _getIterator2 = $__require('babel-runtime/core-js/get-iterator');
  var _getIterator3 = _interopRequireDefault(_getIterator2);
  exports.getTypeAnnotation = getTypeAnnotation;
  exports._getTypeAnnotation = _getTypeAnnotation;
  exports.isBaseType = isBaseType;
  exports.couldBeBaseType = couldBeBaseType;
  exports.baseTypeStrictlyMatches = baseTypeStrictlyMatches;
  exports.isGenericType = isGenericType;
  var _inferers = $__require('./inferers');
  var inferers = _interopRequireWildcard(_inferers);
  var _babelTypes = $__require('babel-types');
  var t = _interopRequireWildcard(_babelTypes);
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj.default = obj;
      return newObj;
    }
  }
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function getTypeAnnotation() {
    if (this.typeAnnotation)
      return this.typeAnnotation;
    var type = this._getTypeAnnotation() || t.anyTypeAnnotation();
    if (t.isTypeAnnotation(type))
      type = type.typeAnnotation;
    return this.typeAnnotation = type;
  }
  function _getTypeAnnotation() {
    var node = this.node;
    if (!node) {
      if (this.key === "init" && this.parentPath.isVariableDeclarator()) {
        var declar = this.parentPath.parentPath;
        var declarParent = declar.parentPath;
        if (declar.key === "left" && declarParent.isForInStatement()) {
          return t.stringTypeAnnotation();
        }
        if (declar.key === "left" && declarParent.isForOfStatement()) {
          return t.anyTypeAnnotation();
        }
        return t.voidTypeAnnotation();
      } else {
        return;
      }
    }
    if (node.typeAnnotation) {
      return node.typeAnnotation;
    }
    var inferer = inferers[node.type];
    if (inferer) {
      return inferer.call(this, node);
    }
    inferer = inferers[this.parentPath.type];
    if (inferer && inferer.validParent) {
      return this.parentPath.getTypeAnnotation();
    }
  }
  function isBaseType(baseName, soft) {
    return _isBaseType(baseName, this.getTypeAnnotation(), soft);
  }
  function _isBaseType(baseName, type, soft) {
    if (baseName === "string") {
      return t.isStringTypeAnnotation(type);
    } else if (baseName === "number") {
      return t.isNumberTypeAnnotation(type);
    } else if (baseName === "boolean") {
      return t.isBooleanTypeAnnotation(type);
    } else if (baseName === "any") {
      return t.isAnyTypeAnnotation(type);
    } else if (baseName === "mixed") {
      return t.isMixedTypeAnnotation(type);
    } else if (baseName === "void") {
      return t.isVoidTypeAnnotation(type);
    } else {
      if (soft) {
        return false;
      } else {
        throw new Error("Unknown base type " + baseName);
      }
    }
  }
  function couldBeBaseType(name) {
    var type = this.getTypeAnnotation();
    if (t.isAnyTypeAnnotation(type))
      return true;
    if (t.isUnionTypeAnnotation(type)) {
      for (var _iterator = type.types,
          _isArray = Array.isArray(_iterator),
          _i = 0,
          _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator); ; ) {
        var _ref;
        if (_isArray) {
          if (_i >= _iterator.length)
            break;
          _ref = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done)
            break;
          _ref = _i.value;
        }
        var type2 = _ref;
        if (t.isAnyTypeAnnotation(type2) || _isBaseType(name, type2, true)) {
          return true;
        }
      }
      return false;
    } else {
      return _isBaseType(name, type, true);
    }
  }
  function baseTypeStrictlyMatches(right) {
    var left = this.getTypeAnnotation();
    right = right.getTypeAnnotation();
    if (!t.isAnyTypeAnnotation(left) && t.isFlowBaseAnnotation(left)) {
      return right.type === left.type;
    }
  }
  function isGenericType(genericName) {
    var type = this.getTypeAnnotation();
    return t.isGenericTypeAnnotation(type) && t.isIdentifier(type.id, {name: genericName});
  }
  return module.exports;
});

System.registerDynamic("npm:js-tokens@1.0.3.json", [], false, function() {
  return {
    "main": "index",
    "format": "cjs",
    "meta": {
      "*.json": {
        "format": "json"
      }
    }
  };
});

System.registerDynamic("npm:js-tokens@1.0.3/index.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  module.exports = /((['"])(?:(?!\2|\\).|\\(?:\r\n|[\s\S]))*(\2)?|`(?:[^`\\$]|\\[\s\S]|\$(?!\{)|\$\{(?:[^{}]|\{[^}]*\}?)*\}?)*(`)?)|(\/\/.*)|(\/\*(?:[^*]|\*(?!\/))*(\*\/)?)|(\/(?!\*)(?:\[(?:(?![\]\\]).|\\.)*\]|(?![\/\]\\]).|\\.)+\/(?:(?!\s*(?:\b|[\u0080-\uFFFF$\\'"~({]|[+\-!](?!=)|\.?\d))|[gmiyu]{1,5}\b(?![\u0080-\uFFFF$\\]|\s*(?:[+\-*%&|^<>!=?({]|\/(?![\/*])))))|(0[xX][\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\d*\.\d+|\d+\.?)(?:[eE][+-]?\d+)?)|((?!\d)(?:(?!\s)[$\w\u0080-\uFFFF]|\\u[\da-fA-F]{4}|\\u\{[\da-fA-F]{1,6}\})+)|(--|\+\+|&&|\|\||=>|\.{3}|(?:[+\-*\/%&|^]|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\](){}])|(\s+)|(^$|[\s\S])/g;
  module.exports.matchToToken = function(match) {
    var token = {
      type: "invalid",
      value: match[0]
    };
    if (match[1])
      token.type = "string", token.closed = !!(match[3] || match[4]);
    else if (match[5])
      token.type = "comment";
    else if (match[6])
      token.type = "comment", token.closed = !!match[7];
    else if (match[8])
      token.type = "regex";
    else if (match[9])
      token.type = "number";
    else if (match[10])
      token.type = "name";
    else if (match[11])
      token.type = "punctuator";
    else if (match[12])
      token.type = "whitespace";
    return token;
  };
  return module.exports;
});

System.registerDynamic("npm:esutils@2.0.2/lib/ast.js", ["process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  (function() {
    'use strict';
    function isExpression(node) {
      if (node == null) {
        return false;
      }
      switch (node.type) {
        case 'ArrayExpression':
        case 'AssignmentExpression':
        case 'BinaryExpression':
        case 'CallExpression':
        case 'ConditionalExpression':
        case 'FunctionExpression':
        case 'Identifier':
        case 'Literal':
        case 'LogicalExpression':
        case 'MemberExpression':
        case 'NewExpression':
        case 'ObjectExpression':
        case 'SequenceExpression':
        case 'ThisExpression':
        case 'UnaryExpression':
        case 'UpdateExpression':
          return true;
      }
      return false;
    }
    function isIterationStatement(node) {
      if (node == null) {
        return false;
      }
      switch (node.type) {
        case 'DoWhileStatement':
        case 'ForInStatement':
        case 'ForStatement':
        case 'WhileStatement':
          return true;
      }
      return false;
    }
    function isStatement(node) {
      if (node == null) {
        return false;
      }
      switch (node.type) {
        case 'BlockStatement':
        case 'BreakStatement':
        case 'ContinueStatement':
        case 'DebuggerStatement':
        case 'DoWhileStatement':
        case 'EmptyStatement':
        case 'ExpressionStatement':
        case 'ForInStatement':
        case 'ForStatement':
        case 'IfStatement':
        case 'LabeledStatement':
        case 'ReturnStatement':
        case 'SwitchStatement':
        case 'ThrowStatement':
        case 'TryStatement':
        case 'VariableDeclaration':
        case 'WhileStatement':
        case 'WithStatement':
          return true;
      }
      return false;
    }
    function isSourceElement(node) {
      return isStatement(node) || node != null && node.type === 'FunctionDeclaration';
    }
    function trailingStatement(node) {
      switch (node.type) {
        case 'IfStatement':
          if (node.alternate != null) {
            return node.alternate;
          }
          return node.consequent;
        case 'LabeledStatement':
        case 'ForStatement':
        case 'ForInStatement':
        case 'WhileStatement':
        case 'WithStatement':
          return node.body;
      }
      return null;
    }
    function isProblematicIfStatement(node) {
      var current;
      if (node.type !== 'IfStatement') {
        return false;
      }
      if (node.alternate == null) {
        return false;
      }
      current = node.consequent;
      do {
        if (current.type === 'IfStatement') {
          if (current.alternate == null) {
            return true;
          }
        }
        current = trailingStatement(current);
      } while (current);
      return false;
    }
    module.exports = {
      isExpression: isExpression,
      isStatement: isStatement,
      isIterationStatement: isIterationStatement,
      isSourceElement: isSourceElement,
      isProblematicIfStatement: isProblematicIfStatement,
      trailingStatement: trailingStatement
    };
  }());
  return module.exports;
});

System.registerDynamic("npm:esutils@2.0.2/lib/code.js", ["process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  (function() {
    'use strict';
    var ES6Regex,
        ES5Regex,
        NON_ASCII_WHITESPACES,
        IDENTIFIER_START,
        IDENTIFIER_PART,
        ch;
    ES5Regex = {
      NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B2\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,
      NonAsciiIdentifierPart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B2\u08E4-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58\u0C59\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D60-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA69D\uA69F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2D\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/
    };
    ES6Regex = {
      NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B2\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDE00-\uDE11\uDE13-\uDE2B\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF5D-\uDF61]|\uD805[\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDE00-\uDE2F\uDE44\uDE80-\uDEAA]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF98]|\uD809[\uDC00-\uDC6E]|[\uD80C\uD840-\uD868\uD86A-\uD86C][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D]|\uD87E[\uDC00-\uDE1D]/,
      NonAsciiIdentifierPart: /[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B2\u08E4-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58\u0C59\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D60-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA69D\uA69F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2D\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDD0-\uDDDA\uDE00-\uDE11\uDE13-\uDE37\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF01-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF98]|\uD809[\uDC00-\uDC6E]|[\uD80C\uD840-\uD868\uD86A-\uD86C][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/
    };
    function isDecimalDigit(ch) {
      return 0x30 <= ch && ch <= 0x39;
    }
    function isHexDigit(ch) {
      return 0x30 <= ch && ch <= 0x39 || 0x61 <= ch && ch <= 0x66 || 0x41 <= ch && ch <= 0x46;
    }
    function isOctalDigit(ch) {
      return ch >= 0x30 && ch <= 0x37;
    }
    NON_ASCII_WHITESPACES = [0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF];
    function isWhiteSpace(ch) {
      return ch === 0x20 || ch === 0x09 || ch === 0x0B || ch === 0x0C || ch === 0xA0 || ch >= 0x1680 && NON_ASCII_WHITESPACES.indexOf(ch) >= 0;
    }
    function isLineTerminator(ch) {
      return ch === 0x0A || ch === 0x0D || ch === 0x2028 || ch === 0x2029;
    }
    function fromCodePoint(cp) {
      if (cp <= 0xFFFF) {
        return String.fromCharCode(cp);
      }
      var cu1 = String.fromCharCode(Math.floor((cp - 0x10000) / 0x400) + 0xD800);
      var cu2 = String.fromCharCode(((cp - 0x10000) % 0x400) + 0xDC00);
      return cu1 + cu2;
    }
    IDENTIFIER_START = new Array(0x80);
    for (ch = 0; ch < 0x80; ++ch) {
      IDENTIFIER_START[ch] = ch >= 0x61 && ch <= 0x7A || ch >= 0x41 && ch <= 0x5A || ch === 0x24 || ch === 0x5F;
    }
    IDENTIFIER_PART = new Array(0x80);
    for (ch = 0; ch < 0x80; ++ch) {
      IDENTIFIER_PART[ch] = ch >= 0x61 && ch <= 0x7A || ch >= 0x41 && ch <= 0x5A || ch >= 0x30 && ch <= 0x39 || ch === 0x24 || ch === 0x5F;
    }
    function isIdentifierStartES5(ch) {
      return ch < 0x80 ? IDENTIFIER_START[ch] : ES5Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch));
    }
    function isIdentifierPartES5(ch) {
      return ch < 0x80 ? IDENTIFIER_PART[ch] : ES5Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch));
    }
    function isIdentifierStartES6(ch) {
      return ch < 0x80 ? IDENTIFIER_START[ch] : ES6Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch));
    }
    function isIdentifierPartES6(ch) {
      return ch < 0x80 ? IDENTIFIER_PART[ch] : ES6Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch));
    }
    module.exports = {
      isDecimalDigit: isDecimalDigit,
      isHexDigit: isHexDigit,
      isOctalDigit: isOctalDigit,
      isWhiteSpace: isWhiteSpace,
      isLineTerminator: isLineTerminator,
      isIdentifierStartES5: isIdentifierStartES5,
      isIdentifierPartES5: isIdentifierPartES5,
      isIdentifierStartES6: isIdentifierStartES6,
      isIdentifierPartES6: isIdentifierPartES6
    };
  }());
  return module.exports;
});

System.registerDynamic("npm:esutils@2.0.2/lib/keyword.js", ["./code", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  (function() {
    'use strict';
    var code = $__require('./code');
    function isStrictModeReservedWordES6(id) {
      switch (id) {
        case 'implements':
        case 'interface':
        case 'package':
        case 'private':
        case 'protected':
        case 'public':
        case 'static':
        case 'let':
          return true;
        default:
          return false;
      }
    }
    function isKeywordES5(id, strict) {
      if (!strict && id === 'yield') {
        return false;
      }
      return isKeywordES6(id, strict);
    }
    function isKeywordES6(id, strict) {
      if (strict && isStrictModeReservedWordES6(id)) {
        return true;
      }
      switch (id.length) {
        case 2:
          return (id === 'if') || (id === 'in') || (id === 'do');
        case 3:
          return (id === 'var') || (id === 'for') || (id === 'new') || (id === 'try');
        case 4:
          return (id === 'this') || (id === 'else') || (id === 'case') || (id === 'void') || (id === 'with') || (id === 'enum');
        case 5:
          return (id === 'while') || (id === 'break') || (id === 'catch') || (id === 'throw') || (id === 'const') || (id === 'yield') || (id === 'class') || (id === 'super');
        case 6:
          return (id === 'return') || (id === 'typeof') || (id === 'delete') || (id === 'switch') || (id === 'export') || (id === 'import');
        case 7:
          return (id === 'default') || (id === 'finally') || (id === 'extends');
        case 8:
          return (id === 'function') || (id === 'continue') || (id === 'debugger');
        case 10:
          return (id === 'instanceof');
        default:
          return false;
      }
    }
    function isReservedWordES5(id, strict) {
      return id === 'null' || id === 'true' || id === 'false' || isKeywordES5(id, strict);
    }
    function isReservedWordES6(id, strict) {
      return id === 'null' || id === 'true' || id === 'false' || isKeywordES6(id, strict);
    }
    function isRestrictedWord(id) {
      return id === 'eval' || id === 'arguments';
    }
    function isIdentifierNameES5(id) {
      var i,
          iz,
          ch;
      if (id.length === 0) {
        return false;
      }
      ch = id.charCodeAt(0);
      if (!code.isIdentifierStartES5(ch)) {
        return false;
      }
      for (i = 1, iz = id.length; i < iz; ++i) {
        ch = id.charCodeAt(i);
        if (!code.isIdentifierPartES5(ch)) {
          return false;
        }
      }
      return true;
    }
    function decodeUtf16(lead, trail) {
      return (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;
    }
    function isIdentifierNameES6(id) {
      var i,
          iz,
          ch,
          lowCh,
          check;
      if (id.length === 0) {
        return false;
      }
      check = code.isIdentifierStartES6;
      for (i = 0, iz = id.length; i < iz; ++i) {
        ch = id.charCodeAt(i);
        if (0xD800 <= ch && ch <= 0xDBFF) {
          ++i;
          if (i >= iz) {
            return false;
          }
          lowCh = id.charCodeAt(i);
          if (!(0xDC00 <= lowCh && lowCh <= 0xDFFF)) {
            return false;
          }
          ch = decodeUtf16(ch, lowCh);
        }
        if (!check(ch)) {
          return false;
        }
        check = code.isIdentifierPartES6;
      }
      return true;
    }
    function isIdentifierES5(id, strict) {
      return isIdentifierNameES5(id) && !isReservedWordES5(id, strict);
    }
    function isIdentifierES6(id, strict) {
      return isIdentifierNameES6(id) && !isReservedWordES6(id, strict);
    }
    module.exports = {
      isKeywordES5: isKeywordES5,
      isKeywordES6: isKeywordES6,
      isReservedWordES5: isReservedWordES5,
      isReservedWordES6: isReservedWordES6,
      isRestrictedWord: isRestrictedWord,
      isIdentifierNameES5: isIdentifierNameES5,
      isIdentifierNameES6: isIdentifierNameES6,
      isIdentifierES5: isIdentifierES5,
      isIdentifierES6: isIdentifierES6
    };
  }());
  return module.exports;
});

System.registerDynamic("npm:esutils@2.0.2.json", [], false, function() {
  return {
    "main": "lib/utils.js",
    "format": "cjs",
    "meta": {
      "*": {
        "globals": {
          "process": "process"
        }
      },
      "*.json": {
        "format": "json"
      }
    }
  };
});

System.registerDynamic("npm:esutils@2.0.2/lib/utils.js", ["./ast", "./code", "./keyword", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  (function() {
    'use strict';
    exports.ast = $__require('./ast');
    exports.code = $__require('./code');
    exports.keyword = $__require('./keyword');
  }());
  return module.exports;
});

System.registerDynamic("npm:escape-string-regexp@1.0.5.json", [], false, function() {
  return {
    "main": "index",
    "format": "cjs",
    "meta": {
      "*": {
        "globals": {
          "process": "process"
        }
      },
      "*.json": {
        "format": "json"
      }
    }
  };
});

System.registerDynamic("npm:escape-string-regexp@1.0.5/index.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var matchOperatorsRe = /[|\\{}()[\]^$+*?.]/g;
  module.exports = function(str) {
    if (typeof str !== 'string') {
      throw new TypeError('Expected a string');
    }
    return str.replace(matchOperatorsRe, '\\$&');
  };
  return module.exports;
});

System.registerDynamic("npm:ansi-styles@2.2.1.json", [], false, function() {
  return {
    "main": "index",
    "format": "cjs",
    "meta": {
      "*.json": {
        "format": "json"
      }
    }
  };
});

System.registerDynamic("npm:ansi-styles@2.2.1/index.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  function assembleStyles() {
    var styles = {
      modifiers: {
        reset: [0, 0],
        bold: [1, 22],
        dim: [2, 22],
        italic: [3, 23],
        underline: [4, 24],
        inverse: [7, 27],
        hidden: [8, 28],
        strikethrough: [9, 29]
      },
      colors: {
        black: [30, 39],
        red: [31, 39],
        green: [32, 39],
        yellow: [33, 39],
        blue: [34, 39],
        magenta: [35, 39],
        cyan: [36, 39],
        white: [37, 39],
        gray: [90, 39]
      },
      bgColors: {
        bgBlack: [40, 49],
        bgRed: [41, 49],
        bgGreen: [42, 49],
        bgYellow: [43, 49],
        bgBlue: [44, 49],
        bgMagenta: [45, 49],
        bgCyan: [46, 49],
        bgWhite: [47, 49]
      }
    };
    styles.colors.grey = styles.colors.gray;
    Object.keys(styles).forEach(function(groupName) {
      var group = styles[groupName];
      Object.keys(group).forEach(function(styleName) {
        var style = group[styleName];
        styles[styleName] = group[styleName] = {
          open: '\u001b[' + style[0] + 'm',
          close: '\u001b[' + style[1] + 'm'
        };
      });
      Object.defineProperty(styles, groupName, {
        value: group,
        enumerable: false
      });
    });
    return styles;
  }
  Object.defineProperty(module, 'exports', {
    enumerable: true,
    get: assembleStyles
  });
  return module.exports;
});

System.registerDynamic("npm:strip-ansi@3.0.1.json", [], false, function() {
  return {
    "main": "index",
    "format": "cjs",
    "meta": {
      "*": {
        "globals": {
          "process": "process"
        }
      },
      "*.json": {
        "format": "json"
      }
    }
  };
});

System.registerDynamic("npm:strip-ansi@3.0.1/index.js", ["ansi-regex", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ansiRegex = $__require('ansi-regex')();
  module.exports = function(str) {
    return typeof str === 'string' ? str.replace(ansiRegex, '') : str;
  };
  return module.exports;
});

System.registerDynamic("npm:ansi-regex@2.0.0.json", [], false, function() {
  return {
    "main": "index",
    "format": "cjs",
    "meta": {
      "*": {
        "globals": {
          "process": "process"
        }
      },
      "*.json": {
        "format": "json"
      }
    }
  };
});

System.registerDynamic("npm:ansi-regex@2.0.0/index.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  module.exports = function() {
    return /[\u001b\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g;
  };
  return module.exports;
});

System.registerDynamic("npm:has-ansi@2.0.0.json", [], false, function() {
  return {
    "main": "index",
    "format": "cjs",
    "meta": {
      "*": {
        "globals": {
          "process": "process"
        }
      },
      "*.json": {
        "format": "json"
      }
    }
  };
});

System.registerDynamic("npm:has-ansi@2.0.0/index.js", ["ansi-regex", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ansiRegex = $__require('ansi-regex');
  var re = new RegExp(ansiRegex().source);
  module.exports = re.test.bind(re);
  return module.exports;
});

System.registerDynamic("npm:supports-color@2.0.0.json", [], false, function() {
  return {
    "main": "index",
    "format": "cjs",
    "meta": {
      "*": {
        "globals": {
          "process": "process"
        }
      },
      "*.json": {
        "format": "json"
      }
    }
  };
});

System.registerDynamic("npm:supports-color@2.0.0/index.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var argv = process.argv;
  var terminator = argv.indexOf('--');
  var hasFlag = function(flag) {
    flag = '--' + flag;
    var pos = argv.indexOf(flag);
    return pos !== -1 && (terminator !== -1 ? pos < terminator : true);
  };
  module.exports = (function() {
    if ('FORCE_COLOR' in process.env) {
      return true;
    }
    if (hasFlag('no-color') || hasFlag('no-colors') || hasFlag('color=false')) {
      return false;
    }
    if (hasFlag('color') || hasFlag('colors') || hasFlag('color=true') || hasFlag('color=always')) {
      return true;
    }
    if (process.stdout && !process.stdout.isTTY) {
      return false;
    }
    if (process.platform === 'win32') {
      return true;
    }
    if ('COLORTERM' in process.env) {
      return true;
    }
    if (process.env.TERM === 'dumb') {
      return false;
    }
    if (/^screen|^xterm|^vt100|color|ansi|cygwin|linux/i.test(process.env.TERM)) {
      return true;
    }
    return false;
  })();
  return module.exports;
});

System.registerDynamic("npm:chalk@1.1.3.json", [], false, function() {
  return {
    "main": "index",
    "format": "cjs",
    "meta": {
      "*": {
        "globals": {
          "process": "process"
        }
      },
      "*.json": {
        "format": "json"
      }
    }
  };
});

System.registerDynamic("npm:chalk@1.1.3/index.js", ["escape-string-regexp", "ansi-styles", "strip-ansi", "has-ansi", "supports-color", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var escapeStringRegexp = $__require('escape-string-regexp');
  var ansiStyles = $__require('ansi-styles');
  var stripAnsi = $__require('strip-ansi');
  var hasAnsi = $__require('has-ansi');
  var supportsColor = $__require('supports-color');
  var defineProps = Object.defineProperties;
  var isSimpleWindowsTerm = process.platform === 'win32' && !/^xterm/i.test(process.env.TERM);
  function Chalk(options) {
    this.enabled = !options || options.enabled === undefined ? supportsColor : options.enabled;
  }
  if (isSimpleWindowsTerm) {
    ansiStyles.blue.open = '\u001b[94m';
  }
  var styles = (function() {
    var ret = {};
    Object.keys(ansiStyles).forEach(function(key) {
      ansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');
      ret[key] = {get: function() {
          return build.call(this, this._styles.concat(key));
        }};
    });
    return ret;
  })();
  var proto = defineProps(function chalk() {}, styles);
  function build(_styles) {
    var builder = function() {
      return applyStyle.apply(builder, arguments);
    };
    builder._styles = _styles;
    builder.enabled = this.enabled;
    builder.__proto__ = proto;
    return builder;
  }
  function applyStyle() {
    var args = arguments;
    var argsLen = args.length;
    var str = argsLen !== 0 && String(arguments[0]);
    if (argsLen > 1) {
      for (var a = 1; a < argsLen; a++) {
        str += ' ' + args[a];
      }
    }
    if (!this.enabled || !str) {
      return str;
    }
    var nestedStyles = this._styles;
    var i = nestedStyles.length;
    var originalDim = ansiStyles.dim.open;
    if (isSimpleWindowsTerm && (nestedStyles.indexOf('gray') !== -1 || nestedStyles.indexOf('grey') !== -1)) {
      ansiStyles.dim.open = '';
    }
    while (i--) {
      var code = ansiStyles[nestedStyles[i]];
      str = code.open + str.replace(code.closeRe, code.open) + code.close;
    }
    ansiStyles.dim.open = originalDim;
    return str;
  }
  function init() {
    var ret = {};
    Object.keys(styles).forEach(function(name) {
      ret[name] = {get: function() {
          return build.call(this, [name]);
        }};
    });
    return ret;
  }
  defineProps(Chalk.prototype, init());
  module.exports = new Chalk();
  module.exports.styles = ansiStyles;
  module.exports.hasColor = hasAnsi;
  module.exports.stripColor = stripAnsi;
  module.exports.supportsColor = supportsColor;
  return module.exports;
});

System.registerDynamic("npm:babel-code-frame@6.8.0.json", [], false, function() {
  return {
    "main": "lib/index.js",
    "format": "cjs",
    "meta": {
      "*.json": {
        "format": "json"
      }
    },
    "map": {
      "./lib.js": "./lib/index.js"
    }
  };
});

System.registerDynamic("npm:babel-code-frame@6.8.0/lib/index.js", ["js-tokens", "esutils", "chalk"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  exports.default = function(rawLines, lineNumber, colNumber) {
    var opts = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];
    colNumber = Math.max(colNumber, 0);
    var highlighted = opts.highlightCode && _chalk2.default.supportsColor;
    if (highlighted)
      rawLines = highlight(rawLines);
    var lines = rawLines.split(NEWLINE);
    var start = Math.max(lineNumber - 3, 0);
    var end = Math.min(lines.length, lineNumber + 3);
    if (!lineNumber && !colNumber) {
      start = 0;
      end = lines.length;
    }
    var numberMaxWidth = String(end).length;
    var frame = lines.slice(start, end).map(function(line, index) {
      var number = start + 1 + index;
      var paddedNumber = (" " + number).slice(-numberMaxWidth);
      var gutter = " " + paddedNumber + " | ";
      if (number === lineNumber) {
        var markerLine = "";
        if (colNumber) {
          var markerSpacing = line.slice(0, colNumber - 1).replace(/[^\t]/g, " ");
          markerLine = "\n " + gutter.replace(/\d/g, " ") + markerSpacing + "^";
        }
        return (">" + gutter + line + markerLine);
      } else {
        return (" " + gutter + line);
      }
    }).join("\n");
    if (highlighted) {
      return (_chalk2.default.reset(frame));
    } else {
      return frame;
    }
  };
  var _jsTokens = $__require('js-tokens');
  var _jsTokens2 = _interopRequireDefault(_jsTokens);
  var _esutils = $__require('esutils');
  var _esutils2 = _interopRequireDefault(_esutils);
  var _chalk = $__require('chalk');
  var _chalk2 = _interopRequireDefault(_chalk);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  var defs = {
    string: _chalk2.default.red,
    punctuator: _chalk2.default.bold,
    curly: _chalk2.default.green,
    parens: _chalk2.default.blue.bold,
    square: _chalk2.default.yellow,
    keyword: _chalk2.default.cyan,
    number: _chalk2.default.magenta,
    regex: _chalk2.default.magenta,
    comment: _chalk2.default.grey,
    invalid: _chalk2.default.inverse
  };
  var NEWLINE = /\r\n|[\n\r\u2028\u2029]/;
  function getTokenType(match) {
    var token = _jsTokens2.default.matchToToken(match);
    if (token.type === "name" && _esutils2.default.keyword.isReservedWordES6(token.value)) {
      return "keyword";
    }
    if (token.type === "punctuator") {
      switch (token.value) {
        case "{":
        case "}":
          return "curly";
        case "(":
        case ")":
          return "parens";
        case "[":
        case "]":
          return "square";
      }
    }
    return token.type;
  }
  function highlight(text) {
    return text.replace(_jsTokens2.default, function() {
      for (var _len = arguments.length,
          args = Array(_len),
          _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      var type = getTokenType(args);
      var colorize = defs[type];
      if (colorize) {
        return args[0].split(NEWLINE).map(function(str) {
          return colorize(str);
        }).join("\n");
      } else {
        return args[0];
      }
    });
  }
  module.exports = exports["default"];
  return module.exports;
});

System.registerDynamic("npm:babylon@6.8.1/lib/parser/util.js", ["../tokenizer/types", "./index", "../util/whitespace"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  var _types = $__require('../tokenizer/types');
  var _index = $__require('./index');
  var _index2 = _interopRequireDefault(_index);
  var _whitespace = $__require('../util/whitespace');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  var pp = _index2.default.prototype;
  pp.addExtra = function(node, key, val) {
    if (!node)
      return;
    var extra = node.extra = node.extra || {};
    extra[key] = val;
  };
  pp.isRelational = function(op) {
    return this.match(_types.types.relational) && this.state.value === op;
  };
  pp.expectRelational = function(op) {
    if (this.isRelational(op)) {
      this.next();
    } else {
      this.unexpected();
    }
  };
  pp.isContextual = function(name) {
    return this.match(_types.types.name) && this.state.value === name;
  };
  pp.eatContextual = function(name) {
    return this.state.value === name && this.eat(_types.types.name);
  };
  pp.expectContextual = function(name) {
    if (!this.eatContextual(name))
      this.unexpected();
  };
  pp.canInsertSemicolon = function() {
    return this.match(_types.types.eof) || this.match(_types.types.braceR) || _whitespace.lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));
  };
  pp.isLineTerminator = function() {
    return this.eat(_types.types.semi) || this.canInsertSemicolon();
  };
  pp.semicolon = function() {
    if (!this.isLineTerminator())
      this.unexpected();
  };
  pp.expect = function(type) {
    return this.eat(type) || this.unexpected();
  };
  pp.unexpected = function(pos) {
    this.raise(pos != null ? pos : this.state.start, "Unexpected token");
  };
  return module.exports;
});

System.registerDynamic("npm:babylon@6.8.1/lib/parser/statement.js", ["babel-runtime/core-js/get-iterator", "babel-runtime/core-js/object/create", "../tokenizer/types", "./index", "../util/whitespace"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  var _getIterator2 = $__require('babel-runtime/core-js/get-iterator');
  var _getIterator3 = _interopRequireDefault(_getIterator2);
  var _create = $__require('babel-runtime/core-js/object/create');
  var _create2 = _interopRequireDefault(_create);
  var _types = $__require('../tokenizer/types');
  var _index = $__require('./index');
  var _index2 = _interopRequireDefault(_index);
  var _whitespace = $__require('../util/whitespace');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  var pp = _index2.default.prototype;
  pp.parseTopLevel = function(file, program) {
    program.sourceType = this.options.sourceType;
    this.parseBlockBody(program, true, true, _types.types.eof);
    file.program = this.finishNode(program, "Program");
    file.comments = this.state.comments;
    file.tokens = this.state.tokens;
    return this.finishNode(file, "File");
  };
  var loopLabel = {kind: "loop"},
      switchLabel = {kind: "switch"};
  pp.stmtToDirective = function(stmt) {
    var expr = stmt.expression;
    var directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);
    var directive = this.startNodeAt(stmt.start, stmt.loc.start);
    var raw = this.input.slice(expr.start, expr.end);
    var val = directiveLiteral.value = raw.slice(1, -1);
    this.addExtra(directiveLiteral, "raw", raw);
    this.addExtra(directiveLiteral, "rawValue", val);
    directive.value = this.finishNodeAt(directiveLiteral, "DirectiveLiteral", expr.end, expr.loc.end);
    return this.finishNodeAt(directive, "Directive", stmt.end, stmt.loc.end);
  };
  pp.parseStatement = function(declaration, topLevel) {
    if (this.match(_types.types.at)) {
      this.parseDecorators(true);
    }
    var starttype = this.state.type,
        node = this.startNode();
    switch (starttype) {
      case _types.types._break:
      case _types.types._continue:
        return this.parseBreakContinueStatement(node, starttype.keyword);
      case _types.types._debugger:
        return this.parseDebuggerStatement(node);
      case _types.types._do:
        return this.parseDoStatement(node);
      case _types.types._for:
        return this.parseForStatement(node);
      case _types.types._function:
        if (!declaration)
          this.unexpected();
        return this.parseFunctionStatement(node);
      case _types.types._class:
        if (!declaration)
          this.unexpected();
        this.takeDecorators(node);
        return this.parseClass(node, true);
      case _types.types._if:
        return this.parseIfStatement(node);
      case _types.types._return:
        return this.parseReturnStatement(node);
      case _types.types._switch:
        return this.parseSwitchStatement(node);
      case _types.types._throw:
        return this.parseThrowStatement(node);
      case _types.types._try:
        return this.parseTryStatement(node);
      case _types.types._let:
      case _types.types._const:
        if (!declaration)
          this.unexpected();
      case _types.types._var:
        return this.parseVarStatement(node, starttype);
      case _types.types._while:
        return this.parseWhileStatement(node);
      case _types.types._with:
        return this.parseWithStatement(node);
      case _types.types.braceL:
        return this.parseBlock();
      case _types.types.semi:
        return this.parseEmptyStatement(node);
      case _types.types._export:
      case _types.types._import:
        if (!this.options.allowImportExportEverywhere) {
          if (!topLevel) {
            this.raise(this.state.start, "'import' and 'export' may only appear at the top level");
          }
          if (!this.inModule) {
            this.raise(this.state.start, "'import' and 'export' may appear only with 'sourceType: module'");
          }
        }
        return starttype === _types.types._import ? this.parseImport(node) : this.parseExport(node);
      case _types.types.name:
        if (this.hasPlugin("asyncFunctions") && this.state.value === "async") {
          var state = this.state.clone();
          this.next();
          if (this.match(_types.types._function) && !this.canInsertSemicolon()) {
            this.expect(_types.types._function);
            return this.parseFunction(node, true, false, true);
          } else {
            this.state = state;
          }
        }
    }
    var maybeName = this.state.value;
    var expr = this.parseExpression();
    if (starttype === _types.types.name && expr.type === "Identifier" && this.eat(_types.types.colon)) {
      return this.parseLabeledStatement(node, maybeName, expr);
    } else {
      return this.parseExpressionStatement(node, expr);
    }
  };
  pp.takeDecorators = function(node) {
    if (this.state.decorators.length) {
      node.decorators = this.state.decorators;
      this.state.decorators = [];
    }
  };
  pp.parseDecorators = function(allowExport) {
    while (this.match(_types.types.at)) {
      this.state.decorators.push(this.parseDecorator());
    }
    if (allowExport && this.match(_types.types._export)) {
      return;
    }
    if (!this.match(_types.types._class)) {
      this.raise(this.state.start, "Leading decorators must be attached to a class declaration");
    }
  };
  pp.parseDecorator = function() {
    if (!this.hasPlugin("decorators")) {
      this.unexpected();
    }
    var node = this.startNode();
    this.next();
    node.expression = this.parseMaybeAssign();
    return this.finishNode(node, "Decorator");
  };
  pp.parseBreakContinueStatement = function(node, keyword) {
    var isBreak = keyword === "break";
    this.next();
    if (this.isLineTerminator()) {
      node.label = null;
    } else if (!this.match(_types.types.name)) {
      this.unexpected();
    } else {
      node.label = this.parseIdentifier();
      this.semicolon();
    }
    var i = void 0;
    for (i = 0; i < this.state.labels.length; ++i) {
      var lab = this.state.labels[i];
      if (node.label == null || lab.name === node.label.name) {
        if (lab.kind != null && (isBreak || lab.kind === "loop"))
          break;
        if (node.label && isBreak)
          break;
      }
    }
    if (i === this.state.labels.length)
      this.raise(node.start, "Unsyntactic " + keyword);
    return this.finishNode(node, isBreak ? "BreakStatement" : "ContinueStatement");
  };
  pp.parseDebuggerStatement = function(node) {
    this.next();
    this.semicolon();
    return this.finishNode(node, "DebuggerStatement");
  };
  pp.parseDoStatement = function(node) {
    this.next();
    this.state.labels.push(loopLabel);
    node.body = this.parseStatement(false);
    this.state.labels.pop();
    this.expect(_types.types._while);
    node.test = this.parseParenExpression();
    this.eat(_types.types.semi);
    return this.finishNode(node, "DoWhileStatement");
  };
  pp.parseForStatement = function(node) {
    this.next();
    this.state.labels.push(loopLabel);
    var forAwait = false;
    if (this.hasPlugin("asyncGenerators") && this.state.inAsync && this.isContextual("await")) {
      forAwait = true;
      this.next();
    }
    this.expect(_types.types.parenL);
    if (this.match(_types.types.semi)) {
      if (forAwait) {
        this.unexpected();
      }
      return this.parseFor(node, null);
    }
    if (this.match(_types.types._var) || this.match(_types.types._let) || this.match(_types.types._const)) {
      var _init = this.startNode(),
          varKind = this.state.type;
      this.next();
      this.parseVar(_init, true, varKind);
      this.finishNode(_init, "VariableDeclaration");
      if (this.match(_types.types._in) || this.isContextual("of")) {
        if (_init.declarations.length === 1 && !_init.declarations[0].init) {
          return this.parseForIn(node, _init, forAwait);
        }
      }
      if (forAwait) {
        this.unexpected();
      }
      return this.parseFor(node, _init);
    }
    var refShorthandDefaultPos = {start: 0};
    var init = this.parseExpression(true, refShorthandDefaultPos);
    if (this.match(_types.types._in) || this.isContextual("of")) {
      this.toAssignable(init);
      this.checkLVal(init);
      return this.parseForIn(node, init, forAwait);
    } else if (refShorthandDefaultPos.start) {
      this.unexpected(refShorthandDefaultPos.start);
    }
    if (forAwait) {
      this.unexpected();
    }
    return this.parseFor(node, init);
  };
  pp.parseFunctionStatement = function(node) {
    this.next();
    return this.parseFunction(node, true);
  };
  pp.parseIfStatement = function(node) {
    this.next();
    node.test = this.parseParenExpression();
    node.consequent = this.parseStatement(false);
    node.alternate = this.eat(_types.types._else) ? this.parseStatement(false) : null;
    return this.finishNode(node, "IfStatement");
  };
  pp.parseReturnStatement = function(node) {
    if (!this.state.inFunction && !this.options.allowReturnOutsideFunction) {
      this.raise(this.state.start, "'return' outside of function");
    }
    this.next();
    if (this.isLineTerminator()) {
      node.argument = null;
    } else {
      node.argument = this.parseExpression();
      this.semicolon();
    }
    return this.finishNode(node, "ReturnStatement");
  };
  pp.parseSwitchStatement = function(node) {
    this.next();
    node.discriminant = this.parseParenExpression();
    node.cases = [];
    this.expect(_types.types.braceL);
    this.state.labels.push(switchLabel);
    var cur = void 0;
    for (var sawDefault; !this.match(_types.types.braceR); ) {
      if (this.match(_types.types._case) || this.match(_types.types._default)) {
        var isCase = this.match(_types.types._case);
        if (cur)
          this.finishNode(cur, "SwitchCase");
        node.cases.push(cur = this.startNode());
        cur.consequent = [];
        this.next();
        if (isCase) {
          cur.test = this.parseExpression();
        } else {
          if (sawDefault)
            this.raise(this.state.lastTokStart, "Multiple default clauses");
          sawDefault = true;
          cur.test = null;
        }
        this.expect(_types.types.colon);
      } else {
        if (cur) {
          cur.consequent.push(this.parseStatement(true));
        } else {
          this.unexpected();
        }
      }
    }
    if (cur)
      this.finishNode(cur, "SwitchCase");
    this.next();
    this.state.labels.pop();
    return this.finishNode(node, "SwitchStatement");
  };
  pp.parseThrowStatement = function(node) {
    this.next();
    if (_whitespace.lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start)))
      this.raise(this.state.lastTokEnd, "Illegal newline after throw");
    node.argument = this.parseExpression();
    this.semicolon();
    return this.finishNode(node, "ThrowStatement");
  };
  var empty = [];
  pp.parseTryStatement = function(node) {
    this.next();
    node.block = this.parseBlock();
    node.handler = null;
    if (this.match(_types.types._catch)) {
      var clause = this.startNode();
      this.next();
      this.expect(_types.types.parenL);
      clause.param = this.parseBindingAtom();
      this.checkLVal(clause.param, true, (0, _create2.default)(null));
      this.expect(_types.types.parenR);
      clause.body = this.parseBlock();
      node.handler = this.finishNode(clause, "CatchClause");
    }
    node.guardedHandlers = empty;
    node.finalizer = this.eat(_types.types._finally) ? this.parseBlock() : null;
    if (!node.handler && !node.finalizer) {
      this.raise(node.start, "Missing catch or finally clause");
    }
    return this.finishNode(node, "TryStatement");
  };
  pp.parseVarStatement = function(node, kind) {
    this.next();
    this.parseVar(node, false, kind);
    this.semicolon();
    return this.finishNode(node, "VariableDeclaration");
  };
  pp.parseWhileStatement = function(node) {
    this.next();
    node.test = this.parseParenExpression();
    this.state.labels.push(loopLabel);
    node.body = this.parseStatement(false);
    this.state.labels.pop();
    return this.finishNode(node, "WhileStatement");
  };
  pp.parseWithStatement = function(node) {
    if (this.state.strict)
      this.raise(this.state.start, "'with' in strict mode");
    this.next();
    node.object = this.parseParenExpression();
    node.body = this.parseStatement(false);
    return this.finishNode(node, "WithStatement");
  };
  pp.parseEmptyStatement = function(node) {
    this.next();
    return this.finishNode(node, "EmptyStatement");
  };
  pp.parseLabeledStatement = function(node, maybeName, expr) {
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;
    try {
      for (var _iterator = (0, _getIterator3.default)(this.state.labels),
          _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var _label = _step.value;
        if (_label.name === maybeName) {
          this.raise(expr.start, "Label '" + maybeName + "' is already declared");
        }
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    var kind = this.state.type.isLoop ? "loop" : this.match(_types.types._switch) ? "switch" : null;
    for (var i = this.state.labels.length - 1; i >= 0; i--) {
      var label = this.state.labels[i];
      if (label.statementStart === node.start) {
        label.statementStart = this.state.start;
        label.kind = kind;
      } else {
        break;
      }
    }
    this.state.labels.push({
      name: maybeName,
      kind: kind,
      statementStart: this.state.start
    });
    node.body = this.parseStatement(true);
    this.state.labels.pop();
    node.label = expr;
    return this.finishNode(node, "LabeledStatement");
  };
  pp.parseExpressionStatement = function(node, expr) {
    node.expression = expr;
    this.semicolon();
    return this.finishNode(node, "ExpressionStatement");
  };
  pp.parseBlock = function(allowDirectives) {
    var node = this.startNode();
    this.expect(_types.types.braceL);
    this.parseBlockBody(node, allowDirectives, false, _types.types.braceR);
    return this.finishNode(node, "BlockStatement");
  };
  pp.parseBlockBody = function(node, allowDirectives, topLevel, end) {
    node.body = [];
    node.directives = [];
    var parsedNonDirective = false;
    var oldStrict = void 0;
    var octalPosition = void 0;
    while (!this.eat(end)) {
      if (!parsedNonDirective && this.state.containsOctal && !octalPosition) {
        octalPosition = this.state.octalPosition;
      }
      var stmt = this.parseStatement(true, topLevel);
      if (allowDirectives && !parsedNonDirective && stmt.type === "ExpressionStatement" && stmt.expression.type === "StringLiteral" && !stmt.expression.extra.parenthesized) {
        var directive = this.stmtToDirective(stmt);
        node.directives.push(directive);
        if (oldStrict === undefined && directive.value.value === "use strict") {
          oldStrict = this.state.strict;
          this.setStrict(true);
          if (octalPosition) {
            this.raise(octalPosition, "Octal literal in strict mode");
          }
        }
        continue;
      }
      parsedNonDirective = true;
      node.body.push(stmt);
    }
    if (oldStrict === false) {
      this.setStrict(false);
    }
  };
  pp.parseFor = function(node, init) {
    node.init = init;
    this.expect(_types.types.semi);
    node.test = this.match(_types.types.semi) ? null : this.parseExpression();
    this.expect(_types.types.semi);
    node.update = this.match(_types.types.parenR) ? null : this.parseExpression();
    this.expect(_types.types.parenR);
    node.body = this.parseStatement(false);
    this.state.labels.pop();
    return this.finishNode(node, "ForStatement");
  };
  pp.parseForIn = function(node, init, forAwait) {
    var type = void 0;
    if (forAwait) {
      this.eatContextual("of");
      type = "ForAwaitStatement";
    } else {
      type = this.match(_types.types._in) ? "ForInStatement" : "ForOfStatement";
      this.next();
    }
    node.left = init;
    node.right = this.parseExpression();
    this.expect(_types.types.parenR);
    node.body = this.parseStatement(false);
    this.state.labels.pop();
    return this.finishNode(node, type);
  };
  pp.parseVar = function(node, isFor, kind) {
    node.declarations = [];
    node.kind = kind.keyword;
    for (; ; ) {
      var decl = this.startNode();
      this.parseVarHead(decl);
      if (this.eat(_types.types.eq)) {
        decl.init = this.parseMaybeAssign(isFor);
      } else if (kind === _types.types._const && !(this.match(_types.types._in) || this.isContextual("of"))) {
        this.unexpected();
      } else if (decl.id.type !== "Identifier" && !(isFor && (this.match(_types.types._in) || this.isContextual("of")))) {
        this.raise(this.state.lastTokEnd, "Complex binding patterns require an initialization value");
      } else {
        decl.init = null;
      }
      node.declarations.push(this.finishNode(decl, "VariableDeclarator"));
      if (!this.eat(_types.types.comma))
        break;
    }
    return node;
  };
  pp.parseVarHead = function(decl) {
    decl.id = this.parseBindingAtom();
    this.checkLVal(decl.id, true);
  };
  pp.parseFunction = function(node, isStatement, allowExpressionBody, isAsync, optionalId) {
    var oldInMethod = this.state.inMethod;
    this.state.inMethod = false;
    this.initFunction(node, isAsync);
    if (this.match(_types.types.star)) {
      if (node.async && !this.hasPlugin("asyncGenerators")) {
        this.unexpected();
      } else {
        node.generator = true;
        this.next();
      }
    }
    if (isStatement && !optionalId && !this.match(_types.types.name) && !this.match(_types.types._yield)) {
      this.unexpected();
    }
    if (this.match(_types.types.name) || this.match(_types.types._yield)) {
      node.id = this.parseBindingIdentifier();
    }
    this.parseFunctionParams(node);
    this.parseFunctionBody(node, allowExpressionBody);
    this.state.inMethod = oldInMethod;
    return this.finishNode(node, isStatement ? "FunctionDeclaration" : "FunctionExpression");
  };
  pp.parseFunctionParams = function(node) {
    this.expect(_types.types.parenL);
    node.params = this.parseBindingList(_types.types.parenR, false, this.hasPlugin("trailingFunctionCommas"));
  };
  pp.parseClass = function(node, isStatement, optionalId) {
    this.next();
    this.parseClassId(node, isStatement, optionalId);
    this.parseClassSuper(node);
    this.parseClassBody(node);
    return this.finishNode(node, isStatement ? "ClassDeclaration" : "ClassExpression");
  };
  pp.isClassProperty = function() {
    return this.match(_types.types.eq) || this.isLineTerminator();
  };
  pp.parseClassBody = function(node) {
    var oldStrict = this.state.strict;
    this.state.strict = true;
    var hadConstructorCall = false;
    var hadConstructor = false;
    var decorators = [];
    var classBody = this.startNode();
    classBody.body = [];
    this.expect(_types.types.braceL);
    while (!this.eat(_types.types.braceR)) {
      if (this.eat(_types.types.semi)) {
        continue;
      }
      if (this.match(_types.types.at)) {
        decorators.push(this.parseDecorator());
        continue;
      }
      var method = this.startNode();
      if (decorators.length) {
        method.decorators = decorators;
        decorators = [];
      }
      var isConstructorCall = false;
      var isMaybeStatic = this.match(_types.types.name) && this.state.value === "static";
      var isGenerator = this.eat(_types.types.star);
      var isGetSet = false;
      var isAsync = false;
      this.parsePropertyName(method);
      method.static = isMaybeStatic && !this.match(_types.types.parenL);
      if (method.static) {
        if (isGenerator)
          this.unexpected();
        isGenerator = this.eat(_types.types.star);
        this.parsePropertyName(method);
      }
      if (!isGenerator && method.key.type === "Identifier" && !method.computed) {
        if (this.isClassProperty()) {
          classBody.body.push(this.parseClassProperty(method));
          continue;
        }
        if (this.hasPlugin("classConstructorCall") && method.key.name === "call" && this.match(_types.types.name) && this.state.value === "constructor") {
          isConstructorCall = true;
          this.parsePropertyName(method);
        }
      }
      var isAsyncMethod = this.hasPlugin("asyncFunctions") && !this.match(_types.types.parenL) && !method.computed && method.key.type === "Identifier" && method.key.name === "async";
      if (isAsyncMethod) {
        if (this.hasPlugin("asyncGenerators") && this.eat(_types.types.star))
          isGenerator = true;
        isAsync = true;
        this.parsePropertyName(method);
      }
      method.kind = "method";
      if (!method.computed) {
        var key = method.key;
        if (!isAsync && !isGenerator && key.type === "Identifier" && !this.match(_types.types.parenL) && (key.name === "get" || key.name === "set")) {
          isGetSet = true;
          method.kind = key.name;
          key = this.parsePropertyName(method);
        }
        var isConstructor = !isConstructorCall && !method.static && (key.type === "Identifier" && key.name === "constructor" || key.type === "StringLiteral" && key.value === "constructor");
        if (isConstructor) {
          if (hadConstructor)
            this.raise(key.start, "Duplicate constructor in the same class");
          if (isGetSet)
            this.raise(key.start, "Constructor can't have get/set modifier");
          if (isGenerator)
            this.raise(key.start, "Constructor can't be a generator");
          if (isAsync)
            this.raise(key.start, "Constructor can't be an async function");
          method.kind = "constructor";
          hadConstructor = true;
        }
        var isStaticPrototype = method.static && (key.type === "Identifier" && key.name === "prototype" || key.type === "StringLiteral" && key.value === "prototype");
        if (isStaticPrototype) {
          this.raise(key.start, "Classes may not have static property named prototype");
        }
      }
      if (isConstructorCall) {
        if (hadConstructorCall)
          this.raise(method.start, "Duplicate constructor call in the same class");
        method.kind = "constructorCall";
        hadConstructorCall = true;
      }
      if ((method.kind === "constructor" || method.kind === "constructorCall") && method.decorators) {
        this.raise(method.start, "You can't attach decorators to a class constructor");
      }
      this.parseClassMethod(classBody, method, isGenerator, isAsync);
      if (isGetSet) {
        var paramCount = method.kind === "get" ? 0 : 1;
        if (method.params.length !== paramCount) {
          var start = method.start;
          if (method.kind === "get") {
            this.raise(start, "getter should have no params");
          } else {
            this.raise(start, "setter should have exactly one param");
          }
        }
      }
    }
    if (decorators.length) {
      this.raise(this.state.start, "You have trailing decorators with no method");
    }
    node.body = this.finishNode(classBody, "ClassBody");
    this.state.strict = oldStrict;
  };
  pp.parseClassProperty = function(node) {
    if (this.match(_types.types.eq)) {
      if (!this.hasPlugin("classProperties"))
        this.unexpected();
      this.next();
      node.value = this.parseMaybeAssign();
    } else {
      node.value = null;
    }
    this.semicolon();
    return this.finishNode(node, "ClassProperty");
  };
  pp.parseClassMethod = function(classBody, method, isGenerator, isAsync) {
    this.parseMethod(method, isGenerator, isAsync);
    classBody.body.push(this.finishNode(method, "ClassMethod"));
  };
  pp.parseClassId = function(node, isStatement, optionalId) {
    if (this.match(_types.types.name)) {
      node.id = this.parseIdentifier();
    } else {
      if (optionalId || !isStatement) {
        node.id = null;
      } else {
        this.unexpected();
      }
    }
  };
  pp.parseClassSuper = function(node) {
    node.superClass = this.eat(_types.types._extends) ? this.parseExprSubscripts() : null;
  };
  pp.parseExport = function(node) {
    this.next();
    if (this.match(_types.types.star)) {
      var specifier = this.startNode();
      this.next();
      if (this.hasPlugin("exportExtensions") && this.eatContextual("as")) {
        specifier.exported = this.parseIdentifier();
        node.specifiers = [this.finishNode(specifier, "ExportNamespaceSpecifier")];
        this.parseExportSpecifiersMaybe(node);
        this.parseExportFrom(node, true);
      } else {
        this.parseExportFrom(node, true);
        return this.finishNode(node, "ExportAllDeclaration");
      }
    } else if (this.hasPlugin("exportExtensions") && this.isExportDefaultSpecifier()) {
      var _specifier = this.startNode();
      _specifier.exported = this.parseIdentifier(true);
      node.specifiers = [this.finishNode(_specifier, "ExportDefaultSpecifier")];
      if (this.match(_types.types.comma) && this.lookahead().type === _types.types.star) {
        this.expect(_types.types.comma);
        var _specifier2 = this.startNode();
        this.expect(_types.types.star);
        this.expectContextual("as");
        _specifier2.exported = this.parseIdentifier();
        node.specifiers.push(this.finishNode(_specifier2, "ExportNamespaceSpecifier"));
      } else {
        this.parseExportSpecifiersMaybe(node);
      }
      this.parseExportFrom(node, true);
    } else if (this.eat(_types.types._default)) {
      var expr = this.startNode();
      var needsSemi = false;
      if (this.eat(_types.types._function)) {
        expr = this.parseFunction(expr, true, false, false, true);
      } else if (this.match(_types.types._class)) {
        expr = this.parseClass(expr, true, true);
      } else {
        needsSemi = true;
        expr = this.parseMaybeAssign();
      }
      node.declaration = expr;
      if (needsSemi)
        this.semicolon();
      this.checkExport(node);
      return this.finishNode(node, "ExportDefaultDeclaration");
    } else if (this.state.type.keyword || this.shouldParseExportDeclaration()) {
      node.specifiers = [];
      node.source = null;
      node.declaration = this.parseExportDeclaration(node);
    } else {
      node.declaration = null;
      node.specifiers = this.parseExportSpecifiers();
      this.parseExportFrom(node);
    }
    this.checkExport(node);
    return this.finishNode(node, "ExportNamedDeclaration");
  };
  pp.parseExportDeclaration = function() {
    return this.parseStatement(true);
  };
  pp.isExportDefaultSpecifier = function() {
    if (this.match(_types.types.name)) {
      return this.state.value !== "type" && this.state.value !== "async" && this.state.value !== "interface";
    }
    if (!this.match(_types.types._default)) {
      return false;
    }
    var lookahead = this.lookahead();
    return lookahead.type === _types.types.comma || lookahead.type === _types.types.name && lookahead.value === "from";
  };
  pp.parseExportSpecifiersMaybe = function(node) {
    if (this.eat(_types.types.comma)) {
      node.specifiers = node.specifiers.concat(this.parseExportSpecifiers());
    }
  };
  pp.parseExportFrom = function(node, expect) {
    if (this.eatContextual("from")) {
      node.source = this.match(_types.types.string) ? this.parseExprAtom() : this.unexpected();
      this.checkExport(node);
    } else {
      if (expect) {
        this.unexpected();
      } else {
        node.source = null;
      }
    }
    this.semicolon();
  };
  pp.shouldParseExportDeclaration = function() {
    return this.hasPlugin("asyncFunctions") && this.isContextual("async");
  };
  pp.checkExport = function(node) {
    if (this.state.decorators.length) {
      var isClass = node.declaration && (node.declaration.type === "ClassDeclaration" || node.declaration.type === "ClassExpression");
      if (!node.declaration || !isClass) {
        this.raise(node.start, "You can only use decorators on an export when exporting a class");
      }
      this.takeDecorators(node.declaration);
    }
  };
  pp.parseExportSpecifiers = function() {
    var nodes = [];
    var first = true;
    var needsFrom = void 0;
    this.expect(_types.types.braceL);
    while (!this.eat(_types.types.braceR)) {
      if (first) {
        first = false;
      } else {
        this.expect(_types.types.comma);
        if (this.eat(_types.types.braceR))
          break;
      }
      var isDefault = this.match(_types.types._default);
      if (isDefault && !needsFrom)
        needsFrom = true;
      var node = this.startNode();
      node.local = this.parseIdentifier(isDefault);
      node.exported = this.eatContextual("as") ? this.parseIdentifier(true) : node.local.__clone();
      nodes.push(this.finishNode(node, "ExportSpecifier"));
    }
    if (needsFrom && !this.isContextual("from")) {
      this.unexpected();
    }
    return nodes;
  };
  pp.parseImport = function(node) {
    this.next();
    if (this.match(_types.types.string)) {
      node.specifiers = [];
      node.source = this.parseExprAtom();
    } else {
      node.specifiers = [];
      this.parseImportSpecifiers(node);
      this.expectContextual("from");
      node.source = this.match(_types.types.string) ? this.parseExprAtom() : this.unexpected();
    }
    this.semicolon();
    return this.finishNode(node, "ImportDeclaration");
  };
  pp.parseImportSpecifiers = function(node) {
    var first = true;
    if (this.match(_types.types.name)) {
      var startPos = this.state.start,
          startLoc = this.state.startLoc;
      node.specifiers.push(this.parseImportSpecifierDefault(this.parseIdentifier(), startPos, startLoc));
      if (!this.eat(_types.types.comma))
        return;
    }
    if (this.match(_types.types.star)) {
      var specifier = this.startNode();
      this.next();
      this.expectContextual("as");
      specifier.local = this.parseIdentifier();
      this.checkLVal(specifier.local, true);
      node.specifiers.push(this.finishNode(specifier, "ImportNamespaceSpecifier"));
      return;
    }
    this.expect(_types.types.braceL);
    while (!this.eat(_types.types.braceR)) {
      if (first) {
        first = false;
      } else {
        this.expect(_types.types.comma);
        if (this.eat(_types.types.braceR))
          break;
      }
      var _specifier3 = this.startNode();
      _specifier3.imported = this.parseIdentifier(true);
      _specifier3.local = this.eatContextual("as") ? this.parseIdentifier() : _specifier3.imported.__clone();
      this.checkLVal(_specifier3.local, true);
      node.specifiers.push(this.finishNode(_specifier3, "ImportSpecifier"));
    }
  };
  pp.parseImportSpecifierDefault = function(id, startPos, startLoc) {
    var node = this.startNodeAt(startPos, startLoc);
    node.local = id;
    this.checkLVal(node.local, true);
    return this.finishNode(node, "ImportDefaultSpecifier");
  };
  return module.exports;
});

System.registerDynamic("npm:babylon@6.8.1/lib/parser/lval.js", ["babel-runtime/core-js/get-iterator", "../tokenizer/types", "./index", "../util/identifier"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  var _getIterator2 = $__require('babel-runtime/core-js/get-iterator');
  var _getIterator3 = _interopRequireDefault(_getIterator2);
  var _types = $__require('../tokenizer/types');
  var _index = $__require('./index');
  var _index2 = _interopRequireDefault(_index);
  var _identifier = $__require('../util/identifier');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  var pp = _index2.default.prototype;
  pp.toAssignable = function(node, isBinding) {
    if (node) {
      switch (node.type) {
        case "Identifier":
        case "ObjectPattern":
        case "ArrayPattern":
        case "AssignmentPattern":
          break;
        case "ObjectExpression":
          node.type = "ObjectPattern";
          var _iteratorNormalCompletion = true;
          var _didIteratorError = false;
          var _iteratorError = undefined;
          try {
            for (var _iterator = (0, _getIterator3.default)(node.properties),
                _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var prop = _step.value;
              if (prop.type === "ObjectMethod") {
                if (prop.kind === "get" || prop.kind === "set") {
                  this.raise(prop.key.start, "Object pattern can't contain getter or setter");
                } else {
                  this.raise(prop.key.start, "Object pattern can't contain methods");
                }
              } else {
                this.toAssignable(prop, isBinding);
              }
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          break;
        case "ObjectProperty":
          this.toAssignable(node.value, isBinding);
          break;
        case "SpreadProperty":
          node.type = "RestProperty";
          break;
        case "ArrayExpression":
          node.type = "ArrayPattern";
          this.toAssignableList(node.elements, isBinding);
          break;
        case "AssignmentExpression":
          if (node.operator === "=") {
            node.type = "AssignmentPattern";
            delete node.operator;
          } else {
            this.raise(node.left.end, "Only '=' operator can be used for specifying default value.");
          }
          break;
        case "MemberExpression":
          if (!isBinding)
            break;
        default:
          this.raise(node.start, "Assigning to rvalue");
      }
    }
    return node;
  };
  pp.toAssignableList = function(exprList, isBinding) {
    var end = exprList.length;
    if (end) {
      var last = exprList[end - 1];
      if (last && last.type === "RestElement") {
        --end;
      } else if (last && last.type === "SpreadElement") {
        last.type = "RestElement";
        var arg = last.argument;
        this.toAssignable(arg, isBinding);
        if (arg.type !== "Identifier" && arg.type !== "MemberExpression" && arg.type !== "ArrayPattern") {
          this.unexpected(arg.start);
        }
        --end;
      }
    }
    for (var i = 0; i < end; i++) {
      var elt = exprList[i];
      if (elt)
        this.toAssignable(elt, isBinding);
    }
    return exprList;
  };
  pp.toReferencedList = function(exprList) {
    return exprList;
  };
  pp.parseSpread = function(refShorthandDefaultPos) {
    var node = this.startNode();
    this.next();
    node.argument = this.parseMaybeAssign(refShorthandDefaultPos);
    return this.finishNode(node, "SpreadElement");
  };
  pp.parseRest = function() {
    var node = this.startNode();
    this.next();
    node.argument = this.parseBindingIdentifier();
    return this.finishNode(node, "RestElement");
  };
  pp.shouldAllowYieldIdentifier = function() {
    return this.match(_types.types._yield) && !this.state.strict && !this.state.inGenerator;
  };
  pp.parseBindingIdentifier = function() {
    return this.parseIdentifier(this.shouldAllowYieldIdentifier());
  };
  pp.parseBindingAtom = function() {
    switch (this.state.type) {
      case _types.types._yield:
        if (this.state.strict || this.state.inGenerator)
          this.unexpected();
      case _types.types.name:
        return this.parseIdentifier(true);
      case _types.types.bracketL:
        var node = this.startNode();
        this.next();
        node.elements = this.parseBindingList(_types.types.bracketR, true, true);
        return this.finishNode(node, "ArrayPattern");
      case _types.types.braceL:
        return this.parseObj(true);
      default:
        this.unexpected();
    }
  };
  pp.parseBindingList = function(close, allowEmpty, allowTrailingComma) {
    var elts = [];
    var first = true;
    while (!this.eat(close)) {
      if (first) {
        first = false;
      } else {
        this.expect(_types.types.comma);
      }
      if (allowEmpty && this.match(_types.types.comma)) {
        elts.push(null);
      } else if (allowTrailingComma && this.eat(close)) {
        break;
      } else if (this.match(_types.types.ellipsis)) {
        elts.push(this.parseAssignableListItemTypes(this.parseRest()));
        this.expect(close);
        break;
      } else {
        var decorators = [];
        while (this.match(_types.types.at)) {
          decorators.push(this.parseDecorator());
        }
        var left = this.parseMaybeDefault();
        if (decorators.length) {
          left.decorators = decorators;
        }
        this.parseAssignableListItemTypes(left);
        elts.push(this.parseMaybeDefault(null, null, left));
      }
    }
    return elts;
  };
  pp.parseAssignableListItemTypes = function(param) {
    return param;
  };
  pp.parseMaybeDefault = function(startPos, startLoc, left) {
    startLoc = startLoc || this.state.startLoc;
    startPos = startPos || this.state.start;
    left = left || this.parseBindingAtom();
    if (!this.eat(_types.types.eq))
      return left;
    var node = this.startNodeAt(startPos, startLoc);
    node.left = left;
    node.right = this.parseMaybeAssign();
    return this.finishNode(node, "AssignmentPattern");
  };
  pp.checkLVal = function(expr, isBinding, checkClashes) {
    switch (expr.type) {
      case "Identifier":
        if (this.state.strict && (_identifier.reservedWords.strictBind(expr.name) || _identifier.reservedWords.strict(expr.name))) {
          this.raise(expr.start, (isBinding ? "Binding " : "Assigning to ") + expr.name + " in strict mode");
        }
        if (checkClashes) {
          var key = "_" + expr.name;
          if (checkClashes[key]) {
            this.raise(expr.start, "Argument name clash in strict mode");
          } else {
            checkClashes[key] = true;
          }
        }
        break;
      case "MemberExpression":
        if (isBinding)
          this.raise(expr.start, (isBinding ? "Binding" : "Assigning to") + " member expression");
        break;
      case "ObjectPattern":
        var _iteratorNormalCompletion2 = true;
        var _didIteratorError2 = false;
        var _iteratorError2 = undefined;
        try {
          for (var _iterator2 = (0, _getIterator3.default)(expr.properties),
              _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
            var prop = _step2.value;
            if (prop.type === "ObjectProperty")
              prop = prop.value;
            this.checkLVal(prop, isBinding, checkClashes);
          }
        } catch (err) {
          _didIteratorError2 = true;
          _iteratorError2 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion2 && _iterator2.return) {
              _iterator2.return();
            }
          } finally {
            if (_didIteratorError2) {
              throw _iteratorError2;
            }
          }
        }
        break;
      case "ArrayPattern":
        var _iteratorNormalCompletion3 = true;
        var _didIteratorError3 = false;
        var _iteratorError3 = undefined;
        try {
          for (var _iterator3 = (0, _getIterator3.default)(expr.elements),
              _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
            var elem = _step3.value;
            if (elem)
              this.checkLVal(elem, isBinding, checkClashes);
          }
        } catch (err) {
          _didIteratorError3 = true;
          _iteratorError3 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion3 && _iterator3.return) {
              _iterator3.return();
            }
          } finally {
            if (_didIteratorError3) {
              throw _iteratorError3;
            }
          }
        }
        break;
      case "AssignmentPattern":
        this.checkLVal(expr.left, isBinding, checkClashes);
        break;
      case "RestProperty":
      case "RestElement":
        this.checkLVal(expr.argument, isBinding, checkClashes);
        break;
      default:
        this.raise(expr.start, (isBinding ? "Binding" : "Assigning to") + " rvalue");
    }
  };
  return module.exports;
});

System.registerDynamic("npm:babylon@6.8.1/lib/parser/expression.js", ["babel-runtime/core-js/object/create", "babel-runtime/core-js/get-iterator", "../tokenizer/types", "./index", "../util/identifier"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  var _create = $__require('babel-runtime/core-js/object/create');
  var _create2 = _interopRequireDefault(_create);
  var _getIterator2 = $__require('babel-runtime/core-js/get-iterator');
  var _getIterator3 = _interopRequireDefault(_getIterator2);
  var _types = $__require('../tokenizer/types');
  var _index = $__require('./index');
  var _index2 = _interopRequireDefault(_index);
  var _identifier = $__require('../util/identifier');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  var pp = _index2.default.prototype;
  pp.checkPropClash = function(prop, propHash) {
    if (prop.computed)
      return;
    var key = prop.key;
    var name = void 0;
    switch (key.type) {
      case "Identifier":
        name = key.name;
        break;
      case "StringLiteral":
      case "NumericLiteral":
        name = String(key.value);
        break;
      default:
        return;
    }
    if (name === "__proto__" && prop.kind === "init") {
      if (propHash.proto)
        this.raise(key.start, "Redefinition of __proto__ property");
      propHash.proto = true;
    }
  };
  pp.parseExpression = function(noIn, refShorthandDefaultPos) {
    var startPos = this.state.start,
        startLoc = this.state.startLoc;
    var expr = this.parseMaybeAssign(noIn, refShorthandDefaultPos);
    if (this.match(_types.types.comma)) {
      var node = this.startNodeAt(startPos, startLoc);
      node.expressions = [expr];
      while (this.eat(_types.types.comma)) {
        node.expressions.push(this.parseMaybeAssign(noIn, refShorthandDefaultPos));
      }
      this.toReferencedList(node.expressions);
      return this.finishNode(node, "SequenceExpression");
    }
    return expr;
  };
  pp.parseMaybeAssign = function(noIn, refShorthandDefaultPos, afterLeftParse) {
    if (this.match(_types.types._yield) && this.state.inGenerator) {
      return this.parseYield();
    }
    var failOnShorthandAssign = void 0;
    if (refShorthandDefaultPos) {
      failOnShorthandAssign = false;
    } else {
      refShorthandDefaultPos = {start: 0};
      failOnShorthandAssign = true;
    }
    var startPos = this.state.start;
    var startLoc = this.state.startLoc;
    if (this.match(_types.types.parenL) || this.match(_types.types.name)) {
      this.state.potentialArrowAt = this.state.start;
    }
    var left = this.parseMaybeConditional(noIn, refShorthandDefaultPos);
    if (afterLeftParse)
      left = afterLeftParse.call(this, left, startPos, startLoc);
    if (this.state.type.isAssign) {
      var node = this.startNodeAt(startPos, startLoc);
      node.operator = this.state.value;
      node.left = this.match(_types.types.eq) ? this.toAssignable(left) : left;
      refShorthandDefaultPos.start = 0;
      this.checkLVal(left);
      if (left.extra && left.extra.parenthesized) {
        var errorMsg = void 0;
        if (left.type === "ObjectPattern") {
          errorMsg = "`({a}) = 0` use `({a} = 0)`";
        } else if (left.type === "ArrayPattern") {
          errorMsg = "`([a]) = 0` use `([a] = 0)`";
        }
        if (errorMsg) {
          this.raise(left.start, "You're trying to assign to a parenthesized expression, eg. instead of " + errorMsg);
        }
      }
      this.next();
      node.right = this.parseMaybeAssign(noIn);
      return this.finishNode(node, "AssignmentExpression");
    } else if (failOnShorthandAssign && refShorthandDefaultPos.start) {
      this.unexpected(refShorthandDefaultPos.start);
    }
    return left;
  };
  pp.parseMaybeConditional = function(noIn, refShorthandDefaultPos) {
    var startPos = this.state.start,
        startLoc = this.state.startLoc;
    var expr = this.parseExprOps(noIn, refShorthandDefaultPos);
    if (refShorthandDefaultPos && refShorthandDefaultPos.start)
      return expr;
    if (this.eat(_types.types.question)) {
      var node = this.startNodeAt(startPos, startLoc);
      node.test = expr;
      node.consequent = this.parseMaybeAssign();
      this.expect(_types.types.colon);
      node.alternate = this.parseMaybeAssign(noIn);
      return this.finishNode(node, "ConditionalExpression");
    }
    return expr;
  };
  pp.parseExprOps = function(noIn, refShorthandDefaultPos) {
    var startPos = this.state.start,
        startLoc = this.state.startLoc;
    var expr = this.parseMaybeUnary(refShorthandDefaultPos);
    if (refShorthandDefaultPos && refShorthandDefaultPos.start) {
      return expr;
    } else {
      return this.parseExprOp(expr, startPos, startLoc, -1, noIn);
    }
  };
  pp.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, noIn) {
    var prec = this.state.type.binop;
    if (prec != null && (!noIn || !this.match(_types.types._in))) {
      if (prec > minPrec) {
        var node = this.startNodeAt(leftStartPos, leftStartLoc);
        node.left = left;
        node.operator = this.state.value;
        if (node.operator === "**" && left.type === "UnaryExpression" && left.extra && !left.extra.parenthesizedArgument) {
          this.raise(left.argument.start, "Illegal expression. Wrap left hand side or entire exponentiation in parentheses.");
        }
        var op = this.state.type;
        this.next();
        var startPos = this.state.start;
        var startLoc = this.state.startLoc;
        node.right = this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec, noIn);
        this.finishNode(node, op === _types.types.logicalOR || op === _types.types.logicalAND ? "LogicalExpression" : "BinaryExpression");
        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn);
      }
    }
    return left;
  };
  pp.parseMaybeUnary = function(refShorthandDefaultPos) {
    if (this.state.type.prefix) {
      var node = this.startNode();
      var update = this.match(_types.types.incDec);
      node.operator = this.state.value;
      node.prefix = true;
      this.next();
      var argType = this.state.type;
      this.addExtra(node, "parenthesizedArgument", argType === _types.types.parenL);
      node.argument = this.parseMaybeUnary();
      if (refShorthandDefaultPos && refShorthandDefaultPos.start) {
        this.unexpected(refShorthandDefaultPos.start);
      }
      if (update) {
        this.checkLVal(node.argument);
      } else if (this.state.strict && node.operator === "delete" && node.argument.type === "Identifier") {
        this.raise(node.start, "Deleting local variable in strict mode");
      }
      return this.finishNode(node, update ? "UpdateExpression" : "UnaryExpression");
    }
    var startPos = this.state.start,
        startLoc = this.state.startLoc;
    var expr = this.parseExprSubscripts(refShorthandDefaultPos);
    if (refShorthandDefaultPos && refShorthandDefaultPos.start)
      return expr;
    while (this.state.type.postfix && !this.canInsertSemicolon()) {
      var _node = this.startNodeAt(startPos, startLoc);
      _node.operator = this.state.value;
      _node.prefix = false;
      _node.argument = expr;
      this.checkLVal(expr);
      this.next();
      expr = this.finishNode(_node, "UpdateExpression");
    }
    return expr;
  };
  pp.parseExprSubscripts = function(refShorthandDefaultPos) {
    var startPos = this.state.start,
        startLoc = this.state.startLoc;
    var potentialArrowAt = this.state.potentialArrowAt;
    var expr = this.parseExprAtom(refShorthandDefaultPos);
    if (expr.type === "ArrowFunctionExpression" && expr.start === potentialArrowAt) {
      return expr;
    }
    if (refShorthandDefaultPos && refShorthandDefaultPos.start) {
      return expr;
    }
    return this.parseSubscripts(expr, startPos, startLoc);
  };
  pp.parseSubscripts = function(base, startPos, startLoc, noCalls) {
    for (; ; ) {
      if (!noCalls && this.eat(_types.types.doubleColon)) {
        var node = this.startNodeAt(startPos, startLoc);
        node.object = base;
        node.callee = this.parseNoCallExpr();
        return this.parseSubscripts(this.finishNode(node, "BindExpression"), startPos, startLoc, noCalls);
      } else if (this.eat(_types.types.dot)) {
        var _node2 = this.startNodeAt(startPos, startLoc);
        _node2.object = base;
        _node2.property = this.parseIdentifier(true);
        _node2.computed = false;
        base = this.finishNode(_node2, "MemberExpression");
      } else if (this.eat(_types.types.bracketL)) {
        var _node3 = this.startNodeAt(startPos, startLoc);
        _node3.object = base;
        _node3.property = this.parseExpression();
        _node3.computed = true;
        this.expect(_types.types.bracketR);
        base = this.finishNode(_node3, "MemberExpression");
      } else if (!noCalls && this.match(_types.types.parenL)) {
        var possibleAsync = this.state.potentialArrowAt === base.start && base.type === "Identifier" && base.name === "async" && !this.canInsertSemicolon();
        this.next();
        var _node4 = this.startNodeAt(startPos, startLoc);
        _node4.callee = base;
        _node4.arguments = this.parseCallExpressionArguments(_types.types.parenR, this.hasPlugin("trailingFunctionCommas"), possibleAsync);
        base = this.finishNode(_node4, "CallExpression");
        if (possibleAsync && this.shouldParseAsyncArrow()) {
          return this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), _node4);
        } else {
          this.toReferencedList(_node4.arguments);
        }
      } else if (this.match(_types.types.backQuote)) {
        var _node5 = this.startNodeAt(startPos, startLoc);
        _node5.tag = base;
        _node5.quasi = this.parseTemplate();
        base = this.finishNode(_node5, "TaggedTemplateExpression");
      } else {
        return base;
      }
    }
  };
  pp.parseCallExpressionArguments = function(close, allowTrailingComma, possibleAsyncArrow) {
    var innerParenStart = void 0;
    var elts = [],
        first = true;
    while (!this.eat(close)) {
      if (first) {
        first = false;
      } else {
        this.expect(_types.types.comma);
        if (allowTrailingComma && this.eat(close))
          break;
      }
      if (this.match(_types.types.parenL) && !innerParenStart) {
        innerParenStart = this.state.start;
      }
      elts.push(this.parseExprListItem());
    }
    if (possibleAsyncArrow && innerParenStart && this.shouldParseAsyncArrow()) {
      this.unexpected();
    }
    return elts;
  };
  pp.shouldParseAsyncArrow = function() {
    return this.match(_types.types.arrow);
  };
  pp.parseAsyncArrowFromCallExpression = function(node, call) {
    if (!this.hasPlugin("asyncFunctions"))
      this.unexpected();
    this.expect(_types.types.arrow);
    return this.parseArrowExpression(node, call.arguments, true);
  };
  pp.parseNoCallExpr = function() {
    var startPos = this.state.start,
        startLoc = this.state.startLoc;
    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);
  };
  pp.parseExprAtom = function(refShorthandDefaultPos) {
    var node = void 0,
        canBeArrow = this.state.potentialArrowAt === this.state.start;
    switch (this.state.type) {
      case _types.types._super:
        if (!this.state.inMethod && !this.options.allowSuperOutsideMethod) {
          this.raise(this.state.start, "'super' outside of function or class");
        }
        node = this.startNode();
        this.next();
        if (!this.match(_types.types.parenL) && !this.match(_types.types.bracketL) && !this.match(_types.types.dot)) {
          this.unexpected();
        }
        if (this.match(_types.types.parenL) && this.state.inMethod !== "constructor" && !this.options.allowSuperOutsideMethod) {
          this.raise(node.start, "super() outside of class constructor");
        }
        return this.finishNode(node, "Super");
      case _types.types._this:
        node = this.startNode();
        this.next();
        return this.finishNode(node, "ThisExpression");
      case _types.types._yield:
        if (this.state.inGenerator)
          this.unexpected();
      case _types.types.name:
        node = this.startNode();
        var allowAwait = this.hasPlugin("asyncFunctions") && this.state.value === "await" && this.state.inAsync;
        var allowYield = this.shouldAllowYieldIdentifier();
        var id = this.parseIdentifier(allowAwait || allowYield);
        if (this.hasPlugin("asyncFunctions")) {
          if (id.name === "await") {
            if (this.state.inAsync || this.inModule) {
              return this.parseAwait(node);
            }
          } else if (id.name === "async" && this.match(_types.types._function) && !this.canInsertSemicolon()) {
            this.next();
            return this.parseFunction(node, false, false, true);
          } else if (canBeArrow && id.name === "async" && this.match(_types.types.name)) {
            var params = [this.parseIdentifier()];
            this.expect(_types.types.arrow);
            return this.parseArrowExpression(node, params, true);
          }
        }
        if (canBeArrow && !this.canInsertSemicolon() && this.eat(_types.types.arrow)) {
          return this.parseArrowExpression(node, [id]);
        }
        return id;
      case _types.types._do:
        if (this.hasPlugin("doExpressions")) {
          var _node6 = this.startNode();
          this.next();
          var oldInFunction = this.state.inFunction;
          var oldLabels = this.state.labels;
          this.state.labels = [];
          this.state.inFunction = false;
          _node6.body = this.parseBlock(false, true);
          this.state.inFunction = oldInFunction;
          this.state.labels = oldLabels;
          return this.finishNode(_node6, "DoExpression");
        }
      case _types.types.regexp:
        var value = this.state.value;
        node = this.parseLiteral(value.value, "RegExpLiteral");
        node.pattern = value.pattern;
        node.flags = value.flags;
        return node;
      case _types.types.num:
        return this.parseLiteral(this.state.value, "NumericLiteral");
      case _types.types.string:
        return this.parseLiteral(this.state.value, "StringLiteral");
      case _types.types._null:
        node = this.startNode();
        this.next();
        return this.finishNode(node, "NullLiteral");
      case _types.types._true:
      case _types.types._false:
        node = this.startNode();
        node.value = this.match(_types.types._true);
        this.next();
        return this.finishNode(node, "BooleanLiteral");
      case _types.types.parenL:
        return this.parseParenAndDistinguishExpression(null, null, canBeArrow);
      case _types.types.bracketL:
        node = this.startNode();
        this.next();
        node.elements = this.parseExprList(_types.types.bracketR, true, true, refShorthandDefaultPos);
        this.toReferencedList(node.elements);
        return this.finishNode(node, "ArrayExpression");
      case _types.types.braceL:
        return this.parseObj(false, refShorthandDefaultPos);
      case _types.types._function:
        return this.parseFunctionExpression();
      case _types.types.at:
        this.parseDecorators();
      case _types.types._class:
        node = this.startNode();
        this.takeDecorators(node);
        return this.parseClass(node, false);
      case _types.types._new:
        return this.parseNew();
      case _types.types.backQuote:
        return this.parseTemplate();
      case _types.types.doubleColon:
        node = this.startNode();
        this.next();
        node.object = null;
        var callee = node.callee = this.parseNoCallExpr();
        if (callee.type === "MemberExpression") {
          return this.finishNode(node, "BindExpression");
        } else {
          this.raise(callee.start, "Binding should be performed on object property.");
        }
      default:
        this.unexpected();
    }
  };
  pp.parseFunctionExpression = function() {
    var node = this.startNode();
    var meta = this.parseIdentifier(true);
    if (this.state.inGenerator && this.eat(_types.types.dot) && this.hasPlugin("functionSent")) {
      return this.parseMetaProperty(node, meta, "sent");
    } else {
      return this.parseFunction(node, false);
    }
  };
  pp.parseMetaProperty = function(node, meta, propertyName) {
    node.meta = meta;
    node.property = this.parseIdentifier(true);
    if (node.property.name !== propertyName) {
      this.raise(node.property.start, "The only valid meta property for new is " + meta.name + "." + propertyName);
    }
    return this.finishNode(node, "MetaProperty");
  };
  pp.parseLiteral = function(value, type) {
    var node = this.startNode();
    this.addExtra(node, "rawValue", value);
    this.addExtra(node, "raw", this.input.slice(this.state.start, this.state.end));
    node.value = value;
    this.next();
    return this.finishNode(node, type);
  };
  pp.parseParenExpression = function() {
    this.expect(_types.types.parenL);
    var val = this.parseExpression();
    this.expect(_types.types.parenR);
    return val;
  };
  pp.parseParenAndDistinguishExpression = function(startPos, startLoc, canBeArrow, isAsync, allowOptionalCommaStart) {
    startPos = startPos || this.state.start;
    startLoc = startLoc || this.state.startLoc;
    var val = void 0;
    this.next();
    var innerStartPos = this.state.start,
        innerStartLoc = this.state.startLoc;
    var exprList = [],
        first = true;
    var refShorthandDefaultPos = {start: 0},
        spreadStart = void 0,
        optionalCommaStart = void 0;
    while (!this.match(_types.types.parenR)) {
      if (first) {
        first = false;
      } else {
        this.expect(_types.types.comma);
        if (this.match(_types.types.parenR) && this.hasPlugin("trailingFunctionCommas")) {
          optionalCommaStart = this.state.start;
          break;
        }
      }
      if (this.match(_types.types.ellipsis)) {
        var spreadNodeStartPos = this.state.start,
            spreadNodeStartLoc = this.state.startLoc;
        spreadStart = this.state.start;
        exprList.push(this.parseParenItem(this.parseRest(), spreadNodeStartLoc, spreadNodeStartPos));
        break;
      } else {
        exprList.push(this.parseMaybeAssign(false, refShorthandDefaultPos, this.parseParenItem));
      }
    }
    var innerEndPos = this.state.start;
    var innerEndLoc = this.state.startLoc;
    this.expect(_types.types.parenR);
    if (canBeArrow && !this.canInsertSemicolon() && this.eat(_types.types.arrow)) {
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;
      try {
        for (var _iterator = (0, _getIterator3.default)(exprList),
            _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var param = _step.value;
          if (param.extra && param.extra.parenthesized)
            this.unexpected(param.extra.parenStart);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, isAsync);
    }
    if (!exprList.length) {
      if (isAsync) {
        return;
      } else {
        this.unexpected(this.state.lastTokStart);
      }
    }
    if (optionalCommaStart && !allowOptionalCommaStart)
      this.unexpected(optionalCommaStart);
    if (spreadStart)
      this.unexpected(spreadStart);
    if (refShorthandDefaultPos.start)
      this.unexpected(refShorthandDefaultPos.start);
    if (exprList.length > 1) {
      val = this.startNodeAt(innerStartPos, innerStartLoc);
      val.expressions = exprList;
      this.toReferencedList(val.expressions);
      this.finishNodeAt(val, "SequenceExpression", innerEndPos, innerEndLoc);
    } else {
      val = exprList[0];
    }
    this.addExtra(val, "parenthesized", true);
    this.addExtra(val, "parenStart", startPos);
    return val;
  };
  pp.parseParenItem = function(node) {
    return node;
  };
  pp.parseNew = function() {
    var node = this.startNode();
    var meta = this.parseIdentifier(true);
    if (this.eat(_types.types.dot)) {
      return this.parseMetaProperty(node, meta, "target");
    }
    node.callee = this.parseNoCallExpr();
    if (this.eat(_types.types.parenL)) {
      node.arguments = this.parseExprList(_types.types.parenR, this.hasPlugin("trailingFunctionCommas"));
      this.toReferencedList(node.arguments);
    } else {
      node.arguments = [];
    }
    return this.finishNode(node, "NewExpression");
  };
  pp.parseTemplateElement = function() {
    var elem = this.startNode();
    elem.value = {
      raw: this.input.slice(this.state.start, this.state.end).replace(/\r\n?/g, "\n"),
      cooked: this.state.value
    };
    this.next();
    elem.tail = this.match(_types.types.backQuote);
    return this.finishNode(elem, "TemplateElement");
  };
  pp.parseTemplate = function() {
    var node = this.startNode();
    this.next();
    node.expressions = [];
    var curElt = this.parseTemplateElement();
    node.quasis = [curElt];
    while (!curElt.tail) {
      this.expect(_types.types.dollarBraceL);
      node.expressions.push(this.parseExpression());
      this.expect(_types.types.braceR);
      node.quasis.push(curElt = this.parseTemplateElement());
    }
    this.next();
    return this.finishNode(node, "TemplateLiteral");
  };
  pp.parseObj = function(isPattern, refShorthandDefaultPos) {
    var decorators = [];
    var propHash = (0, _create2.default)(null);
    var first = true;
    var node = this.startNode();
    node.properties = [];
    this.next();
    while (!this.eat(_types.types.braceR)) {
      if (first) {
        first = false;
      } else {
        this.expect(_types.types.comma);
        if (this.eat(_types.types.braceR))
          break;
      }
      while (this.match(_types.types.at)) {
        decorators.push(this.parseDecorator());
      }
      var prop = this.startNode(),
          isGenerator = false,
          isAsync = false,
          startPos = void 0,
          startLoc = void 0;
      if (decorators.length) {
        prop.decorators = decorators;
        decorators = [];
      }
      if (this.hasPlugin("objectRestSpread") && this.match(_types.types.ellipsis)) {
        prop = this.parseSpread();
        prop.type = isPattern ? "RestProperty" : "SpreadProperty";
        node.properties.push(prop);
        continue;
      }
      prop.method = false;
      prop.shorthand = false;
      if (isPattern || refShorthandDefaultPos) {
        startPos = this.state.start;
        startLoc = this.state.startLoc;
      }
      if (!isPattern) {
        isGenerator = this.eat(_types.types.star);
      }
      if (!isPattern && this.hasPlugin("asyncFunctions") && this.isContextual("async")) {
        if (isGenerator)
          this.unexpected();
        var asyncId = this.parseIdentifier();
        if (this.match(_types.types.colon) || this.match(_types.types.parenL) || this.match(_types.types.braceR)) {
          prop.key = asyncId;
        } else {
          isAsync = true;
          if (this.hasPlugin("asyncGenerators"))
            isGenerator = this.eat(_types.types.star);
          this.parsePropertyName(prop);
        }
      } else {
        this.parsePropertyName(prop);
      }
      this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, refShorthandDefaultPos);
      this.checkPropClash(prop, propHash);
      if (prop.shorthand) {
        this.addExtra(prop, "shorthand", true);
      }
      node.properties.push(prop);
    }
    if (decorators.length) {
      this.raise(this.state.start, "You have trailing decorators with no property");
    }
    return this.finishNode(node, isPattern ? "ObjectPattern" : "ObjectExpression");
  };
  pp.parseObjPropValue = function(prop, startPos, startLoc, isGenerator, isAsync, isPattern, refShorthandDefaultPos) {
    if (isAsync || isGenerator || this.match(_types.types.parenL)) {
      if (isPattern)
        this.unexpected();
      prop.kind = "method";
      prop.method = true;
      this.parseMethod(prop, isGenerator, isAsync);
      return this.finishNode(prop, "ObjectMethod");
    }
    if (this.eat(_types.types.colon)) {
      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssign(false, refShorthandDefaultPos);
      return this.finishNode(prop, "ObjectProperty");
    }
    if (!prop.computed && prop.key.type === "Identifier" && (prop.key.name === "get" || prop.key.name === "set") && !this.match(_types.types.comma) && !this.match(_types.types.braceR)) {
      if (isGenerator || isAsync || isPattern)
        this.unexpected();
      prop.kind = prop.key.name;
      this.parsePropertyName(prop);
      this.parseMethod(prop, false);
      var paramCount = prop.kind === "get" ? 0 : 1;
      if (prop.params.length !== paramCount) {
        var start = prop.start;
        if (prop.kind === "get") {
          this.raise(start, "getter should have no params");
        } else {
          this.raise(start, "setter should have exactly one param");
        }
      }
      return this.finishNode(prop, "ObjectMethod");
    }
    if (!prop.computed && prop.key.type === "Identifier") {
      if (isPattern) {
        var illegalBinding = this.isKeyword(prop.key.name);
        if (!illegalBinding && this.state.strict) {
          illegalBinding = _identifier.reservedWords.strictBind(prop.key.name) || _identifier.reservedWords.strict(prop.key.name);
        }
        if (illegalBinding) {
          this.raise(prop.key.start, "Binding " + prop.key.name);
        }
        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());
      } else if (this.match(_types.types.eq) && refShorthandDefaultPos) {
        if (!refShorthandDefaultPos.start) {
          refShorthandDefaultPos.start = this.state.start;
        }
        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());
      } else {
        prop.value = prop.key.__clone();
      }
      prop.shorthand = true;
      return this.finishNode(prop, "ObjectProperty");
    }
    this.unexpected();
  };
  pp.parsePropertyName = function(prop) {
    if (this.eat(_types.types.bracketL)) {
      prop.computed = true;
      prop.key = this.parseMaybeAssign();
      this.expect(_types.types.bracketR);
      return prop.key;
    } else {
      prop.computed = false;
      return prop.key = this.match(_types.types.num) || this.match(_types.types.string) ? this.parseExprAtom() : this.parseIdentifier(true);
    }
  };
  pp.initFunction = function(node, isAsync) {
    node.id = null;
    node.generator = false;
    node.expression = false;
    if (this.hasPlugin("asyncFunctions")) {
      node.async = !!isAsync;
    }
  };
  pp.parseMethod = function(node, isGenerator, isAsync) {
    var oldInMethod = this.state.inMethod;
    this.state.inMethod = node.kind || true;
    this.initFunction(node, isAsync);
    this.expect(_types.types.parenL);
    node.params = this.parseBindingList(_types.types.parenR, false, this.hasPlugin("trailingFunctionCommas"));
    node.generator = isGenerator;
    this.parseFunctionBody(node);
    this.state.inMethod = oldInMethod;
    return node;
  };
  pp.parseArrowExpression = function(node, params, isAsync) {
    this.initFunction(node, isAsync);
    node.params = this.toAssignableList(params, true);
    this.parseFunctionBody(node, true);
    return this.finishNode(node, "ArrowFunctionExpression");
  };
  pp.parseFunctionBody = function(node, allowExpression) {
    var isExpression = allowExpression && !this.match(_types.types.braceL);
    var oldInAsync = this.state.inAsync;
    this.state.inAsync = node.async;
    if (isExpression) {
      node.body = this.parseMaybeAssign();
      node.expression = true;
    } else {
      var oldInFunc = this.state.inFunction,
          oldInGen = this.state.inGenerator,
          oldLabels = this.state.labels;
      this.state.inFunction = true;
      this.state.inGenerator = node.generator;
      this.state.labels = [];
      node.body = this.parseBlock(true);
      node.expression = false;
      this.state.inFunction = oldInFunc;
      this.state.inGenerator = oldInGen;
      this.state.labels = oldLabels;
    }
    this.state.inAsync = oldInAsync;
    var checkLVal = this.state.strict;
    var checkLValStrict = false;
    var isStrict = false;
    if (allowExpression)
      checkLVal = true;
    if (!isExpression && node.body.directives.length) {
      var _iteratorNormalCompletion2 = true;
      var _didIteratorError2 = false;
      var _iteratorError2 = undefined;
      try {
        for (var _iterator2 = (0, _getIterator3.default)(node.body.directives),
            _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
          var directive = _step2.value;
          if (directive.value.value === "use strict") {
            isStrict = true;
            checkLVal = true;
            checkLValStrict = true;
            break;
          }
        }
      } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion2 && _iterator2.return) {
            _iterator2.return();
          }
        } finally {
          if (_didIteratorError2) {
            throw _iteratorError2;
          }
        }
      }
    }
    if (isStrict && node.id && node.id.type === "Identifier" && node.id.name === "yield") {
      this.raise(node.id.start, "Binding yield in strict mode");
    }
    if (checkLVal) {
      var nameHash = (0, _create2.default)(null);
      var oldStrict = this.state.strict;
      if (checkLValStrict)
        this.state.strict = true;
      if (node.id) {
        this.checkLVal(node.id, true);
      }
      var _iteratorNormalCompletion3 = true;
      var _didIteratorError3 = false;
      var _iteratorError3 = undefined;
      try {
        for (var _iterator3 = (0, _getIterator3.default)(node.params),
            _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
          var param = _step3.value;
          this.checkLVal(param, true, nameHash);
        }
      } catch (err) {
        _didIteratorError3 = true;
        _iteratorError3 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion3 && _iterator3.return) {
            _iterator3.return();
          }
        } finally {
          if (_didIteratorError3) {
            throw _iteratorError3;
          }
        }
      }
      this.state.strict = oldStrict;
    }
  };
  pp.parseExprList = function(close, allowTrailingComma, allowEmpty, refShorthandDefaultPos) {
    var elts = [],
        first = true;
    while (!this.eat(close)) {
      if (first) {
        first = false;
      } else {
        this.expect(_types.types.comma);
        if (allowTrailingComma && this.eat(close))
          break;
      }
      elts.push(this.parseExprListItem(allowEmpty, refShorthandDefaultPos));
    }
    return elts;
  };
  pp.parseExprListItem = function(allowEmpty, refShorthandDefaultPos) {
    var elt = void 0;
    if (allowEmpty && this.match(_types.types.comma)) {
      elt = null;
    } else if (this.match(_types.types.ellipsis)) {
      elt = this.parseSpread(refShorthandDefaultPos);
    } else {
      elt = this.parseMaybeAssign(false, refShorthandDefaultPos);
    }
    return elt;
  };
  pp.parseIdentifier = function(liberal) {
    var node = this.startNode();
    if (this.match(_types.types.name)) {
      if (!liberal && this.state.strict && _identifier.reservedWords.strict(this.state.value)) {
        this.raise(this.state.start, "The keyword '" + this.state.value + "' is reserved");
      }
      node.name = this.state.value;
    } else if (liberal && this.state.type.keyword) {
      node.name = this.state.type.keyword;
    } else {
      this.unexpected();
    }
    if (!liberal && node.name === "await" && this.state.inAsync) {
      this.raise(node.start, "invalid use of await inside of an async function");
    }
    this.next();
    return this.finishNode(node, "Identifier");
  };
  pp.parseAwait = function(node) {
    if (!this.state.inAsync) {
      this.unexpected();
    }
    if (this.isLineTerminator()) {
      this.unexpected();
    }
    if (this.match(_types.types.star)) {
      this.raise(node.start, "await* has been removed from the async functions proposal. Use Promise.all() instead.");
    }
    node.argument = this.parseMaybeUnary();
    return this.finishNode(node, "AwaitExpression");
  };
  pp.parseYield = function() {
    var node = this.startNode();
    this.next();
    if (this.match(_types.types.semi) || this.canInsertSemicolon() || !this.match(_types.types.star) && !this.state.type.startsExpr) {
      node.delegate = false;
      node.argument = null;
    } else {
      node.delegate = this.eat(_types.types.star);
      node.argument = this.parseMaybeAssign();
    }
    return this.finishNode(node, "YieldExpression");
  };
  return module.exports;
});

System.registerDynamic("npm:babylon@6.8.1/lib/parser/node.js", ["babel-runtime/helpers/classCallCheck", "babel-runtime/helpers/createClass", "./index", "../util/location"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  var _classCallCheck2 = $__require('babel-runtime/helpers/classCallCheck');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _createClass2 = $__require('babel-runtime/helpers/createClass');
  var _createClass3 = _interopRequireDefault(_createClass2);
  var _index = $__require('./index');
  var _index2 = _interopRequireDefault(_index);
  var _location = $__require('../util/location');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  var pp = _index2.default.prototype;
  var Node = function() {
    function Node(pos, loc, filename) {
      (0, _classCallCheck3.default)(this, Node);
      this.type = "";
      this.start = pos;
      this.end = 0;
      this.loc = new _location.SourceLocation(loc);
      if (filename)
        this.loc.filename = filename;
    }
    (0, _createClass3.default)(Node, [{
      key: "__clone",
      value: function __clone() {
        var node2 = new Node();
        for (var key in this) {
          node2[key] = this[key];
        }
        return node2;
      }
    }]);
    return Node;
  }();
  pp.startNode = function() {
    return new Node(this.state.start, this.state.startLoc, this.filename);
  };
  pp.startNodeAt = function(pos, loc) {
    return new Node(pos, loc, this.filename);
  };
  function finishNodeAt(node, type, pos, loc) {
    node.type = type;
    node.end = pos;
    node.loc.end = loc;
    this.processComment(node);
    return node;
  }
  pp.finishNode = function(node, type) {
    return finishNodeAt.call(this, node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);
  };
  pp.finishNodeAt = function(node, type, pos, loc) {
    return finishNodeAt.call(this, node, type, pos, loc);
  };
  return module.exports;
});

System.registerDynamic("npm:babylon@6.8.1/lib/parser/location.js", ["../util/location", "./index"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  var _location = $__require('../util/location');
  var _index = $__require('./index');
  var _index2 = _interopRequireDefault(_index);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  var pp = _index2.default.prototype;
  pp.raise = function(pos, message) {
    var loc = (0, _location.getLineInfo)(this.input, pos);
    message += " (" + loc.line + ":" + loc.column + ")";
    var err = new SyntaxError(message);
    err.pos = pos;
    err.loc = loc;
    throw err;
  };
  return module.exports;
});

System.registerDynamic("npm:babylon@6.8.1/lib/parser/comments.js", ["./index"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  var _index = $__require('./index');
  var _index2 = _interopRequireDefault(_index);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function last(stack) {
    return stack[stack.length - 1];
  }
  var pp = _index2.default.prototype;
  pp.addComment = function(comment) {
    this.state.trailingComments.push(comment);
    this.state.leadingComments.push(comment);
  };
  pp.processComment = function(node) {
    if (node.type === "Program" && node.body.length > 0)
      return;
    var stack = this.state.commentStack;
    var lastChild = void 0,
        trailingComments = void 0,
        i = void 0;
    if (this.state.trailingComments.length > 0) {
      if (this.state.trailingComments[0].start >= node.end) {
        trailingComments = this.state.trailingComments;
        this.state.trailingComments = [];
      } else {
        this.state.trailingComments.length = 0;
      }
    } else {
      var lastInStack = last(stack);
      if (stack.length > 0 && lastInStack.trailingComments && lastInStack.trailingComments[0].start >= node.end) {
        trailingComments = lastInStack.trailingComments;
        lastInStack.trailingComments = null;
      }
    }
    while (stack.length > 0 && last(stack).start >= node.start) {
      lastChild = stack.pop();
    }
    if (lastChild) {
      if (lastChild.leadingComments) {
        if (lastChild !== node && last(lastChild.leadingComments).end <= node.start) {
          node.leadingComments = lastChild.leadingComments;
          lastChild.leadingComments = null;
        } else {
          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {
            if (lastChild.leadingComments[i].end <= node.start) {
              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);
              break;
            }
          }
        }
      }
    } else if (this.state.leadingComments.length > 0) {
      if (last(this.state.leadingComments).end <= node.start) {
        node.leadingComments = this.state.leadingComments;
        this.state.leadingComments = [];
      } else {
        for (i = 0; i < this.state.leadingComments.length; i++) {
          if (this.state.leadingComments[i].end > node.start) {
            break;
          }
        }
        node.leadingComments = this.state.leadingComments.slice(0, i);
        if (node.leadingComments.length === 0) {
          node.leadingComments = null;
        }
        trailingComments = this.state.leadingComments.slice(i);
        if (trailingComments.length === 0) {
          trailingComments = null;
        }
      }
    }
    if (trailingComments) {
      if (trailingComments.length && trailingComments[0].start >= node.start && last(trailingComments).end <= node.end) {
        node.innerComments = trailingComments;
      } else {
        node.trailingComments = trailingComments;
      }
    }
    stack.push(node);
  };
  return module.exports;
});

System.registerDynamic("npm:babylon@6.8.1/lib/plugins/flow.js", ["../tokenizer/types", "../parser"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  Object.defineProperty(exports, "__esModule", {value: true});
  exports.default = function(instance) {
    instance.extend("parseFunctionBody", function(inner) {
      return function(node, allowExpression) {
        if (this.match(_types.types.colon) && !allowExpression) {
          node.returnType = this.flowParseTypeAnnotation();
        }
        return inner.call(this, node, allowExpression);
      };
    });
    instance.extend("parseStatement", function(inner) {
      return function(declaration, topLevel) {
        if (this.state.strict && this.match(_types.types.name) && this.state.value === "interface") {
          var node = this.startNode();
          this.next();
          return this.flowParseInterface(node);
        } else {
          return inner.call(this, declaration, topLevel);
        }
      };
    });
    instance.extend("parseExpressionStatement", function(inner) {
      return function(node, expr) {
        if (expr.type === "Identifier") {
          if (expr.name === "declare") {
            if (this.match(_types.types._class) || this.match(_types.types.name) || this.match(_types.types._function) || this.match(_types.types._var)) {
              return this.flowParseDeclare(node);
            }
          } else if (this.match(_types.types.name)) {
            if (expr.name === "interface") {
              return this.flowParseInterface(node);
            } else if (expr.name === "type") {
              return this.flowParseTypeAlias(node);
            }
          }
        }
        return inner.call(this, node, expr);
      };
    });
    instance.extend("shouldParseExportDeclaration", function(inner) {
      return function() {
        return this.isContextual("type") || this.isContextual("interface") || inner.call(this);
      };
    });
    instance.extend("parseParenItem", function() {
      return function(node, startLoc, startPos, forceArrow) {
        var canBeArrow = this.state.potentialArrowAt = startPos;
        if (this.match(_types.types.colon)) {
          var typeCastNode = this.startNodeAt(startLoc, startPos);
          typeCastNode.expression = node;
          typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();
          if (forceArrow && !this.match(_types.types.arrow)) {
            this.unexpected();
          }
          if (canBeArrow && this.eat(_types.types.arrow)) {
            var params = node.type === "SequenceExpression" ? node.expressions : [node];
            var func = this.parseArrowExpression(this.startNodeAt(startLoc, startPos), params);
            func.returnType = typeCastNode.typeAnnotation;
            return func;
          } else {
            return this.finishNode(typeCastNode, "TypeCastExpression");
          }
        } else {
          return node;
        }
      };
    });
    instance.extend("parseExport", function(inner) {
      return function(node) {
        node = inner.call(this, node);
        if (node.type === "ExportNamedDeclaration") {
          node.exportKind = node.exportKind || "value";
        }
        return node;
      };
    });
    instance.extend("parseExportDeclaration", function(inner) {
      return function(node) {
        if (this.isContextual("type")) {
          node.exportKind = "type";
          var declarationNode = this.startNode();
          this.next();
          if (this.match(_types.types.braceL)) {
            node.specifiers = this.parseExportSpecifiers();
            this.parseExportFrom(node);
            return null;
          } else {
            return this.flowParseTypeAlias(declarationNode);
          }
        } else if (this.isContextual("interface")) {
          node.exportKind = "type";
          var _declarationNode = this.startNode();
          this.next();
          return this.flowParseInterface(_declarationNode);
        } else {
          return inner.call(this, node);
        }
      };
    });
    instance.extend("parseClassId", function(inner) {
      return function(node) {
        inner.apply(this, arguments);
        if (this.isRelational("<")) {
          node.typeParameters = this.flowParseTypeParameterDeclaration();
        }
      };
    });
    instance.extend("isKeyword", function(inner) {
      return function(name) {
        if (this.state.inType && name === "void") {
          return false;
        } else {
          return inner.call(this, name);
        }
      };
    });
    instance.extend("readToken", function(inner) {
      return function(code) {
        if (this.state.inType && (code === 62 || code === 60)) {
          return this.finishOp(_types.types.relational, 1);
        } else {
          return inner.call(this, code);
        }
      };
    });
    instance.extend("jsx_readToken", function(inner) {
      return function() {
        if (!this.state.inType)
          return inner.call(this);
      };
    });
    function typeCastToParameter(node) {
      node.expression.typeAnnotation = node.typeAnnotation;
      return node.expression;
    }
    instance.extend("toAssignable", function(inner) {
      return function(node) {
        if (node.type === "TypeCastExpression") {
          return typeCastToParameter(node);
        } else {
          return inner.apply(this, arguments);
        }
      };
    });
    instance.extend("toAssignableList", function(inner) {
      return function(exprList, isBinding) {
        for (var i = 0; i < exprList.length; i++) {
          var expr = exprList[i];
          if (expr && expr.type === "TypeCastExpression") {
            exprList[i] = typeCastToParameter(expr);
          }
        }
        return inner.call(this, exprList, isBinding);
      };
    });
    instance.extend("toReferencedList", function() {
      return function(exprList) {
        for (var i = 0; i < exprList.length; i++) {
          var expr = exprList[i];
          if (expr && expr._exprListItem && expr.type === "TypeCastExpression") {
            this.raise(expr.start, "Unexpected type cast");
          }
        }
        return exprList;
      };
    });
    instance.extend("parseExprListItem", function(inner) {
      return function(allowEmpty, refShorthandDefaultPos) {
        var container = this.startNode();
        var node = inner.call(this, allowEmpty, refShorthandDefaultPos);
        if (this.match(_types.types.colon)) {
          container._exprListItem = true;
          container.expression = node;
          container.typeAnnotation = this.flowParseTypeAnnotation();
          return this.finishNode(container, "TypeCastExpression");
        } else {
          return node;
        }
      };
    });
    instance.extend("checkLVal", function(inner) {
      return function(node) {
        if (node.type !== "TypeCastExpression") {
          return inner.apply(this, arguments);
        }
      };
    });
    instance.extend("parseClassProperty", function(inner) {
      return function(node) {
        if (this.match(_types.types.colon)) {
          node.typeAnnotation = this.flowParseTypeAnnotation();
        }
        return inner.call(this, node);
      };
    });
    instance.extend("isClassProperty", function(inner) {
      return function() {
        return this.match(_types.types.colon) || inner.call(this);
      };
    });
    instance.extend("parseClassMethod", function() {
      return function(classBody, method, isGenerator, isAsync) {
        if (this.isRelational("<")) {
          method.typeParameters = this.flowParseTypeParameterDeclaration();
        }
        this.parseMethod(method, isGenerator, isAsync);
        classBody.body.push(this.finishNode(method, "ClassMethod"));
      };
    });
    instance.extend("parseClassSuper", function(inner) {
      return function(node, isStatement) {
        inner.call(this, node, isStatement);
        if (node.superClass && this.isRelational("<")) {
          node.superTypeParameters = this.flowParseTypeParameterInstantiation();
        }
        if (this.isContextual("implements")) {
          this.next();
          var implemented = node.implements = [];
          do {
            var _node = this.startNode();
            _node.id = this.parseIdentifier();
            if (this.isRelational("<")) {
              _node.typeParameters = this.flowParseTypeParameterInstantiation();
            } else {
              _node.typeParameters = null;
            }
            implemented.push(this.finishNode(_node, "ClassImplements"));
          } while (this.eat(_types.types.comma));
        }
      };
    });
    instance.extend("parseObjPropValue", function(inner) {
      return function(prop) {
        var typeParameters = void 0;
        if (this.isRelational("<")) {
          typeParameters = this.flowParseTypeParameterDeclaration();
          if (!this.match(_types.types.parenL))
            this.unexpected();
        }
        inner.apply(this, arguments);
        if (typeParameters) {
          (prop.value || prop).typeParameters = typeParameters;
        }
      };
    });
    instance.extend("parseAssignableListItemTypes", function() {
      return function(param) {
        if (this.eat(_types.types.question)) {
          param.optional = true;
        }
        if (this.match(_types.types.colon)) {
          param.typeAnnotation = this.flowParseTypeAnnotation();
        }
        this.finishNode(param, param.type);
        return param;
      };
    });
    instance.extend("parseImportSpecifiers", function(inner) {
      return function(node) {
        node.importKind = "value";
        var kind = null;
        if (this.match(_types.types._typeof)) {
          kind = "typeof";
        } else if (this.isContextual("type")) {
          kind = "type";
        }
        if (kind) {
          var lh = this.lookahead();
          if (lh.type === _types.types.name && lh.value !== "from" || lh.type === _types.types.braceL || lh.type === _types.types.star) {
            this.next();
            node.importKind = kind;
          }
        }
        inner.call(this, node);
      };
    });
    instance.extend("parseFunctionParams", function(inner) {
      return function(node) {
        if (this.isRelational("<")) {
          node.typeParameters = this.flowParseTypeParameterDeclaration();
        }
        inner.call(this, node);
      };
    });
    instance.extend("parseVarHead", function(inner) {
      return function(decl) {
        inner.call(this, decl);
        if (this.match(_types.types.colon)) {
          decl.id.typeAnnotation = this.flowParseTypeAnnotation();
          this.finishNode(decl.id, decl.id.type);
        }
      };
    });
    instance.extend("parseAsyncArrowFromCallExpression", function(inner) {
      return function(node, call) {
        if (this.match(_types.types.colon)) {
          node.returnType = this.flowParseTypeAnnotation();
        }
        return inner.call(this, node, call);
      };
    });
    instance.extend("shouldParseAsyncArrow", function(inner) {
      return function() {
        return this.match(_types.types.colon) || inner.call(this);
      };
    });
    instance.extend("parseParenAndDistinguishExpression", function(inner) {
      return function(startPos, startLoc, canBeArrow, isAsync) {
        startPos = startPos || this.state.start;
        startLoc = startLoc || this.state.startLoc;
        if (canBeArrow && this.lookahead().type === _types.types.parenR) {
          this.expect(_types.types.parenL);
          this.expect(_types.types.parenR);
          var node = this.startNodeAt(startPos, startLoc);
          if (this.match(_types.types.colon))
            node.returnType = this.flowParseTypeAnnotation();
          this.expect(_types.types.arrow);
          return this.parseArrowExpression(node, [], isAsync);
        } else {
          var _node2 = inner.call(this, startPos, startLoc, canBeArrow, isAsync, this.hasPlugin("trailingFunctionCommas"));
          if (this.match(_types.types.colon)) {
            var state = this.state.clone();
            try {
              return this.parseParenItem(_node2, startPos, startLoc, true);
            } catch (err) {
              if (err instanceof SyntaxError) {
                this.state = state;
                return _node2;
              } else {
                throw err;
              }
            }
          } else {
            return _node2;
          }
        }
      };
    });
  };
  var _types = $__require('../tokenizer/types');
  var _parser = $__require('../parser');
  var _parser2 = _interopRequireDefault(_parser);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  var pp = _parser2.default.prototype;
  pp.flowParseTypeInitialiser = function(tok, allowLeadingPipeOrAnd) {
    var oldInType = this.state.inType;
    this.state.inType = true;
    this.expect(tok || _types.types.colon);
    if (allowLeadingPipeOrAnd) {
      if (this.match(_types.types.bitwiseAND) || this.match(_types.types.bitwiseOR)) {
        this.next();
      }
    }
    var type = this.flowParseType();
    this.state.inType = oldInType;
    return type;
  };
  pp.flowParseDeclareClass = function(node) {
    this.next();
    this.flowParseInterfaceish(node, true);
    return this.finishNode(node, "DeclareClass");
  };
  pp.flowParseDeclareFunction = function(node) {
    this.next();
    var id = node.id = this.parseIdentifier();
    var typeNode = this.startNode();
    var typeContainer = this.startNode();
    if (this.isRelational("<")) {
      typeNode.typeParameters = this.flowParseTypeParameterDeclaration();
    } else {
      typeNode.typeParameters = null;
    }
    this.expect(_types.types.parenL);
    var tmp = this.flowParseFunctionTypeParams();
    typeNode.params = tmp.params;
    typeNode.rest = tmp.rest;
    this.expect(_types.types.parenR);
    typeNode.returnType = this.flowParseTypeInitialiser();
    typeContainer.typeAnnotation = this.finishNode(typeNode, "FunctionTypeAnnotation");
    id.typeAnnotation = this.finishNode(typeContainer, "TypeAnnotation");
    this.finishNode(id, id.type);
    this.semicolon();
    return this.finishNode(node, "DeclareFunction");
  };
  pp.flowParseDeclare = function(node) {
    if (this.match(_types.types._class)) {
      return this.flowParseDeclareClass(node);
    } else if (this.match(_types.types._function)) {
      return this.flowParseDeclareFunction(node);
    } else if (this.match(_types.types._var)) {
      return this.flowParseDeclareVariable(node);
    } else if (this.isContextual("module")) {
      return this.flowParseDeclareModule(node);
    } else if (this.isContextual("type")) {
      return this.flowParseDeclareTypeAlias(node);
    } else if (this.isContextual("interface")) {
      return this.flowParseDeclareInterface(node);
    } else {
      this.unexpected();
    }
  };
  pp.flowParseDeclareVariable = function(node) {
    this.next();
    node.id = this.flowParseTypeAnnotatableIdentifier();
    this.semicolon();
    return this.finishNode(node, "DeclareVariable");
  };
  pp.flowParseDeclareModule = function(node) {
    this.next();
    if (this.match(_types.types.string)) {
      node.id = this.parseExprAtom();
    } else {
      node.id = this.parseIdentifier();
    }
    var bodyNode = node.body = this.startNode();
    var body = bodyNode.body = [];
    this.expect(_types.types.braceL);
    while (!this.match(_types.types.braceR)) {
      var node2 = this.startNode();
      this.next();
      body.push(this.flowParseDeclare(node2));
    }
    this.expect(_types.types.braceR);
    this.finishNode(bodyNode, "BlockStatement");
    return this.finishNode(node, "DeclareModule");
  };
  pp.flowParseDeclareTypeAlias = function(node) {
    this.next();
    this.flowParseTypeAlias(node);
    return this.finishNode(node, "DeclareTypeAlias");
  };
  pp.flowParseDeclareInterface = function(node) {
    this.next();
    this.flowParseInterfaceish(node);
    return this.finishNode(node, "DeclareInterface");
  };
  pp.flowParseInterfaceish = function(node, allowStatic) {
    node.id = this.parseIdentifier();
    if (this.isRelational("<")) {
      node.typeParameters = this.flowParseTypeParameterDeclaration();
    } else {
      node.typeParameters = null;
    }
    node.extends = [];
    node.mixins = [];
    if (this.eat(_types.types._extends)) {
      do {
        node.extends.push(this.flowParseInterfaceExtends());
      } while (this.eat(_types.types.comma));
    }
    if (this.isContextual("mixins")) {
      this.next();
      do {
        node.mixins.push(this.flowParseInterfaceExtends());
      } while (this.eat(_types.types.comma));
    }
    node.body = this.flowParseObjectType(allowStatic);
  };
  pp.flowParseInterfaceExtends = function() {
    var node = this.startNode();
    node.id = this.parseIdentifier();
    if (this.isRelational("<")) {
      node.typeParameters = this.flowParseTypeParameterInstantiation();
    } else {
      node.typeParameters = null;
    }
    return this.finishNode(node, "InterfaceExtends");
  };
  pp.flowParseInterface = function(node) {
    this.flowParseInterfaceish(node, false);
    return this.finishNode(node, "InterfaceDeclaration");
  };
  pp.flowParseTypeAlias = function(node) {
    node.id = this.parseIdentifier();
    if (this.isRelational("<")) {
      node.typeParameters = this.flowParseTypeParameterDeclaration();
    } else {
      node.typeParameters = null;
    }
    node.right = this.flowParseTypeInitialiser(_types.types.eq, true);
    this.semicolon();
    return this.finishNode(node, "TypeAlias");
  };
  pp.flowParseTypeParameter = function() {
    var node = this.startNode();
    var variance = void 0;
    if (this.match(_types.types.plusMin)) {
      if (this.state.value === "+") {
        variance = "plus";
      } else if (this.state.value === "-") {
        variance = "minus";
      }
      this.eat(_types.types.plusMin);
    }
    var ident = this.flowParseTypeAnnotatableIdentifier(false, false);
    node.name = ident.name;
    node.variance = variance;
    node.bound = ident.typeAnnotation;
    if (this.match(_types.types.eq)) {
      this.eat(_types.types.eq);
      node.default = this.flowParseType();
    }
    return this.finishNode(node, "TypeParameter");
  };
  pp.flowParseTypeParameterDeclaration = function() {
    var node = this.startNode();
    node.params = [];
    this.expectRelational("<");
    do {
      node.params.push(this.flowParseTypeParameter());
      if (!this.isRelational(">")) {
        this.expect(_types.types.comma);
      }
    } while (!this.isRelational(">"));
    this.expectRelational(">");
    return this.finishNode(node, "TypeParameterDeclaration");
  };
  pp.flowParseTypeParameterInstantiation = function() {
    var node = this.startNode(),
        oldInType = this.state.inType;
    node.params = [];
    this.state.inType = true;
    this.expectRelational("<");
    while (!this.isRelational(">")) {
      node.params.push(this.flowParseType());
      if (!this.isRelational(">")) {
        this.expect(_types.types.comma);
      }
    }
    this.expectRelational(">");
    this.state.inType = oldInType;
    return this.finishNode(node, "TypeParameterInstantiation");
  };
  pp.flowParseObjectPropertyKey = function() {
    return this.match(_types.types.num) || this.match(_types.types.string) ? this.parseExprAtom() : this.parseIdentifier(true);
  };
  pp.flowParseObjectTypeIndexer = function(node, isStatic) {
    node.static = isStatic;
    this.expect(_types.types.bracketL);
    node.id = this.flowParseObjectPropertyKey();
    node.key = this.flowParseTypeInitialiser();
    this.expect(_types.types.bracketR);
    node.value = this.flowParseTypeInitialiser();
    this.flowObjectTypeSemicolon();
    return this.finishNode(node, "ObjectTypeIndexer");
  };
  pp.flowParseObjectTypeMethodish = function(node) {
    node.params = [];
    node.rest = null;
    node.typeParameters = null;
    if (this.isRelational("<")) {
      node.typeParameters = this.flowParseTypeParameterDeclaration();
    }
    this.expect(_types.types.parenL);
    while (this.match(_types.types.name)) {
      node.params.push(this.flowParseFunctionTypeParam());
      if (!this.match(_types.types.parenR)) {
        this.expect(_types.types.comma);
      }
    }
    if (this.eat(_types.types.ellipsis)) {
      node.rest = this.flowParseFunctionTypeParam();
    }
    this.expect(_types.types.parenR);
    node.returnType = this.flowParseTypeInitialiser();
    return this.finishNode(node, "FunctionTypeAnnotation");
  };
  pp.flowParseObjectTypeMethod = function(startPos, startLoc, isStatic, key) {
    var node = this.startNodeAt(startPos, startLoc);
    node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(startPos, startLoc));
    node.static = isStatic;
    node.key = key;
    node.optional = false;
    this.flowObjectTypeSemicolon();
    return this.finishNode(node, "ObjectTypeProperty");
  };
  pp.flowParseObjectTypeCallProperty = function(node, isStatic) {
    var valueNode = this.startNode();
    node.static = isStatic;
    node.value = this.flowParseObjectTypeMethodish(valueNode);
    this.flowObjectTypeSemicolon();
    return this.finishNode(node, "ObjectTypeCallProperty");
  };
  pp.flowParseObjectType = function(allowStatic) {
    var nodeStart = this.startNode();
    var node = void 0;
    var propertyKey = void 0;
    var isStatic = void 0;
    nodeStart.callProperties = [];
    nodeStart.properties = [];
    nodeStart.indexers = [];
    this.expect(_types.types.braceL);
    while (!this.match(_types.types.braceR)) {
      var optional = false;
      var startPos = this.state.start,
          startLoc = this.state.startLoc;
      node = this.startNode();
      if (allowStatic && this.isContextual("static")) {
        this.next();
        isStatic = true;
      }
      if (this.match(_types.types.bracketL)) {
        nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic));
      } else if (this.match(_types.types.parenL) || this.isRelational("<")) {
        nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, allowStatic));
      } else {
        if (isStatic && this.match(_types.types.colon)) {
          propertyKey = this.parseIdentifier();
        } else {
          propertyKey = this.flowParseObjectPropertyKey();
        }
        if (this.isRelational("<") || this.match(_types.types.parenL)) {
          nodeStart.properties.push(this.flowParseObjectTypeMethod(startPos, startLoc, isStatic, propertyKey));
        } else {
          if (this.eat(_types.types.question)) {
            optional = true;
          }
          node.key = propertyKey;
          node.value = this.flowParseTypeInitialiser();
          node.optional = optional;
          node.static = isStatic;
          this.flowObjectTypeSemicolon();
          nodeStart.properties.push(this.finishNode(node, "ObjectTypeProperty"));
        }
      }
    }
    this.expect(_types.types.braceR);
    return this.finishNode(nodeStart, "ObjectTypeAnnotation");
  };
  pp.flowObjectTypeSemicolon = function() {
    if (!this.eat(_types.types.semi) && !this.eat(_types.types.comma) && !this.match(_types.types.braceR)) {
      this.unexpected();
    }
  };
  pp.flowParseGenericType = function(startPos, startLoc, id) {
    var node = this.startNodeAt(startPos, startLoc);
    node.typeParameters = null;
    node.id = id;
    while (this.eat(_types.types.dot)) {
      var node2 = this.startNodeAt(startPos, startLoc);
      node2.qualification = node.id;
      node2.id = this.parseIdentifier();
      node.id = this.finishNode(node2, "QualifiedTypeIdentifier");
    }
    if (this.isRelational("<")) {
      node.typeParameters = this.flowParseTypeParameterInstantiation();
    }
    return this.finishNode(node, "GenericTypeAnnotation");
  };
  pp.flowParseTypeofType = function() {
    var node = this.startNode();
    this.expect(_types.types._typeof);
    node.argument = this.flowParsePrimaryType();
    return this.finishNode(node, "TypeofTypeAnnotation");
  };
  pp.flowParseTupleType = function() {
    var node = this.startNode();
    node.types = [];
    this.expect(_types.types.bracketL);
    while (this.state.pos < this.input.length && !this.match(_types.types.bracketR)) {
      node.types.push(this.flowParseType());
      if (this.match(_types.types.bracketR))
        break;
      this.expect(_types.types.comma);
    }
    this.expect(_types.types.bracketR);
    return this.finishNode(node, "TupleTypeAnnotation");
  };
  pp.flowParseFunctionTypeParam = function() {
    var optional = false;
    var node = this.startNode();
    node.name = this.parseIdentifier();
    if (this.eat(_types.types.question)) {
      optional = true;
    }
    node.optional = optional;
    node.typeAnnotation = this.flowParseTypeInitialiser();
    return this.finishNode(node, "FunctionTypeParam");
  };
  pp.flowParseFunctionTypeParams = function() {
    var ret = {
      params: [],
      rest: null
    };
    while (this.match(_types.types.name)) {
      ret.params.push(this.flowParseFunctionTypeParam());
      if (!this.match(_types.types.parenR)) {
        this.expect(_types.types.comma);
      }
    }
    if (this.eat(_types.types.ellipsis)) {
      ret.rest = this.flowParseFunctionTypeParam();
    }
    return ret;
  };
  pp.flowIdentToTypeAnnotation = function(startPos, startLoc, node, id) {
    switch (id.name) {
      case "any":
        return this.finishNode(node, "AnyTypeAnnotation");
      case "void":
        return this.finishNode(node, "VoidTypeAnnotation");
      case "bool":
      case "boolean":
        return this.finishNode(node, "BooleanTypeAnnotation");
      case "mixed":
        return this.finishNode(node, "MixedTypeAnnotation");
      case "number":
        return this.finishNode(node, "NumberTypeAnnotation");
      case "string":
        return this.finishNode(node, "StringTypeAnnotation");
      default:
        return this.flowParseGenericType(startPos, startLoc, id);
    }
  };
  pp.flowParsePrimaryType = function() {
    var startPos = this.state.start,
        startLoc = this.state.startLoc;
    var node = this.startNode();
    var tmp = void 0;
    var type = void 0;
    var isGroupedType = false;
    switch (this.state.type) {
      case _types.types.name:
        return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());
      case _types.types.braceL:
        return this.flowParseObjectType();
      case _types.types.bracketL:
        return this.flowParseTupleType();
      case _types.types.relational:
        if (this.state.value === "<") {
          node.typeParameters = this.flowParseTypeParameterDeclaration();
          this.expect(_types.types.parenL);
          tmp = this.flowParseFunctionTypeParams();
          node.params = tmp.params;
          node.rest = tmp.rest;
          this.expect(_types.types.parenR);
          this.expect(_types.types.arrow);
          node.returnType = this.flowParseType();
          return this.finishNode(node, "FunctionTypeAnnotation");
        }
      case _types.types.parenL:
        this.next();
        if (!this.match(_types.types.parenR) && !this.match(_types.types.ellipsis)) {
          if (this.match(_types.types.name)) {
            var token = this.lookahead().type;
            isGroupedType = token !== _types.types.question && token !== _types.types.colon;
          } else {
            isGroupedType = true;
          }
        }
        if (isGroupedType) {
          type = this.flowParseType();
          this.expect(_types.types.parenR);
          if (this.eat(_types.types.arrow)) {
            this.raise(node, "Unexpected token =>. It looks like " + "you are trying to write a function type, but you ended up " + "writing a grouped type followed by an =>, which is a syntax " + "error. Remember, function type parameters are named so function " + "types look like (name1: type1, name2: type2) => returnType. You " + "probably wrote (type1) => returnType");
          }
          return type;
        }
        tmp = this.flowParseFunctionTypeParams();
        node.params = tmp.params;
        node.rest = tmp.rest;
        this.expect(_types.types.parenR);
        this.expect(_types.types.arrow);
        node.returnType = this.flowParseType();
        node.typeParameters = null;
        return this.finishNode(node, "FunctionTypeAnnotation");
      case _types.types.string:
        node.value = this.state.value;
        this.addExtra(node, "rawValue", node.value);
        this.addExtra(node, "raw", this.input.slice(this.state.start, this.state.end));
        this.next();
        return this.finishNode(node, "StringLiteralTypeAnnotation");
      case _types.types._true:
      case _types.types._false:
        node.value = this.match(_types.types._true);
        this.next();
        return this.finishNode(node, "BooleanLiteralTypeAnnotation");
      case _types.types.num:
        node.value = this.state.value;
        this.addExtra(node, "rawValue", node.value);
        this.addExtra(node, "raw", this.input.slice(this.state.start, this.state.end));
        this.next();
        return this.finishNode(node, "NumericLiteralTypeAnnotation");
      case _types.types._null:
        node.value = this.match(_types.types._null);
        this.next();
        return this.finishNode(node, "NullLiteralTypeAnnotation");
      case _types.types._this:
        node.value = this.match(_types.types._this);
        this.next();
        return this.finishNode(node, "ThisTypeAnnotation");
      case _types.types.star:
        this.next();
        return this.finishNode(node, "ExistentialTypeParam");
      default:
        if (this.state.type.keyword === "typeof") {
          return this.flowParseTypeofType();
        }
    }
    this.unexpected();
  };
  pp.flowParsePostfixType = function() {
    var node = this.startNode();
    var type = node.elementType = this.flowParsePrimaryType();
    if (this.match(_types.types.bracketL)) {
      this.expect(_types.types.bracketL);
      this.expect(_types.types.bracketR);
      return this.finishNode(node, "ArrayTypeAnnotation");
    } else {
      return type;
    }
  };
  pp.flowParsePrefixType = function() {
    var node = this.startNode();
    if (this.eat(_types.types.question)) {
      node.typeAnnotation = this.flowParsePrefixType();
      return this.finishNode(node, "NullableTypeAnnotation");
    } else {
      return this.flowParsePostfixType();
    }
  };
  pp.flowParseIntersectionType = function() {
    var node = this.startNode();
    var type = this.flowParsePrefixType();
    node.types = [type];
    while (this.eat(_types.types.bitwiseAND)) {
      node.types.push(this.flowParsePrefixType());
    }
    return node.types.length === 1 ? type : this.finishNode(node, "IntersectionTypeAnnotation");
  };
  pp.flowParseUnionType = function() {
    var node = this.startNode();
    var type = this.flowParseIntersectionType();
    node.types = [type];
    while (this.eat(_types.types.bitwiseOR)) {
      node.types.push(this.flowParseIntersectionType());
    }
    return node.types.length === 1 ? type : this.finishNode(node, "UnionTypeAnnotation");
  };
  pp.flowParseType = function() {
    var oldInType = this.state.inType;
    this.state.inType = true;
    var type = this.flowParseUnionType();
    this.state.inType = oldInType;
    return type;
  };
  pp.flowParseTypeAnnotation = function() {
    var node = this.startNode();
    node.typeAnnotation = this.flowParseTypeInitialiser();
    return this.finishNode(node, "TypeAnnotation");
  };
  pp.flowParseTypeAnnotatableIdentifier = function(requireTypeAnnotation, canBeOptionalParam) {
    var ident = this.parseIdentifier();
    var isOptionalParam = false;
    if (canBeOptionalParam && this.eat(_types.types.question)) {
      this.expect(_types.types.question);
      isOptionalParam = true;
    }
    if (requireTypeAnnotation || this.match(_types.types.colon)) {
      ident.typeAnnotation = this.flowParseTypeAnnotation();
      this.finishNode(ident, ident.type);
    }
    if (isOptionalParam) {
      ident.optional = true;
      this.finishNode(ident, ident.type);
    }
    return ident;
  };
  return module.exports;
});

System.registerDynamic("npm:babylon@6.8.1/lib/plugins/jsx/xhtml.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  Object.defineProperty(exports, "__esModule", {value: true});
  exports.default = {
    quot: "\"",
    amp: "&",
    apos: "'",
    lt: "<",
    gt: ">",
    nbsp: " ",
    iexcl: "¡",
    cent: "¢",
    pound: "£",
    curren: "¤",
    yen: "¥",
    brvbar: "¦",
    sect: "§",
    uml: "¨",
    copy: "©",
    ordf: "ª",
    laquo: "«",
    not: "¬",
    shy: "­",
    reg: "®",
    macr: "¯",
    deg: "°",
    plusmn: "±",
    sup2: "²",
    sup3: "³",
    acute: "´",
    micro: "µ",
    para: "¶",
    middot: "·",
    cedil: "¸",
    sup1: "¹",
    ordm: "º",
    raquo: "»",
    frac14: "¼",
    frac12: "½",
    frac34: "¾",
    iquest: "¿",
    Agrave: "À",
    Aacute: "Á",
    Acirc: "Â",
    Atilde: "Ã",
    Auml: "Ä",
    Aring: "Å",
    AElig: "Æ",
    Ccedil: "Ç",
    Egrave: "È",
    Eacute: "É",
    Ecirc: "Ê",
    Euml: "Ë",
    Igrave: "Ì",
    Iacute: "Í",
    Icirc: "Î",
    Iuml: "Ï",
    ETH: "Ð",
    Ntilde: "Ñ",
    Ograve: "Ò",
    Oacute: "Ó",
    Ocirc: "Ô",
    Otilde: "Õ",
    Ouml: "Ö",
    times: "×",
    Oslash: "Ø",
    Ugrave: "Ù",
    Uacute: "Ú",
    Ucirc: "Û",
    Uuml: "Ü",
    Yacute: "Ý",
    THORN: "Þ",
    szlig: "ß",
    agrave: "à",
    aacute: "á",
    acirc: "â",
    atilde: "ã",
    auml: "ä",
    aring: "å",
    aelig: "æ",
    ccedil: "ç",
    egrave: "è",
    eacute: "é",
    ecirc: "ê",
    euml: "ë",
    igrave: "ì",
    iacute: "í",
    icirc: "î",
    iuml: "ï",
    eth: "ð",
    ntilde: "ñ",
    ograve: "ò",
    oacute: "ó",
    ocirc: "ô",
    otilde: "õ",
    ouml: "ö",
    divide: "÷",
    oslash: "ø",
    ugrave: "ù",
    uacute: "ú",
    ucirc: "û",
    uuml: "ü",
    yacute: "ý",
    thorn: "þ",
    yuml: "ÿ",
    OElig: "Œ",
    oelig: "œ",
    Scaron: "Š",
    scaron: "š",
    Yuml: "Ÿ",
    fnof: "ƒ",
    circ: "ˆ",
    tilde: "˜",
    Alpha: "Α",
    Beta: "Β",
    Gamma: "Γ",
    Delta: "Δ",
    Epsilon: "Ε",
    Zeta: "Ζ",
    Eta: "Η",
    Theta: "Θ",
    Iota: "Ι",
    Kappa: "Κ",
    Lambda: "Λ",
    Mu: "Μ",
    Nu: "Ν",
    Xi: "Ξ",
    Omicron: "Ο",
    Pi: "Π",
    Rho: "Ρ",
    Sigma: "Σ",
    Tau: "Τ",
    Upsilon: "Υ",
    Phi: "Φ",
    Chi: "Χ",
    Psi: "Ψ",
    Omega: "Ω",
    alpha: "α",
    beta: "β",
    gamma: "γ",
    delta: "δ",
    epsilon: "ε",
    zeta: "ζ",
    eta: "η",
    theta: "θ",
    iota: "ι",
    kappa: "κ",
    lambda: "λ",
    mu: "μ",
    nu: "ν",
    xi: "ξ",
    omicron: "ο",
    pi: "π",
    rho: "ρ",
    sigmaf: "ς",
    sigma: "σ",
    tau: "τ",
    upsilon: "υ",
    phi: "φ",
    chi: "χ",
    psi: "ψ",
    omega: "ω",
    thetasym: "ϑ",
    upsih: "ϒ",
    piv: "ϖ",
    ensp: " ",
    emsp: " ",
    thinsp: " ",
    zwnj: "‌",
    zwj: "‍",
    lrm: "‎",
    rlm: "‏",
    ndash: "–",
    mdash: "—",
    lsquo: "‘",
    rsquo: "’",
    sbquo: "‚",
    ldquo: "“",
    rdquo: "”",
    bdquo: "„",
    dagger: "†",
    Dagger: "‡",
    bull: "•",
    hellip: "…",
    permil: "‰",
    prime: "′",
    Prime: "″",
    lsaquo: "‹",
    rsaquo: "›",
    oline: "‾",
    frasl: "⁄",
    euro: "€",
    image: "ℑ",
    weierp: "℘",
    real: "ℜ",
    trade: "™",
    alefsym: "ℵ",
    larr: "←",
    uarr: "↑",
    rarr: "→",
    darr: "↓",
    harr: "↔",
    crarr: "↵",
    lArr: "⇐",
    uArr: "⇑",
    rArr: "⇒",
    dArr: "⇓",
    hArr: "⇔",
    forall: "∀",
    part: "∂",
    exist: "∃",
    empty: "∅",
    nabla: "∇",
    isin: "∈",
    notin: "∉",
    ni: "∋",
    prod: "∏",
    sum: "∑",
    minus: "−",
    lowast: "∗",
    radic: "√",
    prop: "∝",
    infin: "∞",
    ang: "∠",
    and: "∧",
    or: "∨",
    cap: "∩",
    cup: "∪",
    "int": "∫",
    there4: "∴",
    sim: "∼",
    cong: "≅",
    asymp: "≈",
    ne: "≠",
    equiv: "≡",
    le: "≤",
    ge: "≥",
    sub: "⊂",
    sup: "⊃",
    nsub: "⊄",
    sube: "⊆",
    supe: "⊇",
    oplus: "⊕",
    otimes: "⊗",
    perp: "⊥",
    sdot: "⋅",
    lceil: "⌈",
    rceil: "⌉",
    lfloor: "⌊",
    rfloor: "⌋",
    lang: "〈",
    rang: "〉",
    loz: "◊",
    spades: "♠",
    clubs: "♣",
    hearts: "♥",
    diams: "♦"
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/es6.object.get-prototype-of.js", ["./_to-object", "./_object-gpo", "./_object-sap", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var toObject = $__require('./_to-object'),
      $getPrototypeOf = $__require('./_object-gpo');
  $__require('./_object-sap')('getPrototypeOf', function() {
    return function getPrototypeOf(it) {
      return $getPrototypeOf(toObject(it));
    };
  });
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/fn/object/get-prototype-of.js", ["../../modules/es6.object.get-prototype-of", "../../modules/_core", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  $__require('../../modules/es6.object.get-prototype-of');
  module.exports = $__require('../../modules/_core').Object.getPrototypeOf;
  return module.exports;
});

System.registerDynamic("npm:babel-runtime@6.9.2/core-js/object/get-prototype-of.js", ["core-js/library/fn/object/get-prototype-of"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  module.exports = {
    "default": $__require('core-js/library/fn/object/get-prototype-of'),
    __esModule: true
  };
  return module.exports;
});

System.registerDynamic("npm:babel-runtime@6.9.2/helpers/possibleConstructorReturn.js", ["../helpers/typeof"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  var _typeof2 = $__require('../helpers/typeof');
  var _typeof3 = _interopRequireDefault(_typeof2);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  exports.default = function(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self;
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_set-proto.js", ["./_is-object", "./_an-object", "./_ctx", "./_object-gopd", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var isObject = $__require('./_is-object'),
      anObject = $__require('./_an-object');
  var check = function(O, proto) {
    anObject(O);
    if (!isObject(proto) && proto !== null)
      throw TypeError(proto + ": can't set as prototype!");
  };
  module.exports = {
    set: Object.setPrototypeOf || ('__proto__' in {} ? function(test, buggy, set) {
      try {
        set = $__require('./_ctx')(Function.call, $__require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) {
        buggy = true;
      }
      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy)
          O.__proto__ = proto;
        else
          set(O, proto);
        return O;
      };
    }({}, false) : undefined),
    check: check
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/es6.object.set-prototype-of.js", ["./_export", "./_set-proto", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var $export = $__require('./_export');
  $export($export.S, 'Object', {setPrototypeOf: $__require('./_set-proto').set});
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/fn/object/set-prototype-of.js", ["../../modules/es6.object.set-prototype-of", "../../modules/_core", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  $__require('../../modules/es6.object.set-prototype-of');
  module.exports = $__require('../../modules/_core').Object.setPrototypeOf;
  return module.exports;
});

System.registerDynamic("npm:babel-runtime@6.9.2/core-js/object/set-prototype-of.js", ["core-js/library/fn/object/set-prototype-of"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  module.exports = {
    "default": $__require('core-js/library/fn/object/set-prototype-of'),
    __esModule: true
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/es6.object.create.js", ["./_export", "./_object-create", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var $export = $__require('./_export');
  $export($export.S, 'Object', {create: $__require('./_object-create')});
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/fn/object/create.js", ["../../modules/es6.object.create", "../../modules/_core", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  $__require('../../modules/es6.object.create');
  var $Object = $__require('../../modules/_core').Object;
  module.exports = function create(P, D) {
    return $Object.create(P, D);
  };
  return module.exports;
});

System.registerDynamic("npm:babel-runtime@6.9.2/core-js/object/create.js", ["core-js/library/fn/object/create"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  module.exports = {
    "default": $__require('core-js/library/fn/object/create'),
    __esModule: true
  };
  return module.exports;
});

System.registerDynamic("npm:babel-runtime@6.9.2/helpers/inherits.js", ["../core-js/object/set-prototype-of", "../core-js/object/create", "../helpers/typeof"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  var _setPrototypeOf = $__require('../core-js/object/set-prototype-of');
  var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);
  var _create = $__require('../core-js/object/create');
  var _create2 = _interopRequireDefault(_create);
  var _typeof2 = $__require('../helpers/typeof');
  var _typeof3 = _interopRequireDefault(_typeof2);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  exports.default = function(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));
    }
    subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;
  };
  return module.exports;
});

System.registerDynamic("npm:babylon@6.8.1/lib/options.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  Object.defineProperty(exports, "__esModule", {value: true});
  exports.getOptions = getOptions;
  var defaultOptions = exports.defaultOptions = {
    sourceType: "script",
    sourceFilename: undefined,
    allowReturnOutsideFunction: false,
    allowImportExportEverywhere: false,
    allowSuperOutsideMethod: false,
    plugins: [],
    strictMode: null
  };
  function getOptions(opts) {
    var options = {};
    for (var key in defaultOptions) {
      options[key] = opts && key in opts ? opts[key] : defaultOptions[key];
    }
    return options;
  }
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/es6.object.define-property.js", ["./_export", "./_descriptors", "./_object-dp", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var $export = $__require('./_export');
  $export($export.S + $export.F * !$__require('./_descriptors'), 'Object', {defineProperty: $__require('./_object-dp').f});
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/fn/object/define-property.js", ["../../modules/es6.object.define-property", "../../modules/_core", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  $__require('../../modules/es6.object.define-property');
  var $Object = $__require('../../modules/_core').Object;
  module.exports = function defineProperty(it, key, desc) {
    return $Object.defineProperty(it, key, desc);
  };
  return module.exports;
});

System.registerDynamic("npm:babel-runtime@6.9.2/core-js/object/define-property.js", ["core-js/library/fn/object/define-property"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  module.exports = {
    "default": $__require('core-js/library/fn/object/define-property'),
    __esModule: true
  };
  return module.exports;
});

System.registerDynamic("npm:babel-runtime@6.9.2/helpers/createClass.js", ["../core-js/object/define-property"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  var _defineProperty = $__require('../core-js/object/define-property');
  var _defineProperty2 = _interopRequireDefault(_defineProperty);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  exports.default = function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        (0, _defineProperty2.default)(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  return module.exports;
});

System.registerDynamic("npm:babylon@6.8.1/lib/util/location.js", ["babel-runtime/helpers/classCallCheck", "./whitespace"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  Object.defineProperty(exports, "__esModule", {value: true});
  exports.SourceLocation = exports.Position = undefined;
  var _classCallCheck2 = $__require('babel-runtime/helpers/classCallCheck');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  exports.getLineInfo = getLineInfo;
  var _whitespace = $__require('./whitespace');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  var Position = exports.Position = function Position(line, col) {
    (0, _classCallCheck3.default)(this, Position);
    this.line = line;
    this.column = col;
  };
  var SourceLocation = exports.SourceLocation = function SourceLocation(start, end) {
    (0, _classCallCheck3.default)(this, SourceLocation);
    this.start = start;
    this.end = end;
  };
  function getLineInfo(input, offset) {
    for (var line = 1,
        cur = 0; ; ) {
      _whitespace.lineBreakG.lastIndex = cur;
      var match = _whitespace.lineBreakG.exec(input);
      if (match && match.index < offset) {
        ++line;
        cur = match.index + match[0].length;
      } else {
        return new Position(line, offset - cur);
      }
    }
  }
  return module.exports;
});

System.registerDynamic("npm:babylon@6.8.1/lib/tokenizer/context.js", ["babel-runtime/helpers/classCallCheck", "./types", "../util/whitespace"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  Object.defineProperty(exports, "__esModule", {value: true});
  exports.types = exports.TokContext = undefined;
  var _classCallCheck2 = $__require('babel-runtime/helpers/classCallCheck');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _types = $__require('./types');
  var _whitespace = $__require('../util/whitespace');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  var TokContext = exports.TokContext = function TokContext(token, isExpr, preserveSpace, override) {
    (0, _classCallCheck3.default)(this, TokContext);
    this.token = token;
    this.isExpr = !!isExpr;
    this.preserveSpace = !!preserveSpace;
    this.override = override;
  };
  var types = exports.types = {
    b_stat: new TokContext("{", false),
    b_expr: new TokContext("{", true),
    b_tmpl: new TokContext("${", true),
    p_stat: new TokContext("(", false),
    p_expr: new TokContext("(", true),
    q_tmpl: new TokContext("`", true, true, function(p) {
      return p.readTmplToken();
    }),
    f_expr: new TokContext("function", true)
  };
  _types.types.parenR.updateContext = _types.types.braceR.updateContext = function() {
    if (this.state.context.length === 1) {
      this.state.exprAllowed = true;
      return;
    }
    var out = this.state.context.pop();
    if (out === types.b_stat && this.curContext() === types.f_expr) {
      this.state.context.pop();
      this.state.exprAllowed = false;
    } else if (out === types.b_tmpl) {
      this.state.exprAllowed = true;
    } else {
      this.state.exprAllowed = !out.isExpr;
    }
  };
  _types.types.name.updateContext = function(prevType) {
    this.state.exprAllowed = false;
    if (prevType === _types.types._let || prevType === _types.types._const || prevType === _types.types._var) {
      if (_whitespace.lineBreak.test(this.input.slice(this.state.end))) {
        this.state.exprAllowed = true;
      }
    }
  };
  _types.types.braceL.updateContext = function(prevType) {
    this.state.context.push(this.braceIsBlock(prevType) ? types.b_stat : types.b_expr);
    this.state.exprAllowed = true;
  };
  _types.types.dollarBraceL.updateContext = function() {
    this.state.context.push(types.b_tmpl);
    this.state.exprAllowed = true;
  };
  _types.types.parenL.updateContext = function(prevType) {
    var statementParens = prevType === _types.types._if || prevType === _types.types._for || prevType === _types.types._with || prevType === _types.types._while;
    this.state.context.push(statementParens ? types.p_stat : types.p_expr);
    this.state.exprAllowed = true;
  };
  _types.types.incDec.updateContext = function() {};
  _types.types._function.updateContext = function() {
    if (this.curContext() !== types.b_stat) {
      this.state.context.push(types.f_expr);
    }
    this.state.exprAllowed = false;
  };
  _types.types.backQuote.updateContext = function() {
    if (this.curContext() === types.q_tmpl) {
      this.state.context.pop();
    } else {
      this.state.context.push(types.q_tmpl);
    }
    this.state.exprAllowed = false;
  };
  return module.exports;
});

System.registerDynamic("npm:babylon@6.8.1/lib/tokenizer/types.js", ["babel-runtime/helpers/classCallCheck"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  Object.defineProperty(exports, "__esModule", {value: true});
  exports.keywords = exports.types = exports.TokenType = undefined;
  var _classCallCheck2 = $__require('babel-runtime/helpers/classCallCheck');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  var TokenType = exports.TokenType = function TokenType(label) {
    var conf = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
    (0, _classCallCheck3.default)(this, TokenType);
    this.label = label;
    this.keyword = conf.keyword;
    this.beforeExpr = !!conf.beforeExpr;
    this.startsExpr = !!conf.startsExpr;
    this.rightAssociative = !!conf.rightAssociative;
    this.isLoop = !!conf.isLoop;
    this.isAssign = !!conf.isAssign;
    this.prefix = !!conf.prefix;
    this.postfix = !!conf.postfix;
    this.binop = conf.binop || null;
    this.updateContext = null;
  };
  function binop(name, prec) {
    return new TokenType(name, {
      beforeExpr: true,
      binop: prec
    });
  }
  var beforeExpr = {beforeExpr: true},
      startsExpr = {startsExpr: true};
  var types = exports.types = {
    num: new TokenType("num", startsExpr),
    regexp: new TokenType("regexp", startsExpr),
    string: new TokenType("string", startsExpr),
    name: new TokenType("name", startsExpr),
    eof: new TokenType("eof"),
    bracketL: new TokenType("[", {
      beforeExpr: true,
      startsExpr: true
    }),
    bracketR: new TokenType("]"),
    braceL: new TokenType("{", {
      beforeExpr: true,
      startsExpr: true
    }),
    braceR: new TokenType("}"),
    parenL: new TokenType("(", {
      beforeExpr: true,
      startsExpr: true
    }),
    parenR: new TokenType(")"),
    comma: new TokenType(",", beforeExpr),
    semi: new TokenType(";", beforeExpr),
    colon: new TokenType(":", beforeExpr),
    doubleColon: new TokenType("::", beforeExpr),
    dot: new TokenType("."),
    question: new TokenType("?", beforeExpr),
    arrow: new TokenType("=>", beforeExpr),
    template: new TokenType("template"),
    ellipsis: new TokenType("...", beforeExpr),
    backQuote: new TokenType("`", startsExpr),
    dollarBraceL: new TokenType("${", {
      beforeExpr: true,
      startsExpr: true
    }),
    at: new TokenType("@"),
    eq: new TokenType("=", {
      beforeExpr: true,
      isAssign: true
    }),
    assign: new TokenType("_=", {
      beforeExpr: true,
      isAssign: true
    }),
    incDec: new TokenType("++/--", {
      prefix: true,
      postfix: true,
      startsExpr: true
    }),
    prefix: new TokenType("prefix", {
      beforeExpr: true,
      prefix: true,
      startsExpr: true
    }),
    logicalOR: binop("||", 1),
    logicalAND: binop("&&", 2),
    bitwiseOR: binop("|", 3),
    bitwiseXOR: binop("^", 4),
    bitwiseAND: binop("&", 5),
    equality: binop("==/!=", 6),
    relational: binop("</>", 7),
    bitShift: binop("<</>>", 8),
    plusMin: new TokenType("+/-", {
      beforeExpr: true,
      binop: 9,
      prefix: true,
      startsExpr: true
    }),
    modulo: binop("%", 10),
    star: binop("*", 10),
    slash: binop("/", 10),
    exponent: new TokenType("**", {
      beforeExpr: true,
      binop: 11,
      rightAssociative: true
    })
  };
  var keywords = exports.keywords = {};
  function kw(name) {
    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
    options.keyword = name;
    keywords[name] = types["_" + name] = new TokenType(name, options);
  }
  kw("break");
  kw("case", beforeExpr);
  kw("catch");
  kw("continue");
  kw("debugger");
  kw("default", beforeExpr);
  kw("do", {
    isLoop: true,
    beforeExpr: true
  });
  kw("else", beforeExpr);
  kw("finally");
  kw("for", {isLoop: true});
  kw("function", startsExpr);
  kw("if");
  kw("return", beforeExpr);
  kw("switch");
  kw("throw", beforeExpr);
  kw("try");
  kw("var");
  kw("let");
  kw("const");
  kw("while", {isLoop: true});
  kw("with");
  kw("new", {
    beforeExpr: true,
    startsExpr: true
  });
  kw("this", startsExpr);
  kw("super", startsExpr);
  kw("class");
  kw("extends", beforeExpr);
  kw("export");
  kw("import");
  kw("yield", {
    beforeExpr: true,
    startsExpr: true
  });
  kw("null", startsExpr);
  kw("true", startsExpr);
  kw("false", startsExpr);
  kw("in", {
    beforeExpr: true,
    binop: 7
  });
  kw("instanceof", {
    beforeExpr: true,
    binop: 7
  });
  kw("typeof", {
    beforeExpr: true,
    prefix: true,
    startsExpr: true
  });
  kw("void", {
    beforeExpr: true,
    prefix: true,
    startsExpr: true
  });
  kw("delete", {
    beforeExpr: true,
    prefix: true,
    startsExpr: true
  });
  return module.exports;
});

System.registerDynamic("npm:babylon@6.8.1/lib/tokenizer/state.js", ["babel-runtime/helpers/classCallCheck", "babel-runtime/helpers/createClass", "../util/location", "./context", "./types"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _classCallCheck2 = $__require('babel-runtime/helpers/classCallCheck');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _createClass2 = $__require('babel-runtime/helpers/createClass');
  var _createClass3 = _interopRequireDefault(_createClass2);
  var _location = $__require('../util/location');
  var _context = $__require('./context');
  var _types = $__require('./types');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  var State = function() {
    function State() {
      (0, _classCallCheck3.default)(this, State);
    }
    (0, _createClass3.default)(State, [{
      key: "init",
      value: function init(options, input) {
        this.strict = options.strictMode === false ? false : options.sourceType === "module";
        this.input = input;
        this.potentialArrowAt = -1;
        this.inMethod = this.inFunction = this.inGenerator = this.inAsync = false;
        this.labels = [];
        this.decorators = [];
        this.tokens = [];
        this.comments = [];
        this.trailingComments = [];
        this.leadingComments = [];
        this.commentStack = [];
        this.pos = this.lineStart = 0;
        this.curLine = 1;
        this.type = _types.types.eof;
        this.value = null;
        this.start = this.end = this.pos;
        this.startLoc = this.endLoc = this.curPosition();
        this.lastTokEndLoc = this.lastTokStartLoc = null;
        this.lastTokStart = this.lastTokEnd = this.pos;
        this.context = [_context.types.b_stat];
        this.exprAllowed = true;
        this.containsEsc = this.containsOctal = false;
        this.octalPosition = null;
        return this;
      }
    }, {
      key: "curPosition",
      value: function curPosition() {
        return new _location.Position(this.curLine, this.pos - this.lineStart);
      }
    }, {
      key: "clone",
      value: function clone(skipArrays) {
        var state = new State();
        for (var key in this) {
          var val = this[key];
          if ((!skipArrays || key === "context") && Array.isArray(val)) {
            val = val.slice();
          }
          state[key] = val;
        }
        return state;
      }
    }]);
    return State;
  }();
  exports.default = State;
  return module.exports;
});

System.registerDynamic("npm:babylon@6.8.1/lib/tokenizer/index.js", ["babel-runtime/helpers/createClass", "babel-runtime/helpers/classCallCheck", "../util/identifier", "./types", "./context", "../util/location", "../util/whitespace", "./state"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  Object.defineProperty(exports, "__esModule", {value: true});
  exports.Token = undefined;
  var _createClass2 = $__require('babel-runtime/helpers/createClass');
  var _createClass3 = _interopRequireDefault(_createClass2);
  var _classCallCheck2 = $__require('babel-runtime/helpers/classCallCheck');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _identifier = $__require('../util/identifier');
  var _types = $__require('./types');
  var _context = $__require('./context');
  var _location = $__require('../util/location');
  var _whitespace = $__require('../util/whitespace');
  var _state = $__require('./state');
  var _state2 = _interopRequireDefault(_state);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  var Token = exports.Token = function Token(state) {
    (0, _classCallCheck3.default)(this, Token);
    this.type = state.type;
    this.value = state.value;
    this.start = state.start;
    this.end = state.end;
    this.loc = new _location.SourceLocation(state.startLoc, state.endLoc);
  };
  function codePointToString(code) {
    if (code <= 0xFFFF) {
      return String.fromCharCode(code);
    } else {
      return String.fromCharCode((code - 0x10000 >> 10) + 0xD800, (code - 0x10000 & 1023) + 0xDC00);
    }
  }
  var Tokenizer = function() {
    function Tokenizer(options, input) {
      (0, _classCallCheck3.default)(this, Tokenizer);
      this.state = new _state2.default();
      this.state.init(options, input);
    }
    (0, _createClass3.default)(Tokenizer, [{
      key: "next",
      value: function next() {
        if (!this.isLookahead) {
          this.state.tokens.push(new Token(this.state));
        }
        this.state.lastTokEnd = this.state.end;
        this.state.lastTokStart = this.state.start;
        this.state.lastTokEndLoc = this.state.endLoc;
        this.state.lastTokStartLoc = this.state.startLoc;
        this.nextToken();
      }
    }, {
      key: "eat",
      value: function eat(type) {
        if (this.match(type)) {
          this.next();
          return true;
        } else {
          return false;
        }
      }
    }, {
      key: "match",
      value: function match(type) {
        return this.state.type === type;
      }
    }, {
      key: "isKeyword",
      value: function isKeyword(word) {
        return (0, _identifier.isKeyword)(word);
      }
    }, {
      key: "lookahead",
      value: function lookahead() {
        var old = this.state;
        this.state = old.clone(true);
        this.isLookahead = true;
        this.next();
        this.isLookahead = false;
        var curr = this.state.clone(true);
        this.state = old;
        return curr;
      }
    }, {
      key: "setStrict",
      value: function setStrict(strict) {
        this.state.strict = strict;
        if (!this.match(_types.types.num) && !this.match(_types.types.string))
          return;
        this.state.pos = this.state.start;
        while (this.state.pos < this.state.lineStart) {
          this.state.lineStart = this.input.lastIndexOf("\n", this.state.lineStart - 2) + 1;
          --this.state.curLine;
        }
        this.nextToken();
      }
    }, {
      key: "curContext",
      value: function curContext() {
        return this.state.context[this.state.context.length - 1];
      }
    }, {
      key: "nextToken",
      value: function nextToken() {
        var curContext = this.curContext();
        if (!curContext || !curContext.preserveSpace)
          this.skipSpace();
        this.state.containsOctal = false;
        this.state.octalPosition = null;
        this.state.start = this.state.pos;
        this.state.startLoc = this.state.curPosition();
        if (this.state.pos >= this.input.length)
          return this.finishToken(_types.types.eof);
        if (curContext.override) {
          return curContext.override(this);
        } else {
          return this.readToken(this.fullCharCodeAtPos());
        }
      }
    }, {
      key: "readToken",
      value: function readToken(code) {
        if ((0, _identifier.isIdentifierStart)(code) || code === 92) {
          return this.readWord();
        } else {
          return this.getTokenFromCode(code);
        }
      }
    }, {
      key: "fullCharCodeAtPos",
      value: function fullCharCodeAtPos() {
        var code = this.input.charCodeAt(this.state.pos);
        if (code <= 0xd7ff || code >= 0xe000)
          return code;
        var next = this.input.charCodeAt(this.state.pos + 1);
        return (code << 10) + next - 0x35fdc00;
      }
    }, {
      key: "pushComment",
      value: function pushComment(block, text, start, end, startLoc, endLoc) {
        var comment = {
          type: block ? "CommentBlock" : "CommentLine",
          value: text,
          start: start,
          end: end,
          loc: new _location.SourceLocation(startLoc, endLoc)
        };
        if (!this.isLookahead) {
          this.state.tokens.push(comment);
          this.state.comments.push(comment);
        }
        this.addComment(comment);
      }
    }, {
      key: "skipBlockComment",
      value: function skipBlockComment() {
        var startLoc = this.state.curPosition();
        var start = this.state.pos,
            end = this.input.indexOf("*/", this.state.pos += 2);
        if (end === -1)
          this.raise(this.state.pos - 2, "Unterminated comment");
        this.state.pos = end + 2;
        _whitespace.lineBreakG.lastIndex = start;
        var match = void 0;
        while ((match = _whitespace.lineBreakG.exec(this.input)) && match.index < this.state.pos) {
          ++this.state.curLine;
          this.state.lineStart = match.index + match[0].length;
        }
        this.pushComment(true, this.input.slice(start + 2, end), start, this.state.pos, startLoc, this.state.curPosition());
      }
    }, {
      key: "skipLineComment",
      value: function skipLineComment(startSkip) {
        var start = this.state.pos;
        var startLoc = this.state.curPosition();
        var ch = this.input.charCodeAt(this.state.pos += startSkip);
        while (this.state.pos < this.input.length && ch !== 10 && ch !== 13 && ch !== 8232 && ch !== 8233) {
          ++this.state.pos;
          ch = this.input.charCodeAt(this.state.pos);
        }
        this.pushComment(false, this.input.slice(start + startSkip, this.state.pos), start, this.state.pos, startLoc, this.state.curPosition());
      }
    }, {
      key: "skipSpace",
      value: function skipSpace() {
        loop: while (this.state.pos < this.input.length) {
          var ch = this.input.charCodeAt(this.state.pos);
          switch (ch) {
            case 32:
            case 160:
              ++this.state.pos;
              break;
            case 13:
              if (this.input.charCodeAt(this.state.pos + 1) === 10) {
                ++this.state.pos;
              }
            case 10:
            case 8232:
            case 8233:
              ++this.state.pos;
              ++this.state.curLine;
              this.state.lineStart = this.state.pos;
              break;
            case 47:
              switch (this.input.charCodeAt(this.state.pos + 1)) {
                case 42:
                  this.skipBlockComment();
                  break;
                case 47:
                  this.skipLineComment(2);
                  break;
                default:
                  break loop;
              }
              break;
            default:
              if (ch > 8 && ch < 14 || ch >= 5760 && _whitespace.nonASCIIwhitespace.test(String.fromCharCode(ch))) {
                ++this.state.pos;
              } else {
                break loop;
              }
          }
        }
      }
    }, {
      key: "finishToken",
      value: function finishToken(type, val) {
        this.state.end = this.state.pos;
        this.state.endLoc = this.state.curPosition();
        var prevType = this.state.type;
        this.state.type = type;
        this.state.value = val;
        this.updateContext(prevType);
      }
    }, {
      key: "readToken_dot",
      value: function readToken_dot() {
        var next = this.input.charCodeAt(this.state.pos + 1);
        if (next >= 48 && next <= 57) {
          return this.readNumber(true);
        }
        var next2 = this.input.charCodeAt(this.state.pos + 2);
        if (next === 46 && next2 === 46) {
          this.state.pos += 3;
          return this.finishToken(_types.types.ellipsis);
        } else {
          ++this.state.pos;
          return this.finishToken(_types.types.dot);
        }
      }
    }, {
      key: "readToken_slash",
      value: function readToken_slash() {
        if (this.state.exprAllowed) {
          ++this.state.pos;
          return this.readRegexp();
        }
        var next = this.input.charCodeAt(this.state.pos + 1);
        if (next === 61) {
          return this.finishOp(_types.types.assign, 2);
        } else {
          return this.finishOp(_types.types.slash, 1);
        }
      }
    }, {
      key: "readToken_mult_modulo",
      value: function readToken_mult_modulo(code) {
        var type = code === 42 ? _types.types.star : _types.types.modulo;
        var width = 1;
        var next = this.input.charCodeAt(this.state.pos + 1);
        if (next === 42 && this.hasPlugin("exponentiationOperator")) {
          width++;
          next = this.input.charCodeAt(this.state.pos + 2);
          type = _types.types.exponent;
        }
        if (next === 61) {
          width++;
          type = _types.types.assign;
        }
        return this.finishOp(type, width);
      }
    }, {
      key: "readToken_pipe_amp",
      value: function readToken_pipe_amp(code) {
        var next = this.input.charCodeAt(this.state.pos + 1);
        if (next === code)
          return this.finishOp(code === 124 ? _types.types.logicalOR : _types.types.logicalAND, 2);
        if (next === 61)
          return this.finishOp(_types.types.assign, 2);
        return this.finishOp(code === 124 ? _types.types.bitwiseOR : _types.types.bitwiseAND, 1);
      }
    }, {
      key: "readToken_caret",
      value: function readToken_caret() {
        var next = this.input.charCodeAt(this.state.pos + 1);
        if (next === 61) {
          return this.finishOp(_types.types.assign, 2);
        } else {
          return this.finishOp(_types.types.bitwiseXOR, 1);
        }
      }
    }, {
      key: "readToken_plus_min",
      value: function readToken_plus_min(code) {
        var next = this.input.charCodeAt(this.state.pos + 1);
        if (next === code) {
          if (next === 45 && this.input.charCodeAt(this.state.pos + 2) === 62 && _whitespace.lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.pos))) {
            this.skipLineComment(3);
            this.skipSpace();
            return this.nextToken();
          }
          return this.finishOp(_types.types.incDec, 2);
        }
        if (next === 61) {
          return this.finishOp(_types.types.assign, 2);
        } else {
          return this.finishOp(_types.types.plusMin, 1);
        }
      }
    }, {
      key: "readToken_lt_gt",
      value: function readToken_lt_gt(code) {
        var next = this.input.charCodeAt(this.state.pos + 1);
        var size = 1;
        if (next === code) {
          size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;
          if (this.input.charCodeAt(this.state.pos + size) === 61)
            return this.finishOp(_types.types.assign, size + 1);
          return this.finishOp(_types.types.bitShift, size);
        }
        if (next === 33 && code === 60 && this.input.charCodeAt(this.state.pos + 2) === 45 && this.input.charCodeAt(this.state.pos + 3) === 45) {
          if (this.inModule)
            this.unexpected();
          this.skipLineComment(4);
          this.skipSpace();
          return this.nextToken();
        }
        if (next === 61) {
          size = 2;
        }
        return this.finishOp(_types.types.relational, size);
      }
    }, {
      key: "readToken_eq_excl",
      value: function readToken_eq_excl(code) {
        var next = this.input.charCodeAt(this.state.pos + 1);
        if (next === 61)
          return this.finishOp(_types.types.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);
        if (code === 61 && next === 62) {
          this.state.pos += 2;
          return this.finishToken(_types.types.arrow);
        }
        return this.finishOp(code === 61 ? _types.types.eq : _types.types.prefix, 1);
      }
    }, {
      key: "getTokenFromCode",
      value: function getTokenFromCode(code) {
        switch (code) {
          case 46:
            return this.readToken_dot();
          case 40:
            ++this.state.pos;
            return this.finishToken(_types.types.parenL);
          case 41:
            ++this.state.pos;
            return this.finishToken(_types.types.parenR);
          case 59:
            ++this.state.pos;
            return this.finishToken(_types.types.semi);
          case 44:
            ++this.state.pos;
            return this.finishToken(_types.types.comma);
          case 91:
            ++this.state.pos;
            return this.finishToken(_types.types.bracketL);
          case 93:
            ++this.state.pos;
            return this.finishToken(_types.types.bracketR);
          case 123:
            ++this.state.pos;
            return this.finishToken(_types.types.braceL);
          case 125:
            ++this.state.pos;
            return this.finishToken(_types.types.braceR);
          case 58:
            if (this.hasPlugin("functionBind") && this.input.charCodeAt(this.state.pos + 1) === 58) {
              return this.finishOp(_types.types.doubleColon, 2);
            } else {
              ++this.state.pos;
              return this.finishToken(_types.types.colon);
            }
          case 63:
            ++this.state.pos;
            return this.finishToken(_types.types.question);
          case 64:
            ++this.state.pos;
            return this.finishToken(_types.types.at);
          case 96:
            ++this.state.pos;
            return this.finishToken(_types.types.backQuote);
          case 48:
            var next = this.input.charCodeAt(this.state.pos + 1);
            if (next === 120 || next === 88)
              return this.readRadixNumber(16);
            if (next === 111 || next === 79)
              return this.readRadixNumber(8);
            if (next === 98 || next === 66)
              return this.readRadixNumber(2);
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
            return this.readNumber(false);
          case 34:
          case 39:
            return this.readString(code);
          case 47:
            return this.readToken_slash();
          case 37:
          case 42:
            return this.readToken_mult_modulo(code);
          case 124:
          case 38:
            return this.readToken_pipe_amp(code);
          case 94:
            return this.readToken_caret();
          case 43:
          case 45:
            return this.readToken_plus_min(code);
          case 60:
          case 62:
            return this.readToken_lt_gt(code);
          case 61:
          case 33:
            return this.readToken_eq_excl(code);
          case 126:
            return this.finishOp(_types.types.prefix, 1);
        }
        this.raise(this.state.pos, "Unexpected character '" + codePointToString(code) + "'");
      }
    }, {
      key: "finishOp",
      value: function finishOp(type, size) {
        var str = this.input.slice(this.state.pos, this.state.pos + size);
        this.state.pos += size;
        return this.finishToken(type, str);
      }
    }, {
      key: "readRegexp",
      value: function readRegexp() {
        var escaped = void 0,
            inClass = void 0,
            start = this.state.pos;
        for (; ; ) {
          if (this.state.pos >= this.input.length)
            this.raise(start, "Unterminated regular expression");
          var ch = this.input.charAt(this.state.pos);
          if (_whitespace.lineBreak.test(ch)) {
            this.raise(start, "Unterminated regular expression");
          }
          if (escaped) {
            escaped = false;
          } else {
            if (ch === "[") {
              inClass = true;
            } else if (ch === "]" && inClass) {
              inClass = false;
            } else if (ch === "/" && !inClass) {
              break;
            }
            escaped = ch === "\\";
          }
          ++this.state.pos;
        }
        var content = this.input.slice(start, this.state.pos);
        ++this.state.pos;
        var mods = this.readWord1();
        if (mods) {
          var validFlags = /^[gmsiyu]*$/;
          if (!validFlags.test(mods))
            this.raise(start, "Invalid regular expression flag");
        }
        return this.finishToken(_types.types.regexp, {
          pattern: content,
          flags: mods
        });
      }
    }, {
      key: "readInt",
      value: function readInt(radix, len) {
        var start = this.state.pos,
            total = 0;
        for (var i = 0,
            e = len == null ? Infinity : len; i < e; ++i) {
          var code = this.input.charCodeAt(this.state.pos),
              val = void 0;
          if (code >= 97) {
            val = code - 97 + 10;
          } else if (code >= 65) {
            val = code - 65 + 10;
          } else if (code >= 48 && code <= 57) {
            val = code - 48;
          } else {
            val = Infinity;
          }
          if (val >= radix)
            break;
          ++this.state.pos;
          total = total * radix + val;
        }
        if (this.state.pos === start || len != null && this.state.pos - start !== len)
          return null;
        return total;
      }
    }, {
      key: "readRadixNumber",
      value: function readRadixNumber(radix) {
        this.state.pos += 2;
        var val = this.readInt(radix);
        if (val == null)
          this.raise(this.state.start + 2, "Expected number in radix " + radix);
        if ((0, _identifier.isIdentifierStart)(this.fullCharCodeAtPos()))
          this.raise(this.state.pos, "Identifier directly after number");
        return this.finishToken(_types.types.num, val);
      }
    }, {
      key: "readNumber",
      value: function readNumber(startsWithDot) {
        var start = this.state.pos,
            isFloat = false,
            octal = this.input.charCodeAt(this.state.pos) === 48;
        if (!startsWithDot && this.readInt(10) === null)
          this.raise(start, "Invalid number");
        var next = this.input.charCodeAt(this.state.pos);
        if (next === 46) {
          ++this.state.pos;
          this.readInt(10);
          isFloat = true;
          next = this.input.charCodeAt(this.state.pos);
        }
        if (next === 69 || next === 101) {
          next = this.input.charCodeAt(++this.state.pos);
          if (next === 43 || next === 45)
            ++this.state.pos;
          if (this.readInt(10) === null)
            this.raise(start, "Invalid number");
          isFloat = true;
        }
        if ((0, _identifier.isIdentifierStart)(this.fullCharCodeAtPos()))
          this.raise(this.state.pos, "Identifier directly after number");
        var str = this.input.slice(start, this.state.pos),
            val = void 0;
        if (isFloat) {
          val = parseFloat(str);
        } else if (!octal || str.length === 1) {
          val = parseInt(str, 10);
        } else if (/[89]/.test(str) || this.state.strict) {
          this.raise(start, "Invalid number");
        } else {
          val = parseInt(str, 8);
        }
        return this.finishToken(_types.types.num, val);
      }
    }, {
      key: "readCodePoint",
      value: function readCodePoint() {
        var ch = this.input.charCodeAt(this.state.pos),
            code = void 0;
        if (ch === 123) {
          var codePos = ++this.state.pos;
          code = this.readHexChar(this.input.indexOf("}", this.state.pos) - this.state.pos);
          ++this.state.pos;
          if (code > 0x10FFFF)
            this.raise(codePos, "Code point out of bounds");
        } else {
          code = this.readHexChar(4);
        }
        return code;
      }
    }, {
      key: "readString",
      value: function readString(quote) {
        var out = "",
            chunkStart = ++this.state.pos;
        for (; ; ) {
          if (this.state.pos >= this.input.length)
            this.raise(this.state.start, "Unterminated string constant");
          var ch = this.input.charCodeAt(this.state.pos);
          if (ch === quote)
            break;
          if (ch === 92) {
            out += this.input.slice(chunkStart, this.state.pos);
            out += this.readEscapedChar(false);
            chunkStart = this.state.pos;
          } else {
            if ((0, _whitespace.isNewLine)(ch))
              this.raise(this.state.start, "Unterminated string constant");
            ++this.state.pos;
          }
        }
        out += this.input.slice(chunkStart, this.state.pos++);
        return this.finishToken(_types.types.string, out);
      }
    }, {
      key: "readTmplToken",
      value: function readTmplToken() {
        var out = "",
            chunkStart = this.state.pos;
        for (; ; ) {
          if (this.state.pos >= this.input.length)
            this.raise(this.state.start, "Unterminated template");
          var ch = this.input.charCodeAt(this.state.pos);
          if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {
            if (this.state.pos === this.state.start && this.match(_types.types.template)) {
              if (ch === 36) {
                this.state.pos += 2;
                return this.finishToken(_types.types.dollarBraceL);
              } else {
                ++this.state.pos;
                return this.finishToken(_types.types.backQuote);
              }
            }
            out += this.input.slice(chunkStart, this.state.pos);
            return this.finishToken(_types.types.template, out);
          }
          if (ch === 92) {
            out += this.input.slice(chunkStart, this.state.pos);
            out += this.readEscapedChar(true);
            chunkStart = this.state.pos;
          } else if ((0, _whitespace.isNewLine)(ch)) {
            out += this.input.slice(chunkStart, this.state.pos);
            ++this.state.pos;
            switch (ch) {
              case 13:
                if (this.input.charCodeAt(this.state.pos) === 10)
                  ++this.state.pos;
              case 10:
                out += "\n";
                break;
              default:
                out += String.fromCharCode(ch);
                break;
            }
            ++this.state.curLine;
            this.state.lineStart = this.state.pos;
            chunkStart = this.state.pos;
          } else {
            ++this.state.pos;
          }
        }
      }
    }, {
      key: "readEscapedChar",
      value: function readEscapedChar(inTemplate) {
        var ch = this.input.charCodeAt(++this.state.pos);
        ++this.state.pos;
        switch (ch) {
          case 110:
            return "\n";
          case 114:
            return "\r";
          case 120:
            return String.fromCharCode(this.readHexChar(2));
          case 117:
            return codePointToString(this.readCodePoint());
          case 116:
            return "\t";
          case 98:
            return "\b";
          case 118:
            return "\u000b";
          case 102:
            return "\f";
          case 13:
            if (this.input.charCodeAt(this.state.pos) === 10)
              ++this.state.pos;
          case 10:
            this.state.lineStart = this.state.pos;
            ++this.state.curLine;
            return "";
          default:
            if (ch >= 48 && ch <= 55) {
              var octalStr = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/)[0];
              var octal = parseInt(octalStr, 8);
              if (octal > 255) {
                octalStr = octalStr.slice(0, -1);
                octal = parseInt(octalStr, 8);
              }
              if (octal > 0) {
                if (!this.state.containsOctal) {
                  this.state.containsOctal = true;
                  this.state.octalPosition = this.state.pos - 2;
                }
                if (this.state.strict || inTemplate) {
                  this.raise(this.state.pos - 2, "Octal literal in strict mode");
                }
              }
              this.state.pos += octalStr.length - 1;
              return String.fromCharCode(octal);
            }
            return String.fromCharCode(ch);
        }
      }
    }, {
      key: "readHexChar",
      value: function readHexChar(len) {
        var codePos = this.state.pos;
        var n = this.readInt(16, len);
        if (n === null)
          this.raise(codePos, "Bad character escape sequence");
        return n;
      }
    }, {
      key: "readWord1",
      value: function readWord1() {
        this.state.containsEsc = false;
        var word = "",
            first = true,
            chunkStart = this.state.pos;
        while (this.state.pos < this.input.length) {
          var ch = this.fullCharCodeAtPos();
          if ((0, _identifier.isIdentifierChar)(ch)) {
            this.state.pos += ch <= 0xffff ? 1 : 2;
          } else if (ch === 92) {
            this.state.containsEsc = true;
            word += this.input.slice(chunkStart, this.state.pos);
            var escStart = this.state.pos;
            if (this.input.charCodeAt(++this.state.pos) !== 117) {
              this.raise(this.state.pos, "Expecting Unicode escape sequence \\uXXXX");
            }
            ++this.state.pos;
            var esc = this.readCodePoint();
            if (!(first ? _identifier.isIdentifierStart : _identifier.isIdentifierChar)(esc, true)) {
              this.raise(escStart, "Invalid Unicode escape");
            }
            word += codePointToString(esc);
            chunkStart = this.state.pos;
          } else {
            break;
          }
          first = false;
        }
        return word + this.input.slice(chunkStart, this.state.pos);
      }
    }, {
      key: "readWord",
      value: function readWord() {
        var word = this.readWord1();
        var type = _types.types.name;
        if (!this.state.containsEsc && this.isKeyword(word)) {
          type = _types.keywords[word];
        }
        return this.finishToken(type, word);
      }
    }, {
      key: "braceIsBlock",
      value: function braceIsBlock(prevType) {
        if (prevType === _types.types.colon) {
          var parent = this.curContext();
          if (parent === _context.types.b_stat || parent === _context.types.b_expr) {
            return !parent.isExpr;
          }
        }
        if (prevType === _types.types._return) {
          return _whitespace.lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));
        }
        if (prevType === _types.types._else || prevType === _types.types.semi || prevType === _types.types.eof || prevType === _types.types.parenR) {
          return true;
        }
        if (prevType === _types.types.braceL) {
          return this.curContext() === _context.types.b_stat;
        }
        return !this.state.exprAllowed;
      }
    }, {
      key: "updateContext",
      value: function updateContext(prevType) {
        var update = void 0,
            type = this.state.type;
        if (type.keyword && prevType === _types.types.dot) {
          this.state.exprAllowed = false;
        } else if (update = type.updateContext) {
          update.call(this, prevType);
        } else {
          this.state.exprAllowed = type.beforeExpr;
        }
      }
    }]);
    return Tokenizer;
  }();
  exports.default = Tokenizer;
  return module.exports;
});

System.registerDynamic("npm:babylon@6.8.1/lib/parser/index.js", ["babel-runtime/core-js/get-iterator", "babel-runtime/core-js/object/get-prototype-of", "babel-runtime/helpers/classCallCheck", "babel-runtime/helpers/createClass", "babel-runtime/helpers/possibleConstructorReturn", "babel-runtime/helpers/inherits", "../util/identifier", "../options", "../tokenizer"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  Object.defineProperty(exports, "__esModule", {value: true});
  exports.plugins = undefined;
  var _getIterator2 = $__require('babel-runtime/core-js/get-iterator');
  var _getIterator3 = _interopRequireDefault(_getIterator2);
  var _getPrototypeOf = $__require('babel-runtime/core-js/object/get-prototype-of');
  var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
  var _classCallCheck2 = $__require('babel-runtime/helpers/classCallCheck');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _createClass2 = $__require('babel-runtime/helpers/createClass');
  var _createClass3 = _interopRequireDefault(_createClass2);
  var _possibleConstructorReturn2 = $__require('babel-runtime/helpers/possibleConstructorReturn');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('babel-runtime/helpers/inherits');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _identifier = $__require('../util/identifier');
  var _options = $__require('../options');
  var _tokenizer = $__require('../tokenizer');
  var _tokenizer2 = _interopRequireDefault(_tokenizer);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  var plugins = exports.plugins = {};
  var Parser = function(_Tokenizer) {
    (0, _inherits3.default)(Parser, _Tokenizer);
    function Parser(options, input) {
      (0, _classCallCheck3.default)(this, Parser);
      options = (0, _options.getOptions)(options);
      var _this = (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(Parser).call(this, options, input));
      _this.options = options;
      _this.inModule = _this.options.sourceType === "module";
      _this.isReservedWord = _identifier.reservedWords[6];
      _this.input = input;
      _this.plugins = _this.loadPlugins(_this.options.plugins);
      _this.filename = options.sourceFilename;
      if (_this.state.pos === 0 && _this.input[0] === "#" && _this.input[1] === "!") {
        _this.skipLineComment(2);
      }
      return _this;
    }
    (0, _createClass3.default)(Parser, [{
      key: "hasPlugin",
      value: function hasPlugin(name) {
        return !!(this.plugins["*"] || this.plugins[name]);
      }
    }, {
      key: "extend",
      value: function extend(name, f) {
        this[name] = f(this[name]);
      }
    }, {
      key: "loadPlugins",
      value: function loadPlugins(plugins) {
        var pluginMap = {};
        if (plugins.indexOf("flow") >= 0) {
          plugins = plugins.filter(function(plugin) {
            return plugin !== "flow";
          });
          plugins.push("flow");
        }
        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = undefined;
        try {
          for (var _iterator = (0, _getIterator3.default)(plugins),
              _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var name = _step.value;
            if (!pluginMap[name]) {
              pluginMap[name] = true;
              var plugin = exports.plugins[name];
              if (plugin)
                plugin(this);
            }
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        return pluginMap;
      }
    }, {
      key: "parse",
      value: function parse() {
        var file = this.startNode();
        var program = this.startNode();
        this.nextToken();
        return this.parseTopLevel(file, program);
      }
    }]);
    return Parser;
  }(_tokenizer2.default);
  exports.default = Parser;
  return module.exports;
});

System.registerDynamic("npm:babylon@6.8.1/lib/util/identifier.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  Object.defineProperty(exports, "__esModule", {value: true});
  exports.isIdentifierStart = isIdentifierStart;
  exports.isIdentifierChar = isIdentifierChar;
  function makePredicate(words) {
    words = words.split(" ");
    return function(str) {
      return words.indexOf(str) >= 0;
    };
  }
  var reservedWords = exports.reservedWords = {
    6: makePredicate("enum await"),
    strict: makePredicate("implements interface let package private protected public static yield"),
    strictBind: makePredicate("eval arguments")
  };
  var isKeyword = exports.isKeyword = makePredicate("break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this let const class extends export import yield super");
  var nonASCIIidentifierStartChars = "ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙա-ևא-תװ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࢠ-ࢲऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘౙౠౡಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൠൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡷᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᧁ-ᧇᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᳩ-ᳬᳮ-ᳱᳵᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖ゛-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿌ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞎꞐ-ꞭꞰꞱꟷ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭟꭤꭥꯀ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ";
  var nonASCIIidentifierChars = "‌‍·̀-ͯ·҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-٩ٰۖ-ۜ۟-۪ۤۧۨ-ۭ۰-۹ܑܰ-݊ަ-ް߀-߉߫-߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛ࣤ-ःऺ-़ा-ॏ॑-ॗॢॣ०-९ঁ-ঃ়া-ৄেৈো-্ৗৢৣ০-৯ਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣ૦-૯ଁ-ଃ଼ା-ୄେୈୋ-୍ୖୗୢୣ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఀ-ఃా-ౄె-ైొ-్ౕౖౢౣ౦-౯ಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣ೦-೯ഁ-ഃാ-ൄെ-ൈൊ-്ൗൢൣ൦-൯ංඃ්ා-ුූෘ-ෟ෦-෯ෲෳัิ-ฺ็-๎๐-๙ັິ-ູົຼ່-ໍ໐-໙༘༙༠-༩༹༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှ၀-၉ၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟፩-፱ᜒ-᜔ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝០-៩᠋-᠍᠐-᠙ᢩᤠ-ᤫᤰ-᤻᥆-᥏ᦰ-ᧀᧈᧉ᧐-᧚ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪰-᪽ᬀ-ᬄ᬴-᭄᭐-᭙᭫-᭳ᮀ-ᮂᮡ-ᮭ᮰-᮹᯦-᯳ᰤ-᰷᱀-᱉᱐-᱙᳐-᳔᳒-᳨᳭ᳲ-᳴᳸᳹᷀-᷵᷼-᷿‿⁀⁔⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯꘠-꘩꙯ꙴ-꙽ꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧꢀꢁꢴ-꣄꣐-꣙꣠-꣱꤀-꤉ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀꧐-꧙ꧥ꧰-꧹ꨩ-ꨶꩃꩌꩍ꩐-꩙ꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭꯰-꯹ﬞ︀-️︠-︭︳︴﹍-﹏０-９＿";
  var nonASCIIidentifierStart = new RegExp("[" + nonASCIIidentifierStartChars + "]");
  var nonASCIIidentifier = new RegExp("[" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + "]");
  nonASCIIidentifierStartChars = nonASCIIidentifierChars = null;
  var astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 17, 26, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 99, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 98, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 26, 45, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 955, 52, 76, 44, 33, 24, 27, 35, 42, 34, 4, 0, 13, 47, 15, 3, 22, 0, 38, 17, 2, 24, 133, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 32, 4, 287, 47, 21, 1, 2, 0, 185, 46, 82, 47, 21, 0, 60, 42, 502, 63, 32, 0, 449, 56, 1288, 920, 104, 110, 2962, 1070, 13266, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 881, 68, 12, 0, 67, 12, 16481, 1, 3071, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 4149, 196, 1340, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42710, 42, 4148, 12, 221, 16355, 541];
  var astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 1306, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 52, 0, 13, 2, 49, 13, 16, 9, 83, 11, 168, 11, 6, 9, 8, 2, 57, 0, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 316, 19, 13, 9, 214, 6, 3, 8, 112, 16, 16, 9, 82, 12, 9, 9, 535, 9, 20855, 9, 135, 4, 60, 6, 26, 9, 1016, 45, 17, 3, 19723, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 4305, 6, 792618, 239];
  function isInAstralSet(code, set) {
    var pos = 0x10000;
    for (var i = 0; i < set.length; i += 2) {
      pos += set[i];
      if (pos > code)
        return false;
      pos += set[i + 1];
      if (pos >= code)
        return true;
    }
  }
  function isIdentifierStart(code) {
    if (code < 65)
      return code === 36;
    if (code < 91)
      return true;
    if (code < 97)
      return code === 95;
    if (code < 123)
      return true;
    if (code <= 0xffff)
      return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));
    return isInAstralSet(code, astralIdentifierStartCodes);
  }
  function isIdentifierChar(code) {
    if (code < 48)
      return code === 36;
    if (code < 58)
      return true;
    if (code < 65)
      return false;
    if (code < 91)
      return true;
    if (code < 97)
      return code === 95;
    if (code < 123)
      return true;
    if (code <= 0xffff)
      return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));
    return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);
  }
  return module.exports;
});

System.registerDynamic("npm:babylon@6.8.1/lib/util/whitespace.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  Object.defineProperty(exports, "__esModule", {value: true});
  exports.isNewLine = isNewLine;
  var lineBreak = exports.lineBreak = /\r\n?|\n|\u2028|\u2029/;
  var lineBreakG = exports.lineBreakG = new RegExp(lineBreak.source, "g");
  function isNewLine(code) {
    return code === 10 || code === 13 || code === 0x2028 || code === 0x2029;
  }
  var nonASCIIwhitespace = exports.nonASCIIwhitespace = /[\u1680\u180e\u2000-\u200a\u202f\u205f\u3000\ufeff]/;
  return module.exports;
});

System.registerDynamic("npm:babylon@6.8.1/lib/plugins/jsx/index.js", ["./xhtml", "../../tokenizer/types", "../../tokenizer/context", "../../parser", "../../util/identifier", "../../util/whitespace"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  Object.defineProperty(exports, "__esModule", {value: true});
  exports.default = function(instance) {
    instance.extend("parseExprAtom", function(inner) {
      return function(refShortHandDefaultPos) {
        if (this.match(_types.types.jsxText)) {
          var node = this.parseLiteral(this.state.value, "JSXText");
          node.extra = null;
          return node;
        } else if (this.match(_types.types.jsxTagStart)) {
          return this.jsxParseElement();
        } else {
          return inner.call(this, refShortHandDefaultPos);
        }
      };
    });
    instance.extend("readToken", function(inner) {
      return function(code) {
        var context = this.curContext();
        if (context === _context.types.j_expr) {
          return this.jsxReadToken();
        }
        if (context === _context.types.j_oTag || context === _context.types.j_cTag) {
          if ((0, _identifier.isIdentifierStart)(code)) {
            return this.jsxReadWord();
          }
          if (code === 62) {
            ++this.state.pos;
            return this.finishToken(_types.types.jsxTagEnd);
          }
          if ((code === 34 || code === 39) && context === _context.types.j_oTag) {
            return this.jsxReadString(code);
          }
        }
        if (code === 60 && this.state.exprAllowed) {
          ++this.state.pos;
          return this.finishToken(_types.types.jsxTagStart);
        }
        return inner.call(this, code);
      };
    });
    instance.extend("updateContext", function(inner) {
      return function(prevType) {
        if (this.match(_types.types.braceL)) {
          var curContext = this.curContext();
          if (curContext === _context.types.j_oTag) {
            this.state.context.push(_context.types.b_expr);
          } else if (curContext === _context.types.j_expr) {
            this.state.context.push(_context.types.b_tmpl);
          } else {
            inner.call(this, prevType);
          }
          this.state.exprAllowed = true;
        } else if (this.match(_types.types.slash) && prevType === _types.types.jsxTagStart) {
          this.state.context.length -= 2;
          this.state.context.push(_context.types.j_cTag);
          this.state.exprAllowed = false;
        } else {
          return inner.call(this, prevType);
        }
      };
    });
  };
  var _xhtml = $__require('./xhtml');
  var _xhtml2 = _interopRequireDefault(_xhtml);
  var _types = $__require('../../tokenizer/types');
  var _context = $__require('../../tokenizer/context');
  var _parser = $__require('../../parser');
  var _parser2 = _interopRequireDefault(_parser);
  var _identifier = $__require('../../util/identifier');
  var _whitespace = $__require('../../util/whitespace');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  var HEX_NUMBER = /^[\da-fA-F]+$/;
  var DECIMAL_NUMBER = /^\d+$/;
  _context.types.j_oTag = new _context.TokContext("<tag", false);
  _context.types.j_cTag = new _context.TokContext("</tag", false);
  _context.types.j_expr = new _context.TokContext("<tag>...</tag>", true, true);
  _types.types.jsxName = new _types.TokenType("jsxName");
  _types.types.jsxText = new _types.TokenType("jsxText", {beforeExpr: true});
  _types.types.jsxTagStart = new _types.TokenType("jsxTagStart");
  _types.types.jsxTagEnd = new _types.TokenType("jsxTagEnd");
  _types.types.jsxTagStart.updateContext = function() {
    this.state.context.push(_context.types.j_expr);
    this.state.context.push(_context.types.j_oTag);
    this.state.exprAllowed = false;
  };
  _types.types.jsxTagEnd.updateContext = function(prevType) {
    var out = this.state.context.pop();
    if (out === _context.types.j_oTag && prevType === _types.types.slash || out === _context.types.j_cTag) {
      this.state.context.pop();
      this.state.exprAllowed = this.curContext() === _context.types.j_expr;
    } else {
      this.state.exprAllowed = true;
    }
  };
  var pp = _parser2.default.prototype;
  pp.jsxReadToken = function() {
    var out = "";
    var chunkStart = this.state.pos;
    for (; ; ) {
      if (this.state.pos >= this.input.length) {
        this.raise(this.state.start, "Unterminated JSX contents");
      }
      var ch = this.input.charCodeAt(this.state.pos);
      switch (ch) {
        case 60:
        case 123:
          if (this.state.pos === this.state.start) {
            if (ch === 60 && this.state.exprAllowed) {
              ++this.state.pos;
              return this.finishToken(_types.types.jsxTagStart);
            }
            return this.getTokenFromCode(ch);
          }
          out += this.input.slice(chunkStart, this.state.pos);
          return this.finishToken(_types.types.jsxText, out);
        case 38:
          out += this.input.slice(chunkStart, this.state.pos);
          out += this.jsxReadEntity();
          chunkStart = this.state.pos;
          break;
        default:
          if ((0, _whitespace.isNewLine)(ch)) {
            out += this.input.slice(chunkStart, this.state.pos);
            out += this.jsxReadNewLine(true);
            chunkStart = this.state.pos;
          } else {
            ++this.state.pos;
          }
      }
    }
  };
  pp.jsxReadNewLine = function(normalizeCRLF) {
    var ch = this.input.charCodeAt(this.state.pos);
    var out = void 0;
    ++this.state.pos;
    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {
      ++this.state.pos;
      out = normalizeCRLF ? "\n" : "\r\n";
    } else {
      out = String.fromCharCode(ch);
    }
    ++this.state.curLine;
    this.state.lineStart = this.state.pos;
    return out;
  };
  pp.jsxReadString = function(quote) {
    var out = "";
    var chunkStart = ++this.state.pos;
    for (; ; ) {
      if (this.state.pos >= this.input.length) {
        this.raise(this.state.start, "Unterminated string constant");
      }
      var ch = this.input.charCodeAt(this.state.pos);
      if (ch === quote)
        break;
      if (ch === 38) {
        out += this.input.slice(chunkStart, this.state.pos);
        out += this.jsxReadEntity();
        chunkStart = this.state.pos;
      } else if ((0, _whitespace.isNewLine)(ch)) {
        out += this.input.slice(chunkStart, this.state.pos);
        out += this.jsxReadNewLine(false);
        chunkStart = this.state.pos;
      } else {
        ++this.state.pos;
      }
    }
    out += this.input.slice(chunkStart, this.state.pos++);
    return this.finishToken(_types.types.string, out);
  };
  pp.jsxReadEntity = function() {
    var str = "";
    var count = 0;
    var entity = void 0;
    var ch = this.input[this.state.pos];
    var startPos = ++this.state.pos;
    while (this.state.pos < this.input.length && count++ < 10) {
      ch = this.input[this.state.pos++];
      if (ch === ";") {
        if (str[0] === "#") {
          if (str[1] === "x") {
            str = str.substr(2);
            if (HEX_NUMBER.test(str))
              entity = String.fromCharCode(parseInt(str, 16));
          } else {
            str = str.substr(1);
            if (DECIMAL_NUMBER.test(str))
              entity = String.fromCharCode(parseInt(str, 10));
          }
        } else {
          entity = _xhtml2.default[str];
        }
        break;
      }
      str += ch;
    }
    if (!entity) {
      this.state.pos = startPos;
      return "&";
    }
    return entity;
  };
  pp.jsxReadWord = function() {
    var ch = void 0;
    var start = this.state.pos;
    do {
      ch = this.input.charCodeAt(++this.state.pos);
    } while ((0, _identifier.isIdentifierChar)(ch) || ch === 45);
    return this.finishToken(_types.types.jsxName, this.input.slice(start, this.state.pos));
  };
  function getQualifiedJSXName(object) {
    if (object.type === "JSXIdentifier") {
      return object.name;
    }
    if (object.type === "JSXNamespacedName") {
      return object.namespace.name + ":" + object.name.name;
    }
    if (object.type === "JSXMemberExpression") {
      return getQualifiedJSXName(object.object) + "." + getQualifiedJSXName(object.property);
    }
  }
  pp.jsxParseIdentifier = function() {
    var node = this.startNode();
    if (this.match(_types.types.jsxName)) {
      node.name = this.state.value;
    } else if (this.state.type.keyword) {
      node.name = this.state.type.keyword;
    } else {
      this.unexpected();
    }
    this.next();
    return this.finishNode(node, "JSXIdentifier");
  };
  pp.jsxParseNamespacedName = function() {
    var startPos = this.state.start,
        startLoc = this.state.startLoc;
    var name = this.jsxParseIdentifier();
    if (!this.eat(_types.types.colon))
      return name;
    var node = this.startNodeAt(startPos, startLoc);
    node.namespace = name;
    node.name = this.jsxParseIdentifier();
    return this.finishNode(node, "JSXNamespacedName");
  };
  pp.jsxParseElementName = function() {
    var startPos = this.state.start,
        startLoc = this.state.startLoc;
    var node = this.jsxParseNamespacedName();
    while (this.eat(_types.types.dot)) {
      var newNode = this.startNodeAt(startPos, startLoc);
      newNode.object = node;
      newNode.property = this.jsxParseIdentifier();
      node = this.finishNode(newNode, "JSXMemberExpression");
    }
    return node;
  };
  pp.jsxParseAttributeValue = function() {
    var node = void 0;
    switch (this.state.type) {
      case _types.types.braceL:
        node = this.jsxParseExpressionContainer();
        if (node.expression.type === "JSXEmptyExpression") {
          this.raise(node.start, "JSX attributes must only be assigned a non-empty expression");
        } else {
          return node;
        }
      case _types.types.jsxTagStart:
      case _types.types.string:
        node = this.parseExprAtom();
        node.extra = null;
        return node;
      default:
        this.raise(this.state.start, "JSX value should be either an expression or a quoted JSX text");
    }
  };
  pp.jsxParseEmptyExpression = function() {
    var node = this.startNodeAt(this.lastTokEnd, this.lastTokEndLoc);
    return this.finishNodeAt(node, "JSXEmptyExpression", this.start, this.startLoc);
  };
  pp.jsxParseExpressionContainer = function() {
    var node = this.startNode();
    this.next();
    if (this.match(_types.types.braceR)) {
      node.expression = this.jsxParseEmptyExpression();
    } else {
      node.expression = this.parseExpression();
    }
    this.expect(_types.types.braceR);
    return this.finishNode(node, "JSXExpressionContainer");
  };
  pp.jsxParseAttribute = function() {
    var node = this.startNode();
    if (this.eat(_types.types.braceL)) {
      this.expect(_types.types.ellipsis);
      node.argument = this.parseMaybeAssign();
      this.expect(_types.types.braceR);
      return this.finishNode(node, "JSXSpreadAttribute");
    }
    node.name = this.jsxParseNamespacedName();
    node.value = this.eat(_types.types.eq) ? this.jsxParseAttributeValue() : null;
    return this.finishNode(node, "JSXAttribute");
  };
  pp.jsxParseOpeningElementAt = function(startPos, startLoc) {
    var node = this.startNodeAt(startPos, startLoc);
    node.attributes = [];
    node.name = this.jsxParseElementName();
    while (!this.match(_types.types.slash) && !this.match(_types.types.jsxTagEnd)) {
      node.attributes.push(this.jsxParseAttribute());
    }
    node.selfClosing = this.eat(_types.types.slash);
    this.expect(_types.types.jsxTagEnd);
    return this.finishNode(node, "JSXOpeningElement");
  };
  pp.jsxParseClosingElementAt = function(startPos, startLoc) {
    var node = this.startNodeAt(startPos, startLoc);
    node.name = this.jsxParseElementName();
    this.expect(_types.types.jsxTagEnd);
    return this.finishNode(node, "JSXClosingElement");
  };
  pp.jsxParseElementAt = function(startPos, startLoc) {
    var node = this.startNodeAt(startPos, startLoc);
    var children = [];
    var openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);
    var closingElement = null;
    if (!openingElement.selfClosing) {
      contents: for (; ; ) {
        switch (this.state.type) {
          case _types.types.jsxTagStart:
            startPos = this.state.start;
            startLoc = this.state.startLoc;
            this.next();
            if (this.eat(_types.types.slash)) {
              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);
              break contents;
            }
            children.push(this.jsxParseElementAt(startPos, startLoc));
            break;
          case _types.types.jsxText:
            children.push(this.parseExprAtom());
            break;
          case _types.types.braceL:
            children.push(this.jsxParseExpressionContainer());
            break;
          default:
            this.unexpected();
        }
      }
      if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {
        this.raise(closingElement.start, "Expected corresponding JSX closing tag for <" + getQualifiedJSXName(openingElement.name) + ">");
      }
    }
    node.openingElement = openingElement;
    node.closingElement = closingElement;
    node.children = children;
    if (this.match(_types.types.relational) && this.state.value === "<") {
      this.raise(this.state.start, "Adjacent JSX elements must be wrapped in an enclosing tag");
    }
    return this.finishNode(node, "JSXElement");
  };
  pp.jsxParseElement = function() {
    var startPos = this.state.start,
        startLoc = this.state.startLoc;
    this.next();
    return this.jsxParseElementAt(startPos, startLoc);
  };
  return module.exports;
});

System.registerDynamic("npm:babylon@6.8.1.json", [], false, function() {
  return {
    "main": "lib/index.js",
    "format": "cjs",
    "meta": {
      "*.json": {
        "format": "json"
      }
    },
    "map": {
      "./lib.js": "./lib/index.js",
      "./lib/parser.js": "./lib/parser/index.js",
      "./lib/plugins/jsx.js": "./lib/plugins/jsx/index.js",
      "./lib/tokenizer.js": "./lib/tokenizer/index.js"
    }
  };
});

System.registerDynamic("npm:babylon@6.8.1/lib/index.js", ["./parser", "./parser/util", "./parser/statement", "./parser/lval", "./parser/expression", "./parser/node", "./parser/location", "./parser/comments", "./tokenizer/types", "./tokenizer", "./tokenizer/context", "./plugins/flow", "./plugins/jsx"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  Object.defineProperty(exports, "__esModule", {value: true});
  exports.tokTypes = undefined;
  exports.parse = parse;
  var _parser = $__require('./parser');
  var _parser2 = _interopRequireDefault(_parser);
  $__require('./parser/util');
  $__require('./parser/statement');
  $__require('./parser/lval');
  $__require('./parser/expression');
  $__require('./parser/node');
  $__require('./parser/location');
  $__require('./parser/comments');
  var _types = $__require('./tokenizer/types');
  $__require('./tokenizer');
  $__require('./tokenizer/context');
  var _flow = $__require('./plugins/flow');
  var _flow2 = _interopRequireDefault(_flow);
  var _jsx = $__require('./plugins/jsx');
  var _jsx2 = _interopRequireDefault(_jsx);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  _parser.plugins.flow = _flow2.default;
  _parser.plugins.jsx = _jsx2.default;
  function parse(input, options) {
    return new _parser2.default(options, input).parse();
  }
  exports.tokTypes = _types.types;
  return module.exports;
});

System.registerDynamic("npm:babel-traverse@6.9.0/lib/path/replacement.js", ["babel-runtime/core-js/get-iterator", "babel-code-frame", "../index", "./index", "babylon", "babel-types", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  var _getIterator2 = $__require('babel-runtime/core-js/get-iterator');
  var _getIterator3 = _interopRequireDefault(_getIterator2);
  exports.replaceWithMultiple = replaceWithMultiple;
  exports.replaceWithSourceString = replaceWithSourceString;
  exports.replaceWith = replaceWith;
  exports._replaceWith = _replaceWith;
  exports.replaceExpressionWithStatements = replaceExpressionWithStatements;
  exports.replaceInline = replaceInline;
  var _babelCodeFrame = $__require('babel-code-frame');
  var _babelCodeFrame2 = _interopRequireDefault(_babelCodeFrame);
  var _index = $__require('../index');
  var _index2 = _interopRequireDefault(_index);
  var _index3 = $__require('./index');
  var _index4 = _interopRequireDefault(_index3);
  var _babylon = $__require('babylon');
  var _babelTypes = $__require('babel-types');
  var t = _interopRequireWildcard(_babelTypes);
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj.default = obj;
      return newObj;
    }
  }
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  var hoistVariablesVisitor = {
    Function: function Function(path) {
      path.skip();
    },
    VariableDeclaration: function VariableDeclaration(path) {
      if (path.node.kind !== "var")
        return;
      var bindings = path.getBindingIdentifiers();
      for (var key in bindings) {
        path.scope.push({id: bindings[key]});
      }
      var exprs = [];
      for (var _iterator = path.node.declarations,
          _isArray = Array.isArray(_iterator),
          _i = 0,
          _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator); ; ) {
        var _ref;
        if (_isArray) {
          if (_i >= _iterator.length)
            break;
          _ref = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done)
            break;
          _ref = _i.value;
        }
        var declar = _ref;
        if (declar.init) {
          exprs.push(t.expressionStatement(t.assignmentExpression("=", declar.id, declar.init)));
        }
      }
      path.replaceWithMultiple(exprs);
    }
  };
  function replaceWithMultiple(nodes) {
    this.resync();
    nodes = this._verifyNodeList(nodes);
    t.inheritLeadingComments(nodes[0], this.node);
    t.inheritTrailingComments(nodes[nodes.length - 1], this.node);
    this.node = this.container[this.key] = null;
    this.insertAfter(nodes);
    if (this.node) {
      this.requeue();
    } else {
      this.remove();
    }
  }
  function replaceWithSourceString(replacement) {
    this.resync();
    try {
      replacement = "(" + replacement + ")";
      replacement = (0, _babylon.parse)(replacement);
    } catch (err) {
      var loc = err.loc;
      if (loc) {
        err.message += " - make sure this is an expression.";
        err.message += "\n" + (0, _babelCodeFrame2.default)(replacement, loc.line, loc.column + 1);
      }
      throw err;
    }
    replacement = replacement.program.body[0].expression;
    _index2.default.removeProperties(replacement);
    return this.replaceWith(replacement);
  }
  function replaceWith(replacement) {
    this.resync();
    if (this.removed) {
      throw new Error("You can't replace this node, we've already removed it");
    }
    if (replacement instanceof _index4.default) {
      replacement = replacement.node;
    }
    if (!replacement) {
      throw new Error("You passed `path.replaceWith()` a falsy node, use `path.remove()` instead");
    }
    if (this.node === replacement) {
      return;
    }
    if (this.isProgram() && !t.isProgram(replacement)) {
      throw new Error("You can only replace a Program root node with another Program node");
    }
    if (Array.isArray(replacement)) {
      throw new Error("Don't use `path.replaceWith()` with an array of nodes, use `path.replaceWithMultiple()`");
    }
    if (typeof replacement === "string") {
      throw new Error("Don't use `path.replaceWith()` with a source string, use `path.replaceWithSourceString()`");
    }
    if (this.isNodeType("Statement") && t.isExpression(replacement)) {
      if (!this.canHaveVariableDeclarationOrExpression() && !this.canSwapBetweenExpressionAndStatement(replacement)) {
        replacement = t.expressionStatement(replacement);
      }
    }
    if (this.isNodeType("Expression") && t.isStatement(replacement)) {
      if (!this.canHaveVariableDeclarationOrExpression() && !this.canSwapBetweenExpressionAndStatement(replacement)) {
        return this.replaceExpressionWithStatements([replacement]);
      }
    }
    var oldNode = this.node;
    if (oldNode) {
      t.inheritsComments(replacement, oldNode);
      t.removeComments(oldNode);
    }
    this._replaceWith(replacement);
    this.type = replacement.type;
    this.setScope();
    this.requeue();
  }
  function _replaceWith(node) {
    if (!this.container) {
      throw new ReferenceError("Container is falsy");
    }
    if (this.inList) {
      t.validate(this.parent, this.key, [node]);
    } else {
      t.validate(this.parent, this.key, node);
    }
    this.debug(function() {
      return "Replace with " + (node && node.type);
    });
    this.node = this.container[this.key] = node;
  }
  function replaceExpressionWithStatements(nodes) {
    this.resync();
    var toSequenceExpression = t.toSequenceExpression(nodes, this.scope);
    if (t.isSequenceExpression(toSequenceExpression)) {
      var exprs = toSequenceExpression.expressions;
      if (exprs.length >= 2 && this.parentPath.isExpressionStatement()) {
        this._maybePopFromStatements(exprs);
      }
      if (exprs.length === 1) {
        this.replaceWith(exprs[0]);
      } else {
        this.replaceWith(toSequenceExpression);
      }
    } else if (toSequenceExpression) {
      this.replaceWith(toSequenceExpression);
    } else {
      var container = t.functionExpression(null, [], t.blockStatement(nodes));
      container.shadow = true;
      this.replaceWith(t.callExpression(container, []));
      this.traverse(hoistVariablesVisitor);
      var completionRecords = this.get("callee").getCompletionRecords();
      for (var _iterator2 = completionRecords,
          _isArray2 = Array.isArray(_iterator2),
          _i2 = 0,
          _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2); ; ) {
        var _ref2;
        if (_isArray2) {
          if (_i2 >= _iterator2.length)
            break;
          _ref2 = _iterator2[_i2++];
        } else {
          _i2 = _iterator2.next();
          if (_i2.done)
            break;
          _ref2 = _i2.value;
        }
        var path = _ref2;
        if (!path.isExpressionStatement())
          continue;
        var loop = path.findParent(function(path) {
          return path.isLoop();
        });
        if (loop) {
          var callee = this.get("callee");
          var uid = callee.scope.generateDeclaredUidIdentifier("ret");
          callee.get("body").pushContainer("body", t.returnStatement(uid));
          path.get("expression").replaceWith(t.assignmentExpression("=", uid, path.node.expression));
        } else {
          path.replaceWith(t.returnStatement(path.node.expression));
        }
      }
      return this.node;
    }
  }
  function replaceInline(nodes) {
    this.resync();
    if (Array.isArray(nodes)) {
      if (Array.isArray(this.container)) {
        nodes = this._verifyNodeList(nodes);
        this._containerInsertAfter(nodes);
        return this.remove();
      } else {
        return this.replaceWithMultiple(nodes);
      }
    } else {
      return this.replaceWith(nodes);
    }
  }
  return module.exports;
});

System.registerDynamic("npm:babel-traverse@6.9.0/lib/path/evaluation.js", ["babel-runtime/helpers/typeof", "babel-runtime/core-js/get-iterator", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  var _typeof2 = $__require('babel-runtime/helpers/typeof');
  var _typeof3 = _interopRequireDefault(_typeof2);
  var _getIterator2 = $__require('babel-runtime/core-js/get-iterator');
  var _getIterator3 = _interopRequireDefault(_getIterator2);
  exports.evaluateTruthy = evaluateTruthy;
  exports.evaluate = evaluate;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  var VALID_CALLEES = ["String", "Number", "Math"];
  var INVALID_METHODS = ["random"];
  function evaluateTruthy() {
    var res = this.evaluate();
    if (res.confident)
      return !!res.value;
  }
  function evaluate() {
    var confident = true;
    var deoptPath = void 0;
    function deopt(path) {
      if (!confident)
        return;
      deoptPath = path;
      confident = false;
    }
    var value = evaluate(this);
    if (!confident)
      value = undefined;
    return {
      confident: confident,
      deopt: deoptPath,
      value: value
    };
    function evaluate(path) {
      if (!confident)
        return;
      var node = path.node;
      if (path.isSequenceExpression()) {
        var exprs = path.get("expressions");
        return evaluate(exprs[exprs.length - 1]);
      }
      if (path.isStringLiteral() || path.isNumericLiteral() || path.isBooleanLiteral()) {
        return node.value;
      }
      if (path.isNullLiteral()) {
        return null;
      }
      if (path.isTemplateLiteral()) {
        var str = "";
        var i = 0;
        var _exprs = path.get("expressions");
        for (var _iterator = node.quasis,
            _isArray = Array.isArray(_iterator),
            _i = 0,
            _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator); ; ) {
          var _ref;
          if (_isArray) {
            if (_i >= _iterator.length)
              break;
            _ref = _iterator[_i++];
          } else {
            _i = _iterator.next();
            if (_i.done)
              break;
            _ref = _i.value;
          }
          var elem = _ref;
          if (!confident)
            break;
          str += elem.value.cooked;
          var expr = _exprs[i++];
          if (expr)
            str += String(evaluate(expr));
        }
        if (!confident)
          return;
        return str;
      }
      if (path.isConditionalExpression()) {
        var testResult = evaluate(path.get("test"));
        if (!confident)
          return;
        if (testResult) {
          return evaluate(path.get("consequent"));
        } else {
          return evaluate(path.get("alternate"));
        }
      }
      if (path.isExpressionWrapper()) {
        return evaluate(path.get("expression"));
      }
      if (path.isMemberExpression() && !path.parentPath.isCallExpression({callee: node})) {
        var property = path.get("property");
        var object = path.get("object");
        if (object.isLiteral() && property.isIdentifier()) {
          var _value = object.node.value;
          var type = typeof _value === "undefined" ? "undefined" : (0, _typeof3.default)(_value);
          if (type === "number" || type === "string") {
            return _value[property.node.name];
          }
        }
      }
      if (path.isReferencedIdentifier()) {
        var binding = path.scope.getBinding(node.name);
        if (binding && binding.hasValue) {
          return binding.value;
        } else {
          if (node.name === "undefined") {
            return undefined;
          } else if (node.name === "Infinity") {
            return Infinity;
          } else if (node.name === "NaN") {
            return NaN;
          }
          var resolved = path.resolve();
          if (resolved === path) {
            return deopt(path);
          } else {
            return evaluate(resolved);
          }
        }
      }
      if (path.isUnaryExpression({prefix: true})) {
        if (node.operator === "void") {
          return undefined;
        }
        var argument = path.get("argument");
        if (node.operator === "typeof" && (argument.isFunction() || argument.isClass())) {
          return "function";
        }
        var arg = evaluate(argument);
        if (!confident)
          return;
        switch (node.operator) {
          case "!":
            return !arg;
          case "+":
            return +arg;
          case "-":
            return -arg;
          case "~":
            return ~arg;
          case "typeof":
            return (typeof arg === "undefined" ? "undefined" : (0, _typeof3.default)(arg));
        }
      }
      if (path.isArrayExpression()) {
        var arr = [];
        var elems = path.get("elements");
        for (var _iterator2 = elems,
            _isArray2 = Array.isArray(_iterator2),
            _i2 = 0,
            _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2); ; ) {
          var _ref2;
          if (_isArray2) {
            if (_i2 >= _iterator2.length)
              break;
            _ref2 = _iterator2[_i2++];
          } else {
            _i2 = _iterator2.next();
            if (_i2.done)
              break;
            _ref2 = _i2.value;
          }
          var _elem = _ref2;
          _elem = _elem.evaluate();
          if (_elem.confident) {
            arr.push(_elem.value);
          } else {
            return deopt(_elem);
          }
        }
        return arr;
      }
      if (path.isObjectExpression()) {}
      if (path.isLogicalExpression()) {
        var wasConfident = confident;
        var left = evaluate(path.get("left"));
        var leftConfident = confident;
        confident = wasConfident;
        var right = evaluate(path.get("right"));
        var rightConfident = confident;
        confident = leftConfident && rightConfident;
        switch (node.operator) {
          case "||":
            if (left && leftConfident) {
              confident = true;
              return left;
            }
            if (!confident)
              return;
            return left || right;
          case "&&":
            if (!left && leftConfident || !right && rightConfident) {
              confident = true;
            }
            if (!confident)
              return;
            return left && right;
        }
      }
      if (path.isBinaryExpression()) {
        var _left = evaluate(path.get("left"));
        if (!confident)
          return;
        var _right = evaluate(path.get("right"));
        if (!confident)
          return;
        switch (node.operator) {
          case "-":
            return _left - _right;
          case "+":
            return _left + _right;
          case "/":
            return _left / _right;
          case "*":
            return _left * _right;
          case "%":
            return _left % _right;
          case "**":
            return (Math.pow(_left, _right));
          case "<":
            return _left < _right;
          case ">":
            return _left > _right;
          case "<=":
            return _left <= _right;
          case ">=":
            return _left >= _right;
          case "==":
            return _left == _right;
          case "!=":
            return _left != _right;
          case "===":
            return _left === _right;
          case "!==":
            return _left !== _right;
          case "|":
            return _left | _right;
          case "&":
            return _left & _right;
          case "^":
            return _left ^ _right;
          case "<<":
            return _left << _right;
          case ">>":
            return _left >> _right;
          case ">>>":
            return _left >>> _right;
        }
      }
      if (path.isCallExpression()) {
        var callee = path.get("callee");
        var context = void 0;
        var func = void 0;
        if (callee.isIdentifier() && !path.scope.getBinding(callee.node.name, true) && VALID_CALLEES.indexOf(callee.node.name) >= 0) {
          func = global[node.callee.name];
        }
        if (callee.isMemberExpression()) {
          var _object = callee.get("object");
          var _property = callee.get("property");
          if (_object.isIdentifier() && _property.isIdentifier() && VALID_CALLEES.indexOf(_object.node.name) >= 0 && INVALID_METHODS.indexOf(_property.node.name) < 0) {
            context = global[_object.node.name];
            func = context[_property.node.name];
          }
          if (_object.isLiteral() && _property.isIdentifier()) {
            var _type = (0, _typeof3.default)(_object.node.value);
            if (_type === "string" || _type === "number") {
              context = _object.node.value;
              func = context[_property.node.name];
            }
          }
        }
        if (func) {
          var args = path.get("arguments").map(evaluate);
          if (!confident)
            return;
          return func.apply(context, args);
        }
      }
      deopt(path);
    }
  }
  return module.exports;
});

System.registerDynamic("npm:babel-traverse@6.9.0/lib/path/conversion.js", ["babel-types", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  exports.toComputedKey = toComputedKey;
  exports.ensureBlock = ensureBlock;
  exports.arrowFunctionToShadowed = arrowFunctionToShadowed;
  var _babelTypes = $__require('babel-types');
  var t = _interopRequireWildcard(_babelTypes);
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj.default = obj;
      return newObj;
    }
  }
  function toComputedKey() {
    var node = this.node;
    var key = void 0;
    if (this.isMemberExpression()) {
      key = node.property;
    } else if (this.isProperty() || this.isMethod()) {
      key = node.key;
    } else {
      throw new ReferenceError("todo");
    }
    if (!node.computed) {
      if (t.isIdentifier(key))
        key = t.stringLiteral(key.name);
    }
    return key;
  }
  function ensureBlock() {
    return t.ensureBlock(this.node);
  }
  function arrowFunctionToShadowed() {
    if (!this.isArrowFunctionExpression())
      return;
    this.ensureBlock();
    var node = this.node;
    node.expression = false;
    node.type = "FunctionExpression";
    node.shadow = node.shadow || true;
  }
  return module.exports;
});

System.registerDynamic("npm:babel-traverse@6.9.0/lib/path/introspection.js", ["babel-runtime/helpers/typeof", "babel-runtime/core-js/get-iterator", "lodash/includes", "babel-types", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  exports.is = undefined;
  var _typeof2 = $__require('babel-runtime/helpers/typeof');
  var _typeof3 = _interopRequireDefault(_typeof2);
  var _getIterator2 = $__require('babel-runtime/core-js/get-iterator');
  var _getIterator3 = _interopRequireDefault(_getIterator2);
  exports.matchesPattern = matchesPattern;
  exports.has = has;
  exports.isStatic = isStatic;
  exports.isnt = isnt;
  exports.equals = equals;
  exports.isNodeType = isNodeType;
  exports.canHaveVariableDeclarationOrExpression = canHaveVariableDeclarationOrExpression;
  exports.canSwapBetweenExpressionAndStatement = canSwapBetweenExpressionAndStatement;
  exports.isCompletionRecord = isCompletionRecord;
  exports.isStatementOrBlock = isStatementOrBlock;
  exports.referencesImport = referencesImport;
  exports.getSource = getSource;
  exports.willIMaybeExecuteBefore = willIMaybeExecuteBefore;
  exports._guessExecutionStatusRelativeTo = _guessExecutionStatusRelativeTo;
  exports._guessExecutionStatusRelativeToDifferentFunctions = _guessExecutionStatusRelativeToDifferentFunctions;
  exports.resolve = resolve;
  exports._resolve = _resolve;
  var _includes = $__require('lodash/includes');
  var _includes2 = _interopRequireDefault(_includes);
  var _babelTypes = $__require('babel-types');
  var t = _interopRequireWildcard(_babelTypes);
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj.default = obj;
      return newObj;
    }
  }
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function matchesPattern(pattern, allowPartial) {
    if (!this.isMemberExpression())
      return false;
    var parts = pattern.split(".");
    var search = [this.node];
    var i = 0;
    function matches(name) {
      var part = parts[i];
      return part === "*" || name === part;
    }
    while (search.length) {
      var node = search.shift();
      if (allowPartial && i === parts.length) {
        return true;
      }
      if (t.isIdentifier(node)) {
        if (!matches(node.name))
          return false;
      } else if (t.isLiteral(node)) {
        if (!matches(node.value))
          return false;
      } else if (t.isMemberExpression(node)) {
        if (node.computed && !t.isLiteral(node.property)) {
          return false;
        } else {
          search.unshift(node.property);
          search.unshift(node.object);
          continue;
        }
      } else if (t.isThisExpression(node)) {
        if (!matches("this"))
          return false;
      } else {
        return false;
      }
      if (++i > parts.length) {
        return false;
      }
    }
    return i === parts.length;
  }
  function has(key) {
    var val = this.node && this.node[key];
    if (val && Array.isArray(val)) {
      return !!val.length;
    } else {
      return !!val;
    }
  }
  function isStatic() {
    return this.scope.isStatic(this.node);
  }
  var is = exports.is = has;
  function isnt(key) {
    return !this.has(key);
  }
  function equals(key, value) {
    return this.node[key] === value;
  }
  function isNodeType(type) {
    return t.isType(this.type, type);
  }
  function canHaveVariableDeclarationOrExpression() {
    return (this.key === "init" || this.key === "left") && this.parentPath.isFor();
  }
  function canSwapBetweenExpressionAndStatement(replacement) {
    if (this.key !== "body" || !this.parentPath.isArrowFunctionExpression()) {
      return false;
    }
    if (this.isExpression()) {
      return t.isBlockStatement(replacement);
    } else if (this.isBlockStatement()) {
      return t.isExpression(replacement);
    }
    return false;
  }
  function isCompletionRecord(allowInsideFunction) {
    var path = this;
    var first = true;
    do {
      var container = path.container;
      if (path.isFunction() && !first) {
        return !!allowInsideFunction;
      }
      first = false;
      if (Array.isArray(container) && path.key !== container.length - 1) {
        return false;
      }
    } while ((path = path.parentPath) && !path.isProgram());
    return true;
  }
  function isStatementOrBlock() {
    if (this.parentPath.isLabeledStatement() || t.isBlockStatement(this.container)) {
      return false;
    } else {
      return ((0, _includes2.default)(t.STATEMENT_OR_BLOCK_KEYS, this.key));
    }
  }
  function referencesImport(moduleSource, importName) {
    if (!this.isReferencedIdentifier())
      return false;
    var binding = this.scope.getBinding(this.node.name);
    if (!binding || binding.kind !== "module")
      return false;
    var path = binding.path;
    var parent = path.parentPath;
    if (!parent.isImportDeclaration())
      return false;
    if (parent.node.source.value === moduleSource) {
      if (!importName)
        return true;
    } else {
      return false;
    }
    if (path.isImportDefaultSpecifier() && importName === "default") {
      return true;
    }
    if (path.isImportNamespaceSpecifier() && importName === "*") {
      return true;
    }
    if (path.isImportSpecifier() && path.node.imported.name === importName) {
      return true;
    }
    return false;
  }
  function getSource() {
    var node = this.node;
    if (node.end) {
      return this.hub.file.code.slice(node.start, node.end);
    } else {
      return "";
    }
  }
  function willIMaybeExecuteBefore(target) {
    return this._guessExecutionStatusRelativeTo(target) !== "after";
  }
  function _guessExecutionStatusRelativeTo(target) {
    var targetFuncParent = target.scope.getFunctionParent();
    var selfFuncParent = this.scope.getFunctionParent();
    if (targetFuncParent.node !== selfFuncParent.node) {
      var status = this._guessExecutionStatusRelativeToDifferentFunctions(targetFuncParent);
      if (status) {
        return status;
      } else {
        target = targetFuncParent.path;
      }
    }
    var targetPaths = target.getAncestry();
    if (targetPaths.indexOf(this) >= 0)
      return "after";
    var selfPaths = this.getAncestry();
    var commonPath = void 0;
    var targetIndex = void 0;
    var selfIndex = void 0;
    for (selfIndex = 0; selfIndex < selfPaths.length; selfIndex++) {
      var selfPath = selfPaths[selfIndex];
      targetIndex = targetPaths.indexOf(selfPath);
      if (targetIndex >= 0) {
        commonPath = selfPath;
        break;
      }
    }
    if (!commonPath) {
      return "before";
    }
    var targetRelationship = targetPaths[targetIndex - 1];
    var selfRelationship = selfPaths[selfIndex - 1];
    if (!targetRelationship || !selfRelationship) {
      return "before";
    }
    if (targetRelationship.listKey && targetRelationship.container === selfRelationship.container) {
      return targetRelationship.key > selfRelationship.key ? "before" : "after";
    }
    var targetKeyPosition = t.VISITOR_KEYS[targetRelationship.type].indexOf(targetRelationship.key);
    var selfKeyPosition = t.VISITOR_KEYS[selfRelationship.type].indexOf(selfRelationship.key);
    return targetKeyPosition > selfKeyPosition ? "before" : "after";
  }
  function _guessExecutionStatusRelativeToDifferentFunctions(targetFuncParent) {
    var targetFuncPath = targetFuncParent.path;
    if (!targetFuncPath.isFunctionDeclaration())
      return;
    var binding = targetFuncPath.scope.getBinding(targetFuncPath.node.id.name);
    if (!binding.references)
      return "before";
    var referencePaths = binding.referencePaths;
    for (var _iterator = referencePaths,
        _isArray = Array.isArray(_iterator),
        _i = 0,
        _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator); ; ) {
      var _ref;
      if (_isArray) {
        if (_i >= _iterator.length)
          break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done)
          break;
        _ref = _i.value;
      }
      var path = _ref;
      if (path.key !== "callee" || !path.parentPath.isCallExpression()) {
        return;
      }
    }
    var allStatus = void 0;
    for (var _iterator2 = referencePaths,
        _isArray2 = Array.isArray(_iterator2),
        _i2 = 0,
        _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2); ; ) {
      var _ref2;
      if (_isArray2) {
        if (_i2 >= _iterator2.length)
          break;
        _ref2 = _iterator2[_i2++];
      } else {
        _i2 = _iterator2.next();
        if (_i2.done)
          break;
        _ref2 = _i2.value;
      }
      var _path = _ref2;
      var childOfFunction = !!_path.find(function(path) {
        return path.node === targetFuncPath.node;
      });
      if (childOfFunction)
        continue;
      var status = this._guessExecutionStatusRelativeTo(_path);
      if (allStatus) {
        if (allStatus !== status)
          return;
      } else {
        allStatus = status;
      }
    }
    return allStatus;
  }
  function resolve(dangerous, resolved) {
    return this._resolve(dangerous, resolved) || this;
  }
  function _resolve(dangerous, resolved) {
    var _this = this;
    if (resolved && resolved.indexOf(this) >= 0)
      return;
    resolved = resolved || [];
    resolved.push(this);
    if (this.isVariableDeclarator()) {
      if (this.get("id").isIdentifier()) {
        return this.get("init").resolve(dangerous, resolved);
      } else {}
    } else if (this.isReferencedIdentifier()) {
      var binding = this.scope.getBinding(this.node.name);
      if (!binding)
        return;
      if (!binding.constant)
        return;
      if (binding.kind === "module")
        return;
      if (binding.path !== this) {
        var _ret = function() {
          var ret = binding.path.resolve(dangerous, resolved);
          if (_this.find(function(parent) {
            return parent.node === ret.node;
          }))
            return ({v: void 0});
          return ({v: ret});
        }();
        if ((typeof _ret === "undefined" ? "undefined" : (0, _typeof3.default)(_ret)) === "object")
          return _ret.v;
      }
    } else if (this.isTypeCastExpression()) {
      return this.get("expression").resolve(dangerous, resolved);
    } else if (dangerous && this.isMemberExpression()) {
      var targetKey = this.toComputedKey();
      if (!t.isLiteral(targetKey))
        return;
      var targetName = targetKey.value;
      var target = this.get("object").resolve(dangerous, resolved);
      if (target.isObjectExpression()) {
        var props = target.get("properties");
        for (var _iterator3 = props,
            _isArray3 = Array.isArray(_iterator3),
            _i3 = 0,
            _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3); ; ) {
          var _ref3;
          if (_isArray3) {
            if (_i3 >= _iterator3.length)
              break;
            _ref3 = _iterator3[_i3++];
          } else {
            _i3 = _iterator3.next();
            if (_i3.done)
              break;
            _ref3 = _i3.value;
          }
          var prop = _ref3;
          if (!prop.isProperty())
            continue;
          var key = prop.get("key");
          var match = prop.isnt("computed") && key.isIdentifier({name: targetName});
          match = match || key.isLiteral({value: targetName});
          if (match)
            return prop.get("value").resolve(dangerous, resolved);
        }
      } else if (target.isArrayExpression() && !isNaN(+targetName)) {
        var elems = target.get("elements");
        var elem = elems[targetName];
        if (elem)
          return elem.resolve(dangerous, resolved);
      }
    }
  }
  return module.exports;
});

System.registerDynamic("npm:babel-traverse@6.9.0/lib/path/context.js", ["babel-runtime/core-js/get-iterator", "../index", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  var _getIterator2 = $__require('babel-runtime/core-js/get-iterator');
  var _getIterator3 = _interopRequireDefault(_getIterator2);
  exports.call = call;
  exports._call = _call;
  exports.isBlacklisted = isBlacklisted;
  exports.visit = visit;
  exports.skip = skip;
  exports.skipKey = skipKey;
  exports.stop = stop;
  exports.setScope = setScope;
  exports.setContext = setContext;
  exports.resync = resync;
  exports._resyncParent = _resyncParent;
  exports._resyncKey = _resyncKey;
  exports._resyncList = _resyncList;
  exports._resyncRemoved = _resyncRemoved;
  exports.popContext = popContext;
  exports.pushContext = pushContext;
  exports.setup = setup;
  exports.setKey = setKey;
  exports.requeue = requeue;
  exports._getQueueContexts = _getQueueContexts;
  var _index = $__require('../index');
  var _index2 = _interopRequireDefault(_index);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function call(key) {
    var opts = this.opts;
    this.debug(function() {
      return key;
    });
    if (this.node) {
      if (this._call(opts[key]))
        return true;
    }
    if (this.node) {
      return this._call(opts[this.node.type] && opts[this.node.type][key]);
    }
    return false;
  }
  function _call(fns) {
    if (!fns)
      return false;
    for (var _iterator = fns,
        _isArray = Array.isArray(_iterator),
        _i = 0,
        _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator); ; ) {
      var _ref;
      if (_isArray) {
        if (_i >= _iterator.length)
          break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done)
          break;
        _ref = _i.value;
      }
      var fn = _ref;
      if (!fn)
        continue;
      var node = this.node;
      if (!node)
        return true;
      var ret = fn.call(this.state, this, this.state);
      if (ret)
        throw new Error("Unexpected return value from visitor method " + fn);
      if (this.node !== node)
        return true;
      if (this.shouldStop || this.shouldSkip || this.removed)
        return true;
    }
    return false;
  }
  function isBlacklisted() {
    var blacklist = this.opts.blacklist;
    return blacklist && blacklist.indexOf(this.node.type) > -1;
  }
  function visit() {
    if (!this.node) {
      return false;
    }
    if (this.isBlacklisted()) {
      return false;
    }
    if (this.opts.shouldSkip && this.opts.shouldSkip(this)) {
      return false;
    }
    if (this.call("enter") || this.shouldSkip) {
      this.debug(function() {
        return "Skip...";
      });
      return this.shouldStop;
    }
    this.debug(function() {
      return "Recursing into...";
    });
    _index2.default.node(this.node, this.opts, this.scope, this.state, this, this.skipKeys);
    this.call("exit");
    return this.shouldStop;
  }
  function skip() {
    this.shouldSkip = true;
  }
  function skipKey(key) {
    this.skipKeys[key] = true;
  }
  function stop() {
    this.shouldStop = true;
    this.shouldSkip = true;
  }
  function setScope() {
    if (this.opts && this.opts.noScope)
      return;
    var target = this.context && this.context.scope;
    if (!target) {
      var path = this.parentPath;
      while (path && !target) {
        if (path.opts && path.opts.noScope)
          return;
        target = path.scope;
        path = path.parentPath;
      }
    }
    this.scope = this.getScope(target);
    if (this.scope)
      this.scope.init();
  }
  function setContext(context) {
    this.shouldSkip = false;
    this.shouldStop = false;
    this.removed = false;
    this.skipKeys = {};
    if (context) {
      this.context = context;
      this.state = context.state;
      this.opts = context.opts;
    }
    this.setScope();
    return this;
  }
  function resync() {
    if (this.removed)
      return;
    this._resyncParent();
    this._resyncList();
    this._resyncKey();
  }
  function _resyncParent() {
    if (this.parentPath) {
      this.parent = this.parentPath.node;
    }
  }
  function _resyncKey() {
    if (!this.container)
      return;
    if (this.node === this.container[this.key])
      return;
    if (Array.isArray(this.container)) {
      for (var i = 0; i < this.container.length; i++) {
        if (this.container[i] === this.node) {
          return this.setKey(i);
        }
      }
    } else {
      for (var key in this.container) {
        if (this.container[key] === this.node) {
          return this.setKey(key);
        }
      }
    }
    this.key = null;
  }
  function _resyncList() {
    if (!this.parent || !this.inList)
      return;
    var newContainer = this.parent[this.listKey];
    if (this.container === newContainer)
      return;
    this.container = newContainer || null;
  }
  function _resyncRemoved() {
    if (this.key == null || !this.container || this.container[this.key] !== this.node) {
      this._markRemoved();
    }
  }
  function popContext() {
    this.contexts.pop();
    this.setContext(this.contexts[this.contexts.length - 1]);
  }
  function pushContext(context) {
    this.contexts.push(context);
    this.setContext(context);
  }
  function setup(parentPath, container, listKey, key) {
    this.inList = !!listKey;
    this.listKey = listKey;
    this.parentKey = listKey || key;
    this.container = container;
    this.parentPath = parentPath || this.parentPath;
    this.setKey(key);
  }
  function setKey(key) {
    this.key = key;
    this.node = this.container[this.key];
    this.type = this.node && this.node.type;
  }
  function requeue() {
    var pathToQueue = arguments.length <= 0 || arguments[0] === undefined ? this : arguments[0];
    if (pathToQueue.removed)
      return;
    var contexts = this.contexts;
    for (var _iterator2 = contexts,
        _isArray2 = Array.isArray(_iterator2),
        _i2 = 0,
        _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2); ; ) {
      var _ref2;
      if (_isArray2) {
        if (_i2 >= _iterator2.length)
          break;
        _ref2 = _iterator2[_i2++];
      } else {
        _i2 = _iterator2.next();
        if (_i2.done)
          break;
        _ref2 = _i2.value;
      }
      var context = _ref2;
      context.maybeQueue(pathToQueue);
    }
  }
  function _getQueueContexts() {
    var path = this;
    var contexts = this.contexts;
    while (!contexts.length) {
      path = path.parentPath;
      contexts = path.contexts;
    }
    return contexts;
  }
  return module.exports;
});

System.registerDynamic("npm:babel-traverse@6.9.0/lib/path/lib/removal-hooks.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  var hooks = exports.hooks = [function(self, parent) {
    if (self.key === "body" && parent.isArrowFunctionExpression()) {
      self.replaceWith(self.scope.buildUndefinedNode());
      return true;
    }
  }, function(self, parent) {
    var removeParent = false;
    removeParent = removeParent || self.key === "test" && (parent.isWhile() || parent.isSwitchCase());
    removeParent = removeParent || self.key === "declaration" && parent.isExportDeclaration();
    removeParent = removeParent || self.key === "body" && parent.isLabeledStatement();
    removeParent = removeParent || self.listKey === "declarations" && parent.isVariableDeclaration() && parent.node.declarations.length === 1;
    removeParent = removeParent || self.key === "expression" && parent.isExpressionStatement();
    if (removeParent) {
      parent.remove();
      return true;
    }
  }, function(self, parent) {
    if (parent.isSequenceExpression() && parent.node.expressions.length === 1) {
      parent.replaceWith(parent.node.expressions[0]);
      return true;
    }
  }, function(self, parent) {
    if (parent.isBinary()) {
      if (self.key === "left") {
        parent.replaceWith(parent.node.right);
      } else {
        parent.replaceWith(parent.node.left);
      }
      return true;
    }
  }];
  return module.exports;
});

System.registerDynamic("npm:babel-traverse@6.9.0/lib/path/removal.js", ["babel-runtime/core-js/get-iterator", "./lib/removal-hooks", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  var _getIterator2 = $__require('babel-runtime/core-js/get-iterator');
  var _getIterator3 = _interopRequireDefault(_getIterator2);
  exports.remove = remove;
  exports._callRemovalHooks = _callRemovalHooks;
  exports._remove = _remove;
  exports._markRemoved = _markRemoved;
  exports._assertUnremoved = _assertUnremoved;
  var _removalHooks = $__require('./lib/removal-hooks');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function remove() {
    this._assertUnremoved();
    this.resync();
    if (this._callRemovalHooks()) {
      this._markRemoved();
      return;
    }
    this.shareCommentsWithSiblings();
    this._remove();
    this._markRemoved();
  }
  function _callRemovalHooks() {
    for (var _iterator = _removalHooks.hooks,
        _isArray = Array.isArray(_iterator),
        _i = 0,
        _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator); ; ) {
      var _ref;
      if (_isArray) {
        if (_i >= _iterator.length)
          break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done)
          break;
        _ref = _i.value;
      }
      var fn = _ref;
      if (fn(this, this.parentPath))
        return true;
    }
  }
  function _remove() {
    if (Array.isArray(this.container)) {
      this.container.splice(this.key, 1);
      this.updateSiblingKeys(this.key, -1);
    } else {
      this._replaceWith(null);
    }
  }
  function _markRemoved() {
    this.shouldSkip = true;
    this.removed = true;
    this.node = null;
  }
  function _assertUnremoved() {
    if (this.removed) {
      throw this.buildCodeFrameError("NodePath has been removed so is read-only.");
    }
  }
  return module.exports;
});

System.registerDynamic("npm:babel-runtime@6.9.2/helpers/classCallCheck.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  exports.default = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  return module.exports;
});

System.registerDynamic("npm:babel-traverse@6.9.0/lib/path/lib/hoister.js", ["babel-runtime/helpers/classCallCheck", "babel-runtime/core-js/get-iterator", "babel-types", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  var _classCallCheck2 = $__require('babel-runtime/helpers/classCallCheck');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _getIterator2 = $__require('babel-runtime/core-js/get-iterator');
  var _getIterator3 = _interopRequireDefault(_getIterator2);
  var _babelTypes = $__require('babel-types');
  var t = _interopRequireWildcard(_babelTypes);
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj.default = obj;
      return newObj;
    }
  }
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  var referenceVisitor = {ReferencedIdentifier: function ReferencedIdentifier(path, state) {
      if (path.isJSXIdentifier() && _babelTypes.react.isCompatTag(path.node.name)) {
        return;
      }
      var binding = path.scope.getBinding(path.node.name);
      if (!binding)
        return;
      if (binding !== state.scope.getBinding(path.node.name))
        return;
      if (binding.constant) {
        state.bindings[path.node.name] = binding;
      } else {
        for (var _iterator = binding.constantViolations,
            _isArray = Array.isArray(_iterator),
            _i = 0,
            _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator); ; ) {
          var _ref;
          if (_isArray) {
            if (_i >= _iterator.length)
              break;
            _ref = _iterator[_i++];
          } else {
            _i = _iterator.next();
            if (_i.done)
              break;
            _ref = _i.value;
          }
          var violationPath = _ref;
          state.breakOnScopePaths = state.breakOnScopePaths.concat(violationPath.getAncestry());
        }
      }
    }};
  var PathHoister = function() {
    function PathHoister(path, scope) {
      (0, _classCallCheck3.default)(this, PathHoister);
      this.breakOnScopePaths = [];
      this.bindings = {};
      this.scopes = [];
      this.scope = scope;
      this.path = path;
    }
    PathHoister.prototype.isCompatibleScope = function isCompatibleScope(scope) {
      for (var key in this.bindings) {
        var binding = this.bindings[key];
        if (!scope.bindingIdentifierEquals(key, binding.identifier)) {
          return false;
        }
      }
      return true;
    };
    PathHoister.prototype.getCompatibleScopes = function getCompatibleScopes() {
      var scope = this.path.scope;
      do {
        if (this.isCompatibleScope(scope)) {
          this.scopes.push(scope);
        } else {
          break;
        }
        if (this.breakOnScopePaths.indexOf(scope.path) >= 0) {
          break;
        }
      } while (scope = scope.parent);
    };
    PathHoister.prototype.getAttachmentPath = function getAttachmentPath() {
      var scopes = this.scopes;
      var scope = scopes.pop();
      if (!scope)
        return;
      if (scope.path.isFunction()) {
        if (this.hasOwnParamBindings(scope)) {
          if (this.scope === scope)
            return;
          return scope.path.get("body").get("body")[0];
        } else {
          return this.getNextScopeStatementParent();
        }
      } else if (scope.path.isProgram()) {
        return this.getNextScopeStatementParent();
      }
    };
    PathHoister.prototype.getNextScopeStatementParent = function getNextScopeStatementParent() {
      var scope = this.scopes.pop();
      if (scope)
        return scope.path.getStatementParent();
    };
    PathHoister.prototype.hasOwnParamBindings = function hasOwnParamBindings(scope) {
      for (var name in this.bindings) {
        if (!scope.hasOwnBinding(name))
          continue;
        var binding = this.bindings[name];
        if (binding.kind === "param")
          return true;
      }
      return false;
    };
    PathHoister.prototype.run = function run() {
      var node = this.path.node;
      if (node._hoisted)
        return;
      node._hoisted = true;
      this.path.traverse(referenceVisitor, this);
      this.getCompatibleScopes();
      var attachTo = this.getAttachmentPath();
      if (!attachTo)
        return;
      if (attachTo.getFunctionParent() === this.path.getFunctionParent())
        return;
      var uid = attachTo.scope.generateUidIdentifier("ref");
      attachTo.insertBefore([t.variableDeclaration("var", [t.variableDeclarator(uid, this.path.node)])]);
      var parent = this.path.parentPath;
      if (parent.isJSXElement() && this.path.container === parent.node.children) {
        uid = t.JSXExpressionContainer(uid);
      }
      this.path.replaceWith(uid);
    };
    return PathHoister;
  }();
  exports.default = PathHoister;
  module.exports = exports["default"];
  return module.exports;
});

System.registerDynamic("npm:babel-traverse@6.9.0/lib/path/modification.js", ["babel-runtime/helpers/typeof", "babel-runtime/core-js/get-iterator", "../cache", "./lib/hoister", "./index", "babel-types", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  var _typeof2 = $__require('babel-runtime/helpers/typeof');
  var _typeof3 = _interopRequireDefault(_typeof2);
  var _getIterator2 = $__require('babel-runtime/core-js/get-iterator');
  var _getIterator3 = _interopRequireDefault(_getIterator2);
  exports.insertBefore = insertBefore;
  exports._containerInsert = _containerInsert;
  exports._containerInsertBefore = _containerInsertBefore;
  exports._containerInsertAfter = _containerInsertAfter;
  exports._maybePopFromStatements = _maybePopFromStatements;
  exports.insertAfter = insertAfter;
  exports.updateSiblingKeys = updateSiblingKeys;
  exports._verifyNodeList = _verifyNodeList;
  exports.unshiftContainer = unshiftContainer;
  exports.pushContainer = pushContainer;
  exports.hoist = hoist;
  var _cache = $__require('../cache');
  var _hoister = $__require('./lib/hoister');
  var _hoister2 = _interopRequireDefault(_hoister);
  var _index = $__require('./index');
  var _index2 = _interopRequireDefault(_index);
  var _babelTypes = $__require('babel-types');
  var t = _interopRequireWildcard(_babelTypes);
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj.default = obj;
      return newObj;
    }
  }
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function insertBefore(nodes) {
    this._assertUnremoved();
    nodes = this._verifyNodeList(nodes);
    if (this.parentPath.isExpressionStatement() || this.parentPath.isLabeledStatement()) {
      return this.parentPath.insertBefore(nodes);
    } else if (this.isNodeType("Expression") || this.parentPath.isForStatement() && this.key === "init") {
      if (this.node)
        nodes.push(this.node);
      this.replaceExpressionWithStatements(nodes);
    } else {
      this._maybePopFromStatements(nodes);
      if (Array.isArray(this.container)) {
        return this._containerInsertBefore(nodes);
      } else if (this.isStatementOrBlock()) {
        if (this.node)
          nodes.push(this.node);
        this._replaceWith(t.blockStatement(nodes));
      } else {
        throw new Error("We don't know what to do with this node type. We were previously a Statement but we can't fit in here?");
      }
    }
    return [this];
  }
  function _containerInsert(from, nodes) {
    this.updateSiblingKeys(from, nodes.length);
    var paths = [];
    for (var i = 0; i < nodes.length; i++) {
      var to = from + i;
      var node = nodes[i];
      this.container.splice(to, 0, node);
      if (this.context) {
        var path = this.context.create(this.parent, this.container, to, this.listKey);
        if (this.context.queue)
          path.pushContext(this.context);
        paths.push(path);
      } else {
        paths.push(_index2.default.get({
          parentPath: this.parentPath,
          parent: this.parent,
          container: this.container,
          listKey: this.listKey,
          key: to
        }));
      }
    }
    var contexts = this._getQueueContexts();
    for (var _iterator = paths,
        _isArray = Array.isArray(_iterator),
        _i = 0,
        _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator); ; ) {
      var _ref;
      if (_isArray) {
        if (_i >= _iterator.length)
          break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done)
          break;
        _ref = _i.value;
      }
      var _path = _ref;
      _path.setScope();
      _path.debug(function() {
        return "Inserted.";
      });
      for (var _iterator2 = contexts,
          _isArray2 = Array.isArray(_iterator2),
          _i2 = 0,
          _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2); ; ) {
        var _ref2;
        if (_isArray2) {
          if (_i2 >= _iterator2.length)
            break;
          _ref2 = _iterator2[_i2++];
        } else {
          _i2 = _iterator2.next();
          if (_i2.done)
            break;
          _ref2 = _i2.value;
        }
        var context = _ref2;
        context.maybeQueue(_path, true);
      }
    }
    return paths;
  }
  function _containerInsertBefore(nodes) {
    return this._containerInsert(this.key, nodes);
  }
  function _containerInsertAfter(nodes) {
    return this._containerInsert(this.key + 1, nodes);
  }
  function _maybePopFromStatements(nodes) {
    var last = nodes[nodes.length - 1];
    var isIdentifier = t.isIdentifier(last) || t.isExpressionStatement(last) && t.isIdentifier(last.expression);
    if (isIdentifier && !this.isCompletionRecord()) {
      nodes.pop();
    }
  }
  function insertAfter(nodes) {
    this._assertUnremoved();
    nodes = this._verifyNodeList(nodes);
    if (this.parentPath.isExpressionStatement() || this.parentPath.isLabeledStatement()) {
      return this.parentPath.insertAfter(nodes);
    } else if (this.isNodeType("Expression") || this.parentPath.isForStatement() && this.key === "init") {
      if (this.node) {
        var temp = this.scope.generateDeclaredUidIdentifier();
        nodes.unshift(t.expressionStatement(t.assignmentExpression("=", temp, this.node)));
        nodes.push(t.expressionStatement(temp));
      }
      this.replaceExpressionWithStatements(nodes);
    } else {
      this._maybePopFromStatements(nodes);
      if (Array.isArray(this.container)) {
        return this._containerInsertAfter(nodes);
      } else if (this.isStatementOrBlock()) {
        if (this.node)
          nodes.unshift(this.node);
        this._replaceWith(t.blockStatement(nodes));
      } else {
        throw new Error("We don't know what to do with this node type. We were previously a Statement but we can't fit in here?");
      }
    }
    return [this];
  }
  function updateSiblingKeys(fromIndex, incrementBy) {
    if (!this.parent)
      return;
    var paths = _cache.path.get(this.parent);
    for (var i = 0; i < paths.length; i++) {
      var path = paths[i];
      if (path.key >= fromIndex) {
        path.key += incrementBy;
      }
    }
  }
  function _verifyNodeList(nodes) {
    if (!nodes) {
      return [];
    }
    if (nodes.constructor !== Array) {
      nodes = [nodes];
    }
    for (var i = 0; i < nodes.length; i++) {
      var node = nodes[i];
      var msg = void 0;
      if (!node) {
        msg = "has falsy node";
      } else if ((typeof node === "undefined" ? "undefined" : (0, _typeof3.default)(node)) !== "object") {
        msg = "contains a non-object node";
      } else if (!node.type) {
        msg = "without a type";
      } else if (node instanceof _index2.default) {
        msg = "has a NodePath when it expected a raw object";
      }
      if (msg) {
        var type = Array.isArray(node) ? "array" : typeof node === "undefined" ? "undefined" : (0, _typeof3.default)(node);
        throw new Error("Node list " + msg + " with the index of " + i + " and type of " + type);
      }
    }
    return nodes;
  }
  function unshiftContainer(listKey, nodes) {
    this._assertUnremoved();
    nodes = this._verifyNodeList(nodes);
    var path = _index2.default.get({
      parentPath: this,
      parent: this.node,
      container: this.node[listKey],
      listKey: listKey,
      key: 0
    });
    return path.insertBefore(nodes);
  }
  function pushContainer(listKey, nodes) {
    this._assertUnremoved();
    nodes = this._verifyNodeList(nodes);
    var container = this.node[listKey];
    var path = _index2.default.get({
      parentPath: this,
      parent: this.node,
      container: container,
      listKey: listKey,
      key: container.length
    });
    return path.replaceWithMultiple(nodes);
  }
  function hoist() {
    var scope = arguments.length <= 0 || arguments[0] === undefined ? this.scope : arguments[0];
    var hoister = new _hoister2.default(this, scope);
    return hoister.run();
  }
  return module.exports;
});

System.registerDynamic("npm:babel-traverse@6.9.0/lib/path/family.js", ["babel-runtime/core-js/get-iterator", "./index", "babel-types", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  var _getIterator2 = $__require('babel-runtime/core-js/get-iterator');
  var _getIterator3 = _interopRequireDefault(_getIterator2);
  exports.getStatementParent = getStatementParent;
  exports.getOpposite = getOpposite;
  exports.getCompletionRecords = getCompletionRecords;
  exports.getSibling = getSibling;
  exports.get = get;
  exports._getKey = _getKey;
  exports._getPattern = _getPattern;
  exports.getBindingIdentifiers = getBindingIdentifiers;
  exports.getOuterBindingIdentifiers = getOuterBindingIdentifiers;
  var _index = $__require('./index');
  var _index2 = _interopRequireDefault(_index);
  var _babelTypes = $__require('babel-types');
  var t = _interopRequireWildcard(_babelTypes);
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj.default = obj;
      return newObj;
    }
  }
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function getStatementParent() {
    var path = this;
    do {
      if (!path.parentPath || Array.isArray(path.container) && path.isStatement()) {
        break;
      } else {
        path = path.parentPath;
      }
    } while (path);
    if (path && (path.isProgram() || path.isFile())) {
      throw new Error("File/Program node, we can't possibly find a statement parent to this");
    }
    return path;
  }
  function getOpposite() {
    if (this.key === "left") {
      return this.getSibling("right");
    } else if (this.key === "right") {
      return this.getSibling("left");
    }
  }
  function getCompletionRecords() {
    var paths = [];
    var add = function add(path) {
      if (path)
        paths = paths.concat(path.getCompletionRecords());
    };
    if (this.isIfStatement()) {
      add(this.get("consequent"));
      add(this.get("alternate"));
    } else if (this.isDoExpression() || this.isFor() || this.isWhile()) {
      add(this.get("body"));
    } else if (this.isProgram() || this.isBlockStatement()) {
      add(this.get("body").pop());
    } else if (this.isFunction()) {
      return this.get("body").getCompletionRecords();
    } else if (this.isTryStatement()) {
      add(this.get("block"));
      add(this.get("handler"));
      add(this.get("finalizer"));
    } else {
      paths.push(this);
    }
    return paths;
  }
  function getSibling(key) {
    return (_index2.default.get({
      parentPath: this.parentPath,
      parent: this.parent,
      container: this.container,
      listKey: this.listKey,
      key: key
    }));
  }
  function get(key, context) {
    if (context === true)
      context = this.context;
    var parts = key.split(".");
    if (parts.length === 1) {
      return this._getKey(key, context);
    } else {
      return this._getPattern(parts, context);
    }
  }
  function _getKey(key, context) {
    var _this = this;
    var node = this.node;
    var container = node[key];
    if (Array.isArray(container)) {
      return container.map(function(_, i) {
        return (_index2.default.get({
          listKey: key,
          parentPath: _this,
          parent: node,
          container: container,
          key: i
        }).setContext(context));
      });
    } else {
      return (_index2.default.get({
        parentPath: this,
        parent: node,
        container: node,
        key: key
      }).setContext(context));
    }
  }
  function _getPattern(parts, context) {
    var path = this;
    for (var _iterator = parts,
        _isArray = Array.isArray(_iterator),
        _i = 0,
        _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator); ; ) {
      var _ref;
      if (_isArray) {
        if (_i >= _iterator.length)
          break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done)
          break;
        _ref = _i.value;
      }
      var part = _ref;
      if (part === ".") {
        path = path.parentPath;
      } else {
        if (Array.isArray(path)) {
          path = path[part];
        } else {
          path = path.get(part, context);
        }
      }
    }
    return path;
  }
  function getBindingIdentifiers(duplicates) {
    return t.getBindingIdentifiers(this.node, duplicates);
  }
  function getOuterBindingIdentifiers(duplicates) {
    return t.getOuterBindingIdentifiers(this.node, duplicates);
  }
  return module.exports;
});

System.registerDynamic("npm:babel-traverse@6.9.0/lib/path/comments.js", ["process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  exports.shareCommentsWithSiblings = shareCommentsWithSiblings;
  exports.addComment = addComment;
  exports.addComments = addComments;
  function shareCommentsWithSiblings() {
    var node = this.node;
    if (!node)
      return;
    var trailing = node.trailingComments;
    var leading = node.leadingComments;
    if (!trailing && !leading)
      return;
    var prev = this.getSibling(this.key - 1);
    var next = this.getSibling(this.key + 1);
    if (!prev.node)
      prev = next;
    if (!next.node)
      next = prev;
    prev.addComments("trailing", leading);
    next.addComments("leading", trailing);
  }
  function addComment(type, content, line) {
    this.addComments(type, [{
      type: line ? "CommentLine" : "CommentBlock",
      value: content
    }]);
  }
  function addComments(type, comments) {
    if (!comments)
      return;
    var node = this.node;
    if (!node)
      return;
    var key = type + "Comments";
    if (node[key]) {
      node[key] = node[key].concat(comments);
    } else {
      node[key] = comments;
    }
  }
  return module.exports;
});

System.registerDynamic("npm:babel-traverse@6.9.0/lib/path/index.js", ["babel-runtime/core-js/get-iterator", "babel-runtime/helpers/classCallCheck", "./lib/virtual-types", "debug", "invariant", "../index", "lodash/assign", "../scope", "babel-types", "../cache", "./ancestry", "./inference", "./replacement", "./evaluation", "./conversion", "./introspection", "./context", "./removal", "./modification", "./family", "./comments", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  var _getIterator2 = $__require('babel-runtime/core-js/get-iterator');
  var _getIterator3 = _interopRequireDefault(_getIterator2);
  var _classCallCheck2 = $__require('babel-runtime/helpers/classCallCheck');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _virtualTypes = $__require('./lib/virtual-types');
  var virtualTypes = _interopRequireWildcard(_virtualTypes);
  var _debug2 = $__require('debug');
  var _debug3 = _interopRequireDefault(_debug2);
  var _invariant = $__require('invariant');
  var _invariant2 = _interopRequireDefault(_invariant);
  var _index = $__require('../index');
  var _index2 = _interopRequireDefault(_index);
  var _assign = $__require('lodash/assign');
  var _assign2 = _interopRequireDefault(_assign);
  var _scope = $__require('../scope');
  var _scope2 = _interopRequireDefault(_scope);
  var _babelTypes = $__require('babel-types');
  var t = _interopRequireWildcard(_babelTypes);
  var _cache = $__require('../cache');
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj.default = obj;
      return newObj;
    }
  }
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  var _debug = (0, _debug3.default)("babel");
  var NodePath = function() {
    function NodePath(hub, parent) {
      (0, _classCallCheck3.default)(this, NodePath);
      this.parent = parent;
      this.hub = hub;
      this.contexts = [];
      this.data = {};
      this.shouldSkip = false;
      this.shouldStop = false;
      this.removed = false;
      this.state = null;
      this.opts = null;
      this.skipKeys = null;
      this.parentPath = null;
      this.context = null;
      this.container = null;
      this.listKey = null;
      this.inList = false;
      this.parentKey = null;
      this.key = null;
      this.node = null;
      this.scope = null;
      this.type = null;
      this.typeAnnotation = null;
    }
    NodePath.get = function get(_ref) {
      var hub = _ref.hub;
      var parentPath = _ref.parentPath;
      var parent = _ref.parent;
      var container = _ref.container;
      var listKey = _ref.listKey;
      var key = _ref.key;
      if (!hub && parentPath) {
        hub = parentPath.hub;
      }
      (0, _invariant2.default)(parent, "To get a node path the parent needs to exist");
      var targetNode = container[key];
      var paths = _cache.path.get(parent) || [];
      if (!_cache.path.has(parent)) {
        _cache.path.set(parent, paths);
      }
      var path = void 0;
      for (var i = 0; i < paths.length; i++) {
        var pathCheck = paths[i];
        if (pathCheck.node === targetNode) {
          path = pathCheck;
          break;
        }
      }
      if (!path) {
        path = new NodePath(hub, parent);
        paths.push(path);
      }
      path.setup(parentPath, container, listKey, key);
      return path;
    };
    NodePath.prototype.getScope = function getScope(scope) {
      var ourScope = scope;
      if (this.isScope()) {
        ourScope = new _scope2.default(this, scope);
      }
      return ourScope;
    };
    NodePath.prototype.setData = function setData(key, val) {
      return this.data[key] = val;
    };
    NodePath.prototype.getData = function getData(key, def) {
      var val = this.data[key];
      if (!val && def)
        val = this.data[key] = def;
      return val;
    };
    NodePath.prototype.buildCodeFrameError = function buildCodeFrameError(msg) {
      var Error = arguments.length <= 1 || arguments[1] === undefined ? SyntaxError : arguments[1];
      return this.hub.file.buildCodeFrameError(this.node, msg, Error);
    };
    NodePath.prototype.traverse = function traverse(visitor, state) {
      (0, _index2.default)(this.node, visitor, this.scope, state, this);
    };
    NodePath.prototype.mark = function mark(type, message) {
      this.hub.file.metadata.marked.push({
        type: type,
        message: message,
        loc: this.node.loc
      });
    };
    NodePath.prototype.set = function set(key, node) {
      t.validate(this.node, key, node);
      this.node[key] = node;
    };
    NodePath.prototype.getPathLocation = function getPathLocation() {
      var parts = [];
      var path = this;
      do {
        var key = path.key;
        if (path.inList)
          key = path.listKey + "[" + key + "]";
        parts.unshift(key);
      } while (path = path.parentPath);
      return parts.join(".");
    };
    NodePath.prototype.debug = function debug(buildMessage) {
      if (!_debug.enabled)
        return;
      _debug(this.getPathLocation() + " " + this.type + ": " + buildMessage());
    };
    return NodePath;
  }();
  exports.default = NodePath;
  (0, _assign2.default)(NodePath.prototype, $__require('./ancestry'));
  (0, _assign2.default)(NodePath.prototype, $__require('./inference'));
  (0, _assign2.default)(NodePath.prototype, $__require('./replacement'));
  (0, _assign2.default)(NodePath.prototype, $__require('./evaluation'));
  (0, _assign2.default)(NodePath.prototype, $__require('./conversion'));
  (0, _assign2.default)(NodePath.prototype, $__require('./introspection'));
  (0, _assign2.default)(NodePath.prototype, $__require('./context'));
  (0, _assign2.default)(NodePath.prototype, $__require('./removal'));
  (0, _assign2.default)(NodePath.prototype, $__require('./modification'));
  (0, _assign2.default)(NodePath.prototype, $__require('./family'));
  (0, _assign2.default)(NodePath.prototype, $__require('./comments'));
  var _loop2 = function _loop2() {
    if (_isArray) {
      if (_i >= _iterator.length)
        return "break";
      _ref2 = _iterator[_i++];
    } else {
      _i = _iterator.next();
      if (_i.done)
        return "break";
      _ref2 = _i.value;
    }
    var type = _ref2;
    var typeKey = "is" + type;
    NodePath.prototype[typeKey] = function(opts) {
      return t[typeKey](this.node, opts);
    };
    NodePath.prototype["assert" + type] = function(opts) {
      if (!this[typeKey](opts)) {
        throw new TypeError("Expected node path of type " + type);
      }
    };
  };
  for (var _iterator = t.TYPES,
      _isArray = Array.isArray(_iterator),
      _i = 0,
      _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator); ; ) {
    var _ref2;
    var _ret2 = _loop2();
    if (_ret2 === "break")
      break;
  }
  var _loop = function _loop(type) {
    if (type[0] === "_")
      return ("continue");
    if (t.TYPES.indexOf(type) < 0)
      t.TYPES.push(type);
    var virtualType = virtualTypes[type];
    NodePath.prototype["is" + type] = function(opts) {
      return virtualType.checkPath(this, opts);
    };
  };
  for (var type in virtualTypes) {
    var _ret = _loop(type);
    if (_ret === "continue")
      continue;
  }
  module.exports = exports["default"];
  return module.exports;
});

System.registerDynamic("npm:babel-traverse@6.9.0/lib/context.js", ["babel-runtime/core-js/get-iterator", "babel-runtime/helpers/classCallCheck", "./path", "babel-types", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  var _getIterator2 = $__require('babel-runtime/core-js/get-iterator');
  var _getIterator3 = _interopRequireDefault(_getIterator2);
  var _classCallCheck2 = $__require('babel-runtime/helpers/classCallCheck');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _path2 = $__require('./path');
  var _path3 = _interopRequireDefault(_path2);
  var _babelTypes = $__require('babel-types');
  var t = _interopRequireWildcard(_babelTypes);
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj.default = obj;
      return newObj;
    }
  }
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  var testing = "production" === "test";
  var TraversalContext = function() {
    function TraversalContext(scope, opts, state, parentPath) {
      (0, _classCallCheck3.default)(this, TraversalContext);
      this.queue = null;
      this.parentPath = parentPath;
      this.scope = scope;
      this.state = state;
      this.opts = opts;
    }
    TraversalContext.prototype.shouldVisit = function shouldVisit(node) {
      var opts = this.opts;
      if (opts.enter || opts.exit)
        return true;
      if (opts[node.type])
        return true;
      var keys = t.VISITOR_KEYS[node.type];
      if (!keys || !keys.length)
        return false;
      for (var _iterator = keys,
          _isArray = Array.isArray(_iterator),
          _i = 0,
          _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator); ; ) {
        var _ref;
        if (_isArray) {
          if (_i >= _iterator.length)
            break;
          _ref = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done)
            break;
          _ref = _i.value;
        }
        var key = _ref;
        if (node[key])
          return true;
      }
      return false;
    };
    TraversalContext.prototype.create = function create(node, obj, key, listKey) {
      return (_path3.default.get({
        parentPath: this.parentPath,
        parent: node,
        container: obj,
        key: key,
        listKey: listKey
      }));
    };
    TraversalContext.prototype.maybeQueue = function maybeQueue(path, notPriority) {
      if (this.trap) {
        throw new Error("Infinite cycle detected");
      }
      if (this.queue) {
        if (notPriority) {
          this.queue.push(path);
        } else {
          this.priorityQueue.push(path);
        }
      }
    };
    TraversalContext.prototype.visitMultiple = function visitMultiple(container, parent, listKey) {
      if (container.length === 0)
        return false;
      var queue = [];
      for (var key = 0; key < container.length; key++) {
        var node = container[key];
        if (node && this.shouldVisit(node)) {
          queue.push(this.create(parent, container, key, listKey));
        }
      }
      return this.visitQueue(queue);
    };
    TraversalContext.prototype.visitSingle = function visitSingle(node, key) {
      if (this.shouldVisit(node[key])) {
        return this.visitQueue([this.create(node, node, key)]);
      } else {
        return false;
      }
    };
    TraversalContext.prototype.visitQueue = function visitQueue(queue) {
      this.queue = queue;
      this.priorityQueue = [];
      var visited = [];
      var stop = false;
      for (var _iterator2 = queue,
          _isArray2 = Array.isArray(_iterator2),
          _i2 = 0,
          _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2); ; ) {
        var _ref2;
        if (_isArray2) {
          if (_i2 >= _iterator2.length)
            break;
          _ref2 = _iterator2[_i2++];
        } else {
          _i2 = _iterator2.next();
          if (_i2.done)
            break;
          _ref2 = _i2.value;
        }
        var path = _ref2;
        path.resync();
        if (path.contexts.length === 0 || path.contexts[path.contexts.length - 1] !== this) {
          path.pushContext(this);
        }
        if (path.key === null)
          continue;
        if (testing && queue.length >= 1000) {
          this.trap = true;
        }
        if (visited.indexOf(path.node) >= 0)
          continue;
        visited.push(path.node);
        if (path.visit()) {
          stop = true;
          break;
        }
        if (this.priorityQueue.length) {
          stop = this.visitQueue(this.priorityQueue);
          this.priorityQueue = [];
          this.queue = queue;
          if (stop)
            break;
        }
      }
      for (var _iterator3 = queue,
          _isArray3 = Array.isArray(_iterator3),
          _i3 = 0,
          _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3); ; ) {
        var _ref3;
        if (_isArray3) {
          if (_i3 >= _iterator3.length)
            break;
          _ref3 = _iterator3[_i3++];
        } else {
          _i3 = _iterator3.next();
          if (_i3.done)
            break;
          _ref3 = _i3.value;
        }
        var _path = _ref3;
        _path.popContext();
      }
      this.queue = null;
      return stop;
    };
    TraversalContext.prototype.visit = function visit(node, key) {
      var nodes = node[key];
      if (!nodes)
        return false;
      if (Array.isArray(nodes)) {
        return this.visitMultiple(nodes, node, key);
      } else {
        return this.visitSingle(node, key);
      }
    };
    return TraversalContext;
  }();
  exports.default = TraversalContext;
  module.exports = exports["default"];
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/fn/symbol/iterator.js", ["../../modules/es6.string.iterator", "../../modules/web.dom.iterable", "../../modules/_wks-ext", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  $__require('../../modules/es6.string.iterator');
  $__require('../../modules/web.dom.iterable');
  module.exports = $__require('../../modules/_wks-ext').f('iterator');
  return module.exports;
});

System.registerDynamic("npm:babel-runtime@6.9.2/core-js/symbol/iterator.js", ["core-js/library/fn/symbol/iterator"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  module.exports = {
    "default": $__require('core-js/library/fn/symbol/iterator'),
    __esModule: true
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_keyof.js", ["./_object-keys", "./_to-iobject", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var getKeys = $__require('./_object-keys'),
      toIObject = $__require('./_to-iobject');
  module.exports = function(object, el) {
    var O = toIObject(object),
        keys = getKeys(O),
        length = keys.length,
        index = 0,
        key;
    while (length > index)
      if (O[key = keys[index++]] === el)
        return key;
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_enum-keys.js", ["./_object-keys", "./_object-gops", "./_object-pie", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var getKeys = $__require('./_object-keys'),
      gOPS = $__require('./_object-gops'),
      pIE = $__require('./_object-pie');
  module.exports = function(it) {
    var result = getKeys(it),
        getSymbols = gOPS.f;
    if (getSymbols) {
      var symbols = getSymbols(it),
          isEnum = pIE.f,
          i = 0,
          key;
      while (symbols.length > i)
        if (isEnum.call(it, key = symbols[i++]))
          result.push(key);
    }
    return result;
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_object-gopn-ext.js", ["./_to-iobject", "./_object-gopn", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var toIObject = $__require('./_to-iobject'),
      gOPN = $__require('./_object-gopn').f,
      toString = {}.toString;
  var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
  var getWindowNames = function(it) {
    try {
      return gOPN(it);
    } catch (e) {
      return windowNames.slice();
    }
  };
  module.exports.f = function getOwnPropertyNames(it) {
    return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_object-gopd.js", ["./_object-pie", "./_property-desc", "./_to-iobject", "./_to-primitive", "./_has", "./_ie8-dom-define", "./_descriptors", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var pIE = $__require('./_object-pie'),
      createDesc = $__require('./_property-desc'),
      toIObject = $__require('./_to-iobject'),
      toPrimitive = $__require('./_to-primitive'),
      has = $__require('./_has'),
      IE8_DOM_DEFINE = $__require('./_ie8-dom-define'),
      gOPD = Object.getOwnPropertyDescriptor;
  exports.f = $__require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {
    O = toIObject(O);
    P = toPrimitive(P, true);
    if (IE8_DOM_DEFINE)
      try {
        return gOPD(O, P);
      } catch (e) {}
    if (has(O, P))
      return createDesc(!pIE.f.call(O, P), O[P]);
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_object-gopn.js", ["./_object-keys-internal", "./_enum-bug-keys", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var $keys = $__require('./_object-keys-internal'),
      hiddenKeys = $__require('./_enum-bug-keys').concat('length', 'prototype');
  exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
    return $keys(O, hiddenKeys);
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/es6.symbol.js", ["./_global", "./_has", "./_descriptors", "./_export", "./_redefine", "./_meta", "./_fails", "./_shared", "./_set-to-string-tag", "./_uid", "./_wks", "./_wks-ext", "./_wks-define", "./_keyof", "./_enum-keys", "./_is-array", "./_an-object", "./_to-iobject", "./_to-primitive", "./_property-desc", "./_object-create", "./_object-gopn-ext", "./_object-gopd", "./_object-dp", "./_object-keys", "./_object-gopn", "./_object-pie", "./_object-gops", "./_library", "./_hide", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var global = $__require('./_global'),
      has = $__require('./_has'),
      DESCRIPTORS = $__require('./_descriptors'),
      $export = $__require('./_export'),
      redefine = $__require('./_redefine'),
      META = $__require('./_meta').KEY,
      $fails = $__require('./_fails'),
      shared = $__require('./_shared'),
      setToStringTag = $__require('./_set-to-string-tag'),
      uid = $__require('./_uid'),
      wks = $__require('./_wks'),
      wksExt = $__require('./_wks-ext'),
      wksDefine = $__require('./_wks-define'),
      keyOf = $__require('./_keyof'),
      enumKeys = $__require('./_enum-keys'),
      isArray = $__require('./_is-array'),
      anObject = $__require('./_an-object'),
      toIObject = $__require('./_to-iobject'),
      toPrimitive = $__require('./_to-primitive'),
      createDesc = $__require('./_property-desc'),
      _create = $__require('./_object-create'),
      gOPNExt = $__require('./_object-gopn-ext'),
      $GOPD = $__require('./_object-gopd'),
      $DP = $__require('./_object-dp'),
      $keys = $__require('./_object-keys'),
      gOPD = $GOPD.f,
      dP = $DP.f,
      gOPN = gOPNExt.f,
      $Symbol = global.Symbol,
      $JSON = global.JSON,
      _stringify = $JSON && $JSON.stringify,
      PROTOTYPE = 'prototype',
      HIDDEN = wks('_hidden'),
      TO_PRIMITIVE = wks('toPrimitive'),
      isEnum = {}.propertyIsEnumerable,
      SymbolRegistry = shared('symbol-registry'),
      AllSymbols = shared('symbols'),
      OPSymbols = shared('op-symbols'),
      ObjectProto = Object[PROTOTYPE],
      USE_NATIVE = typeof $Symbol == 'function',
      QObject = global.QObject;
  var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;
  var setSymbolDesc = DESCRIPTORS && $fails(function() {
    return _create(dP({}, 'a', {get: function() {
        return dP(this, 'a', {value: 7}).a;
      }})).a != 7;
  }) ? function(it, key, D) {
    var protoDesc = gOPD(ObjectProto, key);
    if (protoDesc)
      delete ObjectProto[key];
    dP(it, key, D);
    if (protoDesc && it !== ObjectProto)
      dP(ObjectProto, key, protoDesc);
  } : dP;
  var wrap = function(tag) {
    var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
    sym._k = tag;
    return sym;
  };
  var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function(it) {
    return typeof it == 'symbol';
  } : function(it) {
    return it instanceof $Symbol;
  };
  var $defineProperty = function defineProperty(it, key, D) {
    if (it === ObjectProto)
      $defineProperty(OPSymbols, key, D);
    anObject(it);
    key = toPrimitive(key, true);
    anObject(D);
    if (has(AllSymbols, key)) {
      if (!D.enumerable) {
        if (!has(it, HIDDEN))
          dP(it, HIDDEN, createDesc(1, {}));
        it[HIDDEN][key] = true;
      } else {
        if (has(it, HIDDEN) && it[HIDDEN][key])
          it[HIDDEN][key] = false;
        D = _create(D, {enumerable: createDesc(0, false)});
      }
      return setSymbolDesc(it, key, D);
    }
    return dP(it, key, D);
  };
  var $defineProperties = function defineProperties(it, P) {
    anObject(it);
    var keys = enumKeys(P = toIObject(P)),
        i = 0,
        l = keys.length,
        key;
    while (l > i)
      $defineProperty(it, key = keys[i++], P[key]);
    return it;
  };
  var $create = function create(it, P) {
    return P === undefined ? _create(it) : $defineProperties(_create(it), P);
  };
  var $propertyIsEnumerable = function propertyIsEnumerable(key) {
    var E = isEnum.call(this, key = toPrimitive(key, true));
    if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))
      return false;
    return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
  };
  var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
    it = toIObject(it);
    key = toPrimitive(key, true);
    if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))
      return;
    var D = gOPD(it, key);
    if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]))
      D.enumerable = true;
    return D;
  };
  var $getOwnPropertyNames = function getOwnPropertyNames(it) {
    var names = gOPN(toIObject(it)),
        result = [],
        i = 0,
        key;
    while (names.length > i) {
      if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META)
        result.push(key);
    }
    return result;
  };
  var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
    var IS_OP = it === ObjectProto,
        names = gOPN(IS_OP ? OPSymbols : toIObject(it)),
        result = [],
        i = 0,
        key;
    while (names.length > i) {
      if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true))
        result.push(AllSymbols[key]);
    }
    return result;
  };
  if (!USE_NATIVE) {
    $Symbol = function Symbol() {
      if (this instanceof $Symbol)
        throw TypeError('Symbol is not a constructor!');
      var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
      var $set = function(value) {
        if (this === ObjectProto)
          $set.call(OPSymbols, value);
        if (has(this, HIDDEN) && has(this[HIDDEN], tag))
          this[HIDDEN][tag] = false;
        setSymbolDesc(this, tag, createDesc(1, value));
      };
      if (DESCRIPTORS && setter)
        setSymbolDesc(ObjectProto, tag, {
          configurable: true,
          set: $set
        });
      return wrap(tag);
    };
    redefine($Symbol[PROTOTYPE], 'toString', function toString() {
      return this._k;
    });
    $GOPD.f = $getOwnPropertyDescriptor;
    $DP.f = $defineProperty;
    $__require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;
    $__require('./_object-pie').f = $propertyIsEnumerable;
    $__require('./_object-gops').f = $getOwnPropertySymbols;
    if (DESCRIPTORS && !$__require('./_library')) {
      redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
    }
    wksExt.f = function(name) {
      return wrap(wks(name));
    };
  }
  $export($export.G + $export.W + $export.F * !USE_NATIVE, {Symbol: $Symbol});
  for (var symbols = ('hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables').split(','),
      i = 0; symbols.length > i; )
    wks(symbols[i++]);
  for (var symbols = $keys(wks.store),
      i = 0; symbols.length > i; )
    wksDefine(symbols[i++]);
  $export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
    'for': function(key) {
      return has(SymbolRegistry, key += '') ? SymbolRegistry[key] : SymbolRegistry[key] = $Symbol(key);
    },
    keyFor: function keyFor(key) {
      if (isSymbol(key))
        return keyOf(SymbolRegistry, key);
      throw TypeError(key + ' is not a symbol!');
    },
    useSetter: function() {
      setter = true;
    },
    useSimple: function() {
      setter = false;
    }
  });
  $export($export.S + $export.F * !USE_NATIVE, 'Object', {
    create: $create,
    defineProperty: $defineProperty,
    defineProperties: $defineProperties,
    getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
    getOwnPropertyNames: $getOwnPropertyNames,
    getOwnPropertySymbols: $getOwnPropertySymbols
  });
  $JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function() {
    var S = $Symbol();
    return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';
  })), 'JSON', {stringify: function stringify(it) {
      if (it === undefined || isSymbol(it))
        return;
      var args = [it],
          i = 1,
          replacer,
          $replacer;
      while (arguments.length > i)
        args.push(arguments[i++]);
      replacer = args[1];
      if (typeof replacer == 'function')
        $replacer = replacer;
      if ($replacer || !isArray(replacer))
        replacer = function(key, value) {
          if ($replacer)
            value = $replacer.call(this, key, value);
          if (!isSymbol(value))
            return value;
        };
      args[1] = replacer;
      return _stringify.apply($JSON, args);
    }});
  $Symbol[PROTOTYPE][TO_PRIMITIVE] || $__require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
  setToStringTag($Symbol, 'Symbol');
  setToStringTag(Math, 'Math', true);
  setToStringTag(global.JSON, 'JSON', true);
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/es7.symbol.async-iterator.js", ["./_wks-define", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  $__require('./_wks-define')('asyncIterator');
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_wks-ext.js", ["./_wks", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  exports.f = $__require('./_wks');
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_wks-define.js", ["./_global", "./_core", "./_library", "./_wks-ext", "./_object-dp", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var global = $__require('./_global'),
      core = $__require('./_core'),
      LIBRARY = $__require('./_library'),
      wksExt = $__require('./_wks-ext'),
      defineProperty = $__require('./_object-dp').f;
  module.exports = function(name) {
    var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
    if (name.charAt(0) != '_' && !(name in $Symbol))
      defineProperty($Symbol, name, {value: wksExt.f(name)});
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/es7.symbol.observable.js", ["./_wks-define", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  $__require('./_wks-define')('observable');
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/fn/symbol/index.js", ["../../modules/es6.symbol", "../../modules/es6.object.to-string", "../../modules/es7.symbol.async-iterator", "../../modules/es7.symbol.observable", "../../modules/_core", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  $__require('../../modules/es6.symbol');
  $__require('../../modules/es6.object.to-string');
  $__require('../../modules/es7.symbol.async-iterator');
  $__require('../../modules/es7.symbol.observable');
  module.exports = $__require('../../modules/_core').Symbol;
  return module.exports;
});

System.registerDynamic("npm:babel-runtime@6.9.2/core-js/symbol.js", ["core-js/library/fn/symbol"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  module.exports = {
    "default": $__require('core-js/library/fn/symbol'),
    __esModule: true
  };
  return module.exports;
});

System.registerDynamic("npm:babel-runtime@6.9.2/helpers/typeof.js", ["../core-js/symbol/iterator", "../core-js/symbol"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  var _iterator = $__require('../core-js/symbol/iterator');
  var _iterator2 = _interopRequireDefault(_iterator);
  var _symbol = $__require('../core-js/symbol');
  var _symbol2 = _interopRequireDefault(_symbol);
  var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function(obj) {
    return typeof obj;
  } : function(obj) {
    return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default ? "symbol" : typeof obj;
  };
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function(obj) {
    return typeof obj === "undefined" ? "undefined" : _typeof(obj);
  } : function(obj) {
    return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_object-sap.js", ["./_export", "./_core", "./_fails", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var $export = $__require('./_export'),
      core = $__require('./_core'),
      fails = $__require('./_fails');
  module.exports = function(KEY, exec) {
    var fn = (core.Object || {})[KEY] || Object[KEY],
        exp = {};
    exp[KEY] = exec(fn);
    $export($export.S + $export.F * fails(function() {
      fn(1);
    }), 'Object', exp);
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/es6.object.keys.js", ["./_to-object", "./_object-keys", "./_object-sap", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var toObject = $__require('./_to-object'),
      $keys = $__require('./_object-keys');
  $__require('./_object-sap')('keys', function() {
    return function keys(it) {
      return $keys(toObject(it));
    };
  });
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/fn/object/keys.js", ["../../modules/es6.object.keys", "../../modules/_core", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  $__require('../../modules/es6.object.keys');
  module.exports = $__require('../../modules/_core').Object.keys;
  return module.exports;
});

System.registerDynamic("npm:babel-runtime@6.9.2/core-js/object/keys.js", ["core-js/library/fn/object/keys"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  module.exports = {
    "default": $__require('core-js/library/fn/object/keys'),
    __esModule: true
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_string-at.js", ["./_to-integer", "./_defined", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var toInteger = $__require('./_to-integer'),
      defined = $__require('./_defined');
  module.exports = function(TO_STRING) {
    return function(that, pos) {
      var s = String(defined(that)),
          i = toInteger(pos),
          l = s.length,
          a,
          b;
      if (i < 0 || i >= l)
        return TO_STRING ? '' : undefined;
      a = s.charCodeAt(i);
      return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
    };
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/es6.string.iterator.js", ["./_string-at", "./_iter-define", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var $at = $__require('./_string-at')(true);
  $__require('./_iter-define')(String, 'String', function(iterated) {
    this._t = String(iterated);
    this._i = 0;
  }, function() {
    var O = this._t,
        index = this._i,
        point;
    if (index >= O.length)
      return {
        value: undefined,
        done: true
      };
    point = $at(O, index);
    this._i += point.length;
    return {
      value: point,
      done: false
    };
  });
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/core.get-iterator.js", ["./_an-object", "./core.get-iterator-method", "./_core", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var anObject = $__require('./_an-object'),
      get = $__require('./core.get-iterator-method');
  module.exports = $__require('./_core').getIterator = function(it) {
    var iterFn = get(it);
    if (typeof iterFn != 'function')
      throw TypeError(it + ' is not iterable!');
    return anObject(iterFn.call(it));
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/fn/get-iterator.js", ["../modules/web.dom.iterable", "../modules/es6.string.iterator", "../modules/core.get-iterator", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  $__require('../modules/web.dom.iterable');
  $__require('../modules/es6.string.iterator');
  module.exports = $__require('../modules/core.get-iterator');
  return module.exports;
});

System.registerDynamic("npm:babel-runtime@6.9.2/core-js/get-iterator.js", ["core-js/library/fn/get-iterator"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  module.exports = {
    "default": $__require('core-js/library/fn/get-iterator'),
    __esModule: true
  };
  return module.exports;
});

System.registerDynamic("npm:babel-traverse@6.9.0/lib/path/lib/virtual-types.js", ["babel-types", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  exports.Flow = exports.Pure = exports.Generated = exports.User = exports.Var = exports.BlockScoped = exports.Referenced = exports.Scope = exports.Expression = exports.Statement = exports.BindingIdentifier = exports.ReferencedMemberExpression = exports.ReferencedIdentifier = undefined;
  var _babelTypes = $__require('babel-types');
  var t = _interopRequireWildcard(_babelTypes);
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj.default = obj;
      return newObj;
    }
  }
  var ReferencedIdentifier = exports.ReferencedIdentifier = {
    types: ["Identifier", "JSXIdentifier"],
    checkPath: function checkPath(_ref, opts) {
      var node = _ref.node;
      var parent = _ref.parent;
      if (!t.isIdentifier(node, opts)) {
        if (t.isJSXIdentifier(node, opts)) {
          if (_babelTypes.react.isCompatTag(node.name))
            return false;
        } else {
          return false;
        }
      }
      return t.isReferenced(node, parent);
    }
  };
  var ReferencedMemberExpression = exports.ReferencedMemberExpression = {
    types: ["MemberExpression"],
    checkPath: function checkPath(_ref2) {
      var node = _ref2.node;
      var parent = _ref2.parent;
      return t.isMemberExpression(node) && t.isReferenced(node, parent);
    }
  };
  var BindingIdentifier = exports.BindingIdentifier = {
    types: ["Identifier"],
    checkPath: function checkPath(_ref3) {
      var node = _ref3.node;
      var parent = _ref3.parent;
      return t.isIdentifier(node) && t.isBinding(node, parent);
    }
  };
  var Statement = exports.Statement = {
    types: ["Statement"],
    checkPath: function checkPath(_ref4) {
      var node = _ref4.node;
      var parent = _ref4.parent;
      if (t.isStatement(node)) {
        if (t.isVariableDeclaration(node)) {
          if (t.isForXStatement(parent, {left: node}))
            return false;
          if (t.isForStatement(parent, {init: node}))
            return false;
        }
        return true;
      } else {
        return false;
      }
    }
  };
  var Expression = exports.Expression = {
    types: ["Expression"],
    checkPath: function checkPath(path) {
      if (path.isIdentifier()) {
        return path.isReferencedIdentifier();
      } else {
        return t.isExpression(path.node);
      }
    }
  };
  var Scope = exports.Scope = {
    types: ["Scopable"],
    checkPath: function checkPath(path) {
      return t.isScope(path.node, path.parent);
    }
  };
  var Referenced = exports.Referenced = {checkPath: function checkPath(path) {
      return t.isReferenced(path.node, path.parent);
    }};
  var BlockScoped = exports.BlockScoped = {checkPath: function checkPath(path) {
      return t.isBlockScoped(path.node);
    }};
  var Var = exports.Var = {
    types: ["VariableDeclaration"],
    checkPath: function checkPath(path) {
      return t.isVar(path.node);
    }
  };
  var User = exports.User = {checkPath: function checkPath(path) {
      return path.node && !!path.node.loc;
    }};
  var Generated = exports.Generated = {checkPath: function checkPath(path) {
      return !path.isUser();
    }};
  var Pure = exports.Pure = {checkPath: function checkPath(path, opts) {
      return path.scope.isPure(path.node, opts);
    }};
  var Flow = exports.Flow = {
    types: ["Flow", "ImportDeclaration", "ExportDeclaration"],
    checkPath: function checkPath(_ref5) {
      var node = _ref5.node;
      if (t.isFlow(node)) {
        return true;
      } else if (t.isImportDeclaration(node)) {
        return node.importKind === "type" || node.importKind === "typeof";
      } else if (t.isExportDeclaration(node)) {
        return node.exportKind === "type";
      } else {
        return false;
      }
    }
  };
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_stackClear.js", ["./_ListCache"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var ListCache = $__require('./_ListCache');
  function stackClear() {
    this.__data__ = new ListCache;
  }
  module.exports = stackClear;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_stackDelete.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  function stackDelete(key) {
    return this.__data__['delete'](key);
  }
  module.exports = stackDelete;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_stackGet.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  function stackGet(key) {
    return this.__data__.get(key);
  }
  module.exports = stackGet;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_stackHas.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  function stackHas(key) {
    return this.__data__.has(key);
  }
  module.exports = stackHas;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_hashClear.js", ["./_nativeCreate"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var nativeCreate = $__require('./_nativeCreate');
  function hashClear() {
    this.__data__ = nativeCreate ? nativeCreate(null) : {};
  }
  module.exports = hashClear;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_hashDelete.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  function hashDelete(key) {
    return this.has(key) && delete this.__data__[key];
  }
  module.exports = hashDelete;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_hashGet.js", ["./_nativeCreate"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var nativeCreate = $__require('./_nativeCreate');
  var HASH_UNDEFINED = '__lodash_hash_undefined__';
  var objectProto = Object.prototype;
  var hasOwnProperty = objectProto.hasOwnProperty;
  function hashGet(key) {
    var data = this.__data__;
    if (nativeCreate) {
      var result = data[key];
      return result === HASH_UNDEFINED ? undefined : result;
    }
    return hasOwnProperty.call(data, key) ? data[key] : undefined;
  }
  module.exports = hashGet;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_hashHas.js", ["./_nativeCreate"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var nativeCreate = $__require('./_nativeCreate');
  var objectProto = Object.prototype;
  var hasOwnProperty = objectProto.hasOwnProperty;
  function hashHas(key) {
    var data = this.__data__;
    return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
  }
  module.exports = hashHas;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_nativeCreate.js", ["./_getNative"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var getNative = $__require('./_getNative');
  var nativeCreate = getNative(Object, 'create');
  module.exports = nativeCreate;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_hashSet.js", ["./_nativeCreate"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var nativeCreate = $__require('./_nativeCreate');
  var HASH_UNDEFINED = '__lodash_hash_undefined__';
  function hashSet(key, value) {
    var data = this.__data__;
    data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
    return this;
  }
  module.exports = hashSet;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_Hash.js", ["./_hashClear", "./_hashDelete", "./_hashGet", "./_hashHas", "./_hashSet"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var hashClear = $__require('./_hashClear'),
      hashDelete = $__require('./_hashDelete'),
      hashGet = $__require('./_hashGet'),
      hashHas = $__require('./_hashHas'),
      hashSet = $__require('./_hashSet');
  function Hash(entries) {
    var index = -1,
        length = entries ? entries.length : 0;
    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  }
  Hash.prototype.clear = hashClear;
  Hash.prototype['delete'] = hashDelete;
  Hash.prototype.get = hashGet;
  Hash.prototype.has = hashHas;
  Hash.prototype.set = hashSet;
  module.exports = Hash;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_listCacheClear.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  function listCacheClear() {
    this.__data__ = [];
  }
  module.exports = listCacheClear;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_listCacheDelete.js", ["./_assocIndexOf"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var assocIndexOf = $__require('./_assocIndexOf');
  var arrayProto = Array.prototype;
  var splice = arrayProto.splice;
  function listCacheDelete(key) {
    var data = this.__data__,
        index = assocIndexOf(data, key);
    if (index < 0) {
      return false;
    }
    var lastIndex = data.length - 1;
    if (index == lastIndex) {
      data.pop();
    } else {
      splice.call(data, index, 1);
    }
    return true;
  }
  module.exports = listCacheDelete;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_listCacheGet.js", ["./_assocIndexOf"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var assocIndexOf = $__require('./_assocIndexOf');
  function listCacheGet(key) {
    var data = this.__data__,
        index = assocIndexOf(data, key);
    return index < 0 ? undefined : data[index][1];
  }
  module.exports = listCacheGet;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_listCacheHas.js", ["./_assocIndexOf"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var assocIndexOf = $__require('./_assocIndexOf');
  function listCacheHas(key) {
    return assocIndexOf(this.__data__, key) > -1;
  }
  module.exports = listCacheHas;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_assocIndexOf.js", ["./eq"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var eq = $__require('./eq');
  function assocIndexOf(array, key) {
    var length = array.length;
    while (length--) {
      if (eq(array[length][0], key)) {
        return length;
      }
    }
    return -1;
  }
  module.exports = assocIndexOf;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_listCacheSet.js", ["./_assocIndexOf"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var assocIndexOf = $__require('./_assocIndexOf');
  function listCacheSet(key, value) {
    var data = this.__data__,
        index = assocIndexOf(data, key);
    if (index < 0) {
      data.push([key, value]);
    } else {
      data[index][1] = value;
    }
    return this;
  }
  module.exports = listCacheSet;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_ListCache.js", ["./_listCacheClear", "./_listCacheDelete", "./_listCacheGet", "./_listCacheHas", "./_listCacheSet"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var listCacheClear = $__require('./_listCacheClear'),
      listCacheDelete = $__require('./_listCacheDelete'),
      listCacheGet = $__require('./_listCacheGet'),
      listCacheHas = $__require('./_listCacheHas'),
      listCacheSet = $__require('./_listCacheSet');
  function ListCache(entries) {
    var index = -1,
        length = entries ? entries.length : 0;
    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  }
  ListCache.prototype.clear = listCacheClear;
  ListCache.prototype['delete'] = listCacheDelete;
  ListCache.prototype.get = listCacheGet;
  ListCache.prototype.has = listCacheHas;
  ListCache.prototype.set = listCacheSet;
  module.exports = ListCache;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_mapCacheClear.js", ["./_Hash", "./_ListCache", "./_Map"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var Hash = $__require('./_Hash'),
      ListCache = $__require('./_ListCache'),
      Map = $__require('./_Map');
  function mapCacheClear() {
    this.__data__ = {
      'hash': new Hash,
      'map': new (Map || ListCache),
      'string': new Hash
    };
  }
  module.exports = mapCacheClear;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_mapCacheDelete.js", ["./_getMapData"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var getMapData = $__require('./_getMapData');
  function mapCacheDelete(key) {
    return getMapData(this, key)['delete'](key);
  }
  module.exports = mapCacheDelete;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_mapCacheGet.js", ["./_getMapData"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var getMapData = $__require('./_getMapData');
  function mapCacheGet(key) {
    return getMapData(this, key).get(key);
  }
  module.exports = mapCacheGet;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_mapCacheHas.js", ["./_getMapData"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var getMapData = $__require('./_getMapData');
  function mapCacheHas(key) {
    return getMapData(this, key).has(key);
  }
  module.exports = mapCacheHas;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_isKeyable.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  function isKeyable(value) {
    var type = typeof value;
    return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean') ? (value !== '__proto__') : (value === null);
  }
  module.exports = isKeyable;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_getMapData.js", ["./_isKeyable"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var isKeyable = $__require('./_isKeyable');
  function getMapData(map, key) {
    var data = map.__data__;
    return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;
  }
  module.exports = getMapData;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_mapCacheSet.js", ["./_getMapData"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var getMapData = $__require('./_getMapData');
  function mapCacheSet(key, value) {
    getMapData(this, key).set(key, value);
    return this;
  }
  module.exports = mapCacheSet;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_MapCache.js", ["./_mapCacheClear", "./_mapCacheDelete", "./_mapCacheGet", "./_mapCacheHas", "./_mapCacheSet"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var mapCacheClear = $__require('./_mapCacheClear'),
      mapCacheDelete = $__require('./_mapCacheDelete'),
      mapCacheGet = $__require('./_mapCacheGet'),
      mapCacheHas = $__require('./_mapCacheHas'),
      mapCacheSet = $__require('./_mapCacheSet');
  function MapCache(entries) {
    var index = -1,
        length = entries ? entries.length : 0;
    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  }
  MapCache.prototype.clear = mapCacheClear;
  MapCache.prototype['delete'] = mapCacheDelete;
  MapCache.prototype.get = mapCacheGet;
  MapCache.prototype.has = mapCacheHas;
  MapCache.prototype.set = mapCacheSet;
  module.exports = MapCache;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_stackSet.js", ["./_ListCache", "./_MapCache"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var ListCache = $__require('./_ListCache'),
      MapCache = $__require('./_MapCache');
  var LARGE_ARRAY_SIZE = 200;
  function stackSet(key, value) {
    var cache = this.__data__;
    if (cache instanceof ListCache && cache.__data__.length == LARGE_ARRAY_SIZE) {
      cache = this.__data__ = new MapCache(cache.__data__);
    }
    cache.set(key, value);
    return this;
  }
  module.exports = stackSet;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_Stack.js", ["./_ListCache", "./_stackClear", "./_stackDelete", "./_stackGet", "./_stackHas", "./_stackSet"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var ListCache = $__require('./_ListCache'),
      stackClear = $__require('./_stackClear'),
      stackDelete = $__require('./_stackDelete'),
      stackGet = $__require('./_stackGet'),
      stackHas = $__require('./_stackHas'),
      stackSet = $__require('./_stackSet');
  function Stack(entries) {
    this.__data__ = new ListCache(entries);
  }
  Stack.prototype.clear = stackClear;
  Stack.prototype['delete'] = stackDelete;
  Stack.prototype.get = stackGet;
  Stack.prototype.has = stackHas;
  Stack.prototype.set = stackSet;
  module.exports = Stack;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_arrayEach.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  function arrayEach(array, iteratee) {
    var index = -1,
        length = array ? array.length : 0;
    while (++index < length) {
      if (iteratee(array[index], index, array) === false) {
        break;
      }
    }
    return array;
  }
  module.exports = arrayEach;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_baseAssign.js", ["./_copyObject", "./keys"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var copyObject = $__require('./_copyObject'),
      keys = $__require('./keys');
  function baseAssign(object, source) {
    return object && copyObject(source, keys(source), object);
  }
  module.exports = baseAssign;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_cloneBuffer.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  function cloneBuffer(buffer, isDeep) {
    if (isDeep) {
      return buffer.slice();
    }
    var result = new buffer.constructor(buffer.length);
    buffer.copy(result);
    return result;
  }
  module.exports = cloneBuffer;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_copyArray.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  function copyArray(source, array) {
    var index = -1,
        length = source.length;
    array || (array = Array(length));
    while (++index < length) {
      array[index] = source[index];
    }
    return array;
  }
  module.exports = copyArray;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/eq.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  function eq(value, other) {
    return value === other || (value !== value && other !== other);
  }
  module.exports = eq;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_assignValue.js", ["./eq"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var eq = $__require('./eq');
  var objectProto = Object.prototype;
  var hasOwnProperty = objectProto.hasOwnProperty;
  function assignValue(object, key, value) {
    var objValue = object[key];
    if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || (value === undefined && !(key in object))) {
      object[key] = value;
    }
  }
  module.exports = assignValue;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_copyObject.js", ["./_assignValue"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var assignValue = $__require('./_assignValue');
  function copyObject(source, props, object, customizer) {
    object || (object = {});
    var index = -1,
        length = props.length;
    while (++index < length) {
      var key = props[index];
      var newValue = customizer ? customizer(object[key], source[key], key, object, source) : source[key];
      assignValue(object, key, newValue);
    }
    return object;
  }
  module.exports = copyObject;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_copySymbols.js", ["./_copyObject", "./_getSymbols"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var copyObject = $__require('./_copyObject'),
      getSymbols = $__require('./_getSymbols');
  function copySymbols(source, object) {
    return copyObject(source, getSymbols(source), object);
  }
  module.exports = copySymbols;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_arrayPush.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  function arrayPush(array, values) {
    var index = -1,
        length = values.length,
        offset = array.length;
    while (++index < length) {
      array[offset + index] = values[index];
    }
    return array;
  }
  module.exports = arrayPush;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_baseGetAllKeys.js", ["./_arrayPush", "./isArray"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var arrayPush = $__require('./_arrayPush'),
      isArray = $__require('./isArray');
  function baseGetAllKeys(object, keysFunc, symbolsFunc) {
    var result = keysFunc(object);
    return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
  }
  module.exports = baseGetAllKeys;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/stubArray.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  function stubArray() {
    return [];
  }
  module.exports = stubArray;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_getSymbols.js", ["./stubArray"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var stubArray = $__require('./stubArray');
  var getOwnPropertySymbols = Object.getOwnPropertySymbols;
  function getSymbols(object) {
    return getOwnPropertySymbols(Object(object));
  }
  if (!getOwnPropertySymbols) {
    getSymbols = stubArray;
  }
  module.exports = getSymbols;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_getAllKeys.js", ["./_baseGetAllKeys", "./_getSymbols", "./keys"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var baseGetAllKeys = $__require('./_baseGetAllKeys'),
      getSymbols = $__require('./_getSymbols'),
      keys = $__require('./keys');
  function getAllKeys(object) {
    return baseGetAllKeys(object, keys, getSymbols);
  }
  module.exports = getAllKeys;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_DataView.js", ["./_getNative", "./_root"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var getNative = $__require('./_getNative'),
      root = $__require('./_root');
  var DataView = getNative(root, 'DataView');
  module.exports = DataView;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_Map.js", ["./_getNative", "./_root"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var getNative = $__require('./_getNative'),
      root = $__require('./_root');
  var Map = getNative(root, 'Map');
  module.exports = Map;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_Promise.js", ["./_getNative", "./_root"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var getNative = $__require('./_getNative'),
      root = $__require('./_root');
  var Promise = getNative(root, 'Promise');
  module.exports = Promise;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_Set.js", ["./_getNative", "./_root"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var getNative = $__require('./_getNative'),
      root = $__require('./_root');
  var Set = getNative(root, 'Set');
  module.exports = Set;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_coreJsData.js", ["./_root"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var root = $__require('./_root');
  var coreJsData = root['__core-js_shared__'];
  module.exports = coreJsData;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_isMasked.js", ["./_coreJsData"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var coreJsData = $__require('./_coreJsData');
  var maskSrcKey = (function() {
    var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
    return uid ? ('Symbol(src)_1.' + uid) : '';
  }());
  function isMasked(func) {
    return !!maskSrcKey && (maskSrcKey in func);
  }
  module.exports = isMasked;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_baseIsNative.js", ["./isFunction", "./_isHostObject", "./_isMasked", "./isObject", "./_toSource"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var isFunction = $__require('./isFunction'),
      isHostObject = $__require('./_isHostObject'),
      isMasked = $__require('./_isMasked'),
      isObject = $__require('./isObject'),
      toSource = $__require('./_toSource');
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
  var reIsHostCtor = /^\[object .+?Constructor\]$/;
  var objectProto = Object.prototype;
  var funcToString = Function.prototype.toString;
  var hasOwnProperty = objectProto.hasOwnProperty;
  var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
  function baseIsNative(value) {
    if (!isObject(value) || isMasked(value)) {
      return false;
    }
    var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;
    return pattern.test(toSource(value));
  }
  module.exports = baseIsNative;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_getValue.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  function getValue(object, key) {
    return object == null ? undefined : object[key];
  }
  module.exports = getValue;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_getNative.js", ["./_baseIsNative", "./_getValue"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var baseIsNative = $__require('./_baseIsNative'),
      getValue = $__require('./_getValue');
  function getNative(object, key) {
    var value = getValue(object, key);
    return baseIsNative(value) ? value : undefined;
  }
  module.exports = getNative;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_WeakMap.js", ["./_getNative", "./_root"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var getNative = $__require('./_getNative'),
      root = $__require('./_root');
  var WeakMap = getNative(root, 'WeakMap');
  module.exports = WeakMap;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_toSource.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var funcToString = Function.prototype.toString;
  function toSource(func) {
    if (func != null) {
      try {
        return funcToString.call(func);
      } catch (e) {}
      try {
        return (func + '');
      } catch (e) {}
    }
    return '';
  }
  module.exports = toSource;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_getTag.js", ["./_DataView", "./_Map", "./_Promise", "./_Set", "./_WeakMap", "./_toSource"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var DataView = $__require('./_DataView'),
      Map = $__require('./_Map'),
      Promise = $__require('./_Promise'),
      Set = $__require('./_Set'),
      WeakMap = $__require('./_WeakMap'),
      toSource = $__require('./_toSource');
  var mapTag = '[object Map]',
      objectTag = '[object Object]',
      promiseTag = '[object Promise]',
      setTag = '[object Set]',
      weakMapTag = '[object WeakMap]';
  var dataViewTag = '[object DataView]';
  var objectProto = Object.prototype;
  var objectToString = objectProto.toString;
  var dataViewCtorString = toSource(DataView),
      mapCtorString = toSource(Map),
      promiseCtorString = toSource(Promise),
      setCtorString = toSource(Set),
      weakMapCtorString = toSource(WeakMap);
  function getTag(value) {
    return objectToString.call(value);
  }
  if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) || (Map && getTag(new Map) != mapTag) || (Promise && getTag(Promise.resolve()) != promiseTag) || (Set && getTag(new Set) != setTag) || (WeakMap && getTag(new WeakMap) != weakMapTag)) {
    getTag = function(value) {
      var result = objectToString.call(value),
          Ctor = result == objectTag ? value.constructor : undefined,
          ctorString = Ctor ? toSource(Ctor) : undefined;
      if (ctorString) {
        switch (ctorString) {
          case dataViewCtorString:
            return dataViewTag;
          case mapCtorString:
            return mapTag;
          case promiseCtorString:
            return promiseTag;
          case setCtorString:
            return setTag;
          case weakMapCtorString:
            return weakMapTag;
        }
      }
      return result;
    };
  }
  module.exports = getTag;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_initCloneArray.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var objectProto = Object.prototype;
  var hasOwnProperty = objectProto.hasOwnProperty;
  function initCloneArray(array) {
    var length = array.length,
        result = array.constructor(length);
    if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
      result.index = array.index;
      result.input = array.input;
    }
    return result;
  }
  module.exports = initCloneArray;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_cloneDataView.js", ["./_cloneArrayBuffer"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var cloneArrayBuffer = $__require('./_cloneArrayBuffer');
  function cloneDataView(dataView, isDeep) {
    var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
    return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
  }
  module.exports = cloneDataView;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_addMapEntry.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  function addMapEntry(map, pair) {
    map.set(pair[0], pair[1]);
    return map;
  }
  module.exports = addMapEntry;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_mapToArray.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  function mapToArray(map) {
    var index = -1,
        result = Array(map.size);
    map.forEach(function(value, key) {
      result[++index] = [key, value];
    });
    return result;
  }
  module.exports = mapToArray;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_cloneMap.js", ["./_addMapEntry", "./_arrayReduce", "./_mapToArray"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var addMapEntry = $__require('./_addMapEntry'),
      arrayReduce = $__require('./_arrayReduce'),
      mapToArray = $__require('./_mapToArray');
  function cloneMap(map, isDeep, cloneFunc) {
    var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);
    return arrayReduce(array, addMapEntry, new map.constructor);
  }
  module.exports = cloneMap;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_cloneRegExp.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var reFlags = /\w*$/;
  function cloneRegExp(regexp) {
    var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
    result.lastIndex = regexp.lastIndex;
    return result;
  }
  module.exports = cloneRegExp;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_addSetEntry.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  function addSetEntry(set, value) {
    set.add(value);
    return set;
  }
  module.exports = addSetEntry;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_arrayReduce.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  function arrayReduce(array, iteratee, accumulator, initAccum) {
    var index = -1,
        length = array ? array.length : 0;
    if (initAccum && length) {
      accumulator = array[++index];
    }
    while (++index < length) {
      accumulator = iteratee(accumulator, array[index], index, array);
    }
    return accumulator;
  }
  module.exports = arrayReduce;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_setToArray.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  function setToArray(set) {
    var index = -1,
        result = Array(set.size);
    set.forEach(function(value) {
      result[++index] = value;
    });
    return result;
  }
  module.exports = setToArray;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_cloneSet.js", ["./_addSetEntry", "./_arrayReduce", "./_setToArray"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var addSetEntry = $__require('./_addSetEntry'),
      arrayReduce = $__require('./_arrayReduce'),
      setToArray = $__require('./_setToArray');
  function cloneSet(set, isDeep, cloneFunc) {
    var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);
    return arrayReduce(array, addSetEntry, new set.constructor);
  }
  module.exports = cloneSet;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_Symbol.js", ["./_root"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var root = $__require('./_root');
  var Symbol = root.Symbol;
  module.exports = Symbol;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_cloneSymbol.js", ["./_Symbol"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var Symbol = $__require('./_Symbol');
  var symbolProto = Symbol ? Symbol.prototype : undefined,
      symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;
  function cloneSymbol(symbol) {
    return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
  }
  module.exports = cloneSymbol;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_Uint8Array.js", ["./_root"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var root = $__require('./_root');
  var Uint8Array = root.Uint8Array;
  module.exports = Uint8Array;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_cloneArrayBuffer.js", ["./_Uint8Array"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var Uint8Array = $__require('./_Uint8Array');
  function cloneArrayBuffer(arrayBuffer) {
    var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
    new Uint8Array(result).set(new Uint8Array(arrayBuffer));
    return result;
  }
  module.exports = cloneArrayBuffer;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_cloneTypedArray.js", ["./_cloneArrayBuffer"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var cloneArrayBuffer = $__require('./_cloneArrayBuffer');
  function cloneTypedArray(typedArray, isDeep) {
    var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
    return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
  }
  module.exports = cloneTypedArray;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_initCloneByTag.js", ["./_cloneArrayBuffer", "./_cloneDataView", "./_cloneMap", "./_cloneRegExp", "./_cloneSet", "./_cloneSymbol", "./_cloneTypedArray"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var cloneArrayBuffer = $__require('./_cloneArrayBuffer'),
      cloneDataView = $__require('./_cloneDataView'),
      cloneMap = $__require('./_cloneMap'),
      cloneRegExp = $__require('./_cloneRegExp'),
      cloneSet = $__require('./_cloneSet'),
      cloneSymbol = $__require('./_cloneSymbol'),
      cloneTypedArray = $__require('./_cloneTypedArray');
  var boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]';
  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';
  function initCloneByTag(object, tag, cloneFunc, isDeep) {
    var Ctor = object.constructor;
    switch (tag) {
      case arrayBufferTag:
        return cloneArrayBuffer(object);
      case boolTag:
      case dateTag:
        return new Ctor(+object);
      case dataViewTag:
        return cloneDataView(object, isDeep);
      case float32Tag:
      case float64Tag:
      case int8Tag:
      case int16Tag:
      case int32Tag:
      case uint8Tag:
      case uint8ClampedTag:
      case uint16Tag:
      case uint32Tag:
        return cloneTypedArray(object, isDeep);
      case mapTag:
        return cloneMap(object, isDeep, cloneFunc);
      case numberTag:
      case stringTag:
        return new Ctor(object);
      case regexpTag:
        return cloneRegExp(object);
      case setTag:
        return cloneSet(object, isDeep, cloneFunc);
      case symbolTag:
        return cloneSymbol(object);
    }
  }
  module.exports = initCloneByTag;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_baseCreate.js", ["./isObject"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var isObject = $__require('./isObject');
  var objectCreate = Object.create;
  function baseCreate(proto) {
    return isObject(proto) ? objectCreate(proto) : {};
  }
  module.exports = baseCreate;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_initCloneObject.js", ["./_baseCreate", "./_getPrototype", "./_isPrototype"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var baseCreate = $__require('./_baseCreate'),
      getPrototype = $__require('./_getPrototype'),
      isPrototype = $__require('./_isPrototype');
  function initCloneObject(object) {
    return (typeof object.constructor == 'function' && !isPrototype(object)) ? baseCreate(getPrototype(object)) : {};
  }
  module.exports = initCloneObject;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_checkGlobal.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  function checkGlobal(value) {
    return (value && value.Object === Object) ? value : null;
  }
  module.exports = checkGlobal;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_root.js", ["./_checkGlobal"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var checkGlobal = $__require('./_checkGlobal');
  var freeGlobal = checkGlobal(typeof global == 'object' && global);
  var freeSelf = checkGlobal(typeof self == 'object' && self);
  var thisGlobal = checkGlobal(typeof this == 'object' && this);
  var root = freeGlobal || freeSelf || thisGlobal || Function('return this')();
  module.exports = root;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/stubFalse.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  function stubFalse() {
    return false;
  }
  module.exports = stubFalse;
  return module.exports;
});

System.registerDynamic("npm:base64-js@1.1.2.json", [], false, function() {
  return {
    "main": "lib/b64.js",
    "format": "cjs",
    "meta": {
      "*.json": {
        "format": "json"
      }
    }
  };
});

System.registerDynamic("npm:base64-js@1.1.2/lib/b64.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  exports.toByteArray = toByteArray;
  exports.fromByteArray = fromByteArray;
  var lookup = [];
  var revLookup = [];
  var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;
  function init() {
    var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
    for (var i = 0,
        len = code.length; i < len; ++i) {
      lookup[i] = code[i];
      revLookup[code.charCodeAt(i)] = i;
    }
    revLookup['-'.charCodeAt(0)] = 62;
    revLookup['_'.charCodeAt(0)] = 63;
  }
  init();
  function toByteArray(b64) {
    var i,
        j,
        l,
        tmp,
        placeHolders,
        arr;
    var len = b64.length;
    if (len % 4 > 0) {
      throw new Error('Invalid string. Length must be a multiple of 4');
    }
    placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0;
    arr = new Arr(len * 3 / 4 - placeHolders);
    l = placeHolders > 0 ? len - 4 : len;
    var L = 0;
    for (i = 0, j = 0; i < l; i += 4, j += 3) {
      tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)];
      arr[L++] = (tmp >> 16) & 0xFF;
      arr[L++] = (tmp >> 8) & 0xFF;
      arr[L++] = tmp & 0xFF;
    }
    if (placeHolders === 2) {
      tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4);
      arr[L++] = tmp & 0xFF;
    } else if (placeHolders === 1) {
      tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2);
      arr[L++] = (tmp >> 8) & 0xFF;
      arr[L++] = tmp & 0xFF;
    }
    return arr;
  }
  function tripletToBase64(num) {
    return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];
  }
  function encodeChunk(uint8, start, end) {
    var tmp;
    var output = [];
    for (var i = start; i < end; i += 3) {
      tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2]);
      output.push(tripletToBase64(tmp));
    }
    return output.join('');
  }
  function fromByteArray(uint8) {
    var tmp;
    var len = uint8.length;
    var extraBytes = len % 3;
    var output = '';
    var parts = [];
    var maxChunkLength = 16383;
    for (var i = 0,
        len2 = len - extraBytes; i < len2; i += maxChunkLength) {
      parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)));
    }
    if (extraBytes === 1) {
      tmp = uint8[len - 1];
      output += lookup[tmp >> 2];
      output += lookup[(tmp << 4) & 0x3F];
      output += '==';
    } else if (extraBytes === 2) {
      tmp = (uint8[len - 2] << 8) + (uint8[len - 1]);
      output += lookup[tmp >> 10];
      output += lookup[(tmp >> 4) & 0x3F];
      output += lookup[(tmp << 2) & 0x3F];
      output += '=';
    }
    parts.push(output);
    return parts.join('');
  }
  return module.exports;
});

System.registerDynamic("npm:ieee754@1.1.6.json", [], false, function() {
  return {
    "main": "index.js",
    "format": "cjs",
    "meta": {
      "*": {
        "globals": {
          "process": "process"
        }
      },
      "*.json": {
        "format": "json"
      }
    }
  };
});

System.registerDynamic("npm:ieee754@1.1.6/index.js", ["process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  exports.read = function(buffer, offset, isLE, mLen, nBytes) {
    var e,
        m;
    var eLen = nBytes * 8 - mLen - 1;
    var eMax = (1 << eLen) - 1;
    var eBias = eMax >> 1;
    var nBits = -7;
    var i = isLE ? (nBytes - 1) : 0;
    var d = isLE ? -1 : 1;
    var s = buffer[offset + i];
    i += d;
    e = s & ((1 << (-nBits)) - 1);
    s >>= (-nBits);
    nBits += eLen;
    for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}
    m = e & ((1 << (-nBits)) - 1);
    e >>= (-nBits);
    nBits += mLen;
    for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}
    if (e === 0) {
      e = 1 - eBias;
    } else if (e === eMax) {
      return m ? NaN : ((s ? -1 : 1) * Infinity);
    } else {
      m = m + Math.pow(2, mLen);
      e = e - eBias;
    }
    return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
  };
  exports.write = function(buffer, value, offset, isLE, mLen, nBytes) {
    var e,
        m,
        c;
    var eLen = nBytes * 8 - mLen - 1;
    var eMax = (1 << eLen) - 1;
    var eBias = eMax >> 1;
    var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0);
    var i = isLE ? 0 : (nBytes - 1);
    var d = isLE ? 1 : -1;
    var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;
    value = Math.abs(value);
    if (isNaN(value) || value === Infinity) {
      m = isNaN(value) ? 1 : 0;
      e = eMax;
    } else {
      e = Math.floor(Math.log(value) / Math.LN2);
      if (value * (c = Math.pow(2, -e)) < 1) {
        e--;
        c *= 2;
      }
      if (e + eBias >= 1) {
        value += rt / c;
      } else {
        value += rt * Math.pow(2, 1 - eBias);
      }
      if (value * c >= 2) {
        e++;
        c /= 2;
      }
      if (e + eBias >= eMax) {
        m = 0;
        e = eMax;
      } else if (e + eBias >= 1) {
        m = (value * c - 1) * Math.pow(2, mLen);
        e = e + eBias;
      } else {
        m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
        e = 0;
      }
    }
    for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}
    e = (e << mLen) | m;
    eLen += mLen;
    for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}
    buffer[offset + i - d] |= s * 128;
  };
  return module.exports;
});

System.registerDynamic("npm:isarray@1.0.0.json", [], false, function() {
  return {
    "main": "index.js",
    "format": "cjs",
    "meta": {
      "*": {
        "globals": {
          "process": "process"
        }
      },
      "*.json": {
        "format": "json"
      }
    }
  };
});

System.registerDynamic("npm:isarray@1.0.0/index.js", ["process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var toString = {}.toString;
  module.exports = Array.isArray || function(arr) {
    return toString.call(arr) == '[object Array]';
  };
  return module.exports;
});

System.registerDynamic("npm:buffer@4.6.0.json", [], false, function() {
  return {
    "main": "index.js",
    "format": "cjs",
    "meta": {
      "*": {
        "globals": {
          "process": "process"
        }
      },
      "*.json": {
        "format": "json"
      },
      "test/constructor.js": {
        "globals": {
          "Buffer": "buffer/global"
        }
      }
    }
  };
});

System.registerDynamic("npm:buffer@4.6.0/index.js", ["base64-js", "ieee754", "isarray", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var base64 = $__require('base64-js');
  var ieee754 = $__require('ieee754');
  var isArray = $__require('isarray');
  exports.Buffer = Buffer;
  exports.SlowBuffer = SlowBuffer;
  exports.INSPECT_MAX_BYTES = 50;
  Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : typedArraySupport();
  exports.kMaxLength = kMaxLength();
  function typedArraySupport() {
    try {
      var arr = new Uint8Array(1);
      arr.foo = function() {
        return 42;
      };
      return arr.foo() === 42 && typeof arr.subarray === 'function' && arr.subarray(1, 1).byteLength === 0;
    } catch (e) {
      return false;
    }
  }
  function kMaxLength() {
    return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;
  }
  function createBuffer(that, length) {
    if (kMaxLength() < length) {
      throw new RangeError('Invalid typed array length');
    }
    if (Buffer.TYPED_ARRAY_SUPPORT) {
      that = new Uint8Array(length);
      that.__proto__ = Buffer.prototype;
    } else {
      if (that === null) {
        that = new Buffer(length);
      }
      that.length = length;
    }
    return that;
  }
  function Buffer(arg, encodingOrOffset, length) {
    if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
      return new Buffer(arg, encodingOrOffset, length);
    }
    if (typeof arg === 'number') {
      if (typeof encodingOrOffset === 'string') {
        throw new Error('If encoding is specified then the first argument must be a string');
      }
      return allocUnsafe(this, arg);
    }
    return from(this, arg, encodingOrOffset, length);
  }
  Buffer.poolSize = 8192;
  Buffer._augment = function(arr) {
    arr.__proto__ = Buffer.prototype;
    return arr;
  };
  function from(that, value, encodingOrOffset, length) {
    if (typeof value === 'number') {
      throw new TypeError('"value" argument must not be a number');
    }
    if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
      return fromArrayBuffer(that, value, encodingOrOffset, length);
    }
    if (typeof value === 'string') {
      return fromString(that, value, encodingOrOffset);
    }
    return fromObject(that, value);
  }
  Buffer.from = function(value, encodingOrOffset, length) {
    return from(null, value, encodingOrOffset, length);
  };
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    Buffer.prototype.__proto__ = Uint8Array.prototype;
    Buffer.__proto__ = Uint8Array;
    if (typeof Symbol !== 'undefined' && Symbol.species && Buffer[Symbol.species] === Buffer) {
      Object.defineProperty(Buffer, Symbol.species, {
        value: null,
        configurable: true
      });
    }
  }
  function assertSize(size) {
    if (typeof size !== 'number') {
      throw new TypeError('"size" argument must be a number');
    }
  }
  function alloc(that, size, fill, encoding) {
    assertSize(size);
    if (size <= 0) {
      return createBuffer(that, size);
    }
    if (fill !== undefined) {
      return typeof encoding === 'string' ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill);
    }
    return createBuffer(that, size);
  }
  Buffer.alloc = function(size, fill, encoding) {
    return alloc(null, size, fill, encoding);
  };
  function allocUnsafe(that, size) {
    assertSize(size);
    that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);
    if (!Buffer.TYPED_ARRAY_SUPPORT) {
      for (var i = 0; i < size; i++) {
        that[i] = 0;
      }
    }
    return that;
  }
  Buffer.allocUnsafe = function(size) {
    return allocUnsafe(null, size);
  };
  Buffer.allocUnsafeSlow = function(size) {
    return allocUnsafe(null, size);
  };
  function fromString(that, string, encoding) {
    if (typeof encoding !== 'string' || encoding === '') {
      encoding = 'utf8';
    }
    if (!Buffer.isEncoding(encoding)) {
      throw new TypeError('"encoding" must be a valid string encoding');
    }
    var length = byteLength(string, encoding) | 0;
    that = createBuffer(that, length);
    that.write(string, encoding);
    return that;
  }
  function fromArrayLike(that, array) {
    var length = checked(array.length) | 0;
    that = createBuffer(that, length);
    for (var i = 0; i < length; i += 1) {
      that[i] = array[i] & 255;
    }
    return that;
  }
  function fromArrayBuffer(that, array, byteOffset, length) {
    array.byteLength;
    if (byteOffset < 0 || array.byteLength < byteOffset) {
      throw new RangeError('\'offset\' is out of bounds');
    }
    if (array.byteLength < byteOffset + (length || 0)) {
      throw new RangeError('\'length\' is out of bounds');
    }
    if (length === undefined) {
      array = new Uint8Array(array, byteOffset);
    } else {
      array = new Uint8Array(array, byteOffset, length);
    }
    if (Buffer.TYPED_ARRAY_SUPPORT) {
      that = array;
      that.__proto__ = Buffer.prototype;
    } else {
      that = fromArrayLike(that, array);
    }
    return that;
  }
  function fromObject(that, obj) {
    if (Buffer.isBuffer(obj)) {
      var len = checked(obj.length) | 0;
      that = createBuffer(that, len);
      if (that.length === 0) {
        return that;
      }
      obj.copy(that, 0, 0, len);
      return that;
    }
    if (obj) {
      if ((typeof ArrayBuffer !== 'undefined' && obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
        if (typeof obj.length !== 'number' || isnan(obj.length)) {
          return createBuffer(that, 0);
        }
        return fromArrayLike(that, obj);
      }
      if (obj.type === 'Buffer' && isArray(obj.data)) {
        return fromArrayLike(that, obj.data);
      }
    }
    throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');
  }
  function checked(length) {
    if (length >= kMaxLength()) {
      throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + kMaxLength().toString(16) + ' bytes');
    }
    return length | 0;
  }
  function SlowBuffer(length) {
    if (+length != length) {
      length = 0;
    }
    return Buffer.alloc(+length);
  }
  Buffer.isBuffer = function isBuffer(b) {
    return !!(b != null && b._isBuffer);
  };
  Buffer.compare = function compare(a, b) {
    if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
      throw new TypeError('Arguments must be Buffers');
    }
    if (a === b)
      return 0;
    var x = a.length;
    var y = b.length;
    for (var i = 0,
        len = Math.min(x, y); i < len; ++i) {
      if (a[i] !== b[i]) {
        x = a[i];
        y = b[i];
        break;
      }
    }
    if (x < y)
      return -1;
    if (y < x)
      return 1;
    return 0;
  };
  Buffer.isEncoding = function isEncoding(encoding) {
    switch (String(encoding).toLowerCase()) {
      case 'hex':
      case 'utf8':
      case 'utf-8':
      case 'ascii':
      case 'binary':
      case 'base64':
      case 'raw':
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return true;
      default:
        return false;
    }
  };
  Buffer.concat = function concat(list, length) {
    if (!isArray(list)) {
      throw new TypeError('"list" argument must be an Array of Buffers');
    }
    if (list.length === 0) {
      return Buffer.alloc(0);
    }
    var i;
    if (length === undefined) {
      length = 0;
      for (i = 0; i < list.length; i++) {
        length += list[i].length;
      }
    }
    var buffer = Buffer.allocUnsafe(length);
    var pos = 0;
    for (i = 0; i < list.length; i++) {
      var buf = list[i];
      if (!Buffer.isBuffer(buf)) {
        throw new TypeError('"list" argument must be an Array of Buffers');
      }
      buf.copy(buffer, pos);
      pos += buf.length;
    }
    return buffer;
  };
  function byteLength(string, encoding) {
    if (Buffer.isBuffer(string)) {
      return string.length;
    }
    if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
      return string.byteLength;
    }
    if (typeof string !== 'string') {
      string = '' + string;
    }
    var len = string.length;
    if (len === 0)
      return 0;
    var loweredCase = false;
    for (; ; ) {
      switch (encoding) {
        case 'ascii':
        case 'binary':
        case 'raw':
        case 'raws':
          return len;
        case 'utf8':
        case 'utf-8':
        case undefined:
          return utf8ToBytes(string).length;
        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
          return len * 2;
        case 'hex':
          return len >>> 1;
        case 'base64':
          return base64ToBytes(string).length;
        default:
          if (loweredCase)
            return utf8ToBytes(string).length;
          encoding = ('' + encoding).toLowerCase();
          loweredCase = true;
      }
    }
  }
  Buffer.byteLength = byteLength;
  function slowToString(encoding, start, end) {
    var loweredCase = false;
    if (start === undefined || start < 0) {
      start = 0;
    }
    if (start > this.length) {
      return '';
    }
    if (end === undefined || end > this.length) {
      end = this.length;
    }
    if (end <= 0) {
      return '';
    }
    end >>>= 0;
    start >>>= 0;
    if (end <= start) {
      return '';
    }
    if (!encoding)
      encoding = 'utf8';
    while (true) {
      switch (encoding) {
        case 'hex':
          return hexSlice(this, start, end);
        case 'utf8':
        case 'utf-8':
          return utf8Slice(this, start, end);
        case 'ascii':
          return asciiSlice(this, start, end);
        case 'binary':
          return binarySlice(this, start, end);
        case 'base64':
          return base64Slice(this, start, end);
        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
          return utf16leSlice(this, start, end);
        default:
          if (loweredCase)
            throw new TypeError('Unknown encoding: ' + encoding);
          encoding = (encoding + '').toLowerCase();
          loweredCase = true;
      }
    }
  }
  Buffer.prototype._isBuffer = true;
  function swap(b, n, m) {
    var i = b[n];
    b[n] = b[m];
    b[m] = i;
  }
  Buffer.prototype.swap16 = function swap16() {
    var len = this.length;
    if (len % 2 !== 0) {
      throw new RangeError('Buffer size must be a multiple of 16-bits');
    }
    for (var i = 0; i < len; i += 2) {
      swap(this, i, i + 1);
    }
    return this;
  };
  Buffer.prototype.swap32 = function swap32() {
    var len = this.length;
    if (len % 4 !== 0) {
      throw new RangeError('Buffer size must be a multiple of 32-bits');
    }
    for (var i = 0; i < len; i += 4) {
      swap(this, i, i + 3);
      swap(this, i + 1, i + 2);
    }
    return this;
  };
  Buffer.prototype.toString = function toString() {
    var length = this.length | 0;
    if (length === 0)
      return '';
    if (arguments.length === 0)
      return utf8Slice(this, 0, length);
    return slowToString.apply(this, arguments);
  };
  Buffer.prototype.equals = function equals(b) {
    if (!Buffer.isBuffer(b))
      throw new TypeError('Argument must be a Buffer');
    if (this === b)
      return true;
    return Buffer.compare(this, b) === 0;
  };
  Buffer.prototype.inspect = function inspect() {
    var str = '';
    var max = exports.INSPECT_MAX_BYTES;
    if (this.length > 0) {
      str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');
      if (this.length > max)
        str += ' ... ';
    }
    return '<Buffer ' + str + '>';
  };
  Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {
    if (!Buffer.isBuffer(target)) {
      throw new TypeError('Argument must be a Buffer');
    }
    if (start === undefined) {
      start = 0;
    }
    if (end === undefined) {
      end = target ? target.length : 0;
    }
    if (thisStart === undefined) {
      thisStart = 0;
    }
    if (thisEnd === undefined) {
      thisEnd = this.length;
    }
    if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
      throw new RangeError('out of range index');
    }
    if (thisStart >= thisEnd && start >= end) {
      return 0;
    }
    if (thisStart >= thisEnd) {
      return -1;
    }
    if (start >= end) {
      return 1;
    }
    start >>>= 0;
    end >>>= 0;
    thisStart >>>= 0;
    thisEnd >>>= 0;
    if (this === target)
      return 0;
    var x = thisEnd - thisStart;
    var y = end - start;
    var len = Math.min(x, y);
    var thisCopy = this.slice(thisStart, thisEnd);
    var targetCopy = target.slice(start, end);
    for (var i = 0; i < len; ++i) {
      if (thisCopy[i] !== targetCopy[i]) {
        x = thisCopy[i];
        y = targetCopy[i];
        break;
      }
    }
    if (x < y)
      return -1;
    if (y < x)
      return 1;
    return 0;
  };
  function arrayIndexOf(arr, val, byteOffset, encoding) {
    var indexSize = 1;
    var arrLength = arr.length;
    var valLength = val.length;
    if (encoding !== undefined) {
      encoding = String(encoding).toLowerCase();
      if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {
        if (arr.length < 2 || val.length < 2) {
          return -1;
        }
        indexSize = 2;
        arrLength /= 2;
        valLength /= 2;
        byteOffset /= 2;
      }
    }
    function read(buf, i) {
      if (indexSize === 1) {
        return buf[i];
      } else {
        return buf.readUInt16BE(i * indexSize);
      }
    }
    var foundIndex = -1;
    for (var i = 0; byteOffset + i < arrLength; i++) {
      if (read(arr, byteOffset + i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1)
          foundIndex = i;
        if (i - foundIndex + 1 === valLength)
          return (byteOffset + foundIndex) * indexSize;
      } else {
        if (foundIndex !== -1)
          i -= i - foundIndex;
        foundIndex = -1;
      }
    }
    return -1;
  }
  Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
    if (typeof byteOffset === 'string') {
      encoding = byteOffset;
      byteOffset = 0;
    } else if (byteOffset > 0x7fffffff) {
      byteOffset = 0x7fffffff;
    } else if (byteOffset < -0x80000000) {
      byteOffset = -0x80000000;
    }
    byteOffset >>= 0;
    if (this.length === 0)
      return -1;
    if (byteOffset >= this.length)
      return -1;
    if (byteOffset < 0)
      byteOffset = Math.max(this.length + byteOffset, 0);
    if (typeof val === 'string') {
      val = Buffer.from(val, encoding);
    }
    if (Buffer.isBuffer(val)) {
      if (val.length === 0) {
        return -1;
      }
      return arrayIndexOf(this, val, byteOffset, encoding);
    }
    if (typeof val === 'number') {
      if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {
        return Uint8Array.prototype.indexOf.call(this, val, byteOffset);
      }
      return arrayIndexOf(this, [val], byteOffset, encoding);
    }
    throw new TypeError('val must be string, number or Buffer');
  };
  Buffer.prototype.includes = function includes(val, byteOffset, encoding) {
    return this.indexOf(val, byteOffset, encoding) !== -1;
  };
  function hexWrite(buf, string, offset, length) {
    offset = Number(offset) || 0;
    var remaining = buf.length - offset;
    if (!length) {
      length = remaining;
    } else {
      length = Number(length);
      if (length > remaining) {
        length = remaining;
      }
    }
    var strLen = string.length;
    if (strLen % 2 !== 0)
      throw new Error('Invalid hex string');
    if (length > strLen / 2) {
      length = strLen / 2;
    }
    for (var i = 0; i < length; i++) {
      var parsed = parseInt(string.substr(i * 2, 2), 16);
      if (isNaN(parsed))
        return i;
      buf[offset + i] = parsed;
    }
    return i;
  }
  function utf8Write(buf, string, offset, length) {
    return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);
  }
  function asciiWrite(buf, string, offset, length) {
    return blitBuffer(asciiToBytes(string), buf, offset, length);
  }
  function binaryWrite(buf, string, offset, length) {
    return asciiWrite(buf, string, offset, length);
  }
  function base64Write(buf, string, offset, length) {
    return blitBuffer(base64ToBytes(string), buf, offset, length);
  }
  function ucs2Write(buf, string, offset, length) {
    return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);
  }
  Buffer.prototype.write = function write(string, offset, length, encoding) {
    if (offset === undefined) {
      encoding = 'utf8';
      length = this.length;
      offset = 0;
    } else if (length === undefined && typeof offset === 'string') {
      encoding = offset;
      length = this.length;
      offset = 0;
    } else if (isFinite(offset)) {
      offset = offset | 0;
      if (isFinite(length)) {
        length = length | 0;
        if (encoding === undefined)
          encoding = 'utf8';
      } else {
        encoding = length;
        length = undefined;
      }
    } else {
      throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');
    }
    var remaining = this.length - offset;
    if (length === undefined || length > remaining)
      length = remaining;
    if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
      throw new RangeError('Attempt to write outside buffer bounds');
    }
    if (!encoding)
      encoding = 'utf8';
    var loweredCase = false;
    for (; ; ) {
      switch (encoding) {
        case 'hex':
          return hexWrite(this, string, offset, length);
        case 'utf8':
        case 'utf-8':
          return utf8Write(this, string, offset, length);
        case 'ascii':
          return asciiWrite(this, string, offset, length);
        case 'binary':
          return binaryWrite(this, string, offset, length);
        case 'base64':
          return base64Write(this, string, offset, length);
        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
          return ucs2Write(this, string, offset, length);
        default:
          if (loweredCase)
            throw new TypeError('Unknown encoding: ' + encoding);
          encoding = ('' + encoding).toLowerCase();
          loweredCase = true;
      }
    }
  };
  Buffer.prototype.toJSON = function toJSON() {
    return {
      type: 'Buffer',
      data: Array.prototype.slice.call(this._arr || this, 0)
    };
  };
  function base64Slice(buf, start, end) {
    if (start === 0 && end === buf.length) {
      return base64.fromByteArray(buf);
    } else {
      return base64.fromByteArray(buf.slice(start, end));
    }
  }
  function utf8Slice(buf, start, end) {
    end = Math.min(buf.length, end);
    var res = [];
    var i = start;
    while (i < end) {
      var firstByte = buf[i];
      var codePoint = null;
      var bytesPerSequence = (firstByte > 0xEF) ? 4 : (firstByte > 0xDF) ? 3 : (firstByte > 0xBF) ? 2 : 1;
      if (i + bytesPerSequence <= end) {
        var secondByte,
            thirdByte,
            fourthByte,
            tempCodePoint;
        switch (bytesPerSequence) {
          case 1:
            if (firstByte < 0x80) {
              codePoint = firstByte;
            }
            break;
          case 2:
            secondByte = buf[i + 1];
            if ((secondByte & 0xC0) === 0x80) {
              tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F);
              if (tempCodePoint > 0x7F) {
                codePoint = tempCodePoint;
              }
            }
            break;
          case 3:
            secondByte = buf[i + 1];
            thirdByte = buf[i + 2];
            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
              tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F);
              if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
                codePoint = tempCodePoint;
              }
            }
            break;
          case 4:
            secondByte = buf[i + 1];
            thirdByte = buf[i + 2];
            fourthByte = buf[i + 3];
            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
              tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F);
              if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
                codePoint = tempCodePoint;
              }
            }
        }
      }
      if (codePoint === null) {
        codePoint = 0xFFFD;
        bytesPerSequence = 1;
      } else if (codePoint > 0xFFFF) {
        codePoint -= 0x10000;
        res.push(codePoint >>> 10 & 0x3FF | 0xD800);
        codePoint = 0xDC00 | codePoint & 0x3FF;
      }
      res.push(codePoint);
      i += bytesPerSequence;
    }
    return decodeCodePointsArray(res);
  }
  var MAX_ARGUMENTS_LENGTH = 0x1000;
  function decodeCodePointsArray(codePoints) {
    var len = codePoints.length;
    if (len <= MAX_ARGUMENTS_LENGTH) {
      return String.fromCharCode.apply(String, codePoints);
    }
    var res = '';
    var i = 0;
    while (i < len) {
      res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));
    }
    return res;
  }
  function asciiSlice(buf, start, end) {
    var ret = '';
    end = Math.min(buf.length, end);
    for (var i = start; i < end; i++) {
      ret += String.fromCharCode(buf[i] & 0x7F);
    }
    return ret;
  }
  function binarySlice(buf, start, end) {
    var ret = '';
    end = Math.min(buf.length, end);
    for (var i = start; i < end; i++) {
      ret += String.fromCharCode(buf[i]);
    }
    return ret;
  }
  function hexSlice(buf, start, end) {
    var len = buf.length;
    if (!start || start < 0)
      start = 0;
    if (!end || end < 0 || end > len)
      end = len;
    var out = '';
    for (var i = start; i < end; i++) {
      out += toHex(buf[i]);
    }
    return out;
  }
  function utf16leSlice(buf, start, end) {
    var bytes = buf.slice(start, end);
    var res = '';
    for (var i = 0; i < bytes.length; i += 2) {
      res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
    }
    return res;
  }
  Buffer.prototype.slice = function slice(start, end) {
    var len = this.length;
    start = ~~start;
    end = end === undefined ? len : ~~end;
    if (start < 0) {
      start += len;
      if (start < 0)
        start = 0;
    } else if (start > len) {
      start = len;
    }
    if (end < 0) {
      end += len;
      if (end < 0)
        end = 0;
    } else if (end > len) {
      end = len;
    }
    if (end < start)
      end = start;
    var newBuf;
    if (Buffer.TYPED_ARRAY_SUPPORT) {
      newBuf = this.subarray(start, end);
      newBuf.__proto__ = Buffer.prototype;
    } else {
      var sliceLen = end - start;
      newBuf = new Buffer(sliceLen, undefined);
      for (var i = 0; i < sliceLen; i++) {
        newBuf[i] = this[i + start];
      }
    }
    return newBuf;
  };
  function checkOffset(offset, ext, length) {
    if ((offset % 1) !== 0 || offset < 0)
      throw new RangeError('offset is not uint');
    if (offset + ext > length)
      throw new RangeError('Trying to access beyond buffer length');
  }
  Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {
    offset = offset | 0;
    byteLength = byteLength | 0;
    if (!noAssert)
      checkOffset(offset, byteLength, this.length);
    var val = this[offset];
    var mul = 1;
    var i = 0;
    while (++i < byteLength && (mul *= 0x100)) {
      val += this[offset + i] * mul;
    }
    return val;
  };
  Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {
    offset = offset | 0;
    byteLength = byteLength | 0;
    if (!noAssert) {
      checkOffset(offset, byteLength, this.length);
    }
    var val = this[offset + --byteLength];
    var mul = 1;
    while (byteLength > 0 && (mul *= 0x100)) {
      val += this[offset + --byteLength] * mul;
    }
    return val;
  };
  Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {
    if (!noAssert)
      checkOffset(offset, 1, this.length);
    return this[offset];
  };
  Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
    if (!noAssert)
      checkOffset(offset, 2, this.length);
    return this[offset] | (this[offset + 1] << 8);
  };
  Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
    if (!noAssert)
      checkOffset(offset, 2, this.length);
    return (this[offset] << 8) | this[offset + 1];
  };
  Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
    if (!noAssert)
      checkOffset(offset, 4, this.length);
    return ((this[offset]) | (this[offset + 1] << 8) | (this[offset + 2] << 16)) + (this[offset + 3] * 0x1000000);
  };
  Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
    if (!noAssert)
      checkOffset(offset, 4, this.length);
    return (this[offset] * 0x1000000) + ((this[offset + 1] << 16) | (this[offset + 2] << 8) | this[offset + 3]);
  };
  Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {
    offset = offset | 0;
    byteLength = byteLength | 0;
    if (!noAssert)
      checkOffset(offset, byteLength, this.length);
    var val = this[offset];
    var mul = 1;
    var i = 0;
    while (++i < byteLength && (mul *= 0x100)) {
      val += this[offset + i] * mul;
    }
    mul *= 0x80;
    if (val >= mul)
      val -= Math.pow(2, 8 * byteLength);
    return val;
  };
  Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {
    offset = offset | 0;
    byteLength = byteLength | 0;
    if (!noAssert)
      checkOffset(offset, byteLength, this.length);
    var i = byteLength;
    var mul = 1;
    var val = this[offset + --i];
    while (i > 0 && (mul *= 0x100)) {
      val += this[offset + --i] * mul;
    }
    mul *= 0x80;
    if (val >= mul)
      val -= Math.pow(2, 8 * byteLength);
    return val;
  };
  Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {
    if (!noAssert)
      checkOffset(offset, 1, this.length);
    if (!(this[offset] & 0x80))
      return (this[offset]);
    return ((0xff - this[offset] + 1) * -1);
  };
  Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
    if (!noAssert)
      checkOffset(offset, 2, this.length);
    var val = this[offset] | (this[offset + 1] << 8);
    return (val & 0x8000) ? val | 0xFFFF0000 : val;
  };
  Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
    if (!noAssert)
      checkOffset(offset, 2, this.length);
    var val = this[offset + 1] | (this[offset] << 8);
    return (val & 0x8000) ? val | 0xFFFF0000 : val;
  };
  Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
    if (!noAssert)
      checkOffset(offset, 4, this.length);
    return (this[offset]) | (this[offset + 1] << 8) | (this[offset + 2] << 16) | (this[offset + 3] << 24);
  };
  Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
    if (!noAssert)
      checkOffset(offset, 4, this.length);
    return (this[offset] << 24) | (this[offset + 1] << 16) | (this[offset + 2] << 8) | (this[offset + 3]);
  };
  Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
    if (!noAssert)
      checkOffset(offset, 4, this.length);
    return ieee754.read(this, offset, true, 23, 4);
  };
  Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
    if (!noAssert)
      checkOffset(offset, 4, this.length);
    return ieee754.read(this, offset, false, 23, 4);
  };
  Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
    if (!noAssert)
      checkOffset(offset, 8, this.length);
    return ieee754.read(this, offset, true, 52, 8);
  };
  Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
    if (!noAssert)
      checkOffset(offset, 8, this.length);
    return ieee754.read(this, offset, false, 52, 8);
  };
  function checkInt(buf, value, offset, ext, max, min) {
    if (!Buffer.isBuffer(buf))
      throw new TypeError('"buffer" argument must be a Buffer instance');
    if (value > max || value < min)
      throw new RangeError('"value" argument is out of bounds');
    if (offset + ext > buf.length)
      throw new RangeError('Index out of range');
  }
  Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset | 0;
    byteLength = byteLength | 0;
    if (!noAssert) {
      var maxBytes = Math.pow(2, 8 * byteLength) - 1;
      checkInt(this, value, offset, byteLength, maxBytes, 0);
    }
    var mul = 1;
    var i = 0;
    this[offset] = value & 0xFF;
    while (++i < byteLength && (mul *= 0x100)) {
      this[offset + i] = (value / mul) & 0xFF;
    }
    return offset + byteLength;
  };
  Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset | 0;
    byteLength = byteLength | 0;
    if (!noAssert) {
      var maxBytes = Math.pow(2, 8 * byteLength) - 1;
      checkInt(this, value, offset, byteLength, maxBytes, 0);
    }
    var i = byteLength - 1;
    var mul = 1;
    this[offset + i] = value & 0xFF;
    while (--i >= 0 && (mul *= 0x100)) {
      this[offset + i] = (value / mul) & 0xFF;
    }
    return offset + byteLength;
  };
  Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
    value = +value;
    offset = offset | 0;
    if (!noAssert)
      checkInt(this, value, offset, 1, 0xff, 0);
    if (!Buffer.TYPED_ARRAY_SUPPORT)
      value = Math.floor(value);
    this[offset] = (value & 0xff);
    return offset + 1;
  };
  function objectWriteUInt16(buf, value, offset, littleEndian) {
    if (value < 0)
      value = 0xffff + value + 1;
    for (var i = 0,
        j = Math.min(buf.length - offset, 2); i < j; i++) {
      buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>> (littleEndian ? i : 1 - i) * 8;
    }
  }
  Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
    value = +value;
    offset = offset | 0;
    if (!noAssert)
      checkInt(this, value, offset, 2, 0xffff, 0);
    if (Buffer.TYPED_ARRAY_SUPPORT) {
      this[offset] = (value & 0xff);
      this[offset + 1] = (value >>> 8);
    } else {
      objectWriteUInt16(this, value, offset, true);
    }
    return offset + 2;
  };
  Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
    value = +value;
    offset = offset | 0;
    if (!noAssert)
      checkInt(this, value, offset, 2, 0xffff, 0);
    if (Buffer.TYPED_ARRAY_SUPPORT) {
      this[offset] = (value >>> 8);
      this[offset + 1] = (value & 0xff);
    } else {
      objectWriteUInt16(this, value, offset, false);
    }
    return offset + 2;
  };
  function objectWriteUInt32(buf, value, offset, littleEndian) {
    if (value < 0)
      value = 0xffffffff + value + 1;
    for (var i = 0,
        j = Math.min(buf.length - offset, 4); i < j; i++) {
      buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff;
    }
  }
  Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
    value = +value;
    offset = offset | 0;
    if (!noAssert)
      checkInt(this, value, offset, 4, 0xffffffff, 0);
    if (Buffer.TYPED_ARRAY_SUPPORT) {
      this[offset + 3] = (value >>> 24);
      this[offset + 2] = (value >>> 16);
      this[offset + 1] = (value >>> 8);
      this[offset] = (value & 0xff);
    } else {
      objectWriteUInt32(this, value, offset, true);
    }
    return offset + 4;
  };
  Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
    value = +value;
    offset = offset | 0;
    if (!noAssert)
      checkInt(this, value, offset, 4, 0xffffffff, 0);
    if (Buffer.TYPED_ARRAY_SUPPORT) {
      this[offset] = (value >>> 24);
      this[offset + 1] = (value >>> 16);
      this[offset + 2] = (value >>> 8);
      this[offset + 3] = (value & 0xff);
    } else {
      objectWriteUInt32(this, value, offset, false);
    }
    return offset + 4;
  };
  Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset | 0;
    if (!noAssert) {
      var limit = Math.pow(2, 8 * byteLength - 1);
      checkInt(this, value, offset, byteLength, limit - 1, -limit);
    }
    var i = 0;
    var mul = 1;
    var sub = 0;
    this[offset] = value & 0xFF;
    while (++i < byteLength && (mul *= 0x100)) {
      if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
        sub = 1;
      }
      this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;
    }
    return offset + byteLength;
  };
  Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset | 0;
    if (!noAssert) {
      var limit = Math.pow(2, 8 * byteLength - 1);
      checkInt(this, value, offset, byteLength, limit - 1, -limit);
    }
    var i = byteLength - 1;
    var mul = 1;
    var sub = 0;
    this[offset + i] = value & 0xFF;
    while (--i >= 0 && (mul *= 0x100)) {
      if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
        sub = 1;
      }
      this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;
    }
    return offset + byteLength;
  };
  Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
    value = +value;
    offset = offset | 0;
    if (!noAssert)
      checkInt(this, value, offset, 1, 0x7f, -0x80);
    if (!Buffer.TYPED_ARRAY_SUPPORT)
      value = Math.floor(value);
    if (value < 0)
      value = 0xff + value + 1;
    this[offset] = (value & 0xff);
    return offset + 1;
  };
  Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
    value = +value;
    offset = offset | 0;
    if (!noAssert)
      checkInt(this, value, offset, 2, 0x7fff, -0x8000);
    if (Buffer.TYPED_ARRAY_SUPPORT) {
      this[offset] = (value & 0xff);
      this[offset + 1] = (value >>> 8);
    } else {
      objectWriteUInt16(this, value, offset, true);
    }
    return offset + 2;
  };
  Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
    value = +value;
    offset = offset | 0;
    if (!noAssert)
      checkInt(this, value, offset, 2, 0x7fff, -0x8000);
    if (Buffer.TYPED_ARRAY_SUPPORT) {
      this[offset] = (value >>> 8);
      this[offset + 1] = (value & 0xff);
    } else {
      objectWriteUInt16(this, value, offset, false);
    }
    return offset + 2;
  };
  Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
    value = +value;
    offset = offset | 0;
    if (!noAssert)
      checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
    if (Buffer.TYPED_ARRAY_SUPPORT) {
      this[offset] = (value & 0xff);
      this[offset + 1] = (value >>> 8);
      this[offset + 2] = (value >>> 16);
      this[offset + 3] = (value >>> 24);
    } else {
      objectWriteUInt32(this, value, offset, true);
    }
    return offset + 4;
  };
  Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
    value = +value;
    offset = offset | 0;
    if (!noAssert)
      checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
    if (value < 0)
      value = 0xffffffff + value + 1;
    if (Buffer.TYPED_ARRAY_SUPPORT) {
      this[offset] = (value >>> 24);
      this[offset + 1] = (value >>> 16);
      this[offset + 2] = (value >>> 8);
      this[offset + 3] = (value & 0xff);
    } else {
      objectWriteUInt32(this, value, offset, false);
    }
    return offset + 4;
  };
  function checkIEEE754(buf, value, offset, ext, max, min) {
    if (offset + ext > buf.length)
      throw new RangeError('Index out of range');
    if (offset < 0)
      throw new RangeError('Index out of range');
  }
  function writeFloat(buf, value, offset, littleEndian, noAssert) {
    if (!noAssert) {
      checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);
    }
    ieee754.write(buf, value, offset, littleEndian, 23, 4);
    return offset + 4;
  }
  Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
    return writeFloat(this, value, offset, true, noAssert);
  };
  Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
    return writeFloat(this, value, offset, false, noAssert);
  };
  function writeDouble(buf, value, offset, littleEndian, noAssert) {
    if (!noAssert) {
      checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);
    }
    ieee754.write(buf, value, offset, littleEndian, 52, 8);
    return offset + 8;
  }
  Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
    return writeDouble(this, value, offset, true, noAssert);
  };
  Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
    return writeDouble(this, value, offset, false, noAssert);
  };
  Buffer.prototype.copy = function copy(target, targetStart, start, end) {
    if (!start)
      start = 0;
    if (!end && end !== 0)
      end = this.length;
    if (targetStart >= target.length)
      targetStart = target.length;
    if (!targetStart)
      targetStart = 0;
    if (end > 0 && end < start)
      end = start;
    if (end === start)
      return 0;
    if (target.length === 0 || this.length === 0)
      return 0;
    if (targetStart < 0) {
      throw new RangeError('targetStart out of bounds');
    }
    if (start < 0 || start >= this.length)
      throw new RangeError('sourceStart out of bounds');
    if (end < 0)
      throw new RangeError('sourceEnd out of bounds');
    if (end > this.length)
      end = this.length;
    if (target.length - targetStart < end - start) {
      end = target.length - targetStart + start;
    }
    var len = end - start;
    var i;
    if (this === target && start < targetStart && targetStart < end) {
      for (i = len - 1; i >= 0; i--) {
        target[i + targetStart] = this[i + start];
      }
    } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
      for (i = 0; i < len; i++) {
        target[i + targetStart] = this[i + start];
      }
    } else {
      Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);
    }
    return len;
  };
  Buffer.prototype.fill = function fill(val, start, end, encoding) {
    if (typeof val === 'string') {
      if (typeof start === 'string') {
        encoding = start;
        start = 0;
        end = this.length;
      } else if (typeof end === 'string') {
        encoding = end;
        end = this.length;
      }
      if (val.length === 1) {
        var code = val.charCodeAt(0);
        if (code < 256) {
          val = code;
        }
      }
      if (encoding !== undefined && typeof encoding !== 'string') {
        throw new TypeError('encoding must be a string');
      }
      if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
        throw new TypeError('Unknown encoding: ' + encoding);
      }
    } else if (typeof val === 'number') {
      val = val & 255;
    }
    if (start < 0 || this.length < start || this.length < end) {
      throw new RangeError('Out of range index');
    }
    if (end <= start) {
      return this;
    }
    start = start >>> 0;
    end = end === undefined ? this.length : end >>> 0;
    if (!val)
      val = 0;
    var i;
    if (typeof val === 'number') {
      for (i = start; i < end; i++) {
        this[i] = val;
      }
    } else {
      var bytes = Buffer.isBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString());
      var len = bytes.length;
      for (i = 0; i < end - start; i++) {
        this[i + start] = bytes[i % len];
      }
    }
    return this;
  };
  var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g;
  function base64clean(str) {
    str = stringtrim(str).replace(INVALID_BASE64_RE, '');
    if (str.length < 2)
      return '';
    while (str.length % 4 !== 0) {
      str = str + '=';
    }
    return str;
  }
  function stringtrim(str) {
    if (str.trim)
      return str.trim();
    return str.replace(/^\s+|\s+$/g, '');
  }
  function toHex(n) {
    if (n < 16)
      return '0' + n.toString(16);
    return n.toString(16);
  }
  function utf8ToBytes(string, units) {
    units = units || Infinity;
    var codePoint;
    var length = string.length;
    var leadSurrogate = null;
    var bytes = [];
    for (var i = 0; i < length; i++) {
      codePoint = string.charCodeAt(i);
      if (codePoint > 0xD7FF && codePoint < 0xE000) {
        if (!leadSurrogate) {
          if (codePoint > 0xDBFF) {
            if ((units -= 3) > -1)
              bytes.push(0xEF, 0xBF, 0xBD);
            continue;
          } else if (i + 1 === length) {
            if ((units -= 3) > -1)
              bytes.push(0xEF, 0xBF, 0xBD);
            continue;
          }
          leadSurrogate = codePoint;
          continue;
        }
        if (codePoint < 0xDC00) {
          if ((units -= 3) > -1)
            bytes.push(0xEF, 0xBF, 0xBD);
          leadSurrogate = codePoint;
          continue;
        }
        codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;
      } else if (leadSurrogate) {
        if ((units -= 3) > -1)
          bytes.push(0xEF, 0xBF, 0xBD);
      }
      leadSurrogate = null;
      if (codePoint < 0x80) {
        if ((units -= 1) < 0)
          break;
        bytes.push(codePoint);
      } else if (codePoint < 0x800) {
        if ((units -= 2) < 0)
          break;
        bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);
      } else if (codePoint < 0x10000) {
        if ((units -= 3) < 0)
          break;
        bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
      } else if (codePoint < 0x110000) {
        if ((units -= 4) < 0)
          break;
        bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
      } else {
        throw new Error('Invalid code point');
      }
    }
    return bytes;
  }
  function asciiToBytes(str) {
    var byteArray = [];
    for (var i = 0; i < str.length; i++) {
      byteArray.push(str.charCodeAt(i) & 0xFF);
    }
    return byteArray;
  }
  function utf16leToBytes(str, units) {
    var c,
        hi,
        lo;
    var byteArray = [];
    for (var i = 0; i < str.length; i++) {
      if ((units -= 2) < 0)
        break;
      c = str.charCodeAt(i);
      hi = c >> 8;
      lo = c % 256;
      byteArray.push(lo);
      byteArray.push(hi);
    }
    return byteArray;
  }
  function base64ToBytes(str) {
    return base64.toByteArray(base64clean(str));
  }
  function blitBuffer(src, dst, offset, length) {
    for (var i = 0; i < length; i++) {
      if ((i + offset >= dst.length) || (i >= src.length))
        break;
      dst[i + offset] = src[i];
    }
    return i;
  }
  function isnan(val) {
    return val !== val;
  }
  return module.exports;
});

System.registerDynamic("github:jspm/nodelibs-buffer@0.2.0-alpha.json", [], false, function() {
  return {
    "main": "buffer.js",
    "map": {
      "./buffer.js": {
        "browser": "buffer-browserify"
      }
    }
  };
});

System.registerDynamic("github:jspm/nodelibs-buffer@0.2.0-alpha/global.js", ["./buffer.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  module.exports = $__require('./buffer.js').Buffer;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/isBuffer.js", ["./_root", "./stubFalse", "buffer/global"], true, function($__require, exports, module) {
  var Buffer = $__require("buffer/global");
  var define,
      global = this,
      GLOBAL = this;
  var root = $__require('./_root'),
      stubFalse = $__require('./stubFalse');
  var freeExports = typeof exports == 'object' && exports;
  var freeModule = freeExports && typeof module == 'object' && module;
  var moduleExports = freeModule && freeModule.exports === freeExports;
  var Buffer = moduleExports ? root.Buffer : undefined;
  var isBuffer = !Buffer ? stubFalse : function(value) {
    return value instanceof Buffer;
  };
  module.exports = isBuffer;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_isHostObject.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  function isHostObject(value) {
    var result = false;
    if (value != null && typeof value.toString != 'function') {
      try {
        result = !!(value + '');
      } catch (e) {}
    }
    return result;
  }
  module.exports = isHostObject;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_baseClone.js", ["./_Stack", "./_arrayEach", "./_assignValue", "./_baseAssign", "./_cloneBuffer", "./_copyArray", "./_copySymbols", "./_getAllKeys", "./_getTag", "./_initCloneArray", "./_initCloneByTag", "./_initCloneObject", "./isArray", "./isBuffer", "./_isHostObject", "./isObject", "./keys"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var Stack = $__require('./_Stack'),
      arrayEach = $__require('./_arrayEach'),
      assignValue = $__require('./_assignValue'),
      baseAssign = $__require('./_baseAssign'),
      cloneBuffer = $__require('./_cloneBuffer'),
      copyArray = $__require('./_copyArray'),
      copySymbols = $__require('./_copySymbols'),
      getAllKeys = $__require('./_getAllKeys'),
      getTag = $__require('./_getTag'),
      initCloneArray = $__require('./_initCloneArray'),
      initCloneByTag = $__require('./_initCloneByTag'),
      initCloneObject = $__require('./_initCloneObject'),
      isArray = $__require('./isArray'),
      isBuffer = $__require('./isBuffer'),
      isHostObject = $__require('./_isHostObject'),
      isObject = $__require('./isObject'),
      keys = $__require('./keys');
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      objectTag = '[object Object]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]',
      weakMapTag = '[object WeakMap]';
  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';
  var cloneableTags = {};
  cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
  function baseClone(value, isDeep, isFull, customizer, key, object, stack) {
    var result;
    if (customizer) {
      result = object ? customizer(value, key, object, stack) : customizer(value);
    }
    if (result !== undefined) {
      return result;
    }
    if (!isObject(value)) {
      return value;
    }
    var isArr = isArray(value);
    if (isArr) {
      result = initCloneArray(value);
      if (!isDeep) {
        return copyArray(value, result);
      }
    } else {
      var tag = getTag(value),
          isFunc = tag == funcTag || tag == genTag;
      if (isBuffer(value)) {
        return cloneBuffer(value, isDeep);
      }
      if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
        if (isHostObject(value)) {
          return object ? value : {};
        }
        result = initCloneObject(isFunc ? {} : value);
        if (!isDeep) {
          return copySymbols(value, baseAssign(result, value));
        }
      } else {
        if (!cloneableTags[tag]) {
          return object ? value : {};
        }
        result = initCloneByTag(value, tag, baseClone, isDeep);
      }
    }
    stack || (stack = new Stack);
    var stacked = stack.get(value);
    if (stacked) {
      return stacked;
    }
    stack.set(value, result);
    if (!isArr) {
      var props = isFull ? getAllKeys(value) : keys(value);
    }
    arrayEach(props || value, function(subValue, key) {
      if (props) {
        key = subValue;
        subValue = value[key];
      }
      assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));
    });
    return result;
  }
  module.exports = baseClone;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/clone.js", ["./_baseClone"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var baseClone = $__require('./_baseClone');
  function clone(value) {
    return baseClone(value, false, true);
  }
  module.exports = clone;
  return module.exports;
});

System.registerDynamic("npm:babel-traverse@6.9.0/lib/visitors.js", ["babel-runtime/helpers/typeof", "babel-runtime/core-js/object/keys", "babel-runtime/core-js/get-iterator", "./path/lib/virtual-types", "babel-messages", "babel-types", "lodash/clone", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  var _typeof2 = $__require('babel-runtime/helpers/typeof');
  var _typeof3 = _interopRequireDefault(_typeof2);
  var _keys = $__require('babel-runtime/core-js/object/keys');
  var _keys2 = _interopRequireDefault(_keys);
  var _getIterator2 = $__require('babel-runtime/core-js/get-iterator');
  var _getIterator3 = _interopRequireDefault(_getIterator2);
  exports.explode = explode;
  exports.verify = verify;
  exports.merge = merge;
  var _virtualTypes = $__require('./path/lib/virtual-types');
  var virtualTypes = _interopRequireWildcard(_virtualTypes);
  var _babelMessages = $__require('babel-messages');
  var messages = _interopRequireWildcard(_babelMessages);
  var _babelTypes = $__require('babel-types');
  var t = _interopRequireWildcard(_babelTypes);
  var _clone = $__require('lodash/clone');
  var _clone2 = _interopRequireDefault(_clone);
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj.default = obj;
      return newObj;
    }
  }
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  function explode(visitor) {
    if (visitor._exploded)
      return visitor;
    visitor._exploded = true;
    for (var nodeType in visitor) {
      if (shouldIgnoreKey(nodeType))
        continue;
      var parts = nodeType.split("|");
      if (parts.length === 1)
        continue;
      var fns = visitor[nodeType];
      delete visitor[nodeType];
      for (var _iterator = parts,
          _isArray = Array.isArray(_iterator),
          _i = 0,
          _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator); ; ) {
        var _ref;
        if (_isArray) {
          if (_i >= _iterator.length)
            break;
          _ref = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done)
            break;
          _ref = _i.value;
        }
        var part = _ref;
        visitor[part] = fns;
      }
    }
    verify(visitor);
    delete visitor.__esModule;
    ensureEntranceObjects(visitor);
    ensureCallbackArrays(visitor);
    for (var _iterator2 = (0, _keys2.default)(visitor),
        _isArray2 = Array.isArray(_iterator2),
        _i2 = 0,
        _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2); ; ) {
      var _ref2;
      if (_isArray2) {
        if (_i2 >= _iterator2.length)
          break;
        _ref2 = _iterator2[_i2++];
      } else {
        _i2 = _iterator2.next();
        if (_i2.done)
          break;
        _ref2 = _i2.value;
      }
      var _nodeType3 = _ref2;
      if (shouldIgnoreKey(_nodeType3))
        continue;
      var wrapper = virtualTypes[_nodeType3];
      if (!wrapper)
        continue;
      var _fns2 = visitor[_nodeType3];
      for (var type in _fns2) {
        _fns2[type] = wrapCheck(wrapper, _fns2[type]);
      }
      delete visitor[_nodeType3];
      if (wrapper.types) {
        for (var _iterator4 = wrapper.types,
            _isArray4 = Array.isArray(_iterator4),
            _i4 = 0,
            _iterator4 = _isArray4 ? _iterator4 : (0, _getIterator3.default)(_iterator4); ; ) {
          var _ref4;
          if (_isArray4) {
            if (_i4 >= _iterator4.length)
              break;
            _ref4 = _iterator4[_i4++];
          } else {
            _i4 = _iterator4.next();
            if (_i4.done)
              break;
            _ref4 = _i4.value;
          }
          var _type = _ref4;
          if (visitor[_type]) {
            mergePair(visitor[_type], _fns2);
          } else {
            visitor[_type] = _fns2;
          }
        }
      } else {
        mergePair(visitor, _fns2);
      }
    }
    for (var _nodeType in visitor) {
      if (shouldIgnoreKey(_nodeType))
        continue;
      var _fns = visitor[_nodeType];
      var aliases = t.FLIPPED_ALIAS_KEYS[_nodeType];
      var deprecratedKey = t.DEPRECATED_KEYS[_nodeType];
      if (deprecratedKey) {
        console.trace("Visitor defined for " + _nodeType + " but it has been renamed to " + deprecratedKey);
        aliases = [deprecratedKey];
      }
      if (!aliases)
        continue;
      delete visitor[_nodeType];
      for (var _iterator3 = aliases,
          _isArray3 = Array.isArray(_iterator3),
          _i3 = 0,
          _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3); ; ) {
        var _ref3;
        if (_isArray3) {
          if (_i3 >= _iterator3.length)
            break;
          _ref3 = _iterator3[_i3++];
        } else {
          _i3 = _iterator3.next();
          if (_i3.done)
            break;
          _ref3 = _i3.value;
        }
        var alias = _ref3;
        var existing = visitor[alias];
        if (existing) {
          mergePair(existing, _fns);
        } else {
          visitor[alias] = (0, _clone2.default)(_fns);
        }
      }
    }
    for (var _nodeType2 in visitor) {
      if (shouldIgnoreKey(_nodeType2))
        continue;
      ensureCallbackArrays(visitor[_nodeType2]);
    }
    return visitor;
  }
  function verify(visitor) {
    if (visitor._verified)
      return;
    if (typeof visitor === "function") {
      throw new Error(messages.get("traverseVerifyRootFunction"));
    }
    for (var nodeType in visitor) {
      if (nodeType === "enter" || nodeType === "exit") {
        validateVisitorMethods(nodeType, visitor[nodeType]);
      }
      if (shouldIgnoreKey(nodeType))
        continue;
      if (t.TYPES.indexOf(nodeType) < 0) {
        throw new Error(messages.get("traverseVerifyNodeType", nodeType));
      }
      var visitors = visitor[nodeType];
      if ((typeof visitors === "undefined" ? "undefined" : (0, _typeof3.default)(visitors)) === "object") {
        for (var visitorKey in visitors) {
          if (visitorKey === "enter" || visitorKey === "exit") {
            validateVisitorMethods(nodeType + "." + visitorKey, visitors[visitorKey]);
          } else {
            throw new Error(messages.get("traverseVerifyVisitorProperty", nodeType, visitorKey));
          }
        }
      }
    }
    visitor._verified = true;
  }
  function validateVisitorMethods(path, val) {
    var fns = [].concat(val);
    for (var _iterator5 = fns,
        _isArray5 = Array.isArray(_iterator5),
        _i5 = 0,
        _iterator5 = _isArray5 ? _iterator5 : (0, _getIterator3.default)(_iterator5); ; ) {
      var _ref5;
      if (_isArray5) {
        if (_i5 >= _iterator5.length)
          break;
        _ref5 = _iterator5[_i5++];
      } else {
        _i5 = _iterator5.next();
        if (_i5.done)
          break;
        _ref5 = _i5.value;
      }
      var fn = _ref5;
      if (typeof fn !== "function") {
        throw new TypeError("Non-function found defined in " + path + " with type " + (typeof fn === "undefined" ? "undefined" : (0, _typeof3.default)(fn)));
      }
    }
  }
  function merge(visitors) {
    var states = arguments.length <= 1 || arguments[1] === undefined ? [] : arguments[1];
    var rootVisitor = {};
    for (var i = 0; i < visitors.length; i++) {
      var visitor = visitors[i];
      var state = states[i];
      explode(visitor);
      for (var type in visitor) {
        var visitorType = visitor[type];
        if (state)
          visitorType = wrapWithState(visitorType, state);
        var nodeVisitor = rootVisitor[type] = rootVisitor[type] || {};
        mergePair(nodeVisitor, visitorType);
      }
    }
    return rootVisitor;
  }
  function wrapWithState(oldVisitor, state) {
    var newVisitor = {};
    for (var key in oldVisitor) {
      var fns = oldVisitor[key];
      if (!Array.isArray(fns))
        continue;
      fns = fns.map(function(fn) {
        var newFn = function newFn(path) {
          return fn.call(state, path, state);
        };
        newFn.toString = function() {
          return fn.toString();
        };
        return newFn;
      });
      newVisitor[key] = fns;
    }
    return newVisitor;
  }
  function ensureEntranceObjects(obj) {
    for (var key in obj) {
      if (shouldIgnoreKey(key))
        continue;
      var fns = obj[key];
      if (typeof fns === "function") {
        obj[key] = {enter: fns};
      }
    }
  }
  function ensureCallbackArrays(obj) {
    if (obj.enter && !Array.isArray(obj.enter))
      obj.enter = [obj.enter];
    if (obj.exit && !Array.isArray(obj.exit))
      obj.exit = [obj.exit];
  }
  function wrapCheck(wrapper, fn) {
    var newFn = function newFn(path) {
      if (wrapper.checkPath(path)) {
        return fn.apply(this, arguments);
      }
    };
    newFn.toString = function() {
      return fn.toString();
    };
    return newFn;
  }
  function shouldIgnoreKey(key) {
    if (key[0] === "_")
      return true;
    if (key === "enter" || key === "exit" || key === "shouldSkip")
      return true;
    if (key === "blacklist" || key === "noScope" || key === "skipKeys")
      return true;
    return false;
  }
  function mergePair(dest, src) {
    for (var key in src) {
      dest[key] = [].concat(dest[key] || [], src[key]);
    }
  }
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/fn/json/stringify.js", ["../../modules/_core", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var core = $__require('../../modules/_core'),
      $JSON = core.JSON || (core.JSON = {stringify: JSON.stringify});
  module.exports = function stringify(it) {
    return $JSON.stringify.apply($JSON, arguments);
  };
  return module.exports;
});

System.registerDynamic("npm:babel-runtime@6.9.2/core-js/json/stringify.js", ["core-js/library/fn/json/stringify"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  module.exports = {
    "default": $__require('core-js/library/fn/json/stringify'),
    __esModule: true
  };
  return module.exports;
});

System.registerDynamic("github:jspm/nodelibs-util@0.2.0-alpha/isBufferBrowser.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  module.exports = function isBuffer(arg) {
    return arg && typeof arg === 'object' && typeof arg.copy === 'function' && typeof arg.fill === 'function' && typeof arg.readUInt8 === 'function';
  };
  return module.exports;
});

System.registerDynamic("github:jspm/nodelibs-util@0.2.0-alpha.json", [], false, function() {
  return {
    "main": "./util.js",
    "map": {
      "./isBuffer.js": {
        "~node": "./isBufferBrowser.js"
      }
    }
  };
});

System.registerDynamic("github:jspm/nodelibs-util@0.2.0-alpha/util.js", ["process", "./isBuffer.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var process = $__require('process');
  var formatRegExp = /%[sdj%]/g;
  exports.format = function(f) {
    if (!isString(f)) {
      var objects = [];
      for (var i = 0; i < arguments.length; i++) {
        objects.push(inspect(arguments[i]));
      }
      return objects.join(' ');
    }
    var i = 1;
    var args = arguments;
    var len = args.length;
    var str = String(f).replace(formatRegExp, function(x) {
      if (x === '%%')
        return '%';
      if (i >= len)
        return x;
      switch (x) {
        case '%s':
          return String(args[i++]);
        case '%d':
          return Number(args[i++]);
        case '%j':
          try {
            return JSON.stringify(args[i++]);
          } catch (_) {
            return '[Circular]';
          }
        default:
          return x;
      }
    });
    for (var x = args[i]; i < len; x = args[++i]) {
      if (isNull(x) || !isObject(x)) {
        str += ' ' + x;
      } else {
        str += ' ' + inspect(x);
      }
    }
    return str;
  };
  exports.deprecate = function(fn, msg) {
    if (isUndefined(global.process)) {
      return function() {
        return exports.deprecate(fn, msg).apply(this, arguments);
      };
    }
    if (process.noDeprecation === true) {
      return fn;
    }
    var warned = false;
    function deprecated() {
      if (!warned) {
        if (process.throwDeprecation) {
          throw new Error(msg);
        } else if (process.traceDeprecation) {
          console.trace(msg);
        } else {
          console.error(msg);
        }
        warned = true;
      }
      return fn.apply(this, arguments);
    }
    return deprecated;
  };
  var debugs = {};
  var debugEnviron;
  exports.debuglog = function(set) {
    if (isUndefined(debugEnviron))
      debugEnviron = process.env.NODE_DEBUG || '';
    set = set.toUpperCase();
    if (!debugs[set]) {
      if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
        var pid = process.pid;
        debugs[set] = function() {
          var msg = exports.format.apply(exports, arguments);
          console.error('%s %d: %s', set, pid, msg);
        };
      } else {
        debugs[set] = function() {};
      }
    }
    return debugs[set];
  };
  function inspect(obj, opts) {
    var ctx = {
      seen: [],
      stylize: stylizeNoColor
    };
    if (arguments.length >= 3)
      ctx.depth = arguments[2];
    if (arguments.length >= 4)
      ctx.colors = arguments[3];
    if (isBoolean(opts)) {
      ctx.showHidden = opts;
    } else if (opts) {
      exports._extend(ctx, opts);
    }
    if (isUndefined(ctx.showHidden))
      ctx.showHidden = false;
    if (isUndefined(ctx.depth))
      ctx.depth = 2;
    if (isUndefined(ctx.colors))
      ctx.colors = false;
    if (isUndefined(ctx.customInspect))
      ctx.customInspect = true;
    if (ctx.colors)
      ctx.stylize = stylizeWithColor;
    return formatValue(ctx, obj, ctx.depth);
  }
  exports.inspect = inspect;
  inspect.colors = {
    'bold': [1, 22],
    'italic': [3, 23],
    'underline': [4, 24],
    'inverse': [7, 27],
    'white': [37, 39],
    'grey': [90, 39],
    'black': [30, 39],
    'blue': [34, 39],
    'cyan': [36, 39],
    'green': [32, 39],
    'magenta': [35, 39],
    'red': [31, 39],
    'yellow': [33, 39]
  };
  inspect.styles = {
    'special': 'cyan',
    'number': 'yellow',
    'boolean': 'yellow',
    'undefined': 'grey',
    'null': 'bold',
    'string': 'green',
    'date': 'magenta',
    'regexp': 'red'
  };
  function stylizeWithColor(str, styleType) {
    var style = inspect.styles[styleType];
    if (style) {
      return '\u001b[' + inspect.colors[style][0] + 'm' + str + '\u001b[' + inspect.colors[style][1] + 'm';
    } else {
      return str;
    }
  }
  function stylizeNoColor(str, styleType) {
    return str;
  }
  function arrayToHash(array) {
    var hash = {};
    array.forEach(function(val, idx) {
      hash[val] = true;
    });
    return hash;
  }
  function formatValue(ctx, value, recurseTimes) {
    if (ctx.customInspect && value && isFunction(value.inspect) && value.inspect !== exports.inspect && !(value.constructor && value.constructor.prototype === value)) {
      var ret = value.inspect(recurseTimes, ctx);
      if (!isString(ret)) {
        ret = formatValue(ctx, ret, recurseTimes);
      }
      return ret;
    }
    var primitive = formatPrimitive(ctx, value);
    if (primitive) {
      return primitive;
    }
    var keys = Object.keys(value);
    var visibleKeys = arrayToHash(keys);
    if (ctx.showHidden) {
      keys = Object.getOwnPropertyNames(value);
    }
    if (isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
      return formatError(value);
    }
    if (keys.length === 0) {
      if (isFunction(value)) {
        var name = value.name ? ': ' + value.name : '';
        return ctx.stylize('[Function' + name + ']', 'special');
      }
      if (isRegExp(value)) {
        return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
      }
      if (isDate(value)) {
        return ctx.stylize(Date.prototype.toString.call(value), 'date');
      }
      if (isError(value)) {
        return formatError(value);
      }
    }
    var base = '',
        array = false,
        braces = ['{', '}'];
    if (isArray(value)) {
      array = true;
      braces = ['[', ']'];
    }
    if (isFunction(value)) {
      var n = value.name ? ': ' + value.name : '';
      base = ' [Function' + n + ']';
    }
    if (isRegExp(value)) {
      base = ' ' + RegExp.prototype.toString.call(value);
    }
    if (isDate(value)) {
      base = ' ' + Date.prototype.toUTCString.call(value);
    }
    if (isError(value)) {
      base = ' ' + formatError(value);
    }
    if (keys.length === 0 && (!array || value.length == 0)) {
      return braces[0] + base + braces[1];
    }
    if (recurseTimes < 0) {
      if (isRegExp(value)) {
        return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
      } else {
        return ctx.stylize('[Object]', 'special');
      }
    }
    ctx.seen.push(value);
    var output;
    if (array) {
      output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
    } else {
      output = keys.map(function(key) {
        return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
      });
    }
    ctx.seen.pop();
    return reduceToSingleString(output, base, braces);
  }
  function formatPrimitive(ctx, value) {
    if (isUndefined(value))
      return ctx.stylize('undefined', 'undefined');
    if (isString(value)) {
      var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '').replace(/'/g, "\\'").replace(/\\"/g, '"') + '\'';
      return ctx.stylize(simple, 'string');
    }
    if (isNumber(value))
      return ctx.stylize('' + value, 'number');
    if (isBoolean(value))
      return ctx.stylize('' + value, 'boolean');
    if (isNull(value))
      return ctx.stylize('null', 'null');
  }
  function formatError(value) {
    return '[' + Error.prototype.toString.call(value) + ']';
  }
  function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
    var output = [];
    for (var i = 0,
        l = value.length; i < l; ++i) {
      if (hasOwnProperty(value, String(i))) {
        output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));
      } else {
        output.push('');
      }
    }
    keys.forEach(function(key) {
      if (!key.match(/^\d+$/)) {
        output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));
      }
    });
    return output;
  }
  function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
    var name,
        str,
        desc;
    desc = Object.getOwnPropertyDescriptor(value, key) || {value: value[key]};
    if (desc.get) {
      if (desc.set) {
        str = ctx.stylize('[Getter/Setter]', 'special');
      } else {
        str = ctx.stylize('[Getter]', 'special');
      }
    } else {
      if (desc.set) {
        str = ctx.stylize('[Setter]', 'special');
      }
    }
    if (!hasOwnProperty(visibleKeys, key)) {
      name = '[' + key + ']';
    }
    if (!str) {
      if (ctx.seen.indexOf(desc.value) < 0) {
        if (isNull(recurseTimes)) {
          str = formatValue(ctx, desc.value, null);
        } else {
          str = formatValue(ctx, desc.value, recurseTimes - 1);
        }
        if (str.indexOf('\n') > -1) {
          if (array) {
            str = str.split('\n').map(function(line) {
              return '  ' + line;
            }).join('\n').substr(2);
          } else {
            str = '\n' + str.split('\n').map(function(line) {
              return '   ' + line;
            }).join('\n');
          }
        }
      } else {
        str = ctx.stylize('[Circular]', 'special');
      }
    }
    if (isUndefined(name)) {
      if (array && key.match(/^\d+$/)) {
        return str;
      }
      name = JSON.stringify('' + key);
      if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
        name = name.substr(1, name.length - 2);
        name = ctx.stylize(name, 'name');
      } else {
        name = name.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'");
        name = ctx.stylize(name, 'string');
      }
    }
    return name + ': ' + str;
  }
  function reduceToSingleString(output, base, braces) {
    var numLinesEst = 0;
    var length = output.reduce(function(prev, cur) {
      numLinesEst++;
      if (cur.indexOf('\n') >= 0)
        numLinesEst++;
      return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
    }, 0);
    if (length > 60) {
      return braces[0] + (base === '' ? '' : base + '\n ') + ' ' + output.join(',\n  ') + ' ' + braces[1];
    }
    return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
  }
  function isArray(ar) {
    return Array.isArray(ar);
  }
  exports.isArray = isArray;
  function isBoolean(arg) {
    return typeof arg === 'boolean';
  }
  exports.isBoolean = isBoolean;
  function isNull(arg) {
    return arg === null;
  }
  exports.isNull = isNull;
  function isNullOrUndefined(arg) {
    return arg == null;
  }
  exports.isNullOrUndefined = isNullOrUndefined;
  function isNumber(arg) {
    return typeof arg === 'number';
  }
  exports.isNumber = isNumber;
  function isString(arg) {
    return typeof arg === 'string';
  }
  exports.isString = isString;
  function isSymbol(arg) {
    return typeof arg === 'symbol';
  }
  exports.isSymbol = isSymbol;
  function isUndefined(arg) {
    return arg === void 0;
  }
  exports.isUndefined = isUndefined;
  function isRegExp(re) {
    return isObject(re) && objectToString(re) === '[object RegExp]';
  }
  exports.isRegExp = isRegExp;
  function isObject(arg) {
    return typeof arg === 'object' && arg !== null;
  }
  exports.isObject = isObject;
  function isDate(d) {
    return isObject(d) && objectToString(d) === '[object Date]';
  }
  exports.isDate = isDate;
  function isError(e) {
    return isObject(e) && (objectToString(e) === '[object Error]' || e instanceof Error);
  }
  exports.isError = isError;
  function isFunction(arg) {
    return typeof arg === 'function';
  }
  exports.isFunction = isFunction;
  function isPrimitive(arg) {
    return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || typeof arg === 'symbol' || typeof arg === 'undefined';
  }
  exports.isPrimitive = isPrimitive;
  exports.isBuffer = $__require('./isBuffer.js');
  function objectToString(o) {
    return Object.prototype.toString.call(o);
  }
  function pad(n) {
    return n < 10 ? '0' + n.toString(10) : n.toString(10);
  }
  var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
  function timestamp() {
    var d = new Date();
    var time = [pad(d.getHours()), pad(d.getMinutes()), pad(d.getSeconds())].join(':');
    return [d.getDate(), months[d.getMonth()], time].join(' ');
  }
  exports.log = function() {
    console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
  };
  if (typeof Object.create === 'function') {
    exports.inherits = function inherits(ctor, superCtor) {
      ctor.super_ = superCtor;
      ctor.prototype = Object.create(superCtor.prototype, {constructor: {
          value: ctor,
          enumerable: false,
          writable: true,
          configurable: true
        }});
    };
  } else {
    exports.inherits = function inherits(ctor, superCtor) {
      ctor.super_ = superCtor;
      var TempCtor = function() {};
      TempCtor.prototype = superCtor.prototype;
      ctor.prototype = new TempCtor();
      ctor.prototype.constructor = ctor;
    };
  }
  exports._extend = function(origin, add) {
    if (!add || !isObject(add))
      return origin;
    var keys = Object.keys(add);
    var i = keys.length;
    while (i--) {
      origin[keys[i]] = add[keys[i]];
    }
    return origin;
  };
  function hasOwnProperty(obj, prop) {
    return Object.prototype.hasOwnProperty.call(obj, prop);
  }
  return module.exports;
});

System.registerDynamic("npm:babel-messages@6.8.0.json", [], false, function() {
  return {
    "main": "lib/index.js",
    "format": "cjs",
    "meta": {
      "*.json": {
        "format": "json"
      }
    },
    "map": {
      "./lib.js": "./lib/index.js"
    }
  };
});

System.registerDynamic("npm:babel-messages@6.8.0/lib/index.js", ["babel-runtime/core-js/json/stringify", "util"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  exports.MESSAGES = undefined;
  var _stringify = $__require('babel-runtime/core-js/json/stringify');
  var _stringify2 = _interopRequireDefault(_stringify);
  exports.get = get;
  exports.parseArgs = parseArgs;
  var _util = $__require('util');
  var util = _interopRequireWildcard(_util);
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj.default = obj;
      return newObj;
    }
  }
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  var MESSAGES = exports.MESSAGES = {
    tailCallReassignmentDeopt: "Function reference has been reassigned, so it will probably be dereferenced, therefore we can't optimise this with confidence",
    classesIllegalBareSuper: "Illegal use of bare super",
    classesIllegalSuperCall: "Direct super call is illegal in non-constructor, use super.$1() instead",
    scopeDuplicateDeclaration: "Duplicate declaration $1",
    settersNoRest: "Setters aren't allowed to have a rest",
    noAssignmentsInForHead: "No assignments allowed in for-in/of head",
    expectedMemberExpressionOrIdentifier: "Expected type MemberExpression or Identifier",
    invalidParentForThisNode: "We don't know how to handle this node within the current parent - please open an issue",
    readOnly: "$1 is read-only",
    unknownForHead: "Unknown node type $1 in ForStatement",
    didYouMean: "Did you mean $1?",
    codeGeneratorDeopt: "Note: The code generator has deoptimised the styling of $1 as it exceeds the max of $2.",
    missingTemplatesDirectory: "no templates directory - this is most likely the result of a broken `npm publish`. Please report to https://github.com/babel/babel/issues",
    unsupportedOutputType: "Unsupported output type $1",
    illegalMethodName: "Illegal method name $1",
    lostTrackNodePath: "We lost track of this node's position, likely because the AST was directly manipulated",
    modulesIllegalExportName: "Illegal export $1",
    modulesDuplicateDeclarations: "Duplicate module declarations with the same source but in different scopes",
    undeclaredVariable: "Reference to undeclared variable $1",
    undeclaredVariableType: "Referencing a type alias outside of a type annotation",
    undeclaredVariableSuggestion: "Reference to undeclared variable $1 - did you mean $2?",
    traverseNeedsParent: "You must pass a scope and parentPath unless traversing a Program/File. Instead of that you tried to traverse a $1 node without passing scope and parentPath.",
    traverseVerifyRootFunction: "You passed `traverse()` a function when it expected a visitor object, are you sure you didn't mean `{ enter: Function }`?",
    traverseVerifyVisitorProperty: "You passed `traverse()` a visitor object with the property $1 that has the invalid property $2",
    traverseVerifyNodeType: "You gave us a visitor for the node type $1 but it's not a valid type",
    pluginNotObject: "Plugin $2 specified in $1 was expected to return an object when invoked but returned $3",
    pluginNotFunction: "Plugin $2 specified in $1 was expected to return a function but returned $3",
    pluginUnknown: "Unknown plugin $1 specified in $2 at $3, attempted to resolve relative to $4",
    pluginInvalidProperty: "Plugin $2 specified in $1 provided an invalid property of $3"
  };
  function get(key) {
    for (var _len = arguments.length,
        args = Array(_len > 1 ? _len - 1 : 0),
        _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }
    var msg = MESSAGES[key];
    if (!msg)
      throw new ReferenceError("Unknown message " + (0, _stringify2.default)(key));
    args = parseArgs(args);
    return msg.replace(/\$(\d+)/g, function(str, i) {
      return args[i - 1];
    });
  }
  function parseArgs(args) {
    return args.map(function(val) {
      if (val != null && val.inspect) {
        return val.inspect();
      } else {
        try {
          return ((0, _stringify2.default)(val) || val + "");
        } catch (e) {
          return util.inspect(val);
        }
      }
    });
  }
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_indexOfNaN.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  function indexOfNaN(array, fromIndex, fromRight) {
    var length = array.length,
        index = fromIndex + (fromRight ? 1 : -1);
    while ((fromRight ? index-- : ++index < length)) {
      var other = array[index];
      if (other !== other) {
        return index;
      }
    }
    return -1;
  }
  module.exports = indexOfNaN;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_baseIndexOf.js", ["./_indexOfNaN"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var indexOfNaN = $__require('./_indexOfNaN');
  function baseIndexOf(array, value, fromIndex) {
    if (value !== value) {
      return indexOfNaN(array, fromIndex);
    }
    var index = fromIndex - 1,
        length = array.length;
    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }
  module.exports = baseIndexOf;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/isSymbol.js", ["./isObjectLike"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var isObjectLike = $__require('./isObjectLike');
  var symbolTag = '[object Symbol]';
  var objectProto = Object.prototype;
  var objectToString = objectProto.toString;
  function isSymbol(value) {
    return typeof value == 'symbol' || (isObjectLike(value) && objectToString.call(value) == symbolTag);
  }
  module.exports = isSymbol;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/toNumber.js", ["./isFunction", "./isObject", "./isSymbol"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var isFunction = $__require('./isFunction'),
      isObject = $__require('./isObject'),
      isSymbol = $__require('./isSymbol');
  var NAN = 0 / 0;
  var reTrim = /^\s+|\s+$/g;
  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
  var reIsBinary = /^0b[01]+$/i;
  var reIsOctal = /^0o[0-7]+$/i;
  var freeParseInt = parseInt;
  function toNumber(value) {
    if (typeof value == 'number') {
      return value;
    }
    if (isSymbol(value)) {
      return NAN;
    }
    if (isObject(value)) {
      var other = isFunction(value.valueOf) ? value.valueOf() : value;
      value = isObject(other) ? (other + '') : other;
    }
    if (typeof value != 'string') {
      return value === 0 ? value : +value;
    }
    value = value.replace(reTrim, '');
    var isBinary = reIsBinary.test(value);
    return (isBinary || reIsOctal.test(value)) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : (reIsBadHex.test(value) ? NAN : +value);
  }
  module.exports = toNumber;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/toFinite.js", ["./toNumber"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var toNumber = $__require('./toNumber');
  var INFINITY = 1 / 0,
      MAX_INTEGER = 1.7976931348623157e+308;
  function toFinite(value) {
    if (!value) {
      return value === 0 ? value : 0;
    }
    value = toNumber(value);
    if (value === INFINITY || value === -INFINITY) {
      var sign = (value < 0 ? -1 : 1);
      return sign * MAX_INTEGER;
    }
    return value === value ? value : 0;
  }
  module.exports = toFinite;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/toInteger.js", ["./toFinite"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var toFinite = $__require('./toFinite');
  function toInteger(value) {
    var result = toFinite(value),
        remainder = result % 1;
    return result === result ? (remainder ? result - remainder : result) : 0;
  }
  module.exports = toInteger;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_arrayMap.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  function arrayMap(array, iteratee) {
    var index = -1,
        length = array ? array.length : 0,
        result = Array(length);
    while (++index < length) {
      result[index] = iteratee(array[index], index, array);
    }
    return result;
  }
  module.exports = arrayMap;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_baseValues.js", ["./_arrayMap"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var arrayMap = $__require('./_arrayMap');
  function baseValues(object, props) {
    return arrayMap(props, function(key) {
      return object[key];
    });
  }
  module.exports = baseValues;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_getPrototype.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var nativeGetPrototype = Object.getPrototypeOf;
  function getPrototype(value) {
    return nativeGetPrototype(Object(value));
  }
  module.exports = getPrototype;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_baseHas.js", ["./_getPrototype"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var getPrototype = $__require('./_getPrototype');
  var objectProto = Object.prototype;
  var hasOwnProperty = objectProto.hasOwnProperty;
  function baseHas(object, key) {
    return object != null && (hasOwnProperty.call(object, key) || (typeof object == 'object' && key in object && getPrototype(object) === null));
  }
  module.exports = baseHas;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_baseKeys.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var nativeKeys = Object.keys;
  function baseKeys(object) {
    return nativeKeys(Object(object));
  }
  module.exports = baseKeys;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_baseTimes.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  function baseTimes(n, iteratee) {
    var index = -1,
        result = Array(n);
    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }
  module.exports = baseTimes;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/isArrayLikeObject.js", ["./isArrayLike", "./isObjectLike"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var isArrayLike = $__require('./isArrayLike'),
      isObjectLike = $__require('./isObjectLike');
  function isArrayLikeObject(value) {
    return isObjectLike(value) && isArrayLike(value);
  }
  module.exports = isArrayLikeObject;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/isArguments.js", ["./isArrayLikeObject"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var isArrayLikeObject = $__require('./isArrayLikeObject');
  var argsTag = '[object Arguments]';
  var objectProto = Object.prototype;
  var hasOwnProperty = objectProto.hasOwnProperty;
  var objectToString = objectProto.toString;
  var propertyIsEnumerable = objectProto.propertyIsEnumerable;
  function isArguments(value) {
    return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') && (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
  }
  module.exports = isArguments;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/isArray.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var isArray = Array.isArray;
  module.exports = isArray;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/isObjectLike.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  function isObjectLike(value) {
    return !!value && typeof value == 'object';
  }
  module.exports = isObjectLike;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/isString.js", ["./isArray", "./isObjectLike"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var isArray = $__require('./isArray'),
      isObjectLike = $__require('./isObjectLike');
  var stringTag = '[object String]';
  var objectProto = Object.prototype;
  var objectToString = objectProto.toString;
  function isString(value) {
    return typeof value == 'string' || (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);
  }
  module.exports = isString;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_indexKeys.js", ["./_baseTimes", "./isArguments", "./isArray", "./isLength", "./isString"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var baseTimes = $__require('./_baseTimes'),
      isArguments = $__require('./isArguments'),
      isArray = $__require('./isArray'),
      isLength = $__require('./isLength'),
      isString = $__require('./isString');
  function indexKeys(object) {
    var length = object ? object.length : undefined;
    if (isLength(length) && (isArray(object) || isString(object) || isArguments(object))) {
      return baseTimes(length, String);
    }
    return null;
  }
  module.exports = indexKeys;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_baseProperty.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  function baseProperty(key) {
    return function(object) {
      return object == null ? undefined : object[key];
    };
  }
  module.exports = baseProperty;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_getLength.js", ["./_baseProperty"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var baseProperty = $__require('./_baseProperty');
  var getLength = baseProperty('length');
  module.exports = getLength;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/isObject.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  function isObject(value) {
    var type = typeof value;
    return !!value && (type == 'object' || type == 'function');
  }
  module.exports = isObject;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/isFunction.js", ["./isObject"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var isObject = $__require('./isObject');
  var funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]';
  var objectProto = Object.prototype;
  var objectToString = objectProto.toString;
  function isFunction(value) {
    var tag = isObject(value) ? objectToString.call(value) : '';
    return tag == funcTag || tag == genTag;
  }
  module.exports = isFunction;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/isLength.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var MAX_SAFE_INTEGER = 9007199254740991;
  function isLength(value) {
    return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
  }
  module.exports = isLength;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/isArrayLike.js", ["./_getLength", "./isFunction", "./isLength"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var getLength = $__require('./_getLength'),
      isFunction = $__require('./isFunction'),
      isLength = $__require('./isLength');
  function isArrayLike(value) {
    return value != null && isLength(getLength(value)) && !isFunction(value);
  }
  module.exports = isArrayLike;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_isIndex.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var MAX_SAFE_INTEGER = 9007199254740991;
  var reIsUint = /^(?:0|[1-9]\d*)$/;
  function isIndex(value, length) {
    length = length == null ? MAX_SAFE_INTEGER : length;
    return !!length && (typeof value == 'number' || reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
  }
  module.exports = isIndex;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/_isPrototype.js", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var objectProto = Object.prototype;
  function isPrototype(value) {
    var Ctor = value && value.constructor,
        proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;
    return value === proto;
  }
  module.exports = isPrototype;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/keys.js", ["./_baseHas", "./_baseKeys", "./_indexKeys", "./isArrayLike", "./_isIndex", "./_isPrototype"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var baseHas = $__require('./_baseHas'),
      baseKeys = $__require('./_baseKeys'),
      indexKeys = $__require('./_indexKeys'),
      isArrayLike = $__require('./isArrayLike'),
      isIndex = $__require('./_isIndex'),
      isPrototype = $__require('./_isPrototype');
  function keys(object) {
    var isProto = isPrototype(object);
    if (!(isProto || isArrayLike(object))) {
      return baseKeys(object);
    }
    var indexes = indexKeys(object),
        skipIndexes = !!indexes,
        result = indexes || [],
        length = result.length;
    for (var key in object) {
      if (baseHas(object, key) && !(skipIndexes && (key == 'length' || isIndex(key, length))) && !(isProto && key == 'constructor')) {
        result.push(key);
      }
    }
    return result;
  }
  module.exports = keys;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1/values.js", ["./_baseValues", "./keys"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var baseValues = $__require('./_baseValues'),
      keys = $__require('./keys');
  function values(object) {
    return object ? baseValues(object, keys(object)) : [];
  }
  module.exports = values;
  return module.exports;
});

System.registerDynamic("npm:lodash@4.13.1.json", [], false, function() {
  return {
    "main": "lodash.js",
    "format": "cjs",
    "meta": {
      "*.json": {
        "format": "json"
      },
      "core.js": {
        "format": "amd"
      },
      "core.min.js": {
        "format": "amd"
      },
      "isBuffer.js": {
        "globals": {
          "Buffer": "buffer/global"
        }
      },
      "lodash.js": {
        "format": "amd"
      },
      "lodash.min.js": {
        "format": "amd"
      }
    }
  };
});

System.registerDynamic("npm:lodash@4.13.1/includes.js", ["./_baseIndexOf", "./isArrayLike", "./isString", "./toInteger", "./values"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var baseIndexOf = $__require('./_baseIndexOf'),
      isArrayLike = $__require('./isArrayLike'),
      isString = $__require('./isString'),
      toInteger = $__require('./toInteger'),
      values = $__require('./values');
  var nativeMax = Math.max;
  function includes(collection, value, fromIndex, guard) {
    collection = isArrayLike(collection) ? collection : values(collection);
    fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;
    var length = collection.length;
    if (fromIndex < 0) {
      fromIndex = nativeMax(length + fromIndex, 0);
    }
    return isString(collection) ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1) : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
  }
  module.exports = includes;
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/es6.object.to-string.js", ["process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_add-to-unscopables.js", ["process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  module.exports = function() {};
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_iter-step.js", ["process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  module.exports = function(done, value) {
    return {
      value: value,
      done: !!done
    };
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_library.js", ["process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  module.exports = true;
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_object-dps.js", ["./_object-dp", "./_an-object", "./_object-keys", "./_descriptors", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var dP = $__require('./_object-dp'),
      anObject = $__require('./_an-object'),
      getKeys = $__require('./_object-keys');
  module.exports = $__require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {
    anObject(O);
    var keys = getKeys(Properties),
        length = keys.length,
        i = 0,
        P;
    while (length > i)
      dP.f(O, P = keys[i++], Properties[P]);
    return O;
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_html.js", ["./_global", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  module.exports = $__require('./_global').document && document.documentElement;
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_object-create.js", ["./_an-object", "./_object-dps", "./_enum-bug-keys", "./_shared-key", "./_dom-create", "./_html", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var anObject = $__require('./_an-object'),
      dPs = $__require('./_object-dps'),
      enumBugKeys = $__require('./_enum-bug-keys'),
      IE_PROTO = $__require('./_shared-key')('IE_PROTO'),
      Empty = function() {},
      PROTOTYPE = 'prototype';
  var createDict = function() {
    var iframe = $__require('./_dom-create')('iframe'),
        i = enumBugKeys.length,
        gt = '>',
        iframeDocument;
    iframe.style.display = 'none';
    $__require('./_html').appendChild(iframe);
    iframe.src = 'javascript:';
    iframeDocument = iframe.contentWindow.document;
    iframeDocument.open();
    iframeDocument.write('<script>document.F=Object</script' + gt);
    iframeDocument.close();
    createDict = iframeDocument.F;
    while (i--)
      delete createDict[PROTOTYPE][enumBugKeys[i]];
    return createDict();
  };
  module.exports = Object.create || function create(O, Properties) {
    var result;
    if (O !== null) {
      Empty[PROTOTYPE] = anObject(O);
      result = new Empty;
      Empty[PROTOTYPE] = null;
      result[IE_PROTO] = O;
    } else
      result = createDict();
    return Properties === undefined ? result : dPs(result, Properties);
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_iter-create.js", ["./_object-create", "./_property-desc", "./_set-to-string-tag", "./_hide", "./_wks", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var create = $__require('./_object-create'),
      descriptor = $__require('./_property-desc'),
      setToStringTag = $__require('./_set-to-string-tag'),
      IteratorPrototype = {};
  $__require('./_hide')(IteratorPrototype, $__require('./_wks')('iterator'), function() {
    return this;
  });
  module.exports = function(Constructor, NAME, next) {
    Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});
    setToStringTag(Constructor, NAME + ' Iterator');
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_object-gpo.js", ["./_has", "./_to-object", "./_shared-key", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var has = $__require('./_has'),
      toObject = $__require('./_to-object'),
      IE_PROTO = $__require('./_shared-key')('IE_PROTO'),
      ObjectProto = Object.prototype;
  module.exports = Object.getPrototypeOf || function(O) {
    O = toObject(O);
    if (has(O, IE_PROTO))
      return O[IE_PROTO];
    if (typeof O.constructor == 'function' && O instanceof O.constructor) {
      return O.constructor.prototype;
    }
    return O instanceof Object ? ObjectProto : null;
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_iter-define.js", ["./_library", "./_export", "./_redefine", "./_hide", "./_has", "./_iterators", "./_iter-create", "./_set-to-string-tag", "./_object-gpo", "./_wks", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var LIBRARY = $__require('./_library'),
      $export = $__require('./_export'),
      redefine = $__require('./_redefine'),
      hide = $__require('./_hide'),
      has = $__require('./_has'),
      Iterators = $__require('./_iterators'),
      $iterCreate = $__require('./_iter-create'),
      setToStringTag = $__require('./_set-to-string-tag'),
      getPrototypeOf = $__require('./_object-gpo'),
      ITERATOR = $__require('./_wks')('iterator'),
      BUGGY = !([].keys && 'next' in [].keys()),
      FF_ITERATOR = '@@iterator',
      KEYS = 'keys',
      VALUES = 'values';
  var returnThis = function() {
    return this;
  };
  module.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
    $iterCreate(Constructor, NAME, next);
    var getMethod = function(kind) {
      if (!BUGGY && kind in proto)
        return proto[kind];
      switch (kind) {
        case KEYS:
          return function keys() {
            return new Constructor(this, kind);
          };
        case VALUES:
          return function values() {
            return new Constructor(this, kind);
          };
      }
      return function entries() {
        return new Constructor(this, kind);
      };
    };
    var TAG = NAME + ' Iterator',
        DEF_VALUES = DEFAULT == VALUES,
        VALUES_BUG = false,
        proto = Base.prototype,
        $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT],
        $default = $native || getMethod(DEFAULT),
        $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined,
        $anyNative = NAME == 'Array' ? proto.entries || $native : $native,
        methods,
        key,
        IteratorPrototype;
    if ($anyNative) {
      IteratorPrototype = getPrototypeOf($anyNative.call(new Base));
      if (IteratorPrototype !== Object.prototype) {
        setToStringTag(IteratorPrototype, TAG, true);
        if (!LIBRARY && !has(IteratorPrototype, ITERATOR))
          hide(IteratorPrototype, ITERATOR, returnThis);
      }
    }
    if (DEF_VALUES && $native && $native.name !== VALUES) {
      VALUES_BUG = true;
      $default = function values() {
        return $native.call(this);
      };
    }
    if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
      hide(proto, ITERATOR, $default);
    }
    Iterators[NAME] = $default;
    Iterators[TAG] = returnThis;
    if (DEFAULT) {
      methods = {
        values: DEF_VALUES ? $default : getMethod(VALUES),
        keys: IS_SET ? $default : getMethod(KEYS),
        entries: $entries
      };
      if (FORCED)
        for (key in methods) {
          if (!(key in proto))
            redefine(proto, key, methods[key]);
        }
      else
        $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
    }
    return methods;
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/es6.array.iterator.js", ["./_add-to-unscopables", "./_iter-step", "./_iterators", "./_to-iobject", "./_iter-define", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var addToUnscopables = $__require('./_add-to-unscopables'),
      step = $__require('./_iter-step'),
      Iterators = $__require('./_iterators'),
      toIObject = $__require('./_to-iobject');
  module.exports = $__require('./_iter-define')(Array, 'Array', function(iterated, kind) {
    this._t = toIObject(iterated);
    this._i = 0;
    this._k = kind;
  }, function() {
    var O = this._t,
        kind = this._k,
        index = this._i++;
    if (!O || index >= O.length) {
      this._t = undefined;
      return step(1);
    }
    if (kind == 'keys')
      return step(0, index);
    if (kind == 'values')
      return step(0, O[index]);
    return step(0, [index, O[index]]);
  }, 'values');
  Iterators.Arguments = Iterators.Array;
  addToUnscopables('keys');
  addToUnscopables('values');
  addToUnscopables('entries');
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/web.dom.iterable.js", ["./es6.array.iterator", "./_global", "./_hide", "./_iterators", "./_wks", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  $__require('./es6.array.iterator');
  var global = $__require('./_global'),
      hide = $__require('./_hide'),
      Iterators = $__require('./_iterators'),
      TO_STRING_TAG = $__require('./_wks')('toStringTag');
  for (var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'],
      i = 0; i < 5; i++) {
    var NAME = collections[i],
        Collection = global[NAME],
        proto = Collection && Collection.prototype;
    if (proto && !proto[TO_STRING_TAG])
      hide(proto, TO_STRING_TAG, NAME);
    Iterators[NAME] = Iterators.Array;
  }
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_redefine.js", ["./_hide", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  module.exports = $__require('./_hide');
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_to-iobject.js", ["./_iobject", "./_defined", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var IObject = $__require('./_iobject'),
      defined = $__require('./_defined');
  module.exports = function(it) {
    return IObject(defined(it));
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_to-index.js", ["./_to-integer", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var toInteger = $__require('./_to-integer'),
      max = Math.max,
      min = Math.min;
  module.exports = function(index, length) {
    index = toInteger(index);
    return index < 0 ? max(index + length, 0) : min(index, length);
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_array-includes.js", ["./_to-iobject", "./_to-length", "./_to-index", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var toIObject = $__require('./_to-iobject'),
      toLength = $__require('./_to-length'),
      toIndex = $__require('./_to-index');
  module.exports = function(IS_INCLUDES) {
    return function($this, el, fromIndex) {
      var O = toIObject($this),
          length = toLength(O.length),
          index = toIndex(fromIndex, length),
          value;
      if (IS_INCLUDES && el != el)
        while (length > index) {
          value = O[index++];
          if (value != value)
            return true;
        }
      else
        for (; length > index; index++)
          if (IS_INCLUDES || index in O) {
            if (O[index] === el)
              return IS_INCLUDES || index || 0;
          }
      return !IS_INCLUDES && -1;
    };
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_shared-key.js", ["./_shared", "./_uid", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var shared = $__require('./_shared')('keys'),
      uid = $__require('./_uid');
  module.exports = function(key) {
    return shared[key] || (shared[key] = uid(key));
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_object-keys-internal.js", ["./_has", "./_to-iobject", "./_array-includes", "./_shared-key", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var has = $__require('./_has'),
      toIObject = $__require('./_to-iobject'),
      arrayIndexOf = $__require('./_array-includes')(false),
      IE_PROTO = $__require('./_shared-key')('IE_PROTO');
  module.exports = function(object, names) {
    var O = toIObject(object),
        i = 0,
        result = [],
        key;
    for (key in O)
      if (key != IE_PROTO)
        has(O, key) && result.push(key);
    while (names.length > i)
      if (has(O, key = names[i++])) {
        ~arrayIndexOf(result, key) || result.push(key);
      }
    return result;
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_enum-bug-keys.js", ["process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  module.exports = ('constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf').split(',');
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_object-keys.js", ["./_object-keys-internal", "./_enum-bug-keys", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var $keys = $__require('./_object-keys-internal'),
      enumBugKeys = $__require('./_enum-bug-keys');
  module.exports = Object.keys || function keys(O) {
    return $keys(O, enumBugKeys);
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_object-gops.js", ["process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  exports.f = Object.getOwnPropertySymbols;
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_object-pie.js", ["process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  exports.f = {}.propertyIsEnumerable;
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_object-assign.js", ["./_object-keys", "./_object-gops", "./_object-pie", "./_to-object", "./_iobject", "./_fails", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var getKeys = $__require('./_object-keys'),
      gOPS = $__require('./_object-gops'),
      pIE = $__require('./_object-pie'),
      toObject = $__require('./_to-object'),
      IObject = $__require('./_iobject'),
      $assign = Object.assign;
  module.exports = !$assign || $__require('./_fails')(function() {
    var A = {},
        B = {},
        S = Symbol(),
        K = 'abcdefghijklmnopqrst';
    A[S] = 7;
    K.split('').forEach(function(k) {
      B[k] = k;
    });
    return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
  }) ? function assign(target, source) {
    var T = toObject(target),
        aLen = arguments.length,
        index = 1,
        getSymbols = gOPS.f,
        isEnum = pIE.f;
    while (aLen > index) {
      var S = IObject(arguments[index++]),
          keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S),
          length = keys.length,
          j = 0,
          key;
      while (length > j)
        if (isEnum.call(S, key = keys[j++]))
          T[key] = S[key];
    }
    return T;
  } : $assign;
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_collection-weak.js", ["./_redefine-all", "./_meta", "./_an-object", "./_is-object", "./_an-instance", "./_for-of", "./_array-methods", "./_has", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var redefineAll = $__require('./_redefine-all'),
      getWeak = $__require('./_meta').getWeak,
      anObject = $__require('./_an-object'),
      isObject = $__require('./_is-object'),
      anInstance = $__require('./_an-instance'),
      forOf = $__require('./_for-of'),
      createArrayMethod = $__require('./_array-methods'),
      $has = $__require('./_has'),
      arrayFind = createArrayMethod(5),
      arrayFindIndex = createArrayMethod(6),
      id = 0;
  var uncaughtFrozenStore = function(that) {
    return that._l || (that._l = new UncaughtFrozenStore);
  };
  var UncaughtFrozenStore = function() {
    this.a = [];
  };
  var findUncaughtFrozen = function(store, key) {
    return arrayFind(store.a, function(it) {
      return it[0] === key;
    });
  };
  UncaughtFrozenStore.prototype = {
    get: function(key) {
      var entry = findUncaughtFrozen(this, key);
      if (entry)
        return entry[1];
    },
    has: function(key) {
      return !!findUncaughtFrozen(this, key);
    },
    set: function(key, value) {
      var entry = findUncaughtFrozen(this, key);
      if (entry)
        entry[1] = value;
      else
        this.a.push([key, value]);
    },
    'delete': function(key) {
      var index = arrayFindIndex(this.a, function(it) {
        return it[0] === key;
      });
      if (~index)
        this.a.splice(index, 1);
      return !!~index;
    }
  };
  module.exports = {
    getConstructor: function(wrapper, NAME, IS_MAP, ADDER) {
      var C = wrapper(function(that, iterable) {
        anInstance(that, C, NAME, '_i');
        that._i = id++;
        that._l = undefined;
        if (iterable != undefined)
          forOf(iterable, IS_MAP, that[ADDER], that);
      });
      redefineAll(C.prototype, {
        'delete': function(key) {
          if (!isObject(key))
            return false;
          var data = getWeak(key);
          if (data === true)
            return uncaughtFrozenStore(this)['delete'](key);
          return data && $has(data, this._i) && delete data[this._i];
        },
        has: function has(key) {
          if (!isObject(key))
            return false;
          var data = getWeak(key);
          if (data === true)
            return uncaughtFrozenStore(this).has(key);
          return data && $has(data, this._i);
        }
      });
      return C;
    },
    def: function(that, key, value) {
      var data = getWeak(anObject(key), true);
      if (data === true)
        uncaughtFrozenStore(that).set(key, value);
      else
        data[that._i] = value;
      return that;
    },
    ufstore: uncaughtFrozenStore
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_export.js", ["./_global", "./_core", "./_ctx", "./_hide", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var global = $__require('./_global'),
      core = $__require('./_core'),
      ctx = $__require('./_ctx'),
      hide = $__require('./_hide'),
      PROTOTYPE = 'prototype';
  var $export = function(type, name, source) {
    var IS_FORCED = type & $export.F,
        IS_GLOBAL = type & $export.G,
        IS_STATIC = type & $export.S,
        IS_PROTO = type & $export.P,
        IS_BIND = type & $export.B,
        IS_WRAP = type & $export.W,
        exports = IS_GLOBAL ? core : core[name] || (core[name] = {}),
        expProto = exports[PROTOTYPE],
        target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE],
        key,
        own,
        out;
    if (IS_GLOBAL)
      source = name;
    for (key in source) {
      own = !IS_FORCED && target && target[key] !== undefined;
      if (own && key in exports)
        continue;
      out = own ? target[key] : source[key];
      exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key] : IS_BIND && own ? ctx(out, global) : IS_WRAP && target[key] == out ? (function(C) {
        var F = function(a, b, c) {
          if (this instanceof C) {
            switch (arguments.length) {
              case 0:
                return new C;
              case 1:
                return new C(a);
              case 2:
                return new C(a, b);
            }
            return new C(a, b, c);
          }
          return C.apply(this, arguments);
        };
        F[PROTOTYPE] = C[PROTOTYPE];
        return F;
      })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
      if (IS_PROTO) {
        (exports.virtual || (exports.virtual = {}))[key] = out;
        if (type & $export.R && expProto && !expProto[key])
          hide(expProto, key, out);
      }
    }
  };
  $export.F = 1;
  $export.G = 2;
  $export.S = 4;
  $export.P = 8;
  $export.B = 16;
  $export.W = 32;
  $export.U = 64;
  $export.R = 128;
  module.exports = $export;
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_meta.js", ["./_uid", "./_is-object", "./_has", "./_object-dp", "./_fails", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var META = $__require('./_uid')('meta'),
      isObject = $__require('./_is-object'),
      has = $__require('./_has'),
      setDesc = $__require('./_object-dp').f,
      id = 0;
  var isExtensible = Object.isExtensible || function() {
    return true;
  };
  var FREEZE = !$__require('./_fails')(function() {
    return isExtensible(Object.preventExtensions({}));
  });
  var setMeta = function(it) {
    setDesc(it, META, {value: {
        i: 'O' + ++id,
        w: {}
      }});
  };
  var fastKey = function(it, create) {
    if (!isObject(it))
      return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
    if (!has(it, META)) {
      if (!isExtensible(it))
        return 'F';
      if (!create)
        return 'E';
      setMeta(it);
    }
    return it[META].i;
  };
  var getWeak = function(it, create) {
    if (!has(it, META)) {
      if (!isExtensible(it))
        return true;
      if (!create)
        return false;
      setMeta(it);
    }
    return it[META].w;
  };
  var onFreeze = function(it) {
    if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META))
      setMeta(it);
    return it;
  };
  var meta = module.exports = {
    KEY: META,
    NEED: false,
    fastKey: fastKey,
    getWeak: getWeak,
    onFreeze: onFreeze
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_property-desc.js", ["process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  module.exports = function(bitmap, value) {
    return {
      enumerable: !(bitmap & 1),
      configurable: !(bitmap & 2),
      writable: !(bitmap & 4),
      value: value
    };
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_hide.js", ["./_object-dp", "./_property-desc", "./_descriptors", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var dP = $__require('./_object-dp'),
      createDesc = $__require('./_property-desc');
  module.exports = $__require('./_descriptors') ? function(object, key, value) {
    return dP.f(object, key, createDesc(1, value));
  } : function(object, key, value) {
    object[key] = value;
    return object;
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_redefine-all.js", ["./_hide", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var hide = $__require('./_hide');
  module.exports = function(target, src, safe) {
    for (var key in src) {
      if (safe && target[key])
        target[key] = src[key];
      else
        hide(target, key, src[key]);
    }
    return target;
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_iter-call.js", ["./_an-object", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var anObject = $__require('./_an-object');
  module.exports = function(iterator, fn, value, entries) {
    try {
      return entries ? fn(anObject(value)[0], value[1]) : fn(value);
    } catch (e) {
      var ret = iterator['return'];
      if (ret !== undefined)
        anObject(ret.call(iterator));
      throw e;
    }
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_is-array-iter.js", ["./_iterators", "./_wks", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var Iterators = $__require('./_iterators'),
      ITERATOR = $__require('./_wks')('iterator'),
      ArrayProto = Array.prototype;
  module.exports = function(it) {
    return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_classof.js", ["./_cof", "./_wks", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var cof = $__require('./_cof'),
      TAG = $__require('./_wks')('toStringTag'),
      ARG = cof(function() {
        return arguments;
      }()) == 'Arguments';
  var tryGet = function(it, key) {
    try {
      return it[key];
    } catch (e) {}
  };
  module.exports = function(it) {
    var O,
        T,
        B;
    return it === undefined ? 'Undefined' : it === null ? 'Null' : typeof(T = tryGet(O = Object(it), TAG)) == 'string' ? T : ARG ? cof(O) : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_iterators.js", ["process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  module.exports = {};
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/core.get-iterator-method.js", ["./_classof", "./_wks", "./_iterators", "./_core", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var classof = $__require('./_classof'),
      ITERATOR = $__require('./_wks')('iterator'),
      Iterators = $__require('./_iterators');
  module.exports = $__require('./_core').getIteratorMethod = function(it) {
    if (it != undefined)
      return it[ITERATOR] || it['@@iterator'] || Iterators[classof(it)];
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_for-of.js", ["./_ctx", "./_iter-call", "./_is-array-iter", "./_an-object", "./_to-length", "./core.get-iterator-method", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ctx = $__require('./_ctx'),
      call = $__require('./_iter-call'),
      isArrayIter = $__require('./_is-array-iter'),
      anObject = $__require('./_an-object'),
      toLength = $__require('./_to-length'),
      getIterFn = $__require('./core.get-iterator-method'),
      BREAK = {},
      RETURN = {};
  var exports = module.exports = function(iterable, entries, fn, that, ITERATOR) {
    var iterFn = ITERATOR ? function() {
      return iterable;
    } : getIterFn(iterable),
        f = ctx(fn, that, entries ? 2 : 1),
        index = 0,
        length,
        step,
        iterator,
        result;
    if (typeof iterFn != 'function')
      throw TypeError(iterable + ' is not iterable!');
    if (isArrayIter(iterFn))
      for (length = toLength(iterable.length); length > index; index++) {
        result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
        if (result === BREAK || result === RETURN)
          return result;
      }
    else
      for (iterator = iterFn.call(iterable); !(step = iterator.next()).done; ) {
        result = call(iterator, f, step.value, entries);
        if (result === BREAK || result === RETURN)
          return result;
      }
  };
  exports.BREAK = BREAK;
  exports.RETURN = RETURN;
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_an-instance.js", ["process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  module.exports = function(it, Constructor, name, forbiddenField) {
    if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
      throw TypeError(name + ': incorrect invocation!');
    }
    return it;
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_has.js", ["process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var hasOwnProperty = {}.hasOwnProperty;
  module.exports = function(it, key) {
    return hasOwnProperty.call(it, key);
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_set-to-string-tag.js", ["./_object-dp", "./_has", "./_wks", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var def = $__require('./_object-dp').f,
      has = $__require('./_has'),
      TAG = $__require('./_wks')('toStringTag');
  module.exports = function(it, tag, stat) {
    if (it && !has(it = stat ? it : it.prototype, TAG))
      def(it, TAG, {
        configurable: true,
        value: tag
      });
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_an-object.js", ["./_is-object", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var isObject = $__require('./_is-object');
  module.exports = function(it) {
    if (!isObject(it))
      throw TypeError(it + ' is not an object!');
    return it;
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_dom-create.js", ["./_is-object", "./_global", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var isObject = $__require('./_is-object'),
      document = $__require('./_global').document,
      is = isObject(document) && isObject(document.createElement);
  module.exports = function(it) {
    return is ? document.createElement(it) : {};
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_ie8-dom-define.js", ["./_descriptors", "./_fails", "./_dom-create", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  module.exports = !$__require('./_descriptors') && !$__require('./_fails')(function() {
    return Object.defineProperty($__require('./_dom-create')('div'), 'a', {get: function() {
        return 7;
      }}).a != 7;
  });
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_to-primitive.js", ["./_is-object", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var isObject = $__require('./_is-object');
  module.exports = function(it, S) {
    if (!isObject(it))
      return it;
    var fn,
        val;
    if (S && typeof(fn = it.toString) == 'function' && !isObject(val = fn.call(it)))
      return val;
    if (typeof(fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))
      return val;
    if (!S && typeof(fn = it.toString) == 'function' && !isObject(val = fn.call(it)))
      return val;
    throw TypeError("Can't convert object to primitive value");
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_object-dp.js", ["./_an-object", "./_ie8-dom-define", "./_to-primitive", "./_descriptors", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var anObject = $__require('./_an-object'),
      IE8_DOM_DEFINE = $__require('./_ie8-dom-define'),
      toPrimitive = $__require('./_to-primitive'),
      dP = Object.defineProperty;
  exports.f = $__require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {
    anObject(O);
    P = toPrimitive(P, true);
    anObject(Attributes);
    if (IE8_DOM_DEFINE)
      try {
        return dP(O, P, Attributes);
      } catch (e) {}
    if ('get' in Attributes || 'set' in Attributes)
      throw TypeError('Accessors not supported!');
    if ('value' in Attributes)
      O[P] = Attributes.value;
    return O;
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_a-function.js", ["process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  module.exports = function(it) {
    if (typeof it != 'function')
      throw TypeError(it + ' is not a function!');
    return it;
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_ctx.js", ["./_a-function", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var aFunction = $__require('./_a-function');
  module.exports = function(fn, that, length) {
    aFunction(fn);
    if (that === undefined)
      return fn;
    switch (length) {
      case 1:
        return function(a) {
          return fn.call(that, a);
        };
      case 2:
        return function(a, b) {
          return fn.call(that, a, b);
        };
      case 3:
        return function(a, b, c) {
          return fn.call(that, a, b, c);
        };
    }
    return function() {
      return fn.apply(that, arguments);
    };
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_iobject.js", ["./_cof", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var cof = $__require('./_cof');
  module.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it) {
    return cof(it) == 'String' ? it.split('') : Object(it);
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_defined.js", ["process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  module.exports = function(it) {
    if (it == undefined)
      throw TypeError("Can't call method on  " + it);
    return it;
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_to-object.js", ["./_defined", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var defined = $__require('./_defined');
  module.exports = function(it) {
    return Object(defined(it));
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_to-integer.js", ["process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ceil = Math.ceil,
      floor = Math.floor;
  module.exports = function(it) {
    return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_to-length.js", ["./_to-integer", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var toInteger = $__require('./_to-integer'),
      min = Math.min;
  module.exports = function(it) {
    return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0;
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_is-object.js", ["process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  module.exports = function(it) {
    return typeof it === 'object' ? it !== null : typeof it === 'function';
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_cof.js", ["process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var toString = {}.toString;
  module.exports = function(it) {
    return toString.call(it).slice(8, -1);
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_is-array.js", ["./_cof", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var cof = $__require('./_cof');
  module.exports = Array.isArray || function isArray(arg) {
    return cof(arg) == 'Array';
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_shared.js", ["./_global", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var global = $__require('./_global'),
      SHARED = '__core-js_shared__',
      store = global[SHARED] || (global[SHARED] = {});
  module.exports = function(key) {
    return store[key] || (store[key] = {});
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_uid.js", ["process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var id = 0,
      px = Math.random();
  module.exports = function(key) {
    return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_global.js", ["process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
  if (typeof __g == 'number')
    __g = global;
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_wks.js", ["./_shared", "./_uid", "./_global", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var store = $__require('./_shared')('wks'),
      uid = $__require('./_uid'),
      Symbol = $__require('./_global').Symbol,
      USE_SYMBOL = typeof Symbol == 'function';
  var $exports = module.exports = function(name) {
    return store[name] || (store[name] = USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
  };
  $exports.store = store;
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_array-species-constructor.js", ["./_is-object", "./_is-array", "./_wks", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var isObject = $__require('./_is-object'),
      isArray = $__require('./_is-array'),
      SPECIES = $__require('./_wks')('species');
  module.exports = function(original) {
    var C;
    if (isArray(original)) {
      C = original.constructor;
      if (typeof C == 'function' && (C === Array || isArray(C.prototype)))
        C = undefined;
      if (isObject(C)) {
        C = C[SPECIES];
        if (C === null)
          C = undefined;
      }
    }
    return C === undefined ? Array : C;
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_array-species-create.js", ["./_array-species-constructor", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var speciesConstructor = $__require('./_array-species-constructor');
  module.exports = function(original, length) {
    return new (speciesConstructor(original))(length);
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_array-methods.js", ["./_ctx", "./_iobject", "./_to-object", "./_to-length", "./_array-species-create", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var ctx = $__require('./_ctx'),
      IObject = $__require('./_iobject'),
      toObject = $__require('./_to-object'),
      toLength = $__require('./_to-length'),
      asc = $__require('./_array-species-create');
  module.exports = function(TYPE, $create) {
    var IS_MAP = TYPE == 1,
        IS_FILTER = TYPE == 2,
        IS_SOME = TYPE == 3,
        IS_EVERY = TYPE == 4,
        IS_FIND_INDEX = TYPE == 6,
        NO_HOLES = TYPE == 5 || IS_FIND_INDEX,
        create = $create || asc;
    return function($this, callbackfn, that) {
      var O = toObject($this),
          self = IObject(O),
          f = ctx(callbackfn, that, 3),
          length = toLength(self.length),
          index = 0,
          result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined,
          val,
          res;
      for (; length > index; index++)
        if (NO_HOLES || index in self) {
          val = self[index];
          res = f(val, index, O);
          if (TYPE) {
            if (IS_MAP)
              result[index] = res;
            else if (res)
              switch (TYPE) {
                case 3:
                  return true;
                case 5:
                  return val;
                case 6:
                  return index;
                case 2:
                  result.push(val);
              }
            else if (IS_EVERY)
              return false;
          }
        }
      return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
    };
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_fails.js", ["process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  module.exports = function(exec) {
    try {
      return !!exec();
    } catch (e) {
      return true;
    }
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_descriptors.js", ["./_fails", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  module.exports = !$__require('./_fails')(function() {
    return Object.defineProperty({}, 'a', {get: function() {
        return 7;
      }}).a != 7;
  });
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_collection.js", ["./_global", "./_export", "./_meta", "./_fails", "./_hide", "./_redefine-all", "./_for-of", "./_an-instance", "./_is-object", "./_set-to-string-tag", "./_object-dp", "./_array-methods", "./_descriptors", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var global = $__require('./_global'),
      $export = $__require('./_export'),
      meta = $__require('./_meta'),
      fails = $__require('./_fails'),
      hide = $__require('./_hide'),
      redefineAll = $__require('./_redefine-all'),
      forOf = $__require('./_for-of'),
      anInstance = $__require('./_an-instance'),
      isObject = $__require('./_is-object'),
      setToStringTag = $__require('./_set-to-string-tag'),
      dP = $__require('./_object-dp').f,
      each = $__require('./_array-methods')(0),
      DESCRIPTORS = $__require('./_descriptors');
  module.exports = function(NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {
    var Base = global[NAME],
        C = Base,
        ADDER = IS_MAP ? 'set' : 'add',
        proto = C && C.prototype,
        O = {};
    if (!DESCRIPTORS || typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function() {
      new C().entries().next();
    }))) {
      C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
      redefineAll(C.prototype, methods);
      meta.NEED = true;
    } else {
      C = wrapper(function(target, iterable) {
        anInstance(target, C, NAME, '_c');
        target._c = new Base;
        if (iterable != undefined)
          forOf(iterable, IS_MAP, target[ADDER], target);
      });
      each('add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON'.split(','), function(KEY) {
        var IS_ADDER = KEY == 'add' || KEY == 'set';
        if (KEY in proto && !(IS_WEAK && KEY == 'clear'))
          hide(C.prototype, KEY, function(a, b) {
            anInstance(this, C, KEY);
            if (!IS_ADDER && IS_WEAK && !isObject(a))
              return KEY == 'get' ? undefined : false;
            var result = this._c[KEY](a === 0 ? 0 : a, b);
            return IS_ADDER ? this : result;
          });
      });
      if ('size' in proto)
        dP(C.prototype, 'size', {get: function() {
            return this._c.size;
          }});
    }
    setToStringTag(C, NAME);
    O[NAME] = C;
    $export($export.G + $export.W + $export.F, O);
    if (!IS_WEAK)
      common.setStrong(C, NAME, IS_MAP);
    return C;
  };
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/es6.weak-map.js", ["./_array-methods", "./_redefine", "./_meta", "./_object-assign", "./_collection-weak", "./_is-object", "./_has", "./_collection", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var each = $__require('./_array-methods')(0),
      redefine = $__require('./_redefine'),
      meta = $__require('./_meta'),
      assign = $__require('./_object-assign'),
      weak = $__require('./_collection-weak'),
      isObject = $__require('./_is-object'),
      has = $__require('./_has'),
      getWeak = meta.getWeak,
      isExtensible = Object.isExtensible,
      uncaughtFrozenStore = weak.ufstore,
      tmp = {},
      InternalMap;
  var wrapper = function(get) {
    return function WeakMap() {
      return get(this, arguments.length > 0 ? arguments[0] : undefined);
    };
  };
  var methods = {
    get: function get(key) {
      if (isObject(key)) {
        var data = getWeak(key);
        if (data === true)
          return uncaughtFrozenStore(this).get(key);
        return data ? data[this._i] : undefined;
      }
    },
    set: function set(key, value) {
      return weak.def(this, key, value);
    }
  };
  var $WeakMap = module.exports = $__require('./_collection')('WeakMap', wrapper, methods, weak, true, true);
  if (new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7) {
    InternalMap = weak.getConstructor(wrapper);
    assign(InternalMap.prototype, methods);
    meta.NEED = true;
    each(['delete', 'has', 'get', 'set'], function(key) {
      var proto = $WeakMap.prototype,
          method = proto[key];
      redefine(proto, key, function(a, b) {
        if (isObject(a) && !isExtensible(a)) {
          if (!this._f)
            this._f = new InternalMap;
          var result = this._f[key](a, b);
          return key == 'set' ? this : result;
        }
        return method.call(this, a, b);
      });
    });
  }
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0/library/modules/_core.js", ["process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  var core = module.exports = {version: '2.4.0'};
  if (typeof __e == 'number')
    __e = core;
  return module.exports;
});

System.registerDynamic("npm:core-js@2.4.0.json", [], false, function() {
  return {
    "main": "index.js",
    "format": "cjs",
    "meta": {
      "*": {
        "globals": {
          "process": "process"
        }
      },
      "*.json": {
        "format": "json"
      }
    },
    "map": {
      "./build.js": "./build/index.js",
      "./core.js": "./core/index.js",
      "./es5.js": "./es5/index.js",
      "./es6.js": "./es6/index.js",
      "./es7.js": "./es7/index.js",
      "./fn/array.js": "./fn/array/index.js",
      "./fn/array/virtual.js": "./fn/array/virtual/index.js",
      "./fn/date.js": "./fn/date/index.js",
      "./fn/dom-collections.js": "./fn/dom-collections/index.js",
      "./fn/error.js": "./fn/error/index.js",
      "./fn/function.js": "./fn/function/index.js",
      "./fn/function/virtual.js": "./fn/function/virtual/index.js",
      "./fn/json.js": "./fn/json/index.js",
      "./fn/math.js": "./fn/math/index.js",
      "./fn/number.js": "./fn/number/index.js",
      "./fn/number/virtual.js": "./fn/number/virtual/index.js",
      "./fn/object.js": "./fn/object/index.js",
      "./fn/reflect.js": "./fn/reflect/index.js",
      "./fn/regexp.js": "./fn/regexp/index.js",
      "./fn/string.js": "./fn/string/index.js",
      "./fn/string/virtual.js": "./fn/string/virtual/index.js",
      "./fn/symbol.js": "./fn/symbol/index.js",
      "./fn/system.js": "./fn/system/index.js",
      "./fn/typed.js": "./fn/typed/index.js",
      "./library.js": "./library/index.js",
      "./library/core.js": "./library/core/index.js",
      "./library/es5.js": "./library/es5/index.js",
      "./library/es6.js": "./library/es6/index.js",
      "./library/es7.js": "./library/es7/index.js",
      "./library/fn/array.js": "./library/fn/array/index.js",
      "./library/fn/array/virtual.js": "./library/fn/array/virtual/index.js",
      "./library/fn/date.js": "./library/fn/date/index.js",
      "./library/fn/dom-collections.js": "./library/fn/dom-collections/index.js",
      "./library/fn/error.js": "./library/fn/error/index.js",
      "./library/fn/function.js": "./library/fn/function/index.js",
      "./library/fn/function/virtual.js": "./library/fn/function/virtual/index.js",
      "./library/fn/json.js": "./library/fn/json/index.js",
      "./library/fn/math.js": "./library/fn/math/index.js",
      "./library/fn/number.js": "./library/fn/number/index.js",
      "./library/fn/number/virtual.js": "./library/fn/number/virtual/index.js",
      "./library/fn/object.js": "./library/fn/object/index.js",
      "./library/fn/reflect.js": "./library/fn/reflect/index.js",
      "./library/fn/regexp.js": "./library/fn/regexp/index.js",
      "./library/fn/string.js": "./library/fn/string/index.js",
      "./library/fn/string/virtual.js": "./library/fn/string/virtual/index.js",
      "./library/fn/symbol.js": "./library/fn/symbol/index.js",
      "./library/fn/system.js": "./library/fn/system/index.js",
      "./library/fn/typed.js": "./library/fn/typed/index.js",
      "./library/stage.js": "./library/stage/index.js",
      "./library/web.js": "./library/web/index.js",
      "./package": "./package.json",
      "./stage.js": "./stage/index.js",
      "./web.js": "./web/index.js"
    }
  };
});

System.registerDynamic("npm:core-js@2.4.0/library/fn/weak-map.js", ["../modules/es6.object.to-string", "../modules/web.dom.iterable", "../modules/es6.weak-map", "../modules/_core", "process"], true, function($__require, exports, module) {
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  $__require('../modules/es6.object.to-string');
  $__require('../modules/web.dom.iterable');
  $__require('../modules/es6.weak-map');
  module.exports = $__require('../modules/_core').WeakMap;
  return module.exports;
});

System.registerDynamic("npm:babel-runtime@6.9.2.json", [], false, function() {
  return {
    "main": "index",
    "format": "cjs",
    "meta": {
      "*.json": {
        "format": "json"
      }
    },
    "map": {
      "./regenerator.js": "./regenerator/index.js"
    }
  };
});

System.registerDynamic("npm:babel-runtime@6.9.2/core-js/weak-map.js", ["core-js/library/fn/weak-map"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  module.exports = {
    "default": $__require('core-js/library/fn/weak-map'),
    __esModule: true
  };
  return module.exports;
});

System.registerDynamic("npm:babel-traverse@6.9.0/lib/cache.js", ["babel-runtime/core-js/weak-map", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  exports.scope = exports.path = undefined;
  var _weakMap = $__require('babel-runtime/core-js/weak-map');
  var _weakMap2 = _interopRequireDefault(_weakMap);
  exports.clear = clear;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  var path = exports.path = new _weakMap2.default();
  var scope = exports.scope = new _weakMap2.default();
  function clear() {
    exports.path = path = new _weakMap2.default();
    exports.scope = scope = new _weakMap2.default();
  }
  return module.exports;
});

System.registerDynamic("github:jspm/nodelibs-process@0.2.0-alpha.json", [], false, function() {
  return {
    "main": "./process.js"
  };
});

System.registerDynamic("github:jspm/nodelibs-process@0.2.0-alpha/process.js", ["@system-env"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var productionEnv = $__require('@system-env').production;
  var process = module.exports = {};
  var queue = [];
  var draining = false;
  var currentQueue;
  var queueIndex = -1;
  function cleanUpNextTick() {
    draining = false;
    if (currentQueue.length) {
      queue = currentQueue.concat(queue);
    } else {
      queueIndex = -1;
    }
    if (queue.length) {
      drainQueue();
    }
  }
  function drainQueue() {
    if (draining) {
      return;
    }
    var timeout = setTimeout(cleanUpNextTick);
    draining = true;
    var len = queue.length;
    while (len) {
      currentQueue = queue;
      queue = [];
      while (++queueIndex < len) {
        if (currentQueue) {
          currentQueue[queueIndex].run();
        }
      }
      queueIndex = -1;
      len = queue.length;
    }
    currentQueue = null;
    draining = false;
    clearTimeout(timeout);
  }
  process.nextTick = function(fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
      for (var i = 1; i < arguments.length; i++) {
        args[i - 1] = arguments[i];
      }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
      setTimeout(drainQueue, 0);
    }
  };
  function Item(fun, array) {
    this.fun = fun;
    this.array = array;
  }
  Item.prototype.run = function() {
    this.fun.apply(null, this.array);
  };
  process.title = 'browser';
  process.browser = true;
  process.env = {NODE_ENV: productionEnv ? 'production' : 'development'};
  process.argv = [];
  process.version = '';
  process.versions = {};
  function noop() {}
  process.on = noop;
  process.addListener = noop;
  process.once = noop;
  process.off = noop;
  process.removeListener = noop;
  process.removeAllListeners = noop;
  process.emit = noop;
  process.binding = function(name) {
    throw new Error('process.binding is not supported');
  };
  process.cwd = function() {
    return '/';
  };
  process.chdir = function(dir) {
    throw new Error('process.chdir is not supported');
  };
  process.umask = function() {
    return 0;
  };
  return module.exports;
});

System.registerDynamic("npm:babel-traverse@6.9.0.json", [], false, function() {
  return {
    "main": "lib/index.js",
    "format": "cjs",
    "meta": {
      "*": {
        "globals": {
          "process": "process"
        }
      },
      "*.json": {
        "format": "json"
      }
    },
    "map": {
      "./lib.js": "./lib/index.js",
      "./lib/path.js": "./lib/path/index.js",
      "./lib/path/inference.js": "./lib/path/inference/index.js",
      "./lib/scope.js": "./lib/scope/index.js"
    }
  };
});

System.registerDynamic("npm:babel-traverse@6.9.0/lib/index.js", ["babel-runtime/core-js/object/get-own-property-symbols", "babel-runtime/core-js/get-iterator", "./path", "./scope", "./hub", "./context", "./visitors", "babel-messages", "lodash/includes", "babel-types", "./cache", "process"], true, function($__require, exports, module) {
  "use strict";
  var process = $__require("process");
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  exports.visitors = exports.Hub = exports.Scope = exports.NodePath = undefined;
  var _getOwnPropertySymbols = $__require('babel-runtime/core-js/object/get-own-property-symbols');
  var _getOwnPropertySymbols2 = _interopRequireDefault(_getOwnPropertySymbols);
  var _getIterator2 = $__require('babel-runtime/core-js/get-iterator');
  var _getIterator3 = _interopRequireDefault(_getIterator2);
  var _path = $__require('./path');
  Object.defineProperty(exports, "NodePath", {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_path).default;
    }
  });
  var _scope = $__require('./scope');
  Object.defineProperty(exports, "Scope", {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_scope).default;
    }
  });
  var _hub = $__require('./hub');
  Object.defineProperty(exports, "Hub", {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_hub).default;
    }
  });
  exports.default = traverse;
  var _context = $__require('./context');
  var _context2 = _interopRequireDefault(_context);
  var _visitors = $__require('./visitors');
  var visitors = _interopRequireWildcard(_visitors);
  var _babelMessages = $__require('babel-messages');
  var messages = _interopRequireWildcard(_babelMessages);
  var _includes = $__require('lodash/includes');
  var _includes2 = _interopRequireDefault(_includes);
  var _babelTypes = $__require('babel-types');
  var t = _interopRequireWildcard(_babelTypes);
  var _cache = $__require('./cache');
  var cache = _interopRequireWildcard(_cache);
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj.default = obj;
      return newObj;
    }
  }
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  exports.visitors = visitors;
  function traverse(parent, opts, scope, state, parentPath) {
    if (!parent)
      return;
    if (!opts)
      opts = {};
    if (!opts.noScope && !scope) {
      if (parent.type !== "Program" && parent.type !== "File") {
        throw new Error(messages.get("traverseNeedsParent", parent.type));
      }
    }
    visitors.explode(opts);
    traverse.node(parent, opts, scope, state, parentPath);
  }
  traverse.visitors = visitors;
  traverse.verify = visitors.verify;
  traverse.explode = visitors.explode;
  traverse.NodePath = $__require('./path');
  traverse.Scope = $__require('./scope');
  traverse.Hub = $__require('./hub');
  traverse.cheap = function(node, enter) {
    if (!node)
      return;
    var keys = t.VISITOR_KEYS[node.type];
    if (!keys)
      return;
    enter(node);
    for (var _iterator = keys,
        _isArray = Array.isArray(_iterator),
        _i = 0,
        _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator); ; ) {
      var _ref;
      if (_isArray) {
        if (_i >= _iterator.length)
          break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done)
          break;
        _ref = _i.value;
      }
      var key = _ref;
      var subNode = node[key];
      if (Array.isArray(subNode)) {
        for (var _iterator2 = subNode,
            _isArray2 = Array.isArray(_iterator2),
            _i2 = 0,
            _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2); ; ) {
          var _ref2;
          if (_isArray2) {
            if (_i2 >= _iterator2.length)
              break;
            _ref2 = _iterator2[_i2++];
          } else {
            _i2 = _iterator2.next();
            if (_i2.done)
              break;
            _ref2 = _i2.value;
          }
          var _node = _ref2;
          traverse.cheap(_node, enter);
        }
      } else {
        traverse.cheap(subNode, enter);
      }
    }
  };
  traverse.node = function(node, opts, scope, state, parentPath, skipKeys) {
    var keys = t.VISITOR_KEYS[node.type];
    if (!keys)
      return;
    var context = new _context2.default(scope, opts, state, parentPath);
    for (var _iterator3 = keys,
        _isArray3 = Array.isArray(_iterator3),
        _i3 = 0,
        _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3); ; ) {
      var _ref3;
      if (_isArray3) {
        if (_i3 >= _iterator3.length)
          break;
        _ref3 = _iterator3[_i3++];
      } else {
        _i3 = _iterator3.next();
        if (_i3.done)
          break;
        _ref3 = _i3.value;
      }
      var key = _ref3;
      if (skipKeys && skipKeys[key])
        continue;
      if (context.visit(node, key))
        return;
    }
  };
  var CLEAR_KEYS = t.COMMENT_KEYS.concat(["tokens", "comments", "start", "end", "loc", "raw", "rawValue"]);
  traverse.clearNode = function(node) {
    for (var _iterator4 = CLEAR_KEYS,
        _isArray4 = Array.isArray(_iterator4),
        _i4 = 0,
        _iterator4 = _isArray4 ? _iterator4 : (0, _getIterator3.default)(_iterator4); ; ) {
      var _ref4;
      if (_isArray4) {
        if (_i4 >= _iterator4.length)
          break;
        _ref4 = _iterator4[_i4++];
      } else {
        _i4 = _iterator4.next();
        if (_i4.done)
          break;
        _ref4 = _i4.value;
      }
      var _key = _ref4;
      if (node[_key] != null)
        node[_key] = undefined;
    }
    for (var key in node) {
      if (key[0] === "_" && node[key] != null)
        node[key] = undefined;
    }
    cache.path.delete(node);
    var syms = (0, _getOwnPropertySymbols2.default)(node);
    for (var _iterator5 = syms,
        _isArray5 = Array.isArray(_iterator5),
        _i5 = 0,
        _iterator5 = _isArray5 ? _iterator5 : (0, _getIterator3.default)(_iterator5); ; ) {
      var _ref5;
      if (_isArray5) {
        if (_i5 >= _iterator5.length)
          break;
        _ref5 = _iterator5[_i5++];
      } else {
        _i5 = _iterator5.next();
        if (_i5.done)
          break;
        _ref5 = _i5.value;
      }
      var sym = _ref5;
      node[sym] = null;
    }
  };
  traverse.removeProperties = function(tree) {
    traverse.cheap(tree, traverse.clearNode);
    return tree;
  };
  function hasBlacklistedType(path, state) {
    if (path.node.type === state.type) {
      state.has = true;
      path.stop();
    }
  }
  traverse.hasType = function(tree, scope, type, blacklistTypes) {
    if ((0, _includes2.default)(blacklistTypes, tree.type))
      return false;
    if (tree.type === type)
      return true;
    var state = {
      has: false,
      type: type
    };
    traverse(tree, {
      blacklist: blacklistTypes,
      enter: hasBlacklistedType
    }, scope, state);
    return state.has;
  };
  traverse.clearCache = function() {
    cache.clear();
  };
  traverse.copyCache = function(source, destination) {
    if (cache.path.has(source)) {
      cache.path.set(destination, cache.path.get(source));
    }
  };
  return module.exports;
});

System.registerDynamic("npm:babel-types@6.9.1.json", [], false, function() {
  return {
    "main": "lib/index.js",
    "format": "cjs",
    "meta": {
      "*.json": {
        "format": "json"
      }
    },
    "map": {
      "./lib.js": "./lib/index.js",
      "./lib/definitions.js": "./lib/definitions/index.js"
    }
  };
});

System.registerDynamic("npm:babel-types@6.9.1/lib/index.js", ["babel-runtime/core-js/get-iterator", "babel-runtime/core-js/object/keys", "babel-runtime/core-js/json/stringify", "./constants", "./retrievers", "./validators", "./converters", "./flow", "to-fast-properties", "lodash/compact", "lodash/clone", "lodash/each", "lodash/uniq", "./definitions/init", "./definitions", "./react", "babel-traverse"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  exports.createTypeAnnotationBasedOnTypeof = exports.removeTypeDuplicates = exports.createUnionTypeAnnotation = exports.valueToNode = exports.toBlock = exports.toExpression = exports.toStatement = exports.toBindingIdentifierName = exports.toIdentifier = exports.toKeyAlias = exports.toSequenceExpression = exports.toComputedKey = exports.isImmutable = exports.isScope = exports.isSpecifierDefault = exports.isVar = exports.isBlockScoped = exports.isLet = exports.isValidIdentifier = exports.isReferenced = exports.isBinding = exports.getOuterBindingIdentifiers = exports.getBindingIdentifiers = exports.TYPES = exports.react = exports.DEPRECATED_KEYS = exports.BUILDER_KEYS = exports.NODE_FIELDS = exports.ALIAS_KEYS = exports.VISITOR_KEYS = exports.NOT_LOCAL_BINDING = exports.BLOCK_SCOPED_SYMBOL = exports.INHERIT_KEYS = exports.UNARY_OPERATORS = exports.STRING_UNARY_OPERATORS = exports.NUMBER_UNARY_OPERATORS = exports.BOOLEAN_UNARY_OPERATORS = exports.BINARY_OPERATORS = exports.NUMBER_BINARY_OPERATORS = exports.BOOLEAN_BINARY_OPERATORS = exports.COMPARISON_BINARY_OPERATORS = exports.EQUALITY_BINARY_OPERATORS = exports.BOOLEAN_NUMBER_BINARY_OPERATORS = exports.UPDATE_OPERATORS = exports.LOGICAL_OPERATORS = exports.COMMENT_KEYS = exports.FOR_INIT_KEYS = exports.FLATTENABLE_KEYS = exports.STATEMENT_OR_BLOCK_KEYS = undefined;
  var _getIterator2 = $__require('babel-runtime/core-js/get-iterator');
  var _getIterator3 = _interopRequireDefault(_getIterator2);
  var _keys = $__require('babel-runtime/core-js/object/keys');
  var _keys2 = _interopRequireDefault(_keys);
  var _stringify = $__require('babel-runtime/core-js/json/stringify');
  var _stringify2 = _interopRequireDefault(_stringify);
  var _constants = $__require('./constants');
  Object.defineProperty(exports, "STATEMENT_OR_BLOCK_KEYS", {
    enumerable: true,
    get: function get() {
      return _constants.STATEMENT_OR_BLOCK_KEYS;
    }
  });
  Object.defineProperty(exports, "FLATTENABLE_KEYS", {
    enumerable: true,
    get: function get() {
      return _constants.FLATTENABLE_KEYS;
    }
  });
  Object.defineProperty(exports, "FOR_INIT_KEYS", {
    enumerable: true,
    get: function get() {
      return _constants.FOR_INIT_KEYS;
    }
  });
  Object.defineProperty(exports, "COMMENT_KEYS", {
    enumerable: true,
    get: function get() {
      return _constants.COMMENT_KEYS;
    }
  });
  Object.defineProperty(exports, "LOGICAL_OPERATORS", {
    enumerable: true,
    get: function get() {
      return _constants.LOGICAL_OPERATORS;
    }
  });
  Object.defineProperty(exports, "UPDATE_OPERATORS", {
    enumerable: true,
    get: function get() {
      return _constants.UPDATE_OPERATORS;
    }
  });
  Object.defineProperty(exports, "BOOLEAN_NUMBER_BINARY_OPERATORS", {
    enumerable: true,
    get: function get() {
      return _constants.BOOLEAN_NUMBER_BINARY_OPERATORS;
    }
  });
  Object.defineProperty(exports, "EQUALITY_BINARY_OPERATORS", {
    enumerable: true,
    get: function get() {
      return _constants.EQUALITY_BINARY_OPERATORS;
    }
  });
  Object.defineProperty(exports, "COMPARISON_BINARY_OPERATORS", {
    enumerable: true,
    get: function get() {
      return _constants.COMPARISON_BINARY_OPERATORS;
    }
  });
  Object.defineProperty(exports, "BOOLEAN_BINARY_OPERATORS", {
    enumerable: true,
    get: function get() {
      return _constants.BOOLEAN_BINARY_OPERATORS;
    }
  });
  Object.defineProperty(exports, "NUMBER_BINARY_OPERATORS", {
    enumerable: true,
    get: function get() {
      return _constants.NUMBER_BINARY_OPERATORS;
    }
  });
  Object.defineProperty(exports, "BINARY_OPERATORS", {
    enumerable: true,
    get: function get() {
      return _constants.BINARY_OPERATORS;
    }
  });
  Object.defineProperty(exports, "BOOLEAN_UNARY_OPERATORS", {
    enumerable: true,
    get: function get() {
      return _constants.BOOLEAN_UNARY_OPERATORS;
    }
  });
  Object.defineProperty(exports, "NUMBER_UNARY_OPERATORS", {
    enumerable: true,
    get: function get() {
      return _constants.NUMBER_UNARY_OPERATORS;
    }
  });
  Object.defineProperty(exports, "STRING_UNARY_OPERATORS", {
    enumerable: true,
    get: function get() {
      return _constants.STRING_UNARY_OPERATORS;
    }
  });
  Object.defineProperty(exports, "UNARY_OPERATORS", {
    enumerable: true,
    get: function get() {
      return _constants.UNARY_OPERATORS;
    }
  });
  Object.defineProperty(exports, "INHERIT_KEYS", {
    enumerable: true,
    get: function get() {
      return _constants.INHERIT_KEYS;
    }
  });
  Object.defineProperty(exports, "BLOCK_SCOPED_SYMBOL", {
    enumerable: true,
    get: function get() {
      return _constants.BLOCK_SCOPED_SYMBOL;
    }
  });
  Object.defineProperty(exports, "NOT_LOCAL_BINDING", {
    enumerable: true,
    get: function get() {
      return _constants.NOT_LOCAL_BINDING;
    }
  });
  exports.is = is;
  exports.isType = isType;
  exports.validate = validate;
  exports.shallowEqual = shallowEqual;
  exports.appendToMemberExpression = appendToMemberExpression;
  exports.prependToMemberExpression = prependToMemberExpression;
  exports.ensureBlock = ensureBlock;
  exports.clone = clone;
  exports.cloneWithoutLoc = cloneWithoutLoc;
  exports.cloneDeep = cloneDeep;
  exports.buildMatchMemberExpression = buildMatchMemberExpression;
  exports.removeComments = removeComments;
  exports.inheritsComments = inheritsComments;
  exports.inheritTrailingComments = inheritTrailingComments;
  exports.inheritLeadingComments = inheritLeadingComments;
  exports.inheritInnerComments = inheritInnerComments;
  exports.inherits = inherits;
  exports.assertNode = assertNode;
  exports.isNode = isNode;
  var _retrievers = $__require('./retrievers');
  Object.defineProperty(exports, "getBindingIdentifiers", {
    enumerable: true,
    get: function get() {
      return _retrievers.getBindingIdentifiers;
    }
  });
  Object.defineProperty(exports, "getOuterBindingIdentifiers", {
    enumerable: true,
    get: function get() {
      return _retrievers.getOuterBindingIdentifiers;
    }
  });
  var _validators = $__require('./validators');
  Object.defineProperty(exports, "isBinding", {
    enumerable: true,
    get: function get() {
      return _validators.isBinding;
    }
  });
  Object.defineProperty(exports, "isReferenced", {
    enumerable: true,
    get: function get() {
      return _validators.isReferenced;
    }
  });
  Object.defineProperty(exports, "isValidIdentifier", {
    enumerable: true,
    get: function get() {
      return _validators.isValidIdentifier;
    }
  });
  Object.defineProperty(exports, "isLet", {
    enumerable: true,
    get: function get() {
      return _validators.isLet;
    }
  });
  Object.defineProperty(exports, "isBlockScoped", {
    enumerable: true,
    get: function get() {
      return _validators.isBlockScoped;
    }
  });
  Object.defineProperty(exports, "isVar", {
    enumerable: true,
    get: function get() {
      return _validators.isVar;
    }
  });
  Object.defineProperty(exports, "isSpecifierDefault", {
    enumerable: true,
    get: function get() {
      return _validators.isSpecifierDefault;
    }
  });
  Object.defineProperty(exports, "isScope", {
    enumerable: true,
    get: function get() {
      return _validators.isScope;
    }
  });
  Object.defineProperty(exports, "isImmutable", {
    enumerable: true,
    get: function get() {
      return _validators.isImmutable;
    }
  });
  var _converters = $__require('./converters');
  Object.defineProperty(exports, "toComputedKey", {
    enumerable: true,
    get: function get() {
      return _converters.toComputedKey;
    }
  });
  Object.defineProperty(exports, "toSequenceExpression", {
    enumerable: true,
    get: function get() {
      return _converters.toSequenceExpression;
    }
  });
  Object.defineProperty(exports, "toKeyAlias", {
    enumerable: true,
    get: function get() {
      return _converters.toKeyAlias;
    }
  });
  Object.defineProperty(exports, "toIdentifier", {
    enumerable: true,
    get: function get() {
      return _converters.toIdentifier;
    }
  });
  Object.defineProperty(exports, "toBindingIdentifierName", {
    enumerable: true,
    get: function get() {
      return _converters.toBindingIdentifierName;
    }
  });
  Object.defineProperty(exports, "toStatement", {
    enumerable: true,
    get: function get() {
      return _converters.toStatement;
    }
  });
  Object.defineProperty(exports, "toExpression", {
    enumerable: true,
    get: function get() {
      return _converters.toExpression;
    }
  });
  Object.defineProperty(exports, "toBlock", {
    enumerable: true,
    get: function get() {
      return _converters.toBlock;
    }
  });
  Object.defineProperty(exports, "valueToNode", {
    enumerable: true,
    get: function get() {
      return _converters.valueToNode;
    }
  });
  var _flow = $__require('./flow');
  Object.defineProperty(exports, "createUnionTypeAnnotation", {
    enumerable: true,
    get: function get() {
      return _flow.createUnionTypeAnnotation;
    }
  });
  Object.defineProperty(exports, "removeTypeDuplicates", {
    enumerable: true,
    get: function get() {
      return _flow.removeTypeDuplicates;
    }
  });
  Object.defineProperty(exports, "createTypeAnnotationBasedOnTypeof", {
    enumerable: true,
    get: function get() {
      return _flow.createTypeAnnotationBasedOnTypeof;
    }
  });
  var _toFastProperties = $__require('to-fast-properties');
  var _toFastProperties2 = _interopRequireDefault(_toFastProperties);
  var _compact = $__require('lodash/compact');
  var _compact2 = _interopRequireDefault(_compact);
  var _clone = $__require('lodash/clone');
  var _clone2 = _interopRequireDefault(_clone);
  var _each = $__require('lodash/each');
  var _each2 = _interopRequireDefault(_each);
  var _uniq = $__require('lodash/uniq');
  var _uniq2 = _interopRequireDefault(_uniq);
  $__require('./definitions/init');
  var _definitions = $__require('./definitions');
  var _react2 = $__require('./react');
  var _react = _interopRequireWildcard(_react2);
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj.default = obj;
      return newObj;
    }
  }
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  var t = exports;
  function registerType(type) {
    var is = t["is" + type];
    if (!is) {
      is = t["is" + type] = function(node, opts) {
        return t.is(type, node, opts);
      };
    }
    t["assert" + type] = function(node, opts) {
      opts = opts || {};
      if (!is(node, opts)) {
        throw new Error("Expected type " + (0, _stringify2.default)(type) + " with option " + (0, _stringify2.default)(opts));
      }
    };
  }
  exports.VISITOR_KEYS = _definitions.VISITOR_KEYS;
  exports.ALIAS_KEYS = _definitions.ALIAS_KEYS;
  exports.NODE_FIELDS = _definitions.NODE_FIELDS;
  exports.BUILDER_KEYS = _definitions.BUILDER_KEYS;
  exports.DEPRECATED_KEYS = _definitions.DEPRECATED_KEYS;
  exports.react = _react;
  for (var type in t.VISITOR_KEYS) {
    registerType(type);
  }
  t.FLIPPED_ALIAS_KEYS = {};
  (0, _each2.default)(t.ALIAS_KEYS, function(aliases, type) {
    (0, _each2.default)(aliases, function(alias) {
      var types = t.FLIPPED_ALIAS_KEYS[alias] = t.FLIPPED_ALIAS_KEYS[alias] || [];
      types.push(type);
    });
  });
  (0, _each2.default)(t.FLIPPED_ALIAS_KEYS, function(types, type) {
    t[type.toUpperCase() + "_TYPES"] = types;
    registerType(type);
  });
  var TYPES = exports.TYPES = (0, _keys2.default)(t.VISITOR_KEYS).concat((0, _keys2.default)(t.FLIPPED_ALIAS_KEYS)).concat((0, _keys2.default)(t.DEPRECATED_KEYS));
  function is(type, node, opts) {
    if (!node)
      return false;
    var matches = isType(node.type, type);
    if (!matches)
      return false;
    if (typeof opts === "undefined") {
      return true;
    } else {
      return t.shallowEqual(node, opts);
    }
  }
  function isType(nodeType, targetType) {
    if (nodeType === targetType)
      return true;
    if (t.ALIAS_KEYS[targetType])
      return false;
    var aliases = t.FLIPPED_ALIAS_KEYS[targetType];
    if (aliases) {
      if (aliases[0] === nodeType)
        return true;
      for (var _iterator = aliases,
          _isArray = Array.isArray(_iterator),
          _i = 0,
          _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator); ; ) {
        var _ref;
        if (_isArray) {
          if (_i >= _iterator.length)
            break;
          _ref = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done)
            break;
          _ref = _i.value;
        }
        var alias = _ref;
        if (nodeType === alias)
          return true;
      }
    }
    return false;
  }
  (0, _each2.default)(t.BUILDER_KEYS, function(keys, type) {
    function builder() {
      if (arguments.length > keys.length) {
        throw new Error("t." + type + ": Too many arguments passed. Received " + arguments.length + " but can receive " + ("no more than " + keys.length));
      }
      var node = {};
      node.type = type;
      var i = 0;
      for (var _iterator2 = keys,
          _isArray2 = Array.isArray(_iterator2),
          _i2 = 0,
          _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2); ; ) {
        var _ref2;
        if (_isArray2) {
          if (_i2 >= _iterator2.length)
            break;
          _ref2 = _iterator2[_i2++];
        } else {
          _i2 = _iterator2.next();
          if (_i2.done)
            break;
          _ref2 = _i2.value;
        }
        var _key = _ref2;
        var field = t.NODE_FIELDS[type][_key];
        var arg = arguments[i++];
        if (arg === undefined)
          arg = (0, _clone2.default)(field.default);
        node[_key] = arg;
      }
      for (var key in node) {
        validate(node, key, node[key]);
      }
      return node;
    }
    t[type] = builder;
    t[type[0].toLowerCase() + type.slice(1)] = builder;
  });
  var _loop = function _loop(_type) {
    var newType = t.DEPRECATED_KEYS[_type];
    function proxy(fn) {
      return function() {
        console.trace("The node type " + _type + " has been renamed to " + newType);
        return fn.apply(this, arguments);
      };
    }
    t[_type] = t[_type[0].toLowerCase() + _type.slice(1)] = proxy(t[newType]);
    t["is" + _type] = proxy(t["is" + newType]);
    t["assert" + _type] = proxy(t["assert" + newType]);
  };
  for (var _type in t.DEPRECATED_KEYS) {
    _loop(_type);
  }
  function validate(node, key, val) {
    if (!node)
      return;
    var fields = t.NODE_FIELDS[node.type];
    if (!fields)
      return;
    var field = fields[key];
    if (!field || !field.validate)
      return;
    if (field.optional && val == null)
      return;
    field.validate(node, key, val);
  }
  function shallowEqual(actual, expected) {
    var keys = (0, _keys2.default)(expected);
    for (var _iterator3 = keys,
        _isArray3 = Array.isArray(_iterator3),
        _i3 = 0,
        _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3); ; ) {
      var _ref3;
      if (_isArray3) {
        if (_i3 >= _iterator3.length)
          break;
        _ref3 = _iterator3[_i3++];
      } else {
        _i3 = _iterator3.next();
        if (_i3.done)
          break;
        _ref3 = _i3.value;
      }
      var key = _ref3;
      if (actual[key] !== expected[key]) {
        return false;
      }
    }
    return true;
  }
  function appendToMemberExpression(member, append, computed) {
    member.object = t.memberExpression(member.object, member.property, member.computed);
    member.property = append;
    member.computed = !!computed;
    return member;
  }
  function prependToMemberExpression(member, prepend) {
    member.object = t.memberExpression(prepend, member.object);
    return member;
  }
  function ensureBlock(node) {
    var key = arguments.length <= 1 || arguments[1] === undefined ? "body" : arguments[1];
    return node[key] = t.toBlock(node[key], node);
  }
  function clone(node) {
    var newNode = {};
    for (var key in node) {
      if (key[0] === "_")
        continue;
      newNode[key] = node[key];
    }
    return newNode;
  }
  function cloneWithoutLoc(node) {
    var newNode = clone(node);
    delete newNode.loc;
    return newNode;
  }
  function cloneDeep(node) {
    var newNode = {};
    for (var key in node) {
      if (key[0] === "_")
        continue;
      var val = node[key];
      if (val) {
        if (val.type) {
          val = t.cloneDeep(val);
        } else if (Array.isArray(val)) {
          val = val.map(t.cloneDeep);
        }
      }
      newNode[key] = val;
    }
    return newNode;
  }
  function buildMatchMemberExpression(match, allowPartial) {
    var parts = match.split(".");
    return function(member) {
      if (!t.isMemberExpression(member))
        return false;
      var search = [member];
      var i = 0;
      while (search.length) {
        var node = search.shift();
        if (allowPartial && i === parts.length) {
          return true;
        }
        if (t.isIdentifier(node)) {
          if (parts[i] !== node.name)
            return false;
        } else if (t.isStringLiteral(node)) {
          if (parts[i] !== node.value)
            return false;
        } else if (t.isMemberExpression(node)) {
          if (node.computed && !t.isStringLiteral(node.property)) {
            return false;
          } else {
            search.push(node.object);
            search.push(node.property);
            continue;
          }
        } else {
          return false;
        }
        if (++i > parts.length) {
          return false;
        }
      }
      return true;
    };
  }
  function removeComments(node) {
    for (var _iterator4 = t.COMMENT_KEYS,
        _isArray4 = Array.isArray(_iterator4),
        _i4 = 0,
        _iterator4 = _isArray4 ? _iterator4 : (0, _getIterator3.default)(_iterator4); ; ) {
      var _ref4;
      if (_isArray4) {
        if (_i4 >= _iterator4.length)
          break;
        _ref4 = _iterator4[_i4++];
      } else {
        _i4 = _iterator4.next();
        if (_i4.done)
          break;
        _ref4 = _i4.value;
      }
      var key = _ref4;
      delete node[key];
    }
    return node;
  }
  function inheritsComments(child, parent) {
    inheritTrailingComments(child, parent);
    inheritLeadingComments(child, parent);
    inheritInnerComments(child, parent);
    return child;
  }
  function inheritTrailingComments(child, parent) {
    _inheritComments("trailingComments", child, parent);
  }
  function inheritLeadingComments(child, parent) {
    _inheritComments("leadingComments", child, parent);
  }
  function inheritInnerComments(child, parent) {
    _inheritComments("innerComments", child, parent);
  }
  function _inheritComments(key, child, parent) {
    if (child && parent) {
      child[key] = (0, _uniq2.default)((0, _compact2.default)([].concat(child[key], parent[key])));
    }
  }
  var traverse = void 0;
  function inherits(child, parent) {
    if (!traverse)
      traverse = $__require('babel-traverse').default;
    if (!child || !parent)
      return child;
    for (var _iterator5 = t.INHERIT_KEYS.optional,
        _isArray5 = Array.isArray(_iterator5),
        _i5 = 0,
        _iterator5 = _isArray5 ? _iterator5 : (0, _getIterator3.default)(_iterator5); ; ) {
      var _ref5;
      if (_isArray5) {
        if (_i5 >= _iterator5.length)
          break;
        _ref5 = _iterator5[_i5++];
      } else {
        _i5 = _iterator5.next();
        if (_i5.done)
          break;
        _ref5 = _i5.value;
      }
      var _key2 = _ref5;
      if (child[_key2] == null) {
        child[_key2] = parent[_key2];
      }
    }
    for (var key in parent) {
      if (key[0] === "_")
        child[key] = parent[key];
    }
    for (var _iterator6 = t.INHERIT_KEYS.force,
        _isArray6 = Array.isArray(_iterator6),
        _i6 = 0,
        _iterator6 = _isArray6 ? _iterator6 : (0, _getIterator3.default)(_iterator6); ; ) {
      var _ref6;
      if (_isArray6) {
        if (_i6 >= _iterator6.length)
          break;
        _ref6 = _iterator6[_i6++];
      } else {
        _i6 = _iterator6.next();
        if (_i6.done)
          break;
        _ref6 = _i6.value;
      }
      var _key3 = _ref6;
      child[_key3] = parent[_key3];
    }
    t.inheritsComments(child, parent);
    traverse.copyCache(parent, child);
    return child;
  }
  function assertNode(node) {
    if (!isNode(node)) {
      throw new TypeError("Not a valid node " + (node && node.type));
    }
  }
  function isNode(node) {
    return !!(node && _definitions.VISITOR_KEYS[node.type]);
  }
  (0, _toFastProperties2.default)(t);
  (0, _toFastProperties2.default)(t.VISITOR_KEYS);
  return module.exports;
});

System.registerDynamic("npm:babel-helper-builder-react-jsx@6.9.0.json", [], false, function() {
  return {
    "main": "lib/index.js",
    "format": "cjs",
    "meta": {
      "*.json": {
        "format": "json"
      }
    },
    "map": {
      "./lib.js": "./lib/index.js"
    }
  };
});

System.registerDynamic("npm:babel-helper-builder-react-jsx@6.9.0/lib/index.js", ["esutils", "babel-types"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  exports.default = function(opts) {
    var visitor = {};
    visitor.JSXNamespacedName = function(path) {
      throw path.buildCodeFrameError("Namespace tags are not supported. ReactJSX is not XML.");
    };
    visitor.JSXElement = {exit: function exit(path, file) {
        var callExpr = buildElementCall(path.get("openingElement"), file);
        callExpr.arguments = callExpr.arguments.concat(path.node.children);
        if (callExpr.arguments.length >= 3) {
          callExpr._prettyCall = true;
        }
        path.replaceWith(t.inherits(callExpr, path.node));
      }};
    return visitor;
    function convertJSXIdentifier(node, parent) {
      if (t.isJSXIdentifier(node)) {
        if (node.name === "this" && t.isReferenced(node, parent)) {
          return t.thisExpression();
        } else if (_esutils2.default.keyword.isIdentifierNameES6(node.name)) {
          node.type = "Identifier";
        } else {
          return t.stringLiteral(node.name);
        }
      } else if (t.isJSXMemberExpression(node)) {
        return t.memberExpression(convertJSXIdentifier(node.object, node), convertJSXIdentifier(node.property, node));
      }
      return node;
    }
    function convertAttributeValue(node) {
      if (t.isJSXExpressionContainer(node)) {
        return node.expression;
      } else {
        return node;
      }
    }
    function convertAttribute(node) {
      var value = convertAttributeValue(node.value || t.booleanLiteral(true));
      if (t.isStringLiteral(value) && !t.isJSXExpressionContainer(node.value)) {
        value.value = value.value.replace(/\n\s+/g, " ");
      }
      if (t.isValidIdentifier(node.name.name)) {
        node.name.type = "Identifier";
      } else {
        node.name = t.stringLiteral(node.name.name);
      }
      return t.inherits(t.objectProperty(node.name, value), node);
    }
    function buildElementCall(path, file) {
      path.parent.children = t.react.buildChildren(path.parent);
      var tagExpr = convertJSXIdentifier(path.node.name, path.node);
      var args = [];
      var tagName = void 0;
      if (t.isIdentifier(tagExpr)) {
        tagName = tagExpr.name;
      } else if (t.isLiteral(tagExpr)) {
        tagName = tagExpr.value;
      }
      var state = {
        tagExpr: tagExpr,
        tagName: tagName,
        args: args
      };
      if (opts.pre) {
        opts.pre(state, file);
      }
      var attribs = path.node.attributes;
      if (attribs.length) {
        attribs = buildOpeningElementAttributes(attribs, file);
      } else {
        attribs = t.nullLiteral();
      }
      args.push(attribs);
      if (opts.post) {
        opts.post(state, file);
      }
      return state.call || t.callExpression(state.callee, args);
    }
    function buildOpeningElementAttributes(attribs, file) {
      var _props = [];
      var objs = [];
      function pushProps() {
        if (!_props.length)
          return;
        objs.push(t.objectExpression(_props));
        _props = [];
      }
      while (attribs.length) {
        var prop = attribs.shift();
        if (t.isJSXSpreadAttribute(prop)) {
          pushProps();
          objs.push(prop.argument);
        } else {
          _props.push(convertAttribute(prop));
        }
      }
      pushProps();
      if (objs.length === 1) {
        attribs = objs[0];
      } else {
        if (!t.isObjectExpression(objs[0])) {
          objs.unshift(t.objectExpression([]));
        }
        attribs = t.callExpression(file.addHelper("extends"), objs);
      }
      return attribs;
    }
  };
  var _esutils = $__require('esutils');
  var _esutils2 = _interopRequireDefault(_esutils);
  var _babelTypes = $__require('babel-types');
  var t = _interopRequireWildcard(_babelTypes);
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj.default = obj;
      return newObj;
    }
  }
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  module.exports = exports["default"];
  return module.exports;
});

System.registerDynamic("npm:babel-plugin-syntax-jsx@6.8.0.json", [], false, function() {
  return {
    "main": "lib/index.js",
    "format": "cjs",
    "meta": {
      "*.json": {
        "format": "json"
      }
    },
    "map": {
      "./lib.js": "./lib/index.js"
    }
  };
});

System.registerDynamic("npm:babel-plugin-syntax-jsx@6.8.0/lib/index.js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  exports.default = function() {
    return {manipulateOptions: function manipulateOptions(opts, parserOpts) {
        parserOpts.plugins.push("jsx");
      }};
  };
  module.exports = exports["default"];
  return module.exports;
});

System.registerDynamic("npm:babel-plugin-transform-react-jsx@6.8.0.json", [], false, function() {
  return {
    "main": "lib/index.js",
    "format": "cjs",
    "meta": {
      "*.json": {
        "format": "json"
      }
    },
    "map": {
      "./lib.js": "./lib/index.js"
    }
  };
});

System.registerDynamic("npm:babel-plugin-transform-react-jsx@6.8.0/lib/index.js", ["babel-runtime/core-js/get-iterator", "babel-helper-builder-react-jsx", "babel-plugin-syntax-jsx"], true, function($__require, exports, module) {
  "use strict";
  ;
  var define,
      global = this,
      GLOBAL = this;
  exports.__esModule = true;
  var _getIterator2 = $__require('babel-runtime/core-js/get-iterator');
  var _getIterator3 = _interopRequireDefault(_getIterator2);
  exports.default = function(_ref) {
    var t = _ref.types;
    var JSX_ANNOTATION_REGEX = /\*?\s*@jsx\s+([^\s]+)/;
    var visitor = $__require('babel-helper-builder-react-jsx')({
      pre: function pre(state) {
        var tagName = state.tagName;
        var args = state.args;
        if (t.react.isCompatTag(tagName)) {
          args.push(t.stringLiteral(tagName));
        } else {
          args.push(state.tagExpr);
        }
      },
      post: function post(state, pass) {
        state.callee = pass.get("jsxIdentifier")();
      }
    });
    visitor.Program = function(path, state) {
      var file = state.file;
      var id = state.opts.pragma || "React.createElement";
      for (var _iterator = file.ast.comments,
          _isArray = Array.isArray(_iterator),
          _i = 0,
          _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator); ; ) {
        var _ref2;
        if (_isArray) {
          if (_i >= _iterator.length)
            break;
          _ref2 = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done)
            break;
          _ref2 = _i.value;
        }
        var comment = _ref2;
        var matches = JSX_ANNOTATION_REGEX.exec(comment.value);
        if (matches) {
          id = matches[1];
          if (id === "React.DOM") {
            throw file.buildCodeFrameError(comment, "The @jsx React.DOM pragma has been deprecated as of React 0.12");
          } else {
            break;
          }
        }
      }
      state.set("jsxIdentifier", function() {
        return id.split(".").map(function(name) {
          return t.identifier(name);
        }).reduce(function(object, property) {
          return t.memberExpression(object, property);
        });
      });
    };
    return {
      inherits: $__require('babel-plugin-syntax-jsx'),
      visitor: visitor
    };
  };
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  module.exports = exports["default"];
  return module.exports;
});

System.registerDynamic("scratch/_lib-harmony.js", ["react", "react-dom", "systemjs-plugin-babel", "../jspm_packages/npm/babel-plugin-transform-react-jsx@6.8.0/lib/index.js"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  if (1) {
    $__require('react');
    $__require('react-dom');
    $__require('systemjs-plugin-babel');
    $__require('../jspm_packages/npm/babel-plugin-transform-react-jsx@6.8.0/lib/index.js');
  }
  return module.exports;
});

//# sourceMappingURL=_lib-harmony.js.map